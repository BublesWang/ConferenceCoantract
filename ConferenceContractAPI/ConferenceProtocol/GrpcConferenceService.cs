// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcConferenceService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcConferenceService {

  /// <summary>Holder for reflection information generated from GrpcConferenceService.proto</summary>
  public static partial class GrpcConferenceServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcConferenceService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcConferenceServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtHcnBjQ29uZmVyZW5jZVNlcnZpY2UucHJvdG8SFUdycGNDb25mZXJlbmNl",
            "U2VydmljZSJSCgpDRlJvb21MaXN0EjUKCGxpc3RkYXRhGAEgAygLMiMuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkNGUm9vbVN0cnVjdBINCgV0b3RhbBgCIAEo",
            "BSIYCgZyb29tUEsSDgoGcm9vbVBLGAEgASgJIpYBCgxDRlJvb21TdHJ1Y3QS",
            "EAoIQ0ZSb29tUEsYASABKAkSEgoKUm9vbU5hbWVDThgCIAEoCRISCgpSb29t",
            "TmFtZUVOGAMgASgJEhEKCUNyZWF0ZWRPbhgEIAEoCRIRCglDcmVhdGVkQnkY",
            "BSABKAkSEgoKTW9kaWZpZWRPbhgGIAEoCRISCgpNb2RpZmllZEJ5GAcgASgJ",
            "IlIKCkNGU2VhdExpc3QSNQoIbGlzdGRhdGEYASADKAsyIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuQ0ZTZWF0U3RydWN0Eg0KBXRvdGFsGAIgASgFIqYBCgxD",
            "RlNlYXRTdHJ1Y3QSEAoIQ0ZTZWF0UEsYASABKAkSEAoIQ0ZSb29tUEsYAiAB",
            "KAkSEgoKU2VhdE51bWJlchgDIAEoBRIQCghTZWF0TmFtZRgEIAEoCRIRCglD",
            "cmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhIKCk1vZGlmaWVk",
            "T24YByABKAkSEgoKTW9kaWZpZWRCeRgIIAEoCSIcCghDRlNlYXRQSxIQCghD",
            "RlNlYXRQSxgBIAEoCSJYCg1DRkFkZHJlc3NMaXN0EjgKCGxpc3RkYXRhGAEg",
            "AygLMiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGQWRkcmVzc1N0cnVjdBIN",
            "CgV0b3RhbBgCIAEoBSLQAQoPQ0ZBZGRyZXNzU3RydWN0EhMKC0NGQWRkcmVz",
            "c1BLGAEgASgJEjcKC1RyYW5zbGF0aW9uGAIgASgLMiIuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlRyYW5zbGF0aW9uEhAKCFBvc3RDb2RlGAMgASgJEg8KB0Nv",
            "dW50cnkYBCABKAkSEQoJQ3JlYXRlZE9uGAUgASgJEhEKCUNyZWF0ZWRCeRgG",
            "IAEoCRISCgpNb2RpZmllZE9uGAcgASgJEhIKCk1vZGlmaWVkQnkYCCABKAki",
            "IgoLQ0ZBZGRyZXNzUEsSEwoLQ0ZBZGRyZXNzUEsYASABKAkiWgoOQ0ZSb29t",
            "VHlwZUxpc3QSOQoIbGlzdGRhdGEYASADKAsyJy5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuQ0ZSb29tVHlwZVN0cnVjdBINCgV0b3RhbBgCIAEoBSKeAQoQQ0ZS",
            "b29tVHlwZVN0cnVjdBIUCgxDRlJvb21UeXBlUEsYASABKAkSFgoOQ0ZSb29t",
            "VHlwZU5hbWUYAiABKAkSDgoGUmVtYXJrGAMgASgJEhEKCUNyZWF0ZWRPbhgE",
            "IAEoCRIRCglDcmVhdGVkQnkYBSABKAkSEgoKTW9kaWZpZWRPbhgGIAEoCRIS",
            "CgpNb2RpZmllZEJ5GAcgASgJIiQKDENGUm9vbVR5cGVQSxIUCgxDRlJvb21U",
            "eXBlUEsYASABKAkiJAoMQ29uZmVyZW5jZVBLEhQKDENvbmZlcmVuY2VQSxgB",
            "IAEoCSIUCgRZZWFyEgwKBFllYXIYASABKAki8QIKEENvbmZlcmVuY2VTdHJ1",
            "Y3QSFAoMQ29uZmVyZW5jZUlEGAEgASgJEhAKCFBhcmVudElEGAIgASgJEjcK",
            "C1RyYW5zbGF0aW9uGAMgASgLMiIuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRy",
            "YW5zbGF0aW9uEhMKC0NGQWRkcmVzc1BLGAQgASgJEhEKCVN0YXJ0RGF0ZRgF",
            "IAEoCRIVCg1TdGFydERhdGVUaW1lGAYgASgJEgwKBFllYXIYByABKAkSDAoE",
            "U29ydBgIIAEoCRIUCgxBYmJyZXZpYXRpb24YCSABKAkSGwoTQ29uZmVyZW5j",
            "ZUludHJvZHVjZRgKIAEoCRIRCglDcmVhdGVkT24YCyABKAkSEQoJQ3JlYXRl",
            "ZEJ5GAwgASgJEhIKCk1vZGlmaWVkT24YDSABKAkSEgoKTW9kaWZpZWRCeRgO",
            "IAEoCRINCgVMZXZlbBgPIAEoBRIRCglUaW1lUmFuZ2UYECABKAkiHAoIUGFy",
            "ZW50SUQSEAoIUGFyZW50SUQYASABKAkiSwoOQ29uZmVyZW5jZUxpc3QSOQoI",
            "bGlzdGRhdGEYASADKAsyJy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ29uZmVy",
            "ZW5jZVN0cnVjdCI5CgpVcGRhdGVJbmZvEhQKDENvbmZlcmVuY2VJRBgBIAEo",
            "CRIVCg1TdHJhdERhdGVUaW1lGAIgASgJIl0KFUFsbENvbmZlcmVuY2VJbmZv",
            "TGlzdBJECghsaXN0ZGF0YRgBIAMoCzIyLkdycGNDb25mZXJlbmNlU2Vydmlj",
            "ZS5BbGxDb25mZXJlbmNlSW5mb0xpc3RTdHJ1Y3QiswEKG0FsbENvbmZlcmVu",
            "Y2VJbmZvTGlzdFN0cnVjdBJNChZBY3Rpdml0eWFuZFBhcnRpY2lwYW50GAEg",
            "ASgLMi0uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5YW5kUGFydGlj",
            "aXBhbnQSRQoSVGFsa2FuZFBhcnRpY2lwYW50GAIgAygLMikuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLlRhbGthbmRQYXJ0aWNpcGFudCKYAQoWQWN0aXZpdHlh",
            "bmRQYXJ0aWNpcGFudBI3CghBY3Rpdml0eRgBIAMoCzIlLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5BY3Rpdml0eVN0cnVjdBJFCg9QYXJ0aWNpcGFudEluZm8Y",
            "AiADKAsyLC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRJbmZv",
            "U3RydWN0IowBChJUYWxrYW5kUGFydGljaXBhbnQSLwoEVGFsaxgBIAEoCzIh",
            "LkdycGNDb25mZXJlbmNlU2VydmljZS5UYWxrU3RydWN0EkUKD1BhcnRpY2lw",
            "YW50SW5mbxgCIAMoCzIsLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNp",
            "cGFudEluZm9TdHJ1Y3QiIAoKTHVuY2hOYW1lcxISCgpMdW5jaE5hbWVzGAEg",
            "ASgJIiwKCFllYXJJbmZvEg8KB29sZFllYXIYASABKAkSDwoHTmV3WWVhchgC",
            "IAEoCSIcCghZZWFyTGlzdBIQCghZZWFyTGlzdBgBIAMoCSJHCgxBY3Rpdml0",
            "eUxpc3QSNwoIbGlzdGRhdGEYASADKAsyJS5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuQWN0aXZpdHlTdHJ1Y3QiIAoKQWN0aXZpdHlJRBISCgpBY3Rpdml0eUlE",
            "GAEgASgJIrICCg5BY3Rpdml0eVN0cnVjdBISCgpBY3Rpdml0eUlEGAEgASgJ",
            "EhQKDENvbmZlcmVuY2VJRBgCIAEoCRIWCg5BY3Rpdml0eVR5cGVJRBgDIAEo",
            "CRISCgpUaW1lTGVuZ3RoGAQgASgJEgwKBFNvcnQYBSABKAUSEQoJU3RhcnRE",
            "YXRlGAYgASgJEjcKC1RyYW5zbGF0aW9uGAcgASgLMiIuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlRyYW5zbGF0aW9uEhEKCUNyZWF0ZWRPbhgIIAEoCRIRCglD",
            "cmVhdGVkQnkYCSABKAkSEgoKTW9kaWZpZWRPbhgKIAEoCRISCgpNb2RpZmll",
            "ZEJ5GAsgASgJEhEKCVN0YXJ0VGltZRgMIAEoCRIPCgdFbmRUaW1lGA0gASgJ",
            "IiIKC0FjdGl2aXR5SURzEhMKC0FjdGl2aXR5SURzGAEgASgJInIKEUFjdGl2",
            "aXR5RHJhZnRJbmZvEkcKE0FjdGl2aXR5RHJhZnRTdHJ1Y3QYASABKAsyKi5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlEcmFmdFN0cnVjdBIUCgxD",
            "b25mZXJlbmNlSUQYAiABKAkiUQoRQWN0aXZpdHlEcmFmdExpc3QSPAoIbGlz",
            "dGRhdGEYASADKAsyKi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlE",
            "cmFmdFN0cnVjdCIqCg9BY3Rpdml0eURyYWZ0SUQSFwoPQWN0aXZpdHlEcmFm",
            "dElEGAEgASgJIsgBChNBY3Rpdml0eURyYWZ0U3RydWN0EhcKD0FjdGl2aXR5",
            "RHJhZnRJRBgBIAEoCRIWCg5BY3Rpdml0eVR5cGVJRBgDIAEoCRISCgpUaW1l",
            "TGVuZ3RoGAQgASgJEgwKBFNvcnQYBSABKAUSEQoJU3RhcnREYXRlGAYgASgJ",
            "EhMKC1RyYW5zbGF0aW9uGAcgASgJEhEKCVN0YXJ0VGltZRgIIAEoCRIPCgdF",
            "bmRUaW1lGAkgASgJEhIKCkFjdGl2aXR5SUQYCiABKAkiTwoQQWN0aXZpdHlU",
            "eXBlTGlzdBI7CghsaXN0ZGF0YRgBIAMoCzIpLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5BY3Rpdml0eVR5cGVTdHJ1Y3QiyQEKEkFjdGl2aXR5VHlwZVN0cnVj",
            "dBIWCg5BY3Rpdml0eVR5cGVJRBgBIAEoCRI3CgtUcmFuc2xhdGlvbhgCIAEo",
            "CzIiLkdycGNDb25mZXJlbmNlU2VydmljZS5UcmFuc2xhdGlvbhIRCglDcmVh",
            "dGVkT24YAyABKAkSEQoJQ3JlYXRlZEJ5GAQgASgJEhIKCk1vZGlmaWVkT24Y",
            "BSABKAkSEgoKTW9kaWZpZWRCeRgGIAEoCRIUCgxBY3Rpdml0eUNvZGUYByAB",
            "KAkiKAoOQWN0aXZpdHlUeXBlSUQSFgoOQWN0aXZpdHlUeXBlSUQYASABKAki",
            "JAoMQWN0aXZpdHlDb2RlEhQKDEFjdGl2aXR5Q29kZRgBIAEoCSI/CghUYWxr",
            "TGlzdBIzCghsaXN0ZGF0YRgBIAMoCzIhLkdycGNDb25mZXJlbmNlU2Vydmlj",
            "ZS5UYWxrU3RydWN0IswCCgpUYWxrU3RydWN0Eg4KBlRhbGtJRBgBIAEoCRIS",
            "CgpBY3Rpdml0eUlEGAIgASgJEhIKClRhbGtUeXBlSUQYAyABKAkSEQoJQ0ZU",
            "b3BpY1BLGAQgASgJEjcKC1RyYW5zbGF0aW9uGAYgASgLMiIuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLlRyYW5zbGF0aW9uEhEKCUNyZWF0ZWRPbhgHIAEoCRIR",
            "CglDcmVhdGVkQnkYCCABKAkSEgoKTW9kaWZpZWRPbhgJIAEoCRISCgpNb2Rp",
            "ZmllZEJ5GAogASgJEhEKCVN0YXJ0RGF0ZRgLIAEoCRISCgpUaW1lTGVuZ3Ro",
            "GAwgASgJEgwKBFNvcnQYDSABKAUSEQoJU3RhcnRUaW1lGA4gASgJEg8KB0Vu",
            "ZFRpbWUYDyABKAkSEwoLQ0ZUb3BpY05hbWUYECABKAkiGAoGVGFsa0lEEg4K",
            "BlRhbGtJRBgBIAEoCSIaCgdUYWxrSURzEg8KB1RhbGtJRHMYASABKAkiMwoO",
            "VXBkYXRlVGFsa0luZm8SDgoGVGFsa0lEGAEgASgJEhEKCVRvcGljTmFtZRgC",
            "IAEoCSIWCgVJc1VzZRINCgVJc1VzZRgBIAEoCCJkCg1UYWxrRHJhZnRJbmZv",
            "Ej8KD1RhbGtEcmFmdFN0cnVjdBgBIAEoCzImLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5UYWxrRHJhZnRTdHJ1Y3QSEgoKQWN0aXZpdHlJRBgCIAEoCSIpCgRJ",
            "bmZvEhEKCUNGVG9waWNJRBgBIAEoCRIOCgZUYWxrSUQYAiABKAkiSQoNVGFs",
            "a0RyYWZ0TGlzdBI4CghsaXN0ZGF0YRgBIAMoCzImLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5UYWxrRHJhZnRTdHJ1Y3Qi6QEKD1RhbGtEcmFmdFN0cnVjdBIT",
            "CgtUYWxrRHJhZnRJRBgBIAEoCRIXCg9BY3Rpdml0eURyYWZ0SUQYAiABKAkS",
            "EgoKVGFsa1R5cGVJRBgDIAEoCRIRCglDRlRvcGljUEsYBCABKAkSEwoLVHJh",
            "bnNsYXRpb24YBiABKAkSEQoJU3RhcnREYXRlGAcgASgJEhIKClRpbWVMZW5n",
            "dGgYCCABKAkSDAoEU29ydBgJIAEoBRIRCglTdGFydFRpbWUYCiABKAkSDwoH",
            "RW5kVGltZRgLIAEoCRITCgtDRlRvcGljTmFtZRgMIAEoCSIiCgtUYWxrRHJh",
            "ZnRJRBITCgtUYWxrRHJhZnRJRBgBIAEoCSJaCghNb3ZlSW5mbxI1CgpUYWxr",
            "U3RydWN0GAEgASgLMiEuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRhbGtTdHJ1",
            "Y3QSFwoPQWN0aXZpdHlEcmFmdElEGAIgASgJIkcKDFRhbGtUeXBlTGlzdBI3",
            "CghsaXN0ZGF0YRgBIAMoCzIlLkdycGNDb25mZXJlbmNlU2VydmljZS5UYWxr",
            "VHlwZVN0cnVjdCKrAQoOVGFsa1R5cGVTdHJ1Y3QSEgoKVGFsa1R5cGVJRBgB",
            "IAEoCRI3CgtUcmFuc2xhdGlvbhgCIAEoCzIiLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5UcmFuc2xhdGlvbhIRCglDcmVhdGVkT24YAyABKAkSEQoJQ3JlYXRl",
            "ZEJ5GAQgASgJEhIKCk1vZGlmaWVkT24YBSABKAkSEgoKTW9kaWZpZWRCeRgG",
            "IAEoCSIgCgpUYWxrVHlwZUlEEhIKClRhbGtUeXBlSUQYASABKAkiUwoST3Jn",
            "YW5pemVyTGV2ZWxMaXN0Ej0KCGxpc3RkYXRhGAEgAygLMisuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLk9yZ2FuaXplckxldmVsU3RydWN0IusBChRPcmdhbml6",
            "ZXJMZXZlbFN0cnVjdBIYChBPcmdhbml6ZXJMZXZlbElEGAEgASgJEhQKDENv",
            "bmZlcmVuY2VJZBgCIAEoCRI3CgtUcmFuc2xhdGlvbhgDIAEoCzIiLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5UcmFuc2xhdGlvbhIOCgZJc0hpZGUYBCABKAgS",
            "DAoEU29ydBgFIAEoCRIRCglDcmVhdGVkT24YBiABKAkSEQoJQ3JlYXRlZEJ5",
            "GAcgASgJEhIKCk1vZGlmaWVkT24YCCABKAkSEgoKTW9kaWZpZWRCeRgJIAEo",
            "CSIsChBPcmdhbml6ZXJMZXZlbElEEhgKEE9yZ2FuaXplckxldmVsSUQYASAB",
            "KAkiSQoNT3JnYW5pemVyTGlzdBI4CghsaXN0ZGF0YRgBIAMoCzImLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5Pcmdhbml6ZXJTdHJ1Y3Qi+QEKD09yZ2FuaXpl",
            "clN0cnVjdBITCgtPcmdhbml6ZXJJRBgBIAEoCRIYChBPcmdhbml6ZXJMZXZl",
            "bElEGAIgASgJEjcKC1RyYW5zbGF0aW9uGAMgASgLMiIuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlRyYW5zbGF0aW9uEgwKBFNvcnQYBCABKAkSDgoGSU1HU1JD",
            "GAUgASgJEhEKCUNyZWF0ZWRPbhgGIAEoCRIRCglDcmVhdGVkQnkYByABKAkS",
            "EgoKTW9kaWZpZWRPbhgIIAEoCRISCgpNb2RpZmllZEJ5GAkgASgJEhIKCkNv",
            "bXBhbnlVUkwYCiABKAkiIgoLT3JnYW5pemVySUQSEwoLT3JnYW5pemVySUQY",
            "ASABKAkiSQoNUHJlc2VudGVyTGlzdBI4CghsaXN0ZGF0YRgBIAMoCzImLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QcmVzZW50ZXJTdHJ1Y3QixgIKD1ByZXNl",
            "bnRlclN0cnVjdBITCgtQcmVzZW50ZXJJRBgBIAEoCRIUCgxDb25mZXJlbmNl",
            "SUQYAiABKAkSIAoYUHJlc2VudGVyTmFtZVRyYW5zbGF0aW9uGAMgASgJEiAK",
            "GFByZXNlbnRlclR5cGVUcmFuc2xhdGlvbhgEIAEoCRIbChNKb2JUaXRsZVRy",
            "YW5zbGF0aW9uGAUgASgJEh4KFkFwcGVsbGF0aW9uVHJhbnNsYXRpb24YBiAB",
            "KAkSGgoSQ291bnRyeVRyYW5zbGF0aW9uGAcgASgJEhEKCUNyZWF0ZWRPbhgI",
            "IAEoCRIRCglDcmVhdGVkQnkYCSABKAkSEgoKTW9kaWZpZWRPbhgKIAEoCRIS",
            "CgpNb2RpZmllZEJ5GAsgASgJEg4KBk1vYmlsZRgMIAEoCRINCgVFTWFpbBgN",
            "IAEoCSIiCgtQcmVzZW50ZXJJRBITCgtQcmVzZW50ZXJJRBgBIAEoCSJcCg9Q",
            "YXJ0aWNpcGFudExpc3QSOgoIbGlzdGRhdGEYASADKAsyKC5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuUGFydGljaXBhbnRTdHJ1Y3QSDQoFdG90YWwYAiABKAUi",
            "pwQKEVBhcnRpY2lwYW50U3RydWN0EhUKDVBhcnRpY2lwYW50SUQYASABKAkS",
            "IgoaUGFydGljaXBhbnROYW1lVHJhbnNsYXRpb24YAiABKAkSDgoGSU1HU1JD",
            "GAMgASgJEhoKEkNvbXBhbnlUcmFuc2xhdGlvbhgEIAEoCRIWCg5Kb2JUcmFu",
            "c2xhdGlvbhgFIAEoCRIaChJDb3VudHJ5VHJhbnNsYXRpb24YBiABKAkSDQoF",
            "RW1haWwYByABKAkSDgoGTW9iaWxlGAggASgJEhwKFEludHJvZHVjZVRyYW5z",
            "bGF0aW9uGAkgASgJEhEKCUNyZWF0ZWRPbhgKIAEoCRIRCglDcmVhdGVkQnkY",
            "CyABKAkSEgoKTW9kaWZpZWRPbhgMIAEoCRISCgpNb2RpZmllZEJ5GA0gASgJ",
            "EhgKEFBlcnNvbkNvbnRyYWN0SUQYDiABKAkSGQoRUGVyQ29udHJhY3ROdW1i",
            "ZXIYDyABKAkSEAoISXNEZWxldGUYECABKAgSDAoEU29ydBgRIAEoBRIOCgZP",
            "d2VyaWQYEiABKAkSDAoET3dlchgTIAEoCRIeChZBcHBlbGxhdGlvblRyYW5z",
            "bGF0aW9uGBQgASgJEhEKCUNvbXBhbnlJZBgVIAEoCRISCgpDb25maXJtUFBU",
            "GBYgASgIEhAKCE1lbWJlclBLGBcgASgJEhIKClNob3dPbkZvbnQYGCABKAUS",
            "DAoEWWVhchgZIAEoCSImCg1QYXJ0aWNpcGFudElEEhUKDVBhcnRpY2lwYW50",
            "SUQYASABKAkiMgoTUGVyQ29udHJhY3ROdW1iZXJJRBIbChNQZXJDb250cmFj",
            "dE51bWJlcklEGAEgASgJIioKD1BhcnRpY2lwYW50TmFtZRIXCg9QYXJ0aWNp",
            "cGFudE5hbWUYASABKAkiVQoTUGFydGljaXBhbnRJbmZvTGlzdBI+CghsaXN0",
            "ZGF0YRgBIAMoCzIsLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFu",
            "dEluZm9TdHJ1Y3QioAIKFVBhcnRpY2lwYW50SW5mb1N0cnVjdBIiChpQYXJ0",
            "aWNpcGFudE5hbWVUcmFuc2xhdGlvbhgBIAEoCRIaChJDb21wYW55VHJhbnNs",
            "YXRpb24YAiABKAkSFgoOSm9iVHJhbnNsYXRpb24YAyABKAkSGgoSQ291bnRy",
            "eVRyYW5zbGF0aW9uGAQgASgJEh4KFkFwcGVsbGF0aW9uVHJhbnNsYXRpb24Y",
            "BSABKAkSIgoaUGFydGljaXBhbnRUeXBlVHJhbnNsYXRpb24YBiABKAkSFQoN",
            "UGFydGljaXBhbnRJRBgHIAEoCRIZChFQYXJ0aWNpcGFudFR5cGVJRBgIIAEo",
            "CRINCgVFTWFpbBgJIAEoCRIOCgZNb2JpbGUYCiABKAkiLAoQUGVyc29uQ29u",
            "dHJhY3RJRBIYChBQZXJzb25Db250cmFjdElEGAEgASgJIiUKEVBhcnRpY2lw",
            "YW50SURMaXN0EhAKCGxpc3RkYXRhGAEgAygJIh4KCUNvbXBhbnlJZBIRCglD",
            "b21wYW55SWQYASABKAkiHAoITWVtYmVyUEsSEAoITWVtYmVyUEsYASABKAki",
            "LQoFUEluZm8SEAoITWVtYmVyUEsYASABKAkSEgoKU2hvd09uRm9udBgCIAEo",
            "BSJBCgpQYWdpbmdJbmZvEhQKDENvbmZlcmVuY3JJRBgBIAEoCRIOCgZvZmZz",
            "ZXQYAiABKAUSDQoFbGltaXQYAyABKAUidQoYVGFsa1BhcnRpY2lwYW50TWFw",
            "U3RydWN0EhwKFFRhbGtQYXJ0aWNpcGFudE1hcElEGAEgASgJEhUKDVBhcnRp",
            "Y2lwYW50SUQYAiABKAkSDgoGVGFsa0lEGAMgASgJEhQKDENvbmZlcmVuY2VJ",
            "RBgEIAEoCSJyChZUYWxrUGFydGljaXBhbnRNYXBJbmZvEg4KBlRhbGtJRBgB",
            "IAEoCRIWCg5QYXJ0aWNpcGFudElEcxgCIAEoCRIaChJQYXJ0aWNpcGFudFR5",
            "cGVJRHMYAyABKAkSFAoMQ29uZmVyZW5jZUlEGAQgASgJInoKGkFjdGl2aXR5",
            "UGFydGljaXBhbnRNYXBJbmZvEhIKCkFjdGl2aXR5SUQYASABKAkSFgoOUGFy",
            "dGljaXBhbnRJRHMYAiABKAkSGgoSUGFydGljaXBhbnRUeXBlSURzGAMgASgJ",
            "EhQKDENvbmZlcmVuY2VJRBgEIAEoCSJXChRQYXJ0aWNpcGFudEdyb3VwTGlz",
            "dBI/CghsaXN0ZGF0YRgBIAMoCzItLkdycGNDb25mZXJlbmNlU2VydmljZS5Q",
            "YXJ0aWNpcGFudEdyb3VwU3RydWN0ItkBChZQYXJ0aWNpcGFudEdyb3VwU3Ry",
            "dWN0EhoKElBhcnRpY2lwYW50R3JvdXBJRBgBIAEoCRIUCgxDb25mZXJlbmNl",
            "SUQYAiABKAkSJwofUGFydGljaXBhbnRHcm91cE5hbWVUcmFuc2xhdGlvbhgD",
            "IAEoCRIRCglDcmVhdGVkT24YBCABKAkSEQoJQ3JlYXRlZEJ5GAUgASgJEhIK",
            "Ck1vZGlmaWVkT24YBiABKAkSEgoKTW9kaWZpZWRCeRgHIAEoCRIWCg5Db25m",
            "ZXJlbmNlTmFtZRgIIAEoCSIwChJQYXJ0aWNpcGFudEdyb3VwSUQSGgoSUGFy",
            "dGljaXBhbnRHcm91cElEGAEgASgJIo4BChRQYXJ0aWNpcGFudEdyb3VwSW5m",
            "bxJNChZQYXJ0aWNpcGFudEdyb3VwU3RydWN0GAEgASgLMi0uR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50R3JvdXBTdHJ1Y3QSJwoDSURzGAIg",
            "ASgLMhouR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLklEcyJtChlQYXJ0aWNpcGFu",
            "dEdyb3VwTWFwU3RydWN0Eh0KFVBhcnRpY2lwYW50R3JvdXBNYXBJRBgBIAEo",
            "CRIaChJQYXJ0aWNpcGFudEdyb3VwSUQYAiABKAkSFQoNUGFydGljaXBhbnRJ",
            "RBgDIAEoCSJECg5QYXJ0aWNpcGFudElEcxIWCg5QYXJ0aWNpcGFudElEcxgB",
            "IAEoCRIaChJQYXJ0aWNpcGFudEdyb3VwSUQYAiABKAkiVQoTUGFydGljaXBh",
            "bnRUeXBlTGlzdBI+CghsaXN0ZGF0YRgBIAMoCzIsLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5QYXJ0aWNpcGFudFR5cGVTdHJ1Y3QipAEKFVBhcnRpY2lwYW50",
            "VHlwZVN0cnVjdBIZChFQYXJ0aWNpcGFudFR5cGVJRBgBIAEoCRIiChpQYXJ0",
            "aWNpcGFudFR5cGVUcmFuc2xhdGlvbhgCIAEoCRIRCglDcmVhdGVkT24YAyAB",
            "KAkSEQoJQ3JlYXRlZEJ5GAQgASgJEhIKCk1vZGlmaWVkT24YBSABKAkSEgoK",
            "TW9kaWZpZWRCeRgGIAEoCSIuChFQYXJ0aWNpcGFudFR5cGVJRBIZChFQYXJ0",
            "aWNpcGFudFR5cGVJRBgBIAEoCSJYChZQYXJ0aWNpcGFudFR5cGVNYXBJbmZv",
            "EhUKDVBhcnRpY2lwYW50SUQYASABKAkSJwoDaWRzGAIgASgLMhouR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLklEcyJJCg1SZWNlcHRpb25MaXN0EjgKCGxpc3Rk",
            "YXRhGAEgAygLMiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlJlY2VwdGlvblN0",
            "cnVjdCKrAQoPUmVjZXB0aW9uU3RydWN0EhMKC1JlY2VwdGlvbklEGAEgASgJ",
            "EhAKCE1lbWJlclBLGAIgASgJEhMKC0lzUmVjZXB0aW9uGAMgASgIEhEKCUlz",
            "QXJyYW5nZRgEIAEoCBISCgpBcnJpdmVEYXRlGAUgASgJEhEKCUxlYXZlRGF0",
            "ZRgGIAEoCRINCgVIb3RlbBgHIAEoCRITCgtSZWNlcHRpb25lchgIIAEoCSIi",
            "CgtSZWNlcHRpb25JRBITCgtSZWNlcHRpb25JRBgBIAEoCSJSCgpQb2xpY3lM",
            "aXN0EjUKCGxpc3RkYXRhGAEgAygLMiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LlBvbGljeVN0cnVjdBINCgV0b3RhbBgCIAEoBSIcCghQb2xpY3lJRBIQCghQ",
            "b2xpY3lJRBgBIAEoCSKxAwoMUG9saWN5U3RydWN0EhAKCFBvbGljeUlEGAEg",
            "ASgJEh4KFkNvbXBhbnlOYW1lVHJhbnNsYXRpb24YAiABKAkSEQoJQ29tcGFu",
            "eUlEGAMgASgJEg8KB0NvdW50cnkYBCABKAkSEQoJQ291bnRyeUlEGAUgASgJ",
            "Eg8KB0FkZHJlc3MYBiABKAkSEAoIUG9zdENvZGUYByABKAkSEwoLQ29udGFj",
            "dE5hbWUYCCABKAkSDQoFRU1haWwYCSABKAkSCwoDVGVsGAogASgJEg4KBk1v",
            "YmlsZRgLIAEoCRIPCgdXZWJTaXRlGAwgASgJEhAKCElzRGVsZXRlGA0gASgI",
            "EhEKCUFkbWluTmFtZRgOIAEoCRIPCgdBZG1pbklEGA8gASgJEhEKCUNyZWF0",
            "ZWRPbhgQIAEoCRIRCglDcmVhdGVkQnkYESABKAkSEgoKTW9kaWZpZWRPbhgS",
            "IAEoCRISCgpNb2RpZmllZEJ5GBMgASgJEhAKCERlbGV0ZU9uGBQgASgJEhAK",
            "CERlbGV0ZUJ5GBUgASgJEgwKBFllYXIYFiABKAkSDQoFU2NvcmUYFyABKAki",
            "MAoKRGVsZXRlSW5mbxIQCghQb2xpY3lJRBgBIAEoCRIQCghVc2VyTmFtZRgC",
            "IAEoCSJzChBDcmVhdGVQb2xpY3lJbmZvEjkKDFBvbGljeVN0cnVjdBgBIAEo",
            "CzIjLkdycGNDb25mZXJlbmNlU2VydmljZS5Qb2xpY3lTdHJ1Y3QSFAoMVXNl",
            "ck1heEZvcnVtGAIgASgFEg4KBlVzZXJQSxgDIAEoCSIcCghVc2VyTmFtZRIQ",
            "CghVc2VyTmFtZRgBIAEoCSI7ChBQb2xpY3lJbmZvU3RydWN0EhQKDFBvbGlj",
            "eU51bWJlchgBIAEoCRIRCglJc0Rpc3BsYXkYAiABKAgidgocUGFydGljaXBh",
            "bnRDb25mZXJlbmNlTWFwTGlzdBJHCghsaXN0ZGF0YRgBIAMoCzI1LkdycGND",
            "b25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudENvbmZlcmVuY2VNYXBTdHJ1",
            "Y3QSDQoFdG90YWwYAiABKAUipgIKHlBhcnRpY2lwYW50Q29uZmVyZW5jZU1h",
            "cFN0cnVjdBIiChpQYXJ0aWNpcGFudENvbmZlcmVuY2VNYXBJRBgBIAEoCRIV",
            "Cg1QYXJ0aWNpcGFudElEGAIgASgJEg4KBklNR1NSQxgDIAEoCRIbChNTZXNz",
            "aW9uQ29uZmVyZW5jZUlEGAQgASgJEhEKCVNlc3Npb25DThgFIAEoCRIRCglT",
            "ZXNzaW9uRU4YBiABKAkSFAoMU3BlZWNoVGltZUNOGAcgASgJEhQKDFNwZWVj",
            "aFRpbWVFThgIIAEoCRIVCg1IYXNQZXJzb25JbmZvGAkgASgIEhoKElBhcnRp",
            "Y2lwYW50R3JvdXBJRBgKIAEoCRIXCg9BYnN0cmFjdERyYWZ0SUQYCyABKAki",
            "QAoaUGFydGljaXBhbnRDb25mZXJlbmNlTWFwSUQSIgoaUGFydGljaXBhbnRD",
            "b25mZXJlbmNlTWFwSUQYASABKAkiYAoRSGlzdG9yeVBvbGljeUxpc3QSPAoI",
            "bGlzdGRhdGEYASADKAsyKi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuSGlzdG9y",
            "eVBvbGljeVN0cnVjdBINCgV0b3RhbBgCIAEoBSLjAgoTSGlzdG9yeVBvbGlj",
            "eVN0cnVjdBIXCg9IaXN0b3J5UG9saWN5SUQYASABKAkSEAoIUG9saWN5SUQY",
            "AiABKAkSHgoWQ29tcGFueU5hbWVUcmFuc2xhdGlvbhgDIAEoCRIPCgdDb3Vu",
            "dHJ5GAQgASgJEg8KB0FkZHJlc3MYBSABKAkSEAoIUG9zdENvZGUYBiABKAkS",
            "EwoLQ29udGFjdE5hbWUYByABKAkSDQoFRU1haWwYCCABKAkSCwoDVGVsGAkg",
            "ASgJEg4KBk1vYmlsZRgKIAEoCRIPCgdXZWJTaXRlGAsgASgJEhEKCU93bmVy",
            "TmFtZRgMIAEoCRIPCgdPd25lcklEGA0gASgJEhEKCU9wZXJhdGlvbhgOIAEo",
            "CRIQCghPcGVyYXRvchgPIAEoCRIVCg1PcGVyYXRpb25UaW1lGBAgASgJEgwK",
            "BFllYXIYESABKAkSDQoFU2NvcmUYEiABKAki9gMKDFNlYXJjaFN0cnVjdBIQ",
            "CghtZW1FbWFpbBgBIAEoCRITCgttZW1Jc0RlbGV0ZRgCIAEoCBIXCg9tZW1J",
            "c0FjdGl2YXRpb24YAyABKAgSEQoJY29tTmFtZUNuGAQgASgJEhEKCWNvbU5h",
            "bWVFbhgFIAEoCRITCgtjb21Jc0RlbGV0ZRgGIAEoCBITCgtjb21Jc1Zlcmlm",
            "eRgHIAEoCBIQCghyb29tTmFtZRgIIAEoCRIQCghzZWF0TmFtZRgJIAEoCRIT",
            "CgtBZGRyZXNzTmFtZRgKIAEoCRIUCgxSb29tVHlwZU5hbWUYCyABKAkSFwoP",
            "TWFzc01lZXRpbmdOYW1lGAwgASgJEhQKDFN1YkV2ZW50TmFtZRgNIAEoCRIV",
            "Cg1DRlNlc3Npb25OYW1lGA4gASgJEhMKC0NGVG9waWNOYW1lGA8gASgJEhMK",
            "C0NvbXBhbnlOYW1lGBAgASgJEgwKBE93ZXIYESABKAkSGQoRUGVyQ29udHJh",
            "Y3ROdW1iZXIYEiABKAkSFwoPUGFydGljaXBhbnROYW1lGBMgASgJEhMKC0Nv",
            "bnRhY3ROYW1lGBQgASgJEhIKClNob3dPbkZvbnQYFSABKAkSDwoHT3duZXJJ",
            "RBgWIAEoCRIMCgRZZWFyGBcgASgJEg0KBVNjb3JlGBggASgJIkEKDENyZWF0",
            "ZUluZm9WTRIPCgdzdWNjZXNzGAEgASgIEhMKC2NyZWF0ZWNvdW50GAIgASgF",
            "EgsKA21zZxgDIAEoCSJFCg5Nb2RpZmllZEluZm9WTRIPCgdzdWNjZXNzGAEg",
            "ASgIEhUKDW1vZGlmaWVkY291bnQYAiABKAUSCwoDbXNnGAMgASgJIkEKDERl",
            "bGV0ZUluZm9WTRIPCgdzdWNjZXNzGAEgASgIEhMKC2RlbGV0ZWNvdW50GAIg",
            "ASgFEgsKA21zZxgDIAEoCSJ5ChdQYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBIK",
            "CgJpZBgBIAEoBRIOCgZvZmZzZXQYAiABKAUSDQoFbGltaXQYAyABKAUSMwoG",
            "c2VhcmNoGAQgASgLMiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlNlYXJjaFN0",
            "cnVjdCIHCgVFbXB0eSIxCgtUcmFuc2xhdGlvbhIKCgJDThgBIAEoCRIKCgJF",
            "ThgCIAEoCRIKCgJKUBgDIAEoCSISCgNJRHMSCwoDaWRzGAEgASgJIhoKB1Jl",
            "c0Jvb2wSDwoHUmVzQm9vbBgBIAEoCDLHfAoXQ29uZmVyZW5jZVNlcnZpY2VU",
            "b0dycGMSZAoNR2V0Q0ZSb29tTGlzdBIuLkdycGNDb25mZXJlbmNlU2Vydmlj",
            "ZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBohLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5DRlJvb21MaXN0IgASVQoNR2V0Q0ZSb29tQnlJRBIdLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5yb29tUEsaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "Q0ZSb29tU3RydWN0IgASWQoLQ3JlYXRlRlJvb20SIy5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuQ0ZSb29tU3RydWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LkNyZWF0ZUluZm9WTSIAElwKDFVwZGF0ZUNGUm9vbRIjLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5DRlJvb21TdHJ1Y3QaJS5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuTW9kaWZpZWRJbmZvVk0iABJUCgxEZWxldGVDRlJvb20SHS5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2Uucm9vbVBLGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LkRlbGV0ZUluZm9WTSIAEmQKDUdldENGU2VhdExpc3QSLi5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaIS5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuQ0ZTZWF0TGlzdCIAElcKDUdldENGU2VhdEJ5SUQS",
            "Hy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZTZWF0UEsaIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuQ0ZTZWF0U3RydWN0IgASWgoMQ3JlYXRlQ0ZTZWF0EiMu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGU2VhdFN0cnVjdBojLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5DcmVhdGVJbmZvVk0iABJcCgxVcGRhdGVDRlNlYXQS",
            "Iy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZTZWF0U3RydWN0GiUuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgASVgoMRGVsZXRlQ0ZT",
            "ZWF0Eh8uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGU2VhdFBLGiMuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUluZm9WTSIAEmoKEEdldENGQWRkcmVz",
            "c0xpc3QSLi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFnaW5hdGlvblJlcXVl",
            "c3RTZWFyY2gaJC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZBZGRyZXNzTGlz",
            "dCIAElsKE0dldEFsbENGQWRkcmVzc0xpc3QSHC5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuRW1wdHkaJC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZBZGRyZXNz",
            "TGlzdCIAEmAKEEdldENGQWRkcmVzc0J5SUQSIi5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuQ0ZBZGRyZXNzUEsaJi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZB",
            "ZGRyZXNzU3RydWN0IgASYAoPQ3JlYXRlQ0ZBZGRyZXNzEiYuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLkNGQWRkcmVzc1N0cnVjdBojLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5DcmVhdGVJbmZvVk0iABJiCg9VcGRhdGVDRkFkZHJlc3MSJi5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuQ0ZBZGRyZXNzU3RydWN0GiUuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgASXAoPRGVsZXRlQ0ZB",
            "ZGRyZXNzEiIuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGQWRkcmVzc1BLGiMu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUluZm9WTSIAEmwKEUdldENG",
            "Um9vbVR5cGVMaXN0Ei4uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhZ2luYXRp",
            "b25SZXF1ZXN0U2VhcmNoGiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGUm9v",
            "bVR5cGVMaXN0IgASYwoRR2V0Q0ZSb29tVHlwZUJ5SUQSIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuQ0ZSb29tVHlwZVBLGicuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkNGUm9vbVR5cGVTdHJ1Y3QiABJiChBDcmVhdGVDRlJvb21UeXBlEicu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNGUm9vbVR5cGVTdHJ1Y3QaIy5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlSW5mb1ZNIgASZAoQVXBkYXRlQ0ZS",
            "b29tVHlwZRInLkdycGNDb25mZXJlbmNlU2VydmljZS5DRlJvb21UeXBlU3Ry",
            "dWN0GiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgAS",
            "XgoQRGVsZXRlQ0ZSb29tVHlwZRIjLkdycGNDb25mZXJlbmNlU2VydmljZS5D",
            "RlJvb21UeXBlUEsaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5m",
            "b1ZNIgASWQoRR2V0Q29uZmVyZW5jZUxpc3QSGy5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuWWVhcholLkdycGNDb25mZXJlbmNlU2VydmljZS5Db25mZXJlbmNl",
            "TGlzdCIAEmMKEUdldENvbmZlcmVuY2VCeVBLEiMuR3JwY0NvbmZlcmVuY2VT",
            "ZXJ2aWNlLkNvbmZlcmVuY2VQSxonLkdycGNDb25mZXJlbmNlU2VydmljZS5D",
            "b25mZXJlbmNlU3RydWN0IgASZwobR2V0Q29uZmVyZW5jZUxpc3RCeVBhcmVu",
            "dElEEh8uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcmVudElEGiUuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VMaXN0IgASYgoQQ3JlYXRlQ29u",
            "ZmVyZW5jZRInLkdycGNDb25mZXJlbmNlU2VydmljZS5Db25mZXJlbmNlU3Ry",
            "dWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEmsK",
            "HVVwZGF0ZUNvbmZlcmVuY2VTdGFydERhdGVUaW1lEiEuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlVwZGF0ZUluZm8aJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "TW9kaWZpZWRJbmZvVk0iABJkChBVcGRhdGVDb25mZXJlbmNlEicuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VTdHJ1Y3QaJS5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuTW9kaWZpZWRJbmZvVk0iABJeChBEZWxldGVDb25mZXJl",
            "bmNlEiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VQSxojLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5EZWxldGVJbmZvVk0iABJeChZHZXRGaXJz",
            "dENvbmZlcmVuY2VMaXN0EhsuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlllYXIa",
            "JS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ29uZmVyZW5jZUxpc3QiABJ5CiJH",
            "ZXRBbGxDb25mZXJlbmNlSW5mb0J5Q29uZmVyZW5jZUlEEiMuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VQSxosLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5BbGxDb25mZXJlbmNlSW5mb0xpc3QiABJxCiBHZXRDb25mZXJlbmNl",
            "TGlzdEJ5UGFydGljaXBhbnRJRBIkLkdycGNDb25mZXJlbmNlU2VydmljZS5Q",
            "YXJ0aWNpcGFudElEGiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNvbmZlcmVu",
            "Y2VMaXN0IgASWgoMR2V0THVuY2hMaXN0EiEuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkx1bmNoTmFtZXMaJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ29uZmVy",
            "ZW5jZUxpc3QiABJXChJjb3B5Q29uZmVyZW5jZUluZm8SHy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuWWVhckluZm8aHi5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "UmVzQm9vbCIAElQKEWdldENvbmZlcmVuY2VZZWFyEhwuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLkVtcHR5Gh8uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlllYXJM",
            "aXN0IgASVgoPR2V0QWN0aXZpdHlMaXN0EhwuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkVtcHR5GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5TGlz",
            "dCIAEmsKHUdldEFjdGl2aXR5TGlzdEJ5Q29uZmVyZW5jZUlEEiMuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VQSxojLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5BY3Rpdml0eUxpc3QiABJdCg9HZXRBY3Rpdml0eUJ5SUQSIS5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlJRBolLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5BY3Rpdml0eVN0cnVjdCIAEl4KDkNyZWF0ZUFjdGl2aXR5",
            "EiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5U3RydWN0GiMuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEmAKDlVwZGF0ZUFj",
            "dGl2aXR5EiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5U3RydWN0",
            "GiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgASWgoO",
            "RGVsZXRlQWN0aXZpdHkSIS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZp",
            "dHlJRBojLkdycGNDb25mZXJlbmNlU2VydmljZS5EZWxldGVJbmZvVk0iABJx",
            "CiJVcGRhdGVBbGxBY3Rpdml0eVNvcnRCeUFjdGl2aXR5SURzEiIuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5SURzGiUuR3JwY0NvbmZlcmVuY2VT",
            "ZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgAScgokR2V0QWxsQWN0aXZpdHlMaXN0",
            "QnlGaXJzdENvbmZlcmVjZUlEEiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNv",
            "bmZlcmVuY2VQSxojLkdycGNDb25mZXJlbmNlU2VydmljZS5BY3Rpdml0eUxp",
            "c3QiABJuChtNb3ZlQWN0aXZpdHlEcmFmdFRvQWN0aXZpdHkSKC5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlEcmFmdEluZm8aIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuQ3JlYXRlSW5mb1ZNIgASXgoTR2V0QWN0aXZpdHlUeXBl",
            "TGlzdBIcLkdycGNDb25mZXJlbmNlU2VydmljZS5FbXB0eRonLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5BY3Rpdml0eVR5cGVMaXN0IgASaQoTR2V0QWN0aXZp",
            "dHlUeXBlQnlJRBIlLkdycGNDb25mZXJlbmNlU2VydmljZS5BY3Rpdml0eVR5",
            "cGVJRBopLkdycGNDb25mZXJlbmNlU2VydmljZS5BY3Rpdml0eVR5cGVTdHJ1",
            "Y3QiABJmChJDcmVhdGVBY3Rpdml0eVR5cGUSKS5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuQWN0aXZpdHlUeXBlU3RydWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkNyZWF0ZUluZm9WTSIAEmgKElVwZGF0ZUFjdGl2aXR5VHlwZRIpLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5BY3Rpdml0eVR5cGVTdHJ1Y3QaJS5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuTW9kaWZpZWRJbmZvVk0iABJiChJEZWxldGVB",
            "Y3Rpdml0eVR5cGUSJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlU",
            "eXBlSUQaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgAS",
            "cQodR2V0QWN0aXZpdHlUeXBlQnlBY3Rpdml0eUNvZGUSIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuQWN0aXZpdHlDb2RlGikuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkFjdGl2aXR5VHlwZVN0cnVjdCIAEk4KC0dldFRhbGtMaXN0EhwuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkVtcHR5Gh8uR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLlRhbGtMaXN0IgASXwoXR2V0VGFsa0xpc3RCeUFjdGl2aXR5SUQSIS5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlJRBofLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5UYWxrTGlzdCIAElEKC0dldFRhbGtCeUlEEh0uR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLlRhbGtJRBohLkdycGNDb25mZXJlbmNlU2Vydmlj",
            "ZS5UYWxrU3RydWN0IgASVgoKQ3JlYXRlVGFsaxIhLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5UYWxrU3RydWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNy",
            "ZWF0ZUluZm9WTSIAElgKClVwZGF0ZVRhbGsSIS5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuVGFsa1N0cnVjdBolLkdycGNDb25mZXJlbmNlU2VydmljZS5Nb2Rp",
            "ZmllZEluZm9WTSIAElIKCkRlbGV0ZVRhbGsSHS5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuVGFsa0lEGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUlu",
            "Zm9WTSIAEmUKGlVwZGF0ZUFsbFRhbGtTb3J0QnlUYWxrSURzEh4uR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLlRhbGtJRHMaJS5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuTW9kaWZpZWRJbmZvVk0iABJpChdVcGRhdGVUb3BpY05hbWVCeVRhbGtJ",
            "RBIlLkdycGNDb25mZXJlbmNlU2VydmljZS5VcGRhdGVUYWxrSW5mbxolLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5Nb2RpZmllZEluZm9WTSIAEkgKCUlzVGFs",
            "a1VzZRIbLkdycGNDb25mZXJlbmNlU2VydmljZS5JbmZvGhwuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLklzVXNlIgASYgoTTW92ZVRhbGtEcmFmdFRvVGFsaxIk",
            "LkdycGNDb25mZXJlbmNlU2VydmljZS5UYWxrRHJhZnRJbmZvGiMuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAElYKD0dldFRhbGtUeXBl",
            "TGlzdBIcLkdycGNDb25mZXJlbmNlU2VydmljZS5FbXB0eRojLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5UYWxrVHlwZUxpc3QiABJdCg9HZXRUYWxrVHlwZUJ5",
            "SUQSIS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuVGFsa1R5cGVJRBolLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5UYWxrVHlwZVN0cnVjdCIAEl4KDkNyZWF0ZVRh",
            "bGtUeXBlEiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRhbGtUeXBlU3RydWN0",
            "GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEmAKDlVw",
            "ZGF0ZVRhbGtUeXBlEiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRhbGtUeXBl",
            "U3RydWN0GiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZN",
            "IgASWgoORGVsZXRlVGFsa1R5cGUSIS5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "VGFsa1R5cGVJRBojLkdycGNDb25mZXJlbmNlU2VydmljZS5EZWxldGVJbmZv",
            "Vk0iABJ3CiNHZXRPcmdhbml6ZXJMZXZlbExpc3RCeUNvbmZlcmVuY2VJRBIj",
            "LkdycGNDb25mZXJlbmNlU2VydmljZS5Db25mZXJlbmNlUEsaKS5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuT3JnYW5pemVyTGV2ZWxMaXN0IgASYgoVR2V0T3Jn",
            "YW5pemVyTGV2ZWxMaXN0EhwuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkVtcHR5",
            "GikuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk9yZ2FuaXplckxldmVsTGlzdCIA",
            "Em8KFUdldE9yZ2FuaXplckxldmVsQnlJRBInLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5Pcmdhbml6ZXJMZXZlbElEGisuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "Lk9yZ2FuaXplckxldmVsU3RydWN0IgASagoUQ3JlYXRlT3JnYW5pemVyTGV2",
            "ZWwSKy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuT3JnYW5pemVyTGV2ZWxTdHJ1",
            "Y3QaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlSW5mb1ZNIgASbAoU",
            "VXBkYXRlT3JnYW5pemVyTGV2ZWwSKy5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "T3JnYW5pemVyTGV2ZWxTdHJ1Y3QaJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "TW9kaWZpZWRJbmZvVk0iABJmChREZWxldGVPcmdhbml6ZXJMZXZlbBInLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5Pcmdhbml6ZXJMZXZlbElEGiMuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUluZm9WTSIAEnUKIkdldE9yZ2FuaXpl",
            "ckxpc3RCeU9yZ2FuaXplckxldmVsSUQSJy5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuT3JnYW5pemVyTGV2ZWxJRBokLkdycGNDb25mZXJlbmNlU2VydmljZS5P",
            "cmdhbml6ZXJMaXN0IgASWAoQR2V0T3JnYW5pemVyTGlzdBIcLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5FbXB0eRokLkdycGNDb25mZXJlbmNlU2VydmljZS5P",
            "cmdhbml6ZXJMaXN0IgASYAoQR2V0T3JnYW5pemVyQnlJRBIiLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5Pcmdhbml6ZXJJRBomLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5Pcmdhbml6ZXJTdHJ1Y3QiABJgCg9DcmVhdGVPcmdhbml6ZXISJi5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuT3JnYW5pemVyU3RydWN0GiMuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEmIKD1VwZGF0ZU9yZ2Fu",
            "aXplchImLkdycGNDb25mZXJlbmNlU2VydmljZS5Pcmdhbml6ZXJTdHJ1Y3Qa",
            "JS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuTW9kaWZpZWRJbmZvVk0iABJcCg9E",
            "ZWxldGVPcmdhbml6ZXISIi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuT3JnYW5p",
            "emVySUQaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgAS",
            "bQoeR2V0UHJlc2VudGVyTGlzdEJ5Q29uZmVyZW5jZUlEEiMuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLkNvbmZlcmVuY2VQSxokLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5QcmVzZW50ZXJMaXN0IgASYAoQR2V0UHJlc2VudGVyQnlJRBIiLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QcmVzZW50ZXJJRBomLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5QcmVzZW50ZXJTdHJ1Y3QiABJgCg9DcmVhdGVQcmVzZW50",
            "ZXISJi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUHJlc2VudGVyU3RydWN0GiMu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEmIKD1VwZGF0",
            "ZVByZXNlbnRlchImLkdycGNDb25mZXJlbmNlU2VydmljZS5QcmVzZW50ZXJT",
            "dHJ1Y3QaJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuTW9kaWZpZWRJbmZvVk0i",
            "ABJcCg9EZWxldGVQcmVzZW50ZXISIi5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "UHJlc2VudGVySUQaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5m",
            "b1ZNIgASWwoTR2V0QWxsUHJlc2VudGVyTGlzdBIcLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5FbXB0eRokLkdycGNDb25mZXJlbmNlU2VydmljZS5QcmVzZW50",
            "ZXJMaXN0IgASaQoaR2V0UGFydGljaXBhbnRMaXN0QnlUYWxrSUQSHS5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuVGFsa0lEGiouR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLlBhcnRpY2lwYW50SW5mb0xpc3QiABJmChJHZXRQYXJ0aWNpcGFudEJ5",
            "SUQSJC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRJRBooLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudFN0cnVjdCIAEnEKHkdl",
            "dFBhcnRpY2lwYW50TGlzdEJ5QWN0aXZpdHlJRBIhLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5BY3Rpdml0eUlEGiouR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBh",
            "cnRpY2lwYW50SW5mb0xpc3QiABJkChFDcmVhdGVQYXJ0aWNpcGFudBIoLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudFN0cnVjdBojLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5DcmVhdGVJbmZvVk0iABJmChFVcGRhdGVQYXJ0",
            "aWNpcGFudBIoLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudFN0",
            "cnVjdBolLkdycGNDb25mZXJlbmNlU2VydmljZS5Nb2RpZmllZEluZm9WTSIA",
            "EmAKEURlbGV0ZVBhcnRpY2lwYW50EiQuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LlBhcnRpY2lwYW50SUQaIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRl",
            "SW5mb1ZNIgASbgoXR2V0UGFydGljaXBhbnRCeUdyb3VwSUQSKS5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRHcm91cElEGiYuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50TGlzdCIAEnkKJERlbGV0ZVBhcnRp",
            "Y2lvYW50QnlQZXJDb250cmFjdE51bWJlchIqLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5QZXJDb250cmFjdE51bWJlcklEGiMuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLkRlbGV0ZUluZm9WTSIAEnUKGUdldEFMTFBhcnRpY2lwYW50QnlTZWFy",
            "Y2gSLi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RT",
            "ZWFyY2gaJi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRMaXN0",
            "IgASdAoYR2V0UGFydGljaXBhbnRMaXN0QnlOYW1lEi4uR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGiYuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50TGlzdCIAEnkKIkdldFBhcnRpY2lw",
            "YW50SURCeVBlcnNvbkNvbnRyYWN0SUQSJy5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuUGVyc29uQ29udHJhY3RJRBooLkdycGNDb25mZXJlbmNlU2VydmljZS5Q",
            "YXJ0aWNpcGFudElETGlzdCIAEmsKHUdldFBhcnRpY2lwYW50TGlzdEJ5Q29t",
            "cGFueUlEEiAuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNvbXBhbnlJZBomLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudExpc3QiABJpChxHZXRQ",
            "YXJ0aWNpcGFudExpc3RCeU1lbWJlclBLEh8uR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLk1lbWJlclBLGiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lw",
            "YW50TGlzdCIAEnUKK0dldFBhcnRpY2lwYW50TGlzdEJ5TWVtYmVyUEthbmRJ",
            "c1Nob3dPbkZvbnQSHC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUEluZm8aJi5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRMaXN0IgAScQogR2V0",
            "UGFydGljaXBhbnRMaXN0QnlDb25mZXJlbmNlSUQSIy5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuQ29uZmVyZW5jZVBLGiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LlBhcnRpY2lwYW50TGlzdCIAEnYKJ0dldFBhcnRpY2lwYW50Tm90TnVsbExp",
            "c3RCeUNvbmZlcmVuY2VJRBIhLkdycGNDb25mZXJlbmNlU2VydmljZS5QYWdp",
            "bmdJbmZvGiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50TGlz",
            "dCIAEmMKC0NyZWF0ZVRQTWFwEi0uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRh",
            "bGtQYXJ0aWNpcGFudE1hcEluZm8aIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "Q3JlYXRlSW5mb1ZNIgASWwoTRGVsZXRlVFBNYXBCeVRhbGtJRBIdLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5UYWxrSUQaIy5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuRGVsZXRlSW5mb1ZNIgASaQoaRGVsZXRlVFBNYXBCeVBhcnRpY2lwYW50",
            "SUQSJC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRJRBojLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5EZWxldGVJbmZvVk0iABJlCgtVcGRhdGVU",
            "UE1hcBItLkdycGNDb25mZXJlbmNlU2VydmljZS5UYWxrUGFydGljaXBhbnRN",
            "YXBJbmZvGiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5mb1ZN",
            "IgASZwoLQ3JlYXRlQVBNYXASMS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0",
            "aXZpdHlQYXJ0aWNpcGFudE1hcEluZm8aIy5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuQ3JlYXRlSW5mb1ZNIgASYwoXRGVsZXRlQVBNYXBCeUFjdGl2aXR5SUQS",
            "IS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlJRBojLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5EZWxldGVJbmZvVk0iABJpChpEZWxldGVBUE1hcEJ5",
            "UGFydGljaXBhbnRJRBIkLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNp",
            "cGFudElEGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUluZm9WTSIA",
            "EmkKC1VwZGF0ZUFQTWFwEjEuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2",
            "aXR5UGFydGljaXBhbnRNYXBJbmZvGiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "Lk1vZGlmaWVkSW5mb1ZNIgASZgoXR2V0UGFydGljaXBhbnRHcm91cExpc3QS",
            "HC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRW1wdHkaKy5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuUGFydGljaXBhbnRHcm91cExpc3QiABJ1ChdHZXRQYXJ0aWNp",
            "cGFudEdyb3VwQnlJRBIpLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNp",
            "cGFudEdyb3VwSUQaLS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBh",
            "bnRHcm91cFN0cnVjdCIAEm0KF0NyZWF0ZVBhcnRpY2lwYW50R3JvdXBzEisu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50R3JvdXBJbmZvGiMu",
            "R3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEm8KF1VwZGF0",
            "ZVBhcnRpY2lwYW50R3JvdXBzEisuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBh",
            "cnRpY2lwYW50R3JvdXBJbmZvGiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1v",
            "ZGlmaWVkSW5mb1ZNIgASagoWRGVsZXRlUGFydGljaXBhbnRHcm91cBIpLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudEdyb3VwSUQaIy5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgASeQoiR2V0UGFydGlj",
            "aXBhbnRHcm91cEJ5UGFydGljaXBhbnRJRBIkLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5QYXJ0aWNpcGFudElEGisuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBh",
            "cnRpY2lwYW50R3JvdXBMaXN0IgASbgoWQ3JlYXRlUGFydGljaXBhbnRHcm91",
            "cBItLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFudEdyb3VwU3Ry",
            "dWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEnAK",
            "FlVwZGF0ZVBhcnRpY2lwYW50R3JvdXASLS5HcnBjQ29uZmVyZW5jZVNlcnZp",
            "Y2UuUGFydGljaXBhbnRHcm91cFN0cnVjdBolLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5Nb2RpZmllZEluZm9WTSIAEmkKGUNyZWF0ZVBhcnRpY2lwYW50R3Jv",
            "dXBNYXASJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRJRHMa",
            "Iy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlSW5mb1ZNIgASdgonRGVs",
            "ZXRlUGFydGljaXBhbnRHcm91cE1hcEJ5UGFydGljaXBhbklEEiQuR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50SUQaIy5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgASgQEKLURlbGV0ZVBhcnRpY2lwYW50",
            "R3JvdXBNYXBCeVBhcnRpY2lwYW50R3JvdXBJRBIpLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5QYXJ0aWNpcGFudEdyb3VwSUQaIy5HcnBjQ29uZmVyZW5jZVNl",
            "cnZpY2UuRGVsZXRlSW5mb1ZNIgASZAoWR2V0UGFydGljaXBhbnRUeXBlTGlz",
            "dBIcLkdycGNDb25mZXJlbmNlU2VydmljZS5FbXB0eRoqLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5QYXJ0aWNpcGFudFR5cGVMaXN0IgAScgoWR2V0UGFydGlj",
            "aXBhbnRUeXBlQnlJRBIoLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNp",
            "cGFudFR5cGVJRBosLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNpcGFu",
            "dFR5cGVTdHJ1Y3QiABJsChVDcmVhdGVQYXJ0aWNpcGFudFR5cGUSLC5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRUeXBlU3RydWN0GiMuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEm4KFVVwZGF0ZVBh",
            "cnRpY2lwYW50VHlwZRIsLkdycGNDb25mZXJlbmNlU2VydmljZS5QYXJ0aWNp",
            "cGFudFR5cGVTdHJ1Y3QaJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuTW9kaWZp",
            "ZWRJbmZvVk0iABJoChVEZWxldGVQYXJ0aWNpcGFudFR5cGUSKC5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuUGFydGljaXBhbnRUeXBlSUQaIy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgAScAoYQ3JlYXRlUGFydGljaXBh",
            "bnRUeXBlTWFwEi0uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50",
            "VHlwZU1hcEluZm8aIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlSW5m",
            "b1ZNIgASdgonRGVsZXRlUGFydGljaXBhbnRUeXBlTWFwQnlQYXJ0aWNpcGFu",
            "dElEEiQuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lwYW50SUQaIy5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgAScgoYVXBkYXRl",
            "UGFydGljaXBhbnRUeXBlTWFwEi0uR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBh",
            "cnRpY2lwYW50VHlwZU1hcEluZm8aJS5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "TW9kaWZpZWRJbmZvVk0iABJgChRHZXRBY3Rpdml0eURyYWZ0TGlzdBIcLkdy",
            "cGNDb25mZXJlbmNlU2VydmljZS5FbXB0eRooLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5BY3Rpdml0eURyYWZ0TGlzdCIAEmwKFEdldEFjdGl2aXR5RHJhZnRC",
            "eUlEEiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkFjdGl2aXR5RHJhZnRJRBoq",
            "LkdycGNDb25mZXJlbmNlU2VydmljZS5BY3Rpdml0eURyYWZ0U3RydWN0IgAS",
            "aAoTQ3JlYXRlQWN0aXZpdHlEcmFmdBIqLkdycGNDb25mZXJlbmNlU2Vydmlj",
            "ZS5BY3Rpdml0eURyYWZ0U3RydWN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LkNyZWF0ZUluZm9WTSIAEmoKE1VwZGF0ZUFjdGl2aXR5RHJhZnQSKi5HcnBj",
            "Q29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlEcmFmdFN0cnVjdBolLkdycGND",
            "b25mZXJlbmNlU2VydmljZS5Nb2RpZmllZEluZm9WTSIAEmQKE0RlbGV0ZUFj",
            "dGl2aXR5RHJhZnQSJi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQWN0aXZpdHlE",
            "cmFmdElEGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkRlbGV0ZUluZm9WTSIA",
            "EmsKG01vdmVBY3Rpdml0eVRvQWN0aXZpdHlEcmFmdBIlLkdycGNDb25mZXJl",
            "bmNlU2VydmljZS5BY3Rpdml0eVN0cnVjdBojLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5DcmVhdGVJbmZvVk0iABJYChBHZXRUYWxrRHJhZnRMaXN0EhwuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkVtcHR5GiQuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLlRhbGtEcmFmdExpc3QiABJgChBHZXRUYWxrRHJhZnRCeUlEEiIuR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLlRhbGtEcmFmdElEGiYuR3JwY0NvbmZlcmVu",
            "Y2VTZXJ2aWNlLlRhbGtEcmFmdFN0cnVjdCIAEmAKD0NyZWF0ZVRhbGtEcmFm",
            "dBImLkdycGNDb25mZXJlbmNlU2VydmljZS5UYWxrRHJhZnRTdHJ1Y3QaIy5H",
            "cnBjQ29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlSW5mb1ZNIgASYgoPVXBkYXRl",
            "VGFsa0RyYWZ0EiYuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlRhbGtEcmFmdFN0",
            "cnVjdBolLkdycGNDb25mZXJlbmNlU2VydmljZS5Nb2RpZmllZEluZm9WTSIA",
            "ElwKD0RlbGV0ZVRhbGtEcmFmdBIiLkdycGNDb25mZXJlbmNlU2VydmljZS5U",
            "YWxrRHJhZnRJRBojLkdycGNDb25mZXJlbmNlU2VydmljZS5EZWxldGVJbmZv",
            "Vk0iABJdChNNb3ZlVGFsa1RvVGFsa0RyYWZ0Eh8uR3JwY0NvbmZlcmVuY2VT",
            "ZXJ2aWNlLk1vdmVJbmZvGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkNyZWF0",
            "ZUluZm9WTSIAElgKEEdldFJlY2VwdGlvbkxpc3QSHC5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuRW1wdHkaJC5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUmVjZXB0",
            "aW9uTGlzdCIAEl4KD0NyZWF0ZVJlY2VwdGlvbhIkLkdycGNDb25mZXJlbmNl",
            "U2VydmljZS5SZWNlcHRpb25MaXN0GiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LkNyZWF0ZUluZm9WTSIAEmIKD1VwZGF0ZVJlY2VwdGlvbhImLkdycGNDb25m",
            "ZXJlbmNlU2VydmljZS5SZWNlcHRpb25TdHJ1Y3QaJS5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuTW9kaWZpZWRJbmZvVk0iABJcCg9EZWxldGVSZWNlcHRpb24S",
            "Ii5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUmVjZXB0aW9uSUQaIy5HcnBjQ29u",
            "ZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5mb1ZNIgASZAoNR2V0UG9saWN5TGlz",
            "dBIuLkdycGNDb25mZXJlbmNlU2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdFNl",
            "YXJjaBohLkdycGNDb25mZXJlbmNlU2VydmljZS5Qb2xpY3lMaXN0IgASVwoN",
            "R2V0UG9saWN5QnlJRBIfLkdycGNDb25mZXJlbmNlU2VydmljZS5Qb2xpY3lJ",
            "RBojLkdycGNDb25mZXJlbmNlU2VydmljZS5Qb2xpY3lTdHJ1Y3QiABJeCgxD",
            "cmVhdGVQb2xpY3kSJy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuQ3JlYXRlUG9s",
            "aWN5SW5mbxojLkdycGNDb25mZXJlbmNlU2VydmljZS5DcmVhdGVJbmZvVk0i",
            "ABJcCgxVcGRhdGVQb2xpY3kSIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUG9s",
            "aWN5U3RydWN0GiUuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLk1vZGlmaWVkSW5m",
            "b1ZNIgASWAoMRGVsZXRlUG9saWN5EiEuR3JwY0NvbmZlcmVuY2VTZXJ2aWNl",
            "LkRlbGV0ZUluZm8aIy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuRGVsZXRlSW5m",
            "b1ZNIgASXwoXR2V0UG9saWN5TGlzdEJ5VXNlck5hbWUSHy5HcnBjQ29uZmVy",
            "ZW5jZVNlcnZpY2UuVXNlck5hbWUaIS5HcnBjQ29uZmVyZW5jZVNlcnZpY2Uu",
            "UG9saWN5TGlzdCIAEmMKDWdldFBvbGljeUluZm8SJy5HcnBjQ29uZmVyZW5j",
            "ZVNlcnZpY2UuQ3JlYXRlUG9saWN5SW5mbxonLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5Qb2xpY3lJbmZvU3RydWN0IgASiAEKH0dldFBhcnRpY2lwYW50Q29u",
            "ZmVyZW5jZU1hcExpc3QSLi5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFnaW5h",
            "dGlvblJlcXVlc3RTZWFyY2gaMy5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFy",
            "dGljaXBhbnRDb25mZXJlbmNlTWFwTGlzdCIAEo0BCh9HZXRQYXJ0aWNpcGFu",
            "dENvbmZlcmVuY2VNYXBCeUlEEjEuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBh",
            "cnRpY2lwYW50Q29uZmVyZW5jZU1hcElEGjUuR3JwY0NvbmZlcmVuY2VTZXJ2",
            "aWNlLlBhcnRpY2lwYW50Q29uZmVyZW5jZU1hcFN0cnVjdCIAEnwKHkNyZWF0",
            "ZVBhcnRpY2lwYW50Q29uZmVyZW5jZU1hcBIzLkdycGNDb25mZXJlbmNlU2Vy",
            "dmljZS5QYXJ0aWNpcGFudENvbmZlcmVuY2VNYXBMaXN0GiMuR3JwY0NvbmZl",
            "cmVuY2VTZXJ2aWNlLkNyZWF0ZUluZm9WTSIAEoABCh5VcGRhdGVQYXJ0aWNp",
            "cGFudENvbmZlcmVuY2VNYXASNS5HcnBjQ29uZmVyZW5jZVNlcnZpY2UuUGFy",
            "dGljaXBhbnRDb25mZXJlbmNlTWFwU3RydWN0GiUuR3JwY0NvbmZlcmVuY2VT",
            "ZXJ2aWNlLk1vZGlmaWVkSW5mb1ZNIgASegoeRGVsZXRlUGFydGljaXBhbnRD",
            "b25mZXJlbmNlTWFwEjEuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLlBhcnRpY2lw",
            "YW50Q29uZmVyZW5jZU1hcElEGiMuR3JwY0NvbmZlcmVuY2VTZXJ2aWNlLkRl",
            "bGV0ZUluZm9WTSIAEnIKFGdldEhpc3RvcnlQb2xpY3lMaXN0Ei4uR3JwY0Nv",
            "bmZlcmVuY2VTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGiguR3Jw",
            "Y0NvbmZlcmVuY2VTZXJ2aWNlLkhpc3RvcnlQb2xpY3lMaXN0IgBiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFRoomList), global::GrpcConferenceService.CFRoomList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.roomPK), global::GrpcConferenceService.roomPK.Parser, new[]{ "RoomPK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFRoomStruct), global::GrpcConferenceService.CFRoomStruct.Parser, new[]{ "CFRoomPK", "RoomNameCN", "RoomNameEN", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFSeatList), global::GrpcConferenceService.CFSeatList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFSeatStruct), global::GrpcConferenceService.CFSeatStruct.Parser, new[]{ "CFSeatPK", "CFRoomPK", "SeatNumber", "SeatName", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFSeatPK), global::GrpcConferenceService.CFSeatPK.Parser, new[]{ "CFSeatPK_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFAddressList), global::GrpcConferenceService.CFAddressList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFAddressStruct), global::GrpcConferenceService.CFAddressStruct.Parser, new[]{ "CFAddressPK", "Translation", "PostCode", "Country", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFAddressPK), global::GrpcConferenceService.CFAddressPK.Parser, new[]{ "CFAddressPK_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFRoomTypeList), global::GrpcConferenceService.CFRoomTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFRoomTypeStruct), global::GrpcConferenceService.CFRoomTypeStruct.Parser, new[]{ "CFRoomTypePK", "CFRoomTypeName", "Remark", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CFRoomTypePK), global::GrpcConferenceService.CFRoomTypePK.Parser, new[]{ "CFRoomTypePK_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ConferencePK), global::GrpcConferenceService.ConferencePK.Parser, new[]{ "ConferencePK_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.Year), global::GrpcConferenceService.Year.Parser, new[]{ "Year_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ConferenceStruct), global::GrpcConferenceService.ConferenceStruct.Parser, new[]{ "ConferenceID", "ParentID", "Translation", "CFAddressPK", "StartDate", "StartDateTime", "Year", "Sort", "Abbreviation", "ConferenceIntroduce", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "Level", "TimeRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParentID), global::GrpcConferenceService.ParentID.Parser, new[]{ "ParentID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ConferenceList), global::GrpcConferenceService.ConferenceList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.UpdateInfo), global::GrpcConferenceService.UpdateInfo.Parser, new[]{ "ConferenceID", "StratDateTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.AllConferenceInfoList), global::GrpcConferenceService.AllConferenceInfoList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.AllConferenceInfoListStruct), global::GrpcConferenceService.AllConferenceInfoListStruct.Parser, new[]{ "ActivityandParticipant", "TalkandParticipant" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityandParticipant), global::GrpcConferenceService.ActivityandParticipant.Parser, new[]{ "Activity", "ParticipantInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkandParticipant), global::GrpcConferenceService.TalkandParticipant.Parser, new[]{ "Talk", "ParticipantInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.LunchNames), global::GrpcConferenceService.LunchNames.Parser, new[]{ "LunchNames_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.YearInfo), global::GrpcConferenceService.YearInfo.Parser, new[]{ "OldYear", "NewYear" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.YearList), global::GrpcConferenceService.YearList.Parser, new[]{ "YearList_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityList), global::GrpcConferenceService.ActivityList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityID), global::GrpcConferenceService.ActivityID.Parser, new[]{ "ActivityID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityStruct), global::GrpcConferenceService.ActivityStruct.Parser, new[]{ "ActivityID", "ConferenceID", "ActivityTypeID", "TimeLength", "Sort", "StartDate", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "StartTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityIDs), global::GrpcConferenceService.ActivityIDs.Parser, new[]{ "ActivityIDs_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityDraftInfo), global::GrpcConferenceService.ActivityDraftInfo.Parser, new[]{ "ActivityDraftStruct", "ConferenceID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityDraftList), global::GrpcConferenceService.ActivityDraftList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityDraftID), global::GrpcConferenceService.ActivityDraftID.Parser, new[]{ "ActivityDraftID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityDraftStruct), global::GrpcConferenceService.ActivityDraftStruct.Parser, new[]{ "ActivityDraftID", "ActivityTypeID", "TimeLength", "Sort", "StartDate", "Translation", "StartTime", "EndTime", "ActivityID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityTypeList), global::GrpcConferenceService.ActivityTypeList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityTypeStruct), global::GrpcConferenceService.ActivityTypeStruct.Parser, new[]{ "ActivityTypeID", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "ActivityCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityTypeID), global::GrpcConferenceService.ActivityTypeID.Parser, new[]{ "ActivityTypeID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityCode), global::GrpcConferenceService.ActivityCode.Parser, new[]{ "ActivityCode_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkList), global::GrpcConferenceService.TalkList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkStruct), global::GrpcConferenceService.TalkStruct.Parser, new[]{ "TalkID", "ActivityID", "TalkTypeID", "CFTopicPK", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "StartDate", "TimeLength", "Sort", "StartTime", "EndTime", "CFTopicName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkID), global::GrpcConferenceService.TalkID.Parser, new[]{ "TalkID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkIDs), global::GrpcConferenceService.TalkIDs.Parser, new[]{ "TalkIDs_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.UpdateTalkInfo), global::GrpcConferenceService.UpdateTalkInfo.Parser, new[]{ "TalkID", "TopicName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.IsUse), global::GrpcConferenceService.IsUse.Parser, new[]{ "IsUse_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkDraftInfo), global::GrpcConferenceService.TalkDraftInfo.Parser, new[]{ "TalkDraftStruct", "ActivityID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.Info), global::GrpcConferenceService.Info.Parser, new[]{ "CFTopicID", "TalkID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkDraftList), global::GrpcConferenceService.TalkDraftList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkDraftStruct), global::GrpcConferenceService.TalkDraftStruct.Parser, new[]{ "TalkDraftID", "ActivityDraftID", "TalkTypeID", "CFTopicPK", "Translation", "StartDate", "TimeLength", "Sort", "StartTime", "EndTime", "CFTopicName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkDraftID), global::GrpcConferenceService.TalkDraftID.Parser, new[]{ "TalkDraftID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.MoveInfo), global::GrpcConferenceService.MoveInfo.Parser, new[]{ "TalkStruct", "ActivityDraftID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkTypeList), global::GrpcConferenceService.TalkTypeList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkTypeStruct), global::GrpcConferenceService.TalkTypeStruct.Parser, new[]{ "TalkTypeID", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkTypeID), global::GrpcConferenceService.TalkTypeID.Parser, new[]{ "TalkTypeID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerLevelList), global::GrpcConferenceService.OrganizerLevelList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerLevelStruct), global::GrpcConferenceService.OrganizerLevelStruct.Parser, new[]{ "OrganizerLevelID", "ConferenceId", "Translation", "IsHide", "Sort", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerLevelID), global::GrpcConferenceService.OrganizerLevelID.Parser, new[]{ "OrganizerLevelID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerList), global::GrpcConferenceService.OrganizerList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerStruct), global::GrpcConferenceService.OrganizerStruct.Parser, new[]{ "OrganizerID", "OrganizerLevelID", "Translation", "Sort", "IMGSRC", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "CompanyURL" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.OrganizerID), global::GrpcConferenceService.OrganizerID.Parser, new[]{ "OrganizerID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PresenterList), global::GrpcConferenceService.PresenterList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PresenterStruct), global::GrpcConferenceService.PresenterStruct.Parser, new[]{ "PresenterID", "ConferenceID", "PresenterNameTranslation", "PresenterTypeTranslation", "JobTitleTranslation", "AppellationTranslation", "CountryTranslation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "Mobile", "EMail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PresenterID), global::GrpcConferenceService.PresenterID.Parser, new[]{ "PresenterID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantList), global::GrpcConferenceService.ParticipantList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantStruct), global::GrpcConferenceService.ParticipantStruct.Parser, new[]{ "ParticipantID", "ParticipantNameTranslation", "IMGSRC", "CompanyTranslation", "JobTranslation", "CountryTranslation", "Email", "Mobile", "IntroduceTranslation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "PersonContractID", "PerContractNumber", "IsDelete", "Sort", "Owerid", "Ower", "AppellationTranslation", "CompanyId", "ConfirmPPT", "MemberPK", "ShowOnFont", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantID), global::GrpcConferenceService.ParticipantID.Parser, new[]{ "ParticipantID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PerContractNumberID), global::GrpcConferenceService.PerContractNumberID.Parser, new[]{ "PerContractNumberID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantName), global::GrpcConferenceService.ParticipantName.Parser, new[]{ "ParticipantName_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantInfoList), global::GrpcConferenceService.ParticipantInfoList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantInfoStruct), global::GrpcConferenceService.ParticipantInfoStruct.Parser, new[]{ "ParticipantNameTranslation", "CompanyTranslation", "JobTranslation", "CountryTranslation", "AppellationTranslation", "ParticipantTypeTranslation", "ParticipantID", "ParticipantTypeID", "EMail", "Mobile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PersonContractID), global::GrpcConferenceService.PersonContractID.Parser, new[]{ "PersonContractID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantIDList), global::GrpcConferenceService.ParticipantIDList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CompanyId), global::GrpcConferenceService.CompanyId.Parser, new[]{ "CompanyId_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.MemberPK), global::GrpcConferenceService.MemberPK.Parser, new[]{ "MemberPK_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PInfo), global::GrpcConferenceService.PInfo.Parser, new[]{ "MemberPK", "ShowOnFont" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PagingInfo), global::GrpcConferenceService.PagingInfo.Parser, new[]{ "ConferencrID", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkParticipantMapStruct), global::GrpcConferenceService.TalkParticipantMapStruct.Parser, new[]{ "TalkParticipantMapID", "ParticipantID", "TalkID", "ConferenceID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.TalkParticipantMapInfo), global::GrpcConferenceService.TalkParticipantMapInfo.Parser, new[]{ "TalkID", "ParticipantIDs", "ParticipantTypeIDs", "ConferenceID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ActivityParticipantMapInfo), global::GrpcConferenceService.ActivityParticipantMapInfo.Parser, new[]{ "ActivityID", "ParticipantIDs", "ParticipantTypeIDs", "ConferenceID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantGroupList), global::GrpcConferenceService.ParticipantGroupList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantGroupStruct), global::GrpcConferenceService.ParticipantGroupStruct.Parser, new[]{ "ParticipantGroupID", "ConferenceID", "ParticipantGroupNameTranslation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "ConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantGroupID), global::GrpcConferenceService.ParticipantGroupID.Parser, new[]{ "ParticipantGroupID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantGroupInfo), global::GrpcConferenceService.ParticipantGroupInfo.Parser, new[]{ "ParticipantGroupStruct", "IDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantGroupMapStruct), global::GrpcConferenceService.ParticipantGroupMapStruct.Parser, new[]{ "ParticipantGroupMapID", "ParticipantGroupID", "ParticipantID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantIDs), global::GrpcConferenceService.ParticipantIDs.Parser, new[]{ "ParticipantIDs_", "ParticipantGroupID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantTypeList), global::GrpcConferenceService.ParticipantTypeList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantTypeStruct), global::GrpcConferenceService.ParticipantTypeStruct.Parser, new[]{ "ParticipantTypeID", "ParticipantTypeTranslation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantTypeID), global::GrpcConferenceService.ParticipantTypeID.Parser, new[]{ "ParticipantTypeID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantTypeMapInfo), global::GrpcConferenceService.ParticipantTypeMapInfo.Parser, new[]{ "ParticipantID", "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ReceptionList), global::GrpcConferenceService.ReceptionList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ReceptionStruct), global::GrpcConferenceService.ReceptionStruct.Parser, new[]{ "ReceptionID", "MemberPK", "IsReception", "IsArrange", "ArriveDate", "LeaveDate", "Hotel", "Receptioner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ReceptionID), global::GrpcConferenceService.ReceptionID.Parser, new[]{ "ReceptionID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PolicyList), global::GrpcConferenceService.PolicyList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PolicyID), global::GrpcConferenceService.PolicyID.Parser, new[]{ "PolicyID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PolicyStruct), global::GrpcConferenceService.PolicyStruct.Parser, new[]{ "PolicyID", "CompanyNameTranslation", "CompanyID", "Country", "CountryID", "Address", "PostCode", "ContactName", "EMail", "Tel", "Mobile", "WebSite", "IsDelete", "AdminName", "AdminID", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "DeleteOn", "DeleteBy", "Year", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.DeleteInfo), global::GrpcConferenceService.DeleteInfo.Parser, new[]{ "PolicyID", "UserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CreatePolicyInfo), global::GrpcConferenceService.CreatePolicyInfo.Parser, new[]{ "PolicyStruct", "UserMaxForum", "UserPK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.UserName), global::GrpcConferenceService.UserName.Parser, new[]{ "UserName_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PolicyInfoStruct), global::GrpcConferenceService.PolicyInfoStruct.Parser, new[]{ "PolicyNumber", "IsDisplay" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantConferenceMapList), global::GrpcConferenceService.ParticipantConferenceMapList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantConferenceMapStruct), global::GrpcConferenceService.ParticipantConferenceMapStruct.Parser, new[]{ "ParticipantConferenceMapID", "ParticipantID", "IMGSRC", "SessionConferenceID", "SessionCN", "SessionEN", "SpeechTimeCN", "SpeechTimeEN", "HasPersonInfo", "ParticipantGroupID", "AbstractDraftID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ParticipantConferenceMapID), global::GrpcConferenceService.ParticipantConferenceMapID.Parser, new[]{ "ParticipantConferenceMapID_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.HistoryPolicyList), global::GrpcConferenceService.HistoryPolicyList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.HistoryPolicyStruct), global::GrpcConferenceService.HistoryPolicyStruct.Parser, new[]{ "HistoryPolicyID", "PolicyID", "CompanyNameTranslation", "Country", "Address", "PostCode", "ContactName", "EMail", "Tel", "Mobile", "WebSite", "OwnerName", "OwnerID", "Operation", "Operator", "OperationTime", "Year", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.SearchStruct), global::GrpcConferenceService.SearchStruct.Parser, new[]{ "MemEmail", "MemIsDelete", "MemIsActivation", "ComNameCn", "ComNameEn", "ComIsDelete", "ComIsVerify", "RoomName", "SeatName", "AddressName", "RoomTypeName", "MassMeetingName", "SubEventName", "CFSessionName", "CFTopicName", "CompanyName", "Ower", "PerContractNumber", "ParticipantName", "ContactName", "ShowOnFont", "OwnerID", "Year", "Score" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.CreateInfoVM), global::GrpcConferenceService.CreateInfoVM.Parser, new[]{ "Success", "Createcount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ModifiedInfoVM), global::GrpcConferenceService.ModifiedInfoVM.Parser, new[]{ "Success", "Modifiedcount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.DeleteInfoVM), global::GrpcConferenceService.DeleteInfoVM.Parser, new[]{ "Success", "Deletecount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.PaginationRequestSearch), global::GrpcConferenceService.PaginationRequestSearch.Parser, new[]{ "Id", "Offset", "Limit", "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.Empty), global::GrpcConferenceService.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.Translation), global::GrpcConferenceService.Translation.Parser, new[]{ "CN", "EN", "JP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.IDs), global::GrpcConferenceService.IDs.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceService.ResBool), global::GrpcConferenceService.ResBool.Parser, new[]{ "ResBool_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CFRoomList : pb::IMessage<CFRoomList> {
    private static readonly pb::MessageParser<CFRoomList> _parser = new pb::MessageParser<CFRoomList>(() => new CFRoomList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFRoomList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomList(CFRoomList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomList Clone() {
      return new CFRoomList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.CFRoomStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.CFRoomStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.CFRoomStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.CFRoomStruct>();
    /// <summary>
    ///会议室集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.CFRoomStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFRoomList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFRoomList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFRoomList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class roomPK : pb::IMessage<roomPK> {
    private static readonly pb::MessageParser<roomPK> _parser = new pb::MessageParser<roomPK>(() => new roomPK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<roomPK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roomPK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roomPK(roomPK other) : this() {
      roomPK_ = other.roomPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public roomPK Clone() {
      return new roomPK(this);
    }

    /// <summary>Field number for the "roomPK" field.</summary>
    public const int RoomPKFieldNumber = 1;
    private string roomPK_ = "";
    /// <summary>
    ///会议室主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomPK {
      get { return roomPK_; }
      set {
        roomPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as roomPK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(roomPK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomPK != other.RoomPK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomPK.Length != 0) hash ^= RoomPK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomPK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomPK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(roomPK other) {
      if (other == null) {
        return;
      }
      if (other.RoomPK.Length != 0) {
        RoomPK = other.RoomPK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomPK = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFRoomStruct : pb::IMessage<CFRoomStruct> {
    private static readonly pb::MessageParser<CFRoomStruct> _parser = new pb::MessageParser<CFRoomStruct>(() => new CFRoomStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFRoomStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomStruct(CFRoomStruct other) : this() {
      cFRoomPK_ = other.cFRoomPK_;
      roomNameCN_ = other.roomNameCN_;
      roomNameEN_ = other.roomNameEN_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomStruct Clone() {
      return new CFRoomStruct(this);
    }

    /// <summary>Field number for the "CFRoomPK" field.</summary>
    public const int CFRoomPKFieldNumber = 1;
    private string cFRoomPK_ = "";
    /// <summary>
    ///会议室主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFRoomPK {
      get { return cFRoomPK_; }
      set {
        cFRoomPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomNameCN" field.</summary>
    public const int RoomNameCNFieldNumber = 2;
    private string roomNameCN_ = "";
    /// <summary>
    ///会议室名称中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNameCN {
      get { return roomNameCN_; }
      set {
        roomNameCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomNameEN" field.</summary>
    public const int RoomNameENFieldNumber = 3;
    private string roomNameEN_ = "";
    /// <summary>
    ///会议室名称英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNameEN {
      get { return roomNameEN_; }
      set {
        roomNameEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 6;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 7;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFRoomStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFRoomStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFRoomPK != other.CFRoomPK) return false;
      if (RoomNameCN != other.RoomNameCN) return false;
      if (RoomNameEN != other.RoomNameEN) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFRoomPK.Length != 0) hash ^= CFRoomPK.GetHashCode();
      if (RoomNameCN.Length != 0) hash ^= RoomNameCN.GetHashCode();
      if (RoomNameEN.Length != 0) hash ^= RoomNameEN.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFRoomPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFRoomPK);
      }
      if (RoomNameCN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomNameCN);
      }
      if (RoomNameEN.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomNameEN);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFRoomPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFRoomPK);
      }
      if (RoomNameCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNameCN);
      }
      if (RoomNameEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNameEN);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFRoomStruct other) {
      if (other == null) {
        return;
      }
      if (other.CFRoomPK.Length != 0) {
        CFRoomPK = other.CFRoomPK;
      }
      if (other.RoomNameCN.Length != 0) {
        RoomNameCN = other.RoomNameCN;
      }
      if (other.RoomNameEN.Length != 0) {
        RoomNameEN = other.RoomNameEN;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFRoomPK = input.ReadString();
            break;
          }
          case 18: {
            RoomNameCN = input.ReadString();
            break;
          }
          case 26: {
            RoomNameEN = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 58: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFSeatList : pb::IMessage<CFSeatList> {
    private static readonly pb::MessageParser<CFSeatList> _parser = new pb::MessageParser<CFSeatList>(() => new CFSeatList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFSeatList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatList(CFSeatList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatList Clone() {
      return new CFSeatList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.CFSeatStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.CFSeatStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.CFSeatStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.CFSeatStruct>();
    /// <summary>
    ///会议桌集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.CFSeatStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFSeatList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFSeatList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFSeatList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFSeatStruct : pb::IMessage<CFSeatStruct> {
    private static readonly pb::MessageParser<CFSeatStruct> _parser = new pb::MessageParser<CFSeatStruct>(() => new CFSeatStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFSeatStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatStruct(CFSeatStruct other) : this() {
      cFSeatPK_ = other.cFSeatPK_;
      cFRoomPK_ = other.cFRoomPK_;
      seatNumber_ = other.seatNumber_;
      seatName_ = other.seatName_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatStruct Clone() {
      return new CFSeatStruct(this);
    }

    /// <summary>Field number for the "CFSeatPK" field.</summary>
    public const int CFSeatPKFieldNumber = 1;
    private string cFSeatPK_ = "";
    /// <summary>
    ///会议桌主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFSeatPK {
      get { return cFSeatPK_; }
      set {
        cFSeatPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFRoomPK" field.</summary>
    public const int CFRoomPKFieldNumber = 2;
    private string cFRoomPK_ = "";
    /// <summary>
    ///会议室id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFRoomPK {
      get { return cFRoomPK_; }
      set {
        cFRoomPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SeatNumber" field.</summary>
    public const int SeatNumberFieldNumber = 3;
    private int seatNumber_;
    /// <summary>
    ///桌号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeatNumber {
      get { return seatNumber_; }
      set {
        seatNumber_ = value;
      }
    }

    /// <summary>Field number for the "SeatName" field.</summary>
    public const int SeatNameFieldNumber = 4;
    private string seatName_ = "";
    /// <summary>
    ///桌名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeatName {
      get { return seatName_; }
      set {
        seatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 7;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 8;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFSeatStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFSeatStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFSeatPK != other.CFSeatPK) return false;
      if (CFRoomPK != other.CFRoomPK) return false;
      if (SeatNumber != other.SeatNumber) return false;
      if (SeatName != other.SeatName) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFSeatPK.Length != 0) hash ^= CFSeatPK.GetHashCode();
      if (CFRoomPK.Length != 0) hash ^= CFRoomPK.GetHashCode();
      if (SeatNumber != 0) hash ^= SeatNumber.GetHashCode();
      if (SeatName.Length != 0) hash ^= SeatName.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFSeatPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFSeatPK);
      }
      if (CFRoomPK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CFRoomPK);
      }
      if (SeatNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SeatNumber);
      }
      if (SeatName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SeatName);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFSeatPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFSeatPK);
      }
      if (CFRoomPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFRoomPK);
      }
      if (SeatNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNumber);
      }
      if (SeatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatName);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFSeatStruct other) {
      if (other == null) {
        return;
      }
      if (other.CFSeatPK.Length != 0) {
        CFSeatPK = other.CFSeatPK;
      }
      if (other.CFRoomPK.Length != 0) {
        CFRoomPK = other.CFRoomPK;
      }
      if (other.SeatNumber != 0) {
        SeatNumber = other.SeatNumber;
      }
      if (other.SeatName.Length != 0) {
        SeatName = other.SeatName;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFSeatPK = input.ReadString();
            break;
          }
          case 18: {
            CFRoomPK = input.ReadString();
            break;
          }
          case 24: {
            SeatNumber = input.ReadInt32();
            break;
          }
          case 34: {
            SeatName = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 66: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFSeatPK : pb::IMessage<CFSeatPK> {
    private static readonly pb::MessageParser<CFSeatPK> _parser = new pb::MessageParser<CFSeatPK>(() => new CFSeatPK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFSeatPK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatPK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatPK(CFSeatPK other) : this() {
      cFSeatPK_ = other.cFSeatPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFSeatPK Clone() {
      return new CFSeatPK(this);
    }

    /// <summary>Field number for the "CFSeatPK" field.</summary>
    public const int CFSeatPK_FieldNumber = 1;
    private string cFSeatPK_ = "";
    /// <summary>
    ///会议桌id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFSeatPK_ {
      get { return cFSeatPK_; }
      set {
        cFSeatPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFSeatPK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFSeatPK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFSeatPK_ != other.CFSeatPK_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFSeatPK_.Length != 0) hash ^= CFSeatPK_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFSeatPK_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFSeatPK_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFSeatPK_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFSeatPK_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFSeatPK other) {
      if (other == null) {
        return;
      }
      if (other.CFSeatPK_.Length != 0) {
        CFSeatPK_ = other.CFSeatPK_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFSeatPK_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFAddressList : pb::IMessage<CFAddressList> {
    private static readonly pb::MessageParser<CFAddressList> _parser = new pb::MessageParser<CFAddressList>(() => new CFAddressList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFAddressList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressList(CFAddressList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressList Clone() {
      return new CFAddressList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.CFAddressStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.CFAddressStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.CFAddressStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.CFAddressStruct>();
    /// <summary>
    ///会议地点集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.CFAddressStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFAddressList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFAddressList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFAddressList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFAddressStruct : pb::IMessage<CFAddressStruct> {
    private static readonly pb::MessageParser<CFAddressStruct> _parser = new pb::MessageParser<CFAddressStruct>(() => new CFAddressStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFAddressStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressStruct(CFAddressStruct other) : this() {
      cFAddressPK_ = other.cFAddressPK_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      postCode_ = other.postCode_;
      country_ = other.country_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressStruct Clone() {
      return new CFAddressStruct(this);
    }

    /// <summary>Field number for the "CFAddressPK" field.</summary>
    public const int CFAddressPKFieldNumber = 1;
    private string cFAddressPK_ = "";
    /// <summary>
    ///会议地点主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFAddressPK {
      get { return cFAddressPK_; }
      set {
        cFAddressPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///会议地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PostCode" field.</summary>
    public const int PostCodeFieldNumber = 3;
    private string postCode_ = "";
    /// <summary>
    ///邮编
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostCode {
      get { return postCode_; }
      set {
        postCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 4;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 7;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 8;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFAddressStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFAddressStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFAddressPK != other.CFAddressPK) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PostCode != other.PostCode) return false;
      if (Country != other.Country) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFAddressPK.Length != 0) hash ^= CFAddressPK.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PostCode.Length != 0) hash ^= PostCode.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFAddressPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFAddressPK);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (PostCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PostCode);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Country);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFAddressPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFAddressPK);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostCode);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFAddressStruct other) {
      if (other == null) {
        return;
      }
      if (other.CFAddressPK.Length != 0) {
        CFAddressPK = other.CFAddressPK;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PostCode.Length != 0) {
        PostCode = other.PostCode;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFAddressPK = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            PostCode = input.ReadString();
            break;
          }
          case 34: {
            Country = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 66: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFAddressPK : pb::IMessage<CFAddressPK> {
    private static readonly pb::MessageParser<CFAddressPK> _parser = new pb::MessageParser<CFAddressPK>(() => new CFAddressPK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFAddressPK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressPK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressPK(CFAddressPK other) : this() {
      cFAddressPK_ = other.cFAddressPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFAddressPK Clone() {
      return new CFAddressPK(this);
    }

    /// <summary>Field number for the "CFAddressPK" field.</summary>
    public const int CFAddressPK_FieldNumber = 1;
    private string cFAddressPK_ = "";
    /// <summary>
    ///会议地点主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFAddressPK_ {
      get { return cFAddressPK_; }
      set {
        cFAddressPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFAddressPK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFAddressPK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFAddressPK_ != other.CFAddressPK_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFAddressPK_.Length != 0) hash ^= CFAddressPK_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFAddressPK_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFAddressPK_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFAddressPK_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFAddressPK_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFAddressPK other) {
      if (other == null) {
        return;
      }
      if (other.CFAddressPK_.Length != 0) {
        CFAddressPK_ = other.CFAddressPK_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFAddressPK_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFRoomTypeList : pb::IMessage<CFRoomTypeList> {
    private static readonly pb::MessageParser<CFRoomTypeList> _parser = new pb::MessageParser<CFRoomTypeList>(() => new CFRoomTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFRoomTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeList(CFRoomTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeList Clone() {
      return new CFRoomTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.CFRoomTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.CFRoomTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.CFRoomTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.CFRoomTypeStruct>();
    /// <summary>
    ///会议室类型集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.CFRoomTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFRoomTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFRoomTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFRoomTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFRoomTypeStruct : pb::IMessage<CFRoomTypeStruct> {
    private static readonly pb::MessageParser<CFRoomTypeStruct> _parser = new pb::MessageParser<CFRoomTypeStruct>(() => new CFRoomTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFRoomTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeStruct(CFRoomTypeStruct other) : this() {
      cFRoomTypePK_ = other.cFRoomTypePK_;
      cFRoomTypeName_ = other.cFRoomTypeName_;
      remark_ = other.remark_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypeStruct Clone() {
      return new CFRoomTypeStruct(this);
    }

    /// <summary>Field number for the "CFRoomTypePK" field.</summary>
    public const int CFRoomTypePKFieldNumber = 1;
    private string cFRoomTypePK_ = "";
    /// <summary>
    ///会议室类型主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFRoomTypePK {
      get { return cFRoomTypePK_; }
      set {
        cFRoomTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFRoomTypeName" field.</summary>
    public const int CFRoomTypeNameFieldNumber = 2;
    private string cFRoomTypeName_ = "";
    /// <summary>
    ///会议室类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFRoomTypeName {
      get { return cFRoomTypeName_; }
      set {
        cFRoomTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 3;
    private string remark_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 6;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 7;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFRoomTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFRoomTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFRoomTypePK != other.CFRoomTypePK) return false;
      if (CFRoomTypeName != other.CFRoomTypeName) return false;
      if (Remark != other.Remark) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFRoomTypePK.Length != 0) hash ^= CFRoomTypePK.GetHashCode();
      if (CFRoomTypeName.Length != 0) hash ^= CFRoomTypeName.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFRoomTypePK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFRoomTypePK);
      }
      if (CFRoomTypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CFRoomTypeName);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFRoomTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFRoomTypePK);
      }
      if (CFRoomTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFRoomTypeName);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFRoomTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.CFRoomTypePK.Length != 0) {
        CFRoomTypePK = other.CFRoomTypePK;
      }
      if (other.CFRoomTypeName.Length != 0) {
        CFRoomTypeName = other.CFRoomTypeName;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFRoomTypePK = input.ReadString();
            break;
          }
          case 18: {
            CFRoomTypeName = input.ReadString();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 58: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CFRoomTypePK : pb::IMessage<CFRoomTypePK> {
    private static readonly pb::MessageParser<CFRoomTypePK> _parser = new pb::MessageParser<CFRoomTypePK>(() => new CFRoomTypePK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CFRoomTypePK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypePK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypePK(CFRoomTypePK other) : this() {
      cFRoomTypePK_ = other.cFRoomTypePK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CFRoomTypePK Clone() {
      return new CFRoomTypePK(this);
    }

    /// <summary>Field number for the "CFRoomTypePK" field.</summary>
    public const int CFRoomTypePK_FieldNumber = 1;
    private string cFRoomTypePK_ = "";
    /// <summary>
    ///会议室类型主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFRoomTypePK_ {
      get { return cFRoomTypePK_; }
      set {
        cFRoomTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CFRoomTypePK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CFRoomTypePK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFRoomTypePK_ != other.CFRoomTypePK_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFRoomTypePK_.Length != 0) hash ^= CFRoomTypePK_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFRoomTypePK_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFRoomTypePK_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFRoomTypePK_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFRoomTypePK_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CFRoomTypePK other) {
      if (other == null) {
        return;
      }
      if (other.CFRoomTypePK_.Length != 0) {
        CFRoomTypePK_ = other.CFRoomTypePK_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFRoomTypePK_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferencePK : pb::IMessage<ConferencePK> {
    private static readonly pb::MessageParser<ConferencePK> _parser = new pb::MessageParser<ConferencePK>(() => new ConferencePK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferencePK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferencePK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferencePK(ConferencePK other) : this() {
      conferencePK_ = other.conferencePK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferencePK Clone() {
      return new ConferencePK(this);
    }

    /// <summary>Field number for the "ConferencePK" field.</summary>
    public const int ConferencePK_FieldNumber = 1;
    private string conferencePK_ = "";
    /// <summary>
    ///会议主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferencePK_ {
      get { return conferencePK_; }
      set {
        conferencePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferencePK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferencePK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferencePK_ != other.ConferencePK_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferencePK_.Length != 0) hash ^= ConferencePK_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferencePK_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferencePK_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferencePK_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferencePK_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferencePK other) {
      if (other == null) {
        return;
      }
      if (other.ConferencePK_.Length != 0) {
        ConferencePK_ = other.ConferencePK_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferencePK_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Year : pb::IMessage<Year> {
    private static readonly pb::MessageParser<Year> _parser = new pb::MessageParser<Year>(() => new Year());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Year> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Year() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Year(Year other) : this() {
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Year Clone() {
      return new Year(this);
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int Year_FieldNumber = 1;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year_ {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Year);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Year other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year_ != other.Year_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Year_.Length != 0) hash ^= Year_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Year_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Year_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Year_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Year other) {
      if (other == null) {
        return;
      }
      if (other.Year_.Length != 0) {
        Year_ = other.Year_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Year_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceStruct : pb::IMessage<ConferenceStruct> {
    private static readonly pb::MessageParser<ConferenceStruct> _parser = new pb::MessageParser<ConferenceStruct>(() => new ConferenceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceStruct(ConferenceStruct other) : this() {
      conferenceID_ = other.conferenceID_;
      parentID_ = other.parentID_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      cFAddressPK_ = other.cFAddressPK_;
      startDate_ = other.startDate_;
      startDateTime_ = other.startDateTime_;
      year_ = other.year_;
      sort_ = other.sort_;
      abbreviation_ = other.abbreviation_;
      conferenceIntroduce_ = other.conferenceIntroduce_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      level_ = other.level_;
      timeRange_ = other.timeRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceStruct Clone() {
      return new ConferenceStruct(this);
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 1;
    private string conferenceID_ = "";
    /// <summary>
    ///会议主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParentID" field.</summary>
    public const int ParentIDFieldNumber = 2;
    private string parentID_ = "";
    /// <summary>
    ///父级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentID {
      get { return parentID_; }
      set {
        parentID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CFAddressPK" field.</summary>
    public const int CFAddressPKFieldNumber = 4;
    private string cFAddressPK_ = "";
    /// <summary>
    ///会议地点id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFAddressPK {
      get { return cFAddressPK_; }
      set {
        cFAddressPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 5;
    private string startDate_ = "";
    /// <summary>
    ///会议时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDateTime" field.</summary>
    public const int StartDateTimeFieldNumber = 6;
    private string startDateTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDateTime {
      get { return startDateTime_; }
      set {
        startDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 7;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 8;
    private string sort_ = "";
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Abbreviation" field.</summary>
    public const int AbbreviationFieldNumber = 9;
    private string abbreviation_ = "";
    /// <summary>
    ///英文缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Abbreviation {
      get { return abbreviation_; }
      set {
        abbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceIntroduce" field.</summary>
    public const int ConferenceIntroduceFieldNumber = 10;
    private string conferenceIntroduce_ = "";
    /// <summary>
    ///会议简介  格式{"CN":"123","EN":"123"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceIntroduce {
      get { return conferenceIntroduce_; }
      set {
        conferenceIntroduce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 11;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 12;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 13;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 14;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 15;
    private int level_;
    /// <summary>
    ///层级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "TimeRange" field.</summary>
    public const int TimeRangeFieldNumber = 16;
    private string timeRange_ = "";
    /// <summary>
    ///时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceID != other.ConferenceID) return false;
      if (ParentID != other.ParentID) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CFAddressPK != other.CFAddressPK) return false;
      if (StartDate != other.StartDate) return false;
      if (StartDateTime != other.StartDateTime) return false;
      if (Year != other.Year) return false;
      if (Sort != other.Sort) return false;
      if (Abbreviation != other.Abbreviation) return false;
      if (ConferenceIntroduce != other.ConferenceIntroduce) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Level != other.Level) return false;
      if (TimeRange != other.TimeRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (ParentID.Length != 0) hash ^= ParentID.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CFAddressPK.Length != 0) hash ^= CFAddressPK.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (StartDateTime.Length != 0) hash ^= StartDateTime.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Abbreviation.Length != 0) hash ^= Abbreviation.GetHashCode();
      if (ConferenceIntroduce.Length != 0) hash ^= ConferenceIntroduce.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (TimeRange.Length != 0) hash ^= TimeRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceID);
      }
      if (ParentID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParentID);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (CFAddressPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CFAddressPK);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StartDate);
      }
      if (StartDateTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartDateTime);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Year);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Sort);
      }
      if (Abbreviation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Abbreviation);
      }
      if (ConferenceIntroduce.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ConferenceIntroduce);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModifiedBy);
      }
      if (Level != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Level);
      }
      if (TimeRange.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(TimeRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (ParentID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentID);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CFAddressPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFAddressPK);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (StartDateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDateTime);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Abbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Abbreviation);
      }
      if (ConferenceIntroduce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceIntroduce);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (TimeRange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TimeRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.ParentID.Length != 0) {
        ParentID = other.ParentID;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CFAddressPK.Length != 0) {
        CFAddressPK = other.CFAddressPK;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.StartDateTime.Length != 0) {
        StartDateTime = other.StartDateTime;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Abbreviation.Length != 0) {
        Abbreviation = other.Abbreviation;
      }
      if (other.ConferenceIntroduce.Length != 0) {
        ConferenceIntroduce = other.ConferenceIntroduce;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.TimeRange.Length != 0) {
        TimeRange = other.TimeRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceID = input.ReadString();
            break;
          }
          case 18: {
            ParentID = input.ReadString();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 34: {
            CFAddressPK = input.ReadString();
            break;
          }
          case 42: {
            StartDate = input.ReadString();
            break;
          }
          case 50: {
            StartDateTime = input.ReadString();
            break;
          }
          case 58: {
            Year = input.ReadString();
            break;
          }
          case 66: {
            Sort = input.ReadString();
            break;
          }
          case 74: {
            Abbreviation = input.ReadString();
            break;
          }
          case 82: {
            ConferenceIntroduce = input.ReadString();
            break;
          }
          case 90: {
            CreatedOn = input.ReadString();
            break;
          }
          case 98: {
            CreatedBy = input.ReadString();
            break;
          }
          case 106: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 114: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 120: {
            Level = input.ReadInt32();
            break;
          }
          case 130: {
            TimeRange = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParentID : pb::IMessage<ParentID> {
    private static readonly pb::MessageParser<ParentID> _parser = new pb::MessageParser<ParentID>(() => new ParentID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParentID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentID(ParentID other) : this() {
      parentID_ = other.parentID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParentID Clone() {
      return new ParentID(this);
    }

    /// <summary>Field number for the "ParentID" field.</summary>
    public const int ParentID_FieldNumber = 1;
    private string parentID_ = "";
    /// <summary>
    ///父级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentID_ {
      get { return parentID_; }
      set {
        parentID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParentID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParentID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentID_ != other.ParentID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentID_.Length != 0) hash ^= ParentID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParentID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParentID other) {
      if (other == null) {
        return;
      }
      if (other.ParentID_.Length != 0) {
        ParentID_ = other.ParentID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParentID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceList : pb::IMessage<ConferenceList> {
    private static readonly pb::MessageParser<ConferenceList> _parser = new pb::MessageParser<ConferenceList>(() => new ConferenceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceList(ConferenceList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceList Clone() {
      return new ConferenceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ConferenceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ConferenceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ConferenceStruct>();
    /// <summary>
    ///会议集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ConferenceStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInfo : pb::IMessage<UpdateInfo> {
    private static readonly pb::MessageParser<UpdateInfo> _parser = new pb::MessageParser<UpdateInfo>(() => new UpdateInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo(UpdateInfo other) : this() {
      conferenceID_ = other.conferenceID_;
      stratDateTime_ = other.stratDateTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo Clone() {
      return new UpdateInfo(this);
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 1;
    private string conferenceID_ = "";
    /// <summary>
    ///会议主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StratDateTime" field.</summary>
    public const int StratDateTimeFieldNumber = 2;
    private string stratDateTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StratDateTime {
      get { return stratDateTime_; }
      set {
        stratDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceID != other.ConferenceID) return false;
      if (StratDateTime != other.StratDateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (StratDateTime.Length != 0) hash ^= StratDateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceID);
      }
      if (StratDateTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StratDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (StratDateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StratDateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInfo other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.StratDateTime.Length != 0) {
        StratDateTime = other.StratDateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceID = input.ReadString();
            break;
          }
          case 18: {
            StratDateTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllConferenceInfoList : pb::IMessage<AllConferenceInfoList> {
    private static readonly pb::MessageParser<AllConferenceInfoList> _parser = new pb::MessageParser<AllConferenceInfoList>(() => new AllConferenceInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllConferenceInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoList(AllConferenceInfoList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoList Clone() {
      return new AllConferenceInfoList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.AllConferenceInfoListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.AllConferenceInfoListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.AllConferenceInfoListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.AllConferenceInfoListStruct>();
    /// <summary>
    ///所有会议及嘉宾集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.AllConferenceInfoListStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllConferenceInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllConferenceInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllConferenceInfoList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllConferenceInfoListStruct : pb::IMessage<AllConferenceInfoListStruct> {
    private static readonly pb::MessageParser<AllConferenceInfoListStruct> _parser = new pb::MessageParser<AllConferenceInfoListStruct>(() => new AllConferenceInfoListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllConferenceInfoListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoListStruct(AllConferenceInfoListStruct other) : this() {
      ActivityandParticipant = other.activityandParticipant_ != null ? other.ActivityandParticipant.Clone() : null;
      talkandParticipant_ = other.talkandParticipant_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllConferenceInfoListStruct Clone() {
      return new AllConferenceInfoListStruct(this);
    }

    /// <summary>Field number for the "ActivityandParticipant" field.</summary>
    public const int ActivityandParticipantFieldNumber = 1;
    private global::GrpcConferenceService.ActivityandParticipant activityandParticipant_;
    /// <summary>
    ///活动与嘉宾
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.ActivityandParticipant ActivityandParticipant {
      get { return activityandParticipant_; }
      set {
        activityandParticipant_ = value;
      }
    }

    /// <summary>Field number for the "TalkandParticipant" field.</summary>
    public const int TalkandParticipantFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.TalkandParticipant> _repeated_talkandParticipant_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceService.TalkandParticipant.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.TalkandParticipant> talkandParticipant_ = new pbc::RepeatedField<global::GrpcConferenceService.TalkandParticipant>();
    /// <summary>
    ///板块与嘉宾集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.TalkandParticipant> TalkandParticipant {
      get { return talkandParticipant_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllConferenceInfoListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllConferenceInfoListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ActivityandParticipant, other.ActivityandParticipant)) return false;
      if(!talkandParticipant_.Equals(other.talkandParticipant_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (activityandParticipant_ != null) hash ^= ActivityandParticipant.GetHashCode();
      hash ^= talkandParticipant_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (activityandParticipant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ActivityandParticipant);
      }
      talkandParticipant_.WriteTo(output, _repeated_talkandParticipant_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (activityandParticipant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityandParticipant);
      }
      size += talkandParticipant_.CalculateSize(_repeated_talkandParticipant_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllConferenceInfoListStruct other) {
      if (other == null) {
        return;
      }
      if (other.activityandParticipant_ != null) {
        if (activityandParticipant_ == null) {
          activityandParticipant_ = new global::GrpcConferenceService.ActivityandParticipant();
        }
        ActivityandParticipant.MergeFrom(other.ActivityandParticipant);
      }
      talkandParticipant_.Add(other.talkandParticipant_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (activityandParticipant_ == null) {
              activityandParticipant_ = new global::GrpcConferenceService.ActivityandParticipant();
            }
            input.ReadMessage(activityandParticipant_);
            break;
          }
          case 18: {
            talkandParticipant_.AddEntriesFrom(input, _repeated_talkandParticipant_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityandParticipant : pb::IMessage<ActivityandParticipant> {
    private static readonly pb::MessageParser<ActivityandParticipant> _parser = new pb::MessageParser<ActivityandParticipant>(() => new ActivityandParticipant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityandParticipant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityandParticipant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityandParticipant(ActivityandParticipant other) : this() {
      activity_ = other.activity_.Clone();
      participantInfo_ = other.participantInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityandParticipant Clone() {
      return new ActivityandParticipant(this);
    }

    /// <summary>Field number for the "Activity" field.</summary>
    public const int ActivityFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ActivityStruct> _repeated_activity_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ActivityStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct> activity_ = new pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct>();
    /// <summary>
    ///活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct> Activity {
      get { return activity_; }
    }

    /// <summary>Field number for the "ParticipantInfo" field.</summary>
    public const int ParticipantInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantInfoStruct> _repeated_participantInfo_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceService.ParticipantInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> participantInfo_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct>();
    /// <summary>
    ///对应嘉宾信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> ParticipantInfo {
      get { return participantInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityandParticipant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityandParticipant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activity_.Equals(other.activity_)) return false;
      if(!participantInfo_.Equals(other.participantInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activity_.GetHashCode();
      hash ^= participantInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      activity_.WriteTo(output, _repeated_activity_codec);
      participantInfo_.WriteTo(output, _repeated_participantInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activity_.CalculateSize(_repeated_activity_codec);
      size += participantInfo_.CalculateSize(_repeated_participantInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityandParticipant other) {
      if (other == null) {
        return;
      }
      activity_.Add(other.activity_);
      participantInfo_.Add(other.participantInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activity_.AddEntriesFrom(input, _repeated_activity_codec);
            break;
          }
          case 18: {
            participantInfo_.AddEntriesFrom(input, _repeated_participantInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkandParticipant : pb::IMessage<TalkandParticipant> {
    private static readonly pb::MessageParser<TalkandParticipant> _parser = new pb::MessageParser<TalkandParticipant>(() => new TalkandParticipant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkandParticipant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkandParticipant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkandParticipant(TalkandParticipant other) : this() {
      Talk = other.talk_ != null ? other.Talk.Clone() : null;
      participantInfo_ = other.participantInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkandParticipant Clone() {
      return new TalkandParticipant(this);
    }

    /// <summary>Field number for the "Talk" field.</summary>
    public const int TalkFieldNumber = 1;
    private global::GrpcConferenceService.TalkStruct talk_;
    /// <summary>
    ///板块
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.TalkStruct Talk {
      get { return talk_; }
      set {
        talk_ = value;
      }
    }

    /// <summary>Field number for the "ParticipantInfo" field.</summary>
    public const int ParticipantInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantInfoStruct> _repeated_participantInfo_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceService.ParticipantInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> participantInfo_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct>();
    /// <summary>
    ///对应嘉宾信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> ParticipantInfo {
      get { return participantInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkandParticipant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkandParticipant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Talk, other.Talk)) return false;
      if(!participantInfo_.Equals(other.participantInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (talk_ != null) hash ^= Talk.GetHashCode();
      hash ^= participantInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (talk_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Talk);
      }
      participantInfo_.WriteTo(output, _repeated_participantInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (talk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Talk);
      }
      size += participantInfo_.CalculateSize(_repeated_participantInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkandParticipant other) {
      if (other == null) {
        return;
      }
      if (other.talk_ != null) {
        if (talk_ == null) {
          talk_ = new global::GrpcConferenceService.TalkStruct();
        }
        Talk.MergeFrom(other.Talk);
      }
      participantInfo_.Add(other.participantInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (talk_ == null) {
              talk_ = new global::GrpcConferenceService.TalkStruct();
            }
            input.ReadMessage(talk_);
            break;
          }
          case 18: {
            participantInfo_.AddEntriesFrom(input, _repeated_participantInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LunchNames : pb::IMessage<LunchNames> {
    private static readonly pb::MessageParser<LunchNames> _parser = new pb::MessageParser<LunchNames>(() => new LunchNames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LunchNames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LunchNames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LunchNames(LunchNames other) : this() {
      lunchNames_ = other.lunchNames_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LunchNames Clone() {
      return new LunchNames(this);
    }

    /// <summary>Field number for the "LunchNames" field.</summary>
    public const int LunchNames_FieldNumber = 1;
    private string lunchNames_ = "";
    /// <summary>
    ///午餐名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LunchNames_ {
      get { return lunchNames_; }
      set {
        lunchNames_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LunchNames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LunchNames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LunchNames_ != other.LunchNames_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LunchNames_.Length != 0) hash ^= LunchNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LunchNames_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LunchNames_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LunchNames_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LunchNames_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LunchNames other) {
      if (other == null) {
        return;
      }
      if (other.LunchNames_.Length != 0) {
        LunchNames_ = other.LunchNames_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LunchNames_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearInfo : pb::IMessage<YearInfo> {
    private static readonly pb::MessageParser<YearInfo> _parser = new pb::MessageParser<YearInfo>(() => new YearInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearInfo(YearInfo other) : this() {
      oldYear_ = other.oldYear_;
      newYear_ = other.newYear_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearInfo Clone() {
      return new YearInfo(this);
    }

    /// <summary>Field number for the "oldYear" field.</summary>
    public const int OldYearFieldNumber = 1;
    private string oldYear_ = "";
    /// <summary>
    ///旧年分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OldYear {
      get { return oldYear_; }
      set {
        oldYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NewYear" field.</summary>
    public const int NewYearFieldNumber = 2;
    private string newYear_ = "";
    /// <summary>
    ///新年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewYear {
      get { return newYear_; }
      set {
        newYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldYear != other.OldYear) return false;
      if (NewYear != other.NewYear) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OldYear.Length != 0) hash ^= OldYear.GetHashCode();
      if (NewYear.Length != 0) hash ^= NewYear.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OldYear.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OldYear);
      }
      if (NewYear.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewYear);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OldYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldYear);
      }
      if (NewYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewYear);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearInfo other) {
      if (other == null) {
        return;
      }
      if (other.OldYear.Length != 0) {
        OldYear = other.OldYear;
      }
      if (other.NewYear.Length != 0) {
        NewYear = other.NewYear;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OldYear = input.ReadString();
            break;
          }
          case 18: {
            NewYear = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearList : pb::IMessage<YearList> {
    private static readonly pb::MessageParser<YearList> _parser = new pb::MessageParser<YearList>(() => new YearList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearList(YearList other) : this() {
      yearList_ = other.yearList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearList Clone() {
      return new YearList(this);
    }

    /// <summary>Field number for the "YearList" field.</summary>
    public const int YearList_FieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_yearList_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> yearList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///年份集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> YearList_ {
      get { return yearList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!yearList_.Equals(other.yearList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= yearList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      yearList_.WriteTo(output, _repeated_yearList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += yearList_.CalculateSize(_repeated_yearList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearList other) {
      if (other == null) {
        return;
      }
      yearList_.Add(other.yearList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            yearList_.AddEntriesFrom(input, _repeated_yearList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityList : pb::IMessage<ActivityList> {
    private static readonly pb::MessageParser<ActivityList> _parser = new pb::MessageParser<ActivityList>(() => new ActivityList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityList(ActivityList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityList Clone() {
      return new ActivityList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ActivityStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ActivityStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct>();
    /// <summary>
    ///活动集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ActivityStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityID : pb::IMessage<ActivityID> {
    private static readonly pb::MessageParser<ActivityID> _parser = new pb::MessageParser<ActivityID>(() => new ActivityID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityID(ActivityID other) : this() {
      activityID_ = other.activityID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityID Clone() {
      return new ActivityID(this);
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityID_FieldNumber = 1;
    private string activityID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID_ {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityID_ != other.ActivityID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityID_.Length != 0) hash ^= ActivityID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityID other) {
      if (other == null) {
        return;
      }
      if (other.ActivityID_.Length != 0) {
        ActivityID_ = other.ActivityID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityStruct : pb::IMessage<ActivityStruct> {
    private static readonly pb::MessageParser<ActivityStruct> _parser = new pb::MessageParser<ActivityStruct>(() => new ActivityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct(ActivityStruct other) : this() {
      activityID_ = other.activityID_;
      conferenceID_ = other.conferenceID_;
      activityTypeID_ = other.activityTypeID_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startDate_ = other.startDate_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct Clone() {
      return new ActivityStruct(this);
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 1;
    private string activityID_ = "";
    /// <summary>
    ///活动主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityTypeID" field.</summary>
    public const int ActivityTypeIDFieldNumber = 3;
    private string activityTypeID_ = "";
    /// <summary>
    ///活动类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTypeID {
      get { return activityTypeID_; }
      set {
        activityTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 4;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 6;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 7;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 10;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 11;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 12;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 13;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityID != other.ActivityID) return false;
      if (ConferenceID != other.ConferenceID) return false;
      if (ActivityTypeID != other.ActivityTypeID) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartDate != other.StartDate) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (ActivityTypeID.Length != 0) hash ^= ActivityTypeID.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityID);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (ActivityTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartDate);
      }
      if (translation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModifiedBy);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (ActivityTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.ActivityTypeID.Length != 0) {
        ActivityTypeID = other.ActivityTypeID;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityID = input.ReadString();
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
          case 26: {
            ActivityTypeID = input.ReadString();
            break;
          }
          case 34: {
            TimeLength = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            StartDate = input.ReadString();
            break;
          }
          case 58: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 90: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 98: {
            StartTime = input.ReadString();
            break;
          }
          case 106: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityIDs : pb::IMessage<ActivityIDs> {
    private static readonly pb::MessageParser<ActivityIDs> _parser = new pb::MessageParser<ActivityIDs>(() => new ActivityIDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityIDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityIDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityIDs(ActivityIDs other) : this() {
      activityIDs_ = other.activityIDs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityIDs Clone() {
      return new ActivityIDs(this);
    }

    /// <summary>Field number for the "ActivityIDs" field.</summary>
    public const int ActivityIDs_FieldNumber = 1;
    private string activityIDs_ = "";
    /// <summary>
    ///  id集合，格式"id1,id2,id3"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityIDs_ {
      get { return activityIDs_; }
      set {
        activityIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityIDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityIDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityIDs_ != other.ActivityIDs_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityIDs_.Length != 0) hash ^= ActivityIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityIDs_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityIDs_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityIDs_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityIDs_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityIDs other) {
      if (other == null) {
        return;
      }
      if (other.ActivityIDs_.Length != 0) {
        ActivityIDs_ = other.ActivityIDs_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityIDs_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityDraftInfo : pb::IMessage<ActivityDraftInfo> {
    private static readonly pb::MessageParser<ActivityDraftInfo> _parser = new pb::MessageParser<ActivityDraftInfo>(() => new ActivityDraftInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityDraftInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftInfo(ActivityDraftInfo other) : this() {
      ActivityDraftStruct = other.activityDraftStruct_ != null ? other.ActivityDraftStruct.Clone() : null;
      conferenceID_ = other.conferenceID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftInfo Clone() {
      return new ActivityDraftInfo(this);
    }

    /// <summary>Field number for the "ActivityDraftStruct" field.</summary>
    public const int ActivityDraftStructFieldNumber = 1;
    private global::GrpcConferenceService.ActivityDraftStruct activityDraftStruct_;
    /// <summary>
    ///活动草稿
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.ActivityDraftStruct ActivityDraftStruct {
      get { return activityDraftStruct_; }
      set {
        activityDraftStruct_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityDraftInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityDraftInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ActivityDraftStruct, other.ActivityDraftStruct)) return false;
      if (ConferenceID != other.ConferenceID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (activityDraftStruct_ != null) hash ^= ActivityDraftStruct.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (activityDraftStruct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ActivityDraftStruct);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (activityDraftStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityDraftStruct);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityDraftInfo other) {
      if (other == null) {
        return;
      }
      if (other.activityDraftStruct_ != null) {
        if (activityDraftStruct_ == null) {
          activityDraftStruct_ = new global::GrpcConferenceService.ActivityDraftStruct();
        }
        ActivityDraftStruct.MergeFrom(other.ActivityDraftStruct);
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (activityDraftStruct_ == null) {
              activityDraftStruct_ = new global::GrpcConferenceService.ActivityDraftStruct();
            }
            input.ReadMessage(activityDraftStruct_);
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityDraftList : pb::IMessage<ActivityDraftList> {
    private static readonly pb::MessageParser<ActivityDraftList> _parser = new pb::MessageParser<ActivityDraftList>(() => new ActivityDraftList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityDraftList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftList(ActivityDraftList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftList Clone() {
      return new ActivityDraftList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ActivityDraftStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ActivityDraftStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ActivityDraftStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ActivityDraftStruct>();
    /// <summary>
    ///活动草稿集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ActivityDraftStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityDraftList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityDraftList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityDraftList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityDraftID : pb::IMessage<ActivityDraftID> {
    private static readonly pb::MessageParser<ActivityDraftID> _parser = new pb::MessageParser<ActivityDraftID>(() => new ActivityDraftID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityDraftID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftID(ActivityDraftID other) : this() {
      activityDraftID_ = other.activityDraftID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftID Clone() {
      return new ActivityDraftID(this);
    }

    /// <summary>Field number for the "ActivityDraftID" field.</summary>
    public const int ActivityDraftID_FieldNumber = 1;
    private string activityDraftID_ = "";
    /// <summary>
    ///活动草稿id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityDraftID_ {
      get { return activityDraftID_; }
      set {
        activityDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityDraftID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityDraftID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityDraftID_ != other.ActivityDraftID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityDraftID_.Length != 0) hash ^= ActivityDraftID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityDraftID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityDraftID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityDraftID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityDraftID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityDraftID other) {
      if (other == null) {
        return;
      }
      if (other.ActivityDraftID_.Length != 0) {
        ActivityDraftID_ = other.ActivityDraftID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityDraftID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityDraftStruct : pb::IMessage<ActivityDraftStruct> {
    private static readonly pb::MessageParser<ActivityDraftStruct> _parser = new pb::MessageParser<ActivityDraftStruct>(() => new ActivityDraftStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityDraftStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftStruct(ActivityDraftStruct other) : this() {
      activityDraftID_ = other.activityDraftID_;
      activityTypeID_ = other.activityTypeID_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startDate_ = other.startDate_;
      translation_ = other.translation_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      activityID_ = other.activityID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityDraftStruct Clone() {
      return new ActivityDraftStruct(this);
    }

    /// <summary>Field number for the "ActivityDraftID" field.</summary>
    public const int ActivityDraftIDFieldNumber = 1;
    private string activityDraftID_ = "";
    /// <summary>
    ///活动草稿id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityDraftID {
      get { return activityDraftID_; }
      set {
        activityDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityTypeID" field.</summary>
    public const int ActivityTypeIDFieldNumber = 3;
    private string activityTypeID_ = "";
    /// <summary>
    ///活动类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTypeID {
      get { return activityTypeID_; }
      set {
        activityTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 4;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 6;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 7;
    private string translation_ = "";
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Translation {
      get { return translation_; }
      set {
        translation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 8;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 9;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 10;
    private string activityID_ = "";
    /// <summary>
    ///正式活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityDraftStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityDraftStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityDraftID != other.ActivityDraftID) return false;
      if (ActivityTypeID != other.ActivityTypeID) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartDate != other.StartDate) return false;
      if (Translation != other.Translation) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (ActivityID != other.ActivityID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityDraftID.Length != 0) hash ^= ActivityDraftID.GetHashCode();
      if (ActivityTypeID.Length != 0) hash ^= ActivityTypeID.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (Translation.Length != 0) hash ^= Translation.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityDraftID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityDraftID);
      }
      if (ActivityTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartDate);
      }
      if (Translation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Translation);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EndTime);
      }
      if (ActivityID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ActivityID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityDraftID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityDraftID);
      }
      if (ActivityTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (Translation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Translation);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityDraftStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityDraftID.Length != 0) {
        ActivityDraftID = other.ActivityDraftID;
      }
      if (other.ActivityTypeID.Length != 0) {
        ActivityTypeID = other.ActivityTypeID;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.Translation.Length != 0) {
        Translation = other.Translation;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityDraftID = input.ReadString();
            break;
          }
          case 26: {
            ActivityTypeID = input.ReadString();
            break;
          }
          case 34: {
            TimeLength = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            StartDate = input.ReadString();
            break;
          }
          case 58: {
            Translation = input.ReadString();
            break;
          }
          case 66: {
            StartTime = input.ReadString();
            break;
          }
          case 74: {
            EndTime = input.ReadString();
            break;
          }
          case 82: {
            ActivityID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityTypeList : pb::IMessage<ActivityTypeList> {
    private static readonly pb::MessageParser<ActivityTypeList> _parser = new pb::MessageParser<ActivityTypeList>(() => new ActivityTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeList(ActivityTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeList Clone() {
      return new ActivityTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ActivityTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ActivityTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ActivityTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ActivityTypeStruct>();
    /// <summary>
    ///活动类型集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ActivityTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityTypeStruct : pb::IMessage<ActivityTypeStruct> {
    private static readonly pb::MessageParser<ActivityTypeStruct> _parser = new pb::MessageParser<ActivityTypeStruct>(() => new ActivityTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeStruct(ActivityTypeStruct other) : this() {
      activityTypeID_ = other.activityTypeID_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      activityCode_ = other.activityCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeStruct Clone() {
      return new ActivityTypeStruct(this);
    }

    /// <summary>Field number for the "ActivityTypeID" field.</summary>
    public const int ActivityTypeIDFieldNumber = 1;
    private string activityTypeID_ = "";
    /// <summary>
    ///活动类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTypeID {
      get { return activityTypeID_; }
      set {
        activityTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///活动类型名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 3;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 4;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 5;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 6;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityCode" field.</summary>
    public const int ActivityCodeFieldNumber = 7;
    private string activityCode_ = "";
    /// <summary>
    ///活动类型code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityCode {
      get { return activityCode_; }
      set {
        activityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityTypeID != other.ActivityTypeID) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ActivityCode != other.ActivityCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityTypeID.Length != 0) hash ^= ActivityTypeID.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ActivityCode.Length != 0) hash ^= ActivityCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityTypeID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityTypeID);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedBy);
      }
      if (ActivityCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActivityCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTypeID);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ActivityCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityTypeID.Length != 0) {
        ActivityTypeID = other.ActivityTypeID;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ActivityCode.Length != 0) {
        ActivityCode = other.ActivityCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityTypeID = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            CreatedOn = input.ReadString();
            break;
          }
          case 34: {
            CreatedBy = input.ReadString();
            break;
          }
          case 42: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 50: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 58: {
            ActivityCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityTypeID : pb::IMessage<ActivityTypeID> {
    private static readonly pb::MessageParser<ActivityTypeID> _parser = new pb::MessageParser<ActivityTypeID>(() => new ActivityTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeID(ActivityTypeID other) : this() {
      activityTypeID_ = other.activityTypeID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityTypeID Clone() {
      return new ActivityTypeID(this);
    }

    /// <summary>Field number for the "ActivityTypeID" field.</summary>
    public const int ActivityTypeID_FieldNumber = 1;
    private string activityTypeID_ = "";
    /// <summary>
    ///活动类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTypeID_ {
      get { return activityTypeID_; }
      set {
        activityTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityTypeID_ != other.ActivityTypeID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityTypeID_.Length != 0) hash ^= ActivityTypeID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityTypeID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityTypeID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityTypeID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTypeID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityTypeID other) {
      if (other == null) {
        return;
      }
      if (other.ActivityTypeID_.Length != 0) {
        ActivityTypeID_ = other.ActivityTypeID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityTypeID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityCode : pb::IMessage<ActivityCode> {
    private static readonly pb::MessageParser<ActivityCode> _parser = new pb::MessageParser<ActivityCode>(() => new ActivityCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCode(ActivityCode other) : this() {
      activityCode_ = other.activityCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityCode Clone() {
      return new ActivityCode(this);
    }

    /// <summary>Field number for the "ActivityCode" field.</summary>
    public const int ActivityCode_FieldNumber = 1;
    private string activityCode_ = "";
    /// <summary>
    ///活动类型code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityCode_ {
      get { return activityCode_; }
      set {
        activityCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityCode_ != other.ActivityCode_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityCode_.Length != 0) hash ^= ActivityCode_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityCode_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityCode_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityCode_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityCode_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityCode other) {
      if (other == null) {
        return;
      }
      if (other.ActivityCode_.Length != 0) {
        ActivityCode_ = other.ActivityCode_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityCode_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkList : pb::IMessage<TalkList> {
    private static readonly pb::MessageParser<TalkList> _parser = new pb::MessageParser<TalkList>(() => new TalkList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkList(TalkList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkList Clone() {
      return new TalkList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.TalkStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.TalkStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.TalkStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.TalkStruct>();
    /// <summary>
    ///板块集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.TalkStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkStruct : pb::IMessage<TalkStruct> {
    private static readonly pb::MessageParser<TalkStruct> _parser = new pb::MessageParser<TalkStruct>(() => new TalkStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkStruct(TalkStruct other) : this() {
      talkID_ = other.talkID_;
      activityID_ = other.activityID_;
      talkTypeID_ = other.talkTypeID_;
      cFTopicPK_ = other.cFTopicPK_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      startDate_ = other.startDate_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      cFTopicName_ = other.cFTopicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkStruct Clone() {
      return new TalkStruct(this);
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 1;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 2;
    private string activityID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkTypeID" field.</summary>
    public const int TalkTypeIDFieldNumber = 3;
    private string talkTypeID_ = "";
    /// <summary>
    ///板块类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTypeID {
      get { return talkTypeID_; }
      set {
        talkTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicPK" field.</summary>
    public const int CFTopicPKFieldNumber = 4;
    private string cFTopicPK_ = "";
    /// <summary>
    ///议题id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicPK {
      get { return cFTopicPK_; }
      set {
        cFTopicPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 6;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///板块名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 9;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 11;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 12;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 13;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 14;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 15;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicName" field.</summary>
    public const int CFTopicNameFieldNumber = 16;
    private string cFTopicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicName {
      get { return cFTopicName_; }
      set {
        cFTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkID != other.TalkID) return false;
      if (ActivityID != other.ActivityID) return false;
      if (TalkTypeID != other.TalkTypeID) return false;
      if (CFTopicPK != other.CFTopicPK) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (StartDate != other.StartDate) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (CFTopicName != other.CFTopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (TalkTypeID.Length != 0) hash ^= TalkTypeID.GetHashCode();
      if (CFTopicPK.Length != 0) hash ^= CFTopicPK.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (CFTopicName.Length != 0) hash ^= CFTopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkID);
      }
      if (ActivityID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityID);
      }
      if (TalkTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CFTopicPK);
      }
      if (translation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StartDate);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Sort);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(EndTime);
      }
      if (CFTopicName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CFTopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (TalkTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicPK);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (CFTopicName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CFTopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      if (other.TalkTypeID.Length != 0) {
        TalkTypeID = other.TalkTypeID;
      }
      if (other.CFTopicPK.Length != 0) {
        CFTopicPK = other.CFTopicPK;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.CFTopicName.Length != 0) {
        CFTopicName = other.CFTopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkID = input.ReadString();
            break;
          }
          case 18: {
            ActivityID = input.ReadString();
            break;
          }
          case 26: {
            TalkTypeID = input.ReadString();
            break;
          }
          case 34: {
            CFTopicPK = input.ReadString();
            break;
          }
          case 50: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            StartDate = input.ReadString();
            break;
          }
          case 98: {
            TimeLength = input.ReadString();
            break;
          }
          case 104: {
            Sort = input.ReadInt32();
            break;
          }
          case 114: {
            StartTime = input.ReadString();
            break;
          }
          case 122: {
            EndTime = input.ReadString();
            break;
          }
          case 130: {
            CFTopicName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkID : pb::IMessage<TalkID> {
    private static readonly pb::MessageParser<TalkID> _parser = new pb::MessageParser<TalkID>(() => new TalkID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkID(TalkID other) : this() {
      talkID_ = other.talkID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkID Clone() {
      return new TalkID(this);
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkID_FieldNumber = 1;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID_ {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkID_ != other.TalkID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkID_.Length != 0) hash ^= TalkID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkID other) {
      if (other == null) {
        return;
      }
      if (other.TalkID_.Length != 0) {
        TalkID_ = other.TalkID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkIDs : pb::IMessage<TalkIDs> {
    private static readonly pb::MessageParser<TalkIDs> _parser = new pb::MessageParser<TalkIDs>(() => new TalkIDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkIDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkIDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkIDs(TalkIDs other) : this() {
      talkIDs_ = other.talkIDs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkIDs Clone() {
      return new TalkIDs(this);
    }

    /// <summary>Field number for the "TalkIDs" field.</summary>
    public const int TalkIDs_FieldNumber = 1;
    private string talkIDs_ = "";
    /// <summary>
    ///id集合，格式"id1,id2,id3"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkIDs_ {
      get { return talkIDs_; }
      set {
        talkIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkIDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkIDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkIDs_ != other.TalkIDs_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkIDs_.Length != 0) hash ^= TalkIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkIDs_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkIDs_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkIDs_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkIDs_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkIDs other) {
      if (other == null) {
        return;
      }
      if (other.TalkIDs_.Length != 0) {
        TalkIDs_ = other.TalkIDs_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkIDs_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTalkInfo : pb::IMessage<UpdateTalkInfo> {
    private static readonly pb::MessageParser<UpdateTalkInfo> _parser = new pb::MessageParser<UpdateTalkInfo>(() => new UpdateTalkInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTalkInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTalkInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTalkInfo(UpdateTalkInfo other) : this() {
      talkID_ = other.talkID_;
      topicName_ = other.topicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTalkInfo Clone() {
      return new UpdateTalkInfo(this);
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 1;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TopicName" field.</summary>
    public const int TopicNameFieldNumber = 2;
    private string topicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTalkInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTalkInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkID != other.TalkID) return false;
      if (TopicName != other.TopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkID);
      }
      if (TopicName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTalkInfo other) {
      if (other == null) {
        return;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkID = input.ReadString();
            break;
          }
          case 18: {
            TopicName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IsUse : pb::IMessage<IsUse> {
    private static readonly pb::MessageParser<IsUse> _parser = new pb::MessageParser<IsUse>(() => new IsUse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IsUse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsUse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsUse(IsUse other) : this() {
      isUse_ = other.isUse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IsUse Clone() {
      return new IsUse(this);
    }

    /// <summary>Field number for the "IsUse" field.</summary>
    public const int IsUse_FieldNumber = 1;
    private bool isUse_;
    /// <summary>
    ///是否使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUse_ {
      get { return isUse_; }
      set {
        isUse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IsUse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IsUse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsUse_ != other.IsUse_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsUse_ != false) hash ^= IsUse_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsUse_ != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsUse_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsUse_ != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IsUse other) {
      if (other == null) {
        return;
      }
      if (other.IsUse_ != false) {
        IsUse_ = other.IsUse_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsUse_ = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkDraftInfo : pb::IMessage<TalkDraftInfo> {
    private static readonly pb::MessageParser<TalkDraftInfo> _parser = new pb::MessageParser<TalkDraftInfo>(() => new TalkDraftInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkDraftInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftInfo(TalkDraftInfo other) : this() {
      TalkDraftStruct = other.talkDraftStruct_ != null ? other.TalkDraftStruct.Clone() : null;
      activityID_ = other.activityID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftInfo Clone() {
      return new TalkDraftInfo(this);
    }

    /// <summary>Field number for the "TalkDraftStruct" field.</summary>
    public const int TalkDraftStructFieldNumber = 1;
    private global::GrpcConferenceService.TalkDraftStruct talkDraftStruct_;
    /// <summary>
    ///板块草稿
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.TalkDraftStruct TalkDraftStruct {
      get { return talkDraftStruct_; }
      set {
        talkDraftStruct_ = value;
      }
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 2;
    private string activityID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkDraftInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkDraftInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TalkDraftStruct, other.TalkDraftStruct)) return false;
      if (ActivityID != other.ActivityID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (talkDraftStruct_ != null) hash ^= TalkDraftStruct.GetHashCode();
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (talkDraftStruct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TalkDraftStruct);
      }
      if (ActivityID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (talkDraftStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TalkDraftStruct);
      }
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkDraftInfo other) {
      if (other == null) {
        return;
      }
      if (other.talkDraftStruct_ != null) {
        if (talkDraftStruct_ == null) {
          talkDraftStruct_ = new global::GrpcConferenceService.TalkDraftStruct();
        }
        TalkDraftStruct.MergeFrom(other.TalkDraftStruct);
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (talkDraftStruct_ == null) {
              talkDraftStruct_ = new global::GrpcConferenceService.TalkDraftStruct();
            }
            input.ReadMessage(talkDraftStruct_);
            break;
          }
          case 18: {
            ActivityID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Info : pb::IMessage<Info> {
    private static readonly pb::MessageParser<Info> _parser = new pb::MessageParser<Info>(() => new Info());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info(Info other) : this() {
      cFTopicID_ = other.cFTopicID_;
      talkID_ = other.talkID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info Clone() {
      return new Info(this);
    }

    /// <summary>Field number for the "CFTopicID" field.</summary>
    public const int CFTopicIDFieldNumber = 1;
    private string cFTopicID_ = "";
    /// <summary>
    ///议题id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicID {
      get { return cFTopicID_; }
      set {
        cFTopicID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 2;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFTopicID != other.CFTopicID) return false;
      if (TalkID != other.TalkID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFTopicID.Length != 0) hash ^= CFTopicID.GetHashCode();
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFTopicID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFTopicID);
      }
      if (TalkID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TalkID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFTopicID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicID);
      }
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Info other) {
      if (other == null) {
        return;
      }
      if (other.CFTopicID.Length != 0) {
        CFTopicID = other.CFTopicID;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFTopicID = input.ReadString();
            break;
          }
          case 18: {
            TalkID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkDraftList : pb::IMessage<TalkDraftList> {
    private static readonly pb::MessageParser<TalkDraftList> _parser = new pb::MessageParser<TalkDraftList>(() => new TalkDraftList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkDraftList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftList(TalkDraftList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftList Clone() {
      return new TalkDraftList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.TalkDraftStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.TalkDraftStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.TalkDraftStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.TalkDraftStruct>();
    /// <summary>
    ///板块草稿
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.TalkDraftStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkDraftList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkDraftList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkDraftList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkDraftStruct : pb::IMessage<TalkDraftStruct> {
    private static readonly pb::MessageParser<TalkDraftStruct> _parser = new pb::MessageParser<TalkDraftStruct>(() => new TalkDraftStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkDraftStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftStruct(TalkDraftStruct other) : this() {
      talkDraftID_ = other.talkDraftID_;
      activityDraftID_ = other.activityDraftID_;
      talkTypeID_ = other.talkTypeID_;
      cFTopicPK_ = other.cFTopicPK_;
      translation_ = other.translation_;
      startDate_ = other.startDate_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      cFTopicName_ = other.cFTopicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftStruct Clone() {
      return new TalkDraftStruct(this);
    }

    /// <summary>Field number for the "TalkDraftID" field.</summary>
    public const int TalkDraftIDFieldNumber = 1;
    private string talkDraftID_ = "";
    /// <summary>
    ///板块草稿id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkDraftID {
      get { return talkDraftID_; }
      set {
        talkDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityDraftID" field.</summary>
    public const int ActivityDraftIDFieldNumber = 2;
    private string activityDraftID_ = "";
    /// <summary>
    ///活动草稿id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityDraftID {
      get { return activityDraftID_; }
      set {
        activityDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkTypeID" field.</summary>
    public const int TalkTypeIDFieldNumber = 3;
    private string talkTypeID_ = "";
    /// <summary>
    ///板块类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTypeID {
      get { return talkTypeID_; }
      set {
        talkTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicPK" field.</summary>
    public const int CFTopicPKFieldNumber = 4;
    private string cFTopicPK_ = "";
    /// <summary>
    ///议题id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicPK {
      get { return cFTopicPK_; }
      set {
        cFTopicPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 6;
    private string translation_ = "";
    /// <summary>
    ///板块名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Translation {
      get { return translation_; }
      set {
        translation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 7;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 8;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 9;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 11;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicName" field.</summary>
    public const int CFTopicNameFieldNumber = 12;
    private string cFTopicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicName {
      get { return cFTopicName_; }
      set {
        cFTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkDraftStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkDraftStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkDraftID != other.TalkDraftID) return false;
      if (ActivityDraftID != other.ActivityDraftID) return false;
      if (TalkTypeID != other.TalkTypeID) return false;
      if (CFTopicPK != other.CFTopicPK) return false;
      if (Translation != other.Translation) return false;
      if (StartDate != other.StartDate) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (CFTopicName != other.CFTopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkDraftID.Length != 0) hash ^= TalkDraftID.GetHashCode();
      if (ActivityDraftID.Length != 0) hash ^= ActivityDraftID.GetHashCode();
      if (TalkTypeID.Length != 0) hash ^= TalkTypeID.GetHashCode();
      if (CFTopicPK.Length != 0) hash ^= CFTopicPK.GetHashCode();
      if (Translation.Length != 0) hash ^= Translation.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (CFTopicName.Length != 0) hash ^= CFTopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkDraftID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkDraftID);
      }
      if (ActivityDraftID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityDraftID);
      }
      if (TalkTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CFTopicPK);
      }
      if (Translation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Translation);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StartDate);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Sort);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EndTime);
      }
      if (CFTopicName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CFTopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkDraftID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkDraftID);
      }
      if (ActivityDraftID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityDraftID);
      }
      if (TalkTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicPK);
      }
      if (Translation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Translation);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (CFTopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkDraftStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkDraftID.Length != 0) {
        TalkDraftID = other.TalkDraftID;
      }
      if (other.ActivityDraftID.Length != 0) {
        ActivityDraftID = other.ActivityDraftID;
      }
      if (other.TalkTypeID.Length != 0) {
        TalkTypeID = other.TalkTypeID;
      }
      if (other.CFTopicPK.Length != 0) {
        CFTopicPK = other.CFTopicPK;
      }
      if (other.Translation.Length != 0) {
        Translation = other.Translation;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.CFTopicName.Length != 0) {
        CFTopicName = other.CFTopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkDraftID = input.ReadString();
            break;
          }
          case 18: {
            ActivityDraftID = input.ReadString();
            break;
          }
          case 26: {
            TalkTypeID = input.ReadString();
            break;
          }
          case 34: {
            CFTopicPK = input.ReadString();
            break;
          }
          case 50: {
            Translation = input.ReadString();
            break;
          }
          case 58: {
            StartDate = input.ReadString();
            break;
          }
          case 66: {
            TimeLength = input.ReadString();
            break;
          }
          case 72: {
            Sort = input.ReadInt32();
            break;
          }
          case 82: {
            StartTime = input.ReadString();
            break;
          }
          case 90: {
            EndTime = input.ReadString();
            break;
          }
          case 98: {
            CFTopicName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkDraftID : pb::IMessage<TalkDraftID> {
    private static readonly pb::MessageParser<TalkDraftID> _parser = new pb::MessageParser<TalkDraftID>(() => new TalkDraftID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkDraftID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftID(TalkDraftID other) : this() {
      talkDraftID_ = other.talkDraftID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkDraftID Clone() {
      return new TalkDraftID(this);
    }

    /// <summary>Field number for the "TalkDraftID" field.</summary>
    public const int TalkDraftID_FieldNumber = 1;
    private string talkDraftID_ = "";
    /// <summary>
    ///板块草稿id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkDraftID_ {
      get { return talkDraftID_; }
      set {
        talkDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkDraftID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkDraftID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkDraftID_ != other.TalkDraftID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkDraftID_.Length != 0) hash ^= TalkDraftID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkDraftID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkDraftID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkDraftID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkDraftID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkDraftID other) {
      if (other == null) {
        return;
      }
      if (other.TalkDraftID_.Length != 0) {
        TalkDraftID_ = other.TalkDraftID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkDraftID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MoveInfo : pb::IMessage<MoveInfo> {
    private static readonly pb::MessageParser<MoveInfo> _parser = new pb::MessageParser<MoveInfo>(() => new MoveInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveInfo(MoveInfo other) : this() {
      TalkStruct = other.talkStruct_ != null ? other.TalkStruct.Clone() : null;
      activityDraftID_ = other.activityDraftID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveInfo Clone() {
      return new MoveInfo(this);
    }

    /// <summary>Field number for the "TalkStruct" field.</summary>
    public const int TalkStructFieldNumber = 1;
    private global::GrpcConferenceService.TalkStruct talkStruct_;
    /// <summary>
    ///板块
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.TalkStruct TalkStruct {
      get { return talkStruct_; }
      set {
        talkStruct_ = value;
      }
    }

    /// <summary>Field number for the "ActivityDraftID" field.</summary>
    public const int ActivityDraftIDFieldNumber = 2;
    private string activityDraftID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityDraftID {
      get { return activityDraftID_; }
      set {
        activityDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TalkStruct, other.TalkStruct)) return false;
      if (ActivityDraftID != other.ActivityDraftID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (talkStruct_ != null) hash ^= TalkStruct.GetHashCode();
      if (ActivityDraftID.Length != 0) hash ^= ActivityDraftID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (talkStruct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TalkStruct);
      }
      if (ActivityDraftID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityDraftID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (talkStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TalkStruct);
      }
      if (ActivityDraftID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityDraftID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveInfo other) {
      if (other == null) {
        return;
      }
      if (other.talkStruct_ != null) {
        if (talkStruct_ == null) {
          talkStruct_ = new global::GrpcConferenceService.TalkStruct();
        }
        TalkStruct.MergeFrom(other.TalkStruct);
      }
      if (other.ActivityDraftID.Length != 0) {
        ActivityDraftID = other.ActivityDraftID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (talkStruct_ == null) {
              talkStruct_ = new global::GrpcConferenceService.TalkStruct();
            }
            input.ReadMessage(talkStruct_);
            break;
          }
          case 18: {
            ActivityDraftID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkTypeList : pb::IMessage<TalkTypeList> {
    private static readonly pb::MessageParser<TalkTypeList> _parser = new pb::MessageParser<TalkTypeList>(() => new TalkTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeList(TalkTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeList Clone() {
      return new TalkTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.TalkTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.TalkTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.TalkTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.TalkTypeStruct>();
    /// <summary>
    ///板块类型集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.TalkTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkTypeStruct : pb::IMessage<TalkTypeStruct> {
    private static readonly pb::MessageParser<TalkTypeStruct> _parser = new pb::MessageParser<TalkTypeStruct>(() => new TalkTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeStruct(TalkTypeStruct other) : this() {
      talkTypeID_ = other.talkTypeID_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeStruct Clone() {
      return new TalkTypeStruct(this);
    }

    /// <summary>Field number for the "TalkTypeID" field.</summary>
    public const int TalkTypeIDFieldNumber = 1;
    private string talkTypeID_ = "";
    /// <summary>
    ///板块类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTypeID {
      get { return talkTypeID_; }
      set {
        talkTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///板块类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 3;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 4;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 5;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 6;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkTypeID != other.TalkTypeID) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkTypeID.Length != 0) hash ^= TalkTypeID.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkTypeID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkTypeID);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTypeID);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkTypeID.Length != 0) {
        TalkTypeID = other.TalkTypeID;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkTypeID = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            CreatedOn = input.ReadString();
            break;
          }
          case 34: {
            CreatedBy = input.ReadString();
            break;
          }
          case 42: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 50: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkTypeID : pb::IMessage<TalkTypeID> {
    private static readonly pb::MessageParser<TalkTypeID> _parser = new pb::MessageParser<TalkTypeID>(() => new TalkTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeID(TalkTypeID other) : this() {
      talkTypeID_ = other.talkTypeID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkTypeID Clone() {
      return new TalkTypeID(this);
    }

    /// <summary>Field number for the "TalkTypeID" field.</summary>
    public const int TalkTypeID_FieldNumber = 1;
    private string talkTypeID_ = "";
    /// <summary>
    ///板块类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTypeID_ {
      get { return talkTypeID_; }
      set {
        talkTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkTypeID_ != other.TalkTypeID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkTypeID_.Length != 0) hash ^= TalkTypeID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkTypeID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkTypeID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkTypeID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTypeID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkTypeID other) {
      if (other == null) {
        return;
      }
      if (other.TalkTypeID_.Length != 0) {
        TalkTypeID_ = other.TalkTypeID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkTypeID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerLevelList : pb::IMessage<OrganizerLevelList> {
    private static readonly pb::MessageParser<OrganizerLevelList> _parser = new pb::MessageParser<OrganizerLevelList>(() => new OrganizerLevelList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerLevelList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelList(OrganizerLevelList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelList Clone() {
      return new OrganizerLevelList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.OrganizerLevelStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.OrganizerLevelStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.OrganizerLevelStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.OrganizerLevelStruct>();
    /// <summary>
    ///赞助商等级集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.OrganizerLevelStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerLevelList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerLevelList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerLevelList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerLevelStruct : pb::IMessage<OrganizerLevelStruct> {
    private static readonly pb::MessageParser<OrganizerLevelStruct> _parser = new pb::MessageParser<OrganizerLevelStruct>(() => new OrganizerLevelStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerLevelStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelStruct(OrganizerLevelStruct other) : this() {
      organizerLevelID_ = other.organizerLevelID_;
      conferenceId_ = other.conferenceId_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      isHide_ = other.isHide_;
      sort_ = other.sort_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelStruct Clone() {
      return new OrganizerLevelStruct(this);
    }

    /// <summary>Field number for the "OrganizerLevelID" field.</summary>
    public const int OrganizerLevelIDFieldNumber = 1;
    private string organizerLevelID_ = "";
    /// <summary>
    ///赞助商等级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizerLevelID {
      get { return organizerLevelID_; }
      set {
        organizerLevelID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 2;
    private string conferenceId_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "IsHide" field.</summary>
    public const int IsHideFieldNumber = 4;
    private bool isHide_;
    /// <summary>
    ///是否yinc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHide {
      get { return isHide_; }
      set {
        isHide_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private string sort_ = "";
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 6;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 7;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 8;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 9;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerLevelStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerLevelStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrganizerLevelID != other.OrganizerLevelID) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (IsHide != other.IsHide) return false;
      if (Sort != other.Sort) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrganizerLevelID.Length != 0) hash ^= OrganizerLevelID.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (IsHide != false) hash ^= IsHide.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrganizerLevelID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrganizerLevelID);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceId);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (IsHide != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsHide);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sort);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrganizerLevelID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizerLevelID);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (IsHide != false) {
        size += 1 + 1;
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerLevelStruct other) {
      if (other == null) {
        return;
      }
      if (other.OrganizerLevelID.Length != 0) {
        OrganizerLevelID = other.OrganizerLevelID;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.IsHide != false) {
        IsHide = other.IsHide;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrganizerLevelID = input.ReadString();
            break;
          }
          case 18: {
            ConferenceId = input.ReadString();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 32: {
            IsHide = input.ReadBool();
            break;
          }
          case 42: {
            Sort = input.ReadString();
            break;
          }
          case 50: {
            CreatedOn = input.ReadString();
            break;
          }
          case 58: {
            CreatedBy = input.ReadString();
            break;
          }
          case 66: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 74: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerLevelID : pb::IMessage<OrganizerLevelID> {
    private static readonly pb::MessageParser<OrganizerLevelID> _parser = new pb::MessageParser<OrganizerLevelID>(() => new OrganizerLevelID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerLevelID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelID(OrganizerLevelID other) : this() {
      organizerLevelID_ = other.organizerLevelID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerLevelID Clone() {
      return new OrganizerLevelID(this);
    }

    /// <summary>Field number for the "OrganizerLevelID" field.</summary>
    public const int OrganizerLevelID_FieldNumber = 1;
    private string organizerLevelID_ = "";
    /// <summary>
    ///赞助商等级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizerLevelID_ {
      get { return organizerLevelID_; }
      set {
        organizerLevelID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerLevelID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerLevelID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrganizerLevelID_ != other.OrganizerLevelID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrganizerLevelID_.Length != 0) hash ^= OrganizerLevelID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrganizerLevelID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrganizerLevelID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrganizerLevelID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizerLevelID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerLevelID other) {
      if (other == null) {
        return;
      }
      if (other.OrganizerLevelID_.Length != 0) {
        OrganizerLevelID_ = other.OrganizerLevelID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrganizerLevelID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerList : pb::IMessage<OrganizerList> {
    private static readonly pb::MessageParser<OrganizerList> _parser = new pb::MessageParser<OrganizerList>(() => new OrganizerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerList(OrganizerList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerList Clone() {
      return new OrganizerList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.OrganizerStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.OrganizerStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.OrganizerStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.OrganizerStruct>();
    /// <summary>
    ///赞助商id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.OrganizerStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerStruct : pb::IMessage<OrganizerStruct> {
    private static readonly pb::MessageParser<OrganizerStruct> _parser = new pb::MessageParser<OrganizerStruct>(() => new OrganizerStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerStruct(OrganizerStruct other) : this() {
      organizerID_ = other.organizerID_;
      organizerLevelID_ = other.organizerLevelID_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      sort_ = other.sort_;
      iMGSRC_ = other.iMGSRC_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      companyURL_ = other.companyURL_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerStruct Clone() {
      return new OrganizerStruct(this);
    }

    /// <summary>Field number for the "OrganizerID" field.</summary>
    public const int OrganizerIDFieldNumber = 1;
    private string organizerID_ = "";
    /// <summary>
    ///赞助商id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizerID {
      get { return organizerID_; }
      set {
        organizerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrganizerLevelID" field.</summary>
    public const int OrganizerLevelIDFieldNumber = 2;
    private string organizerLevelID_ = "";
    /// <summary>
    ///赞助商等级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizerLevelID {
      get { return organizerLevelID_; }
      set {
        organizerLevelID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceService.Translation translation_;
    /// <summary>
    ///赞助商名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 4;
    private string sort_ = "";
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IMGSRC" field.</summary>
    public const int IMGSRCFieldNumber = 5;
    private string iMGSRC_ = "";
    /// <summary>
    ///图片路劲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IMGSRC {
      get { return iMGSRC_; }
      set {
        iMGSRC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 6;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 7;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 8;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 9;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyURL" field.</summary>
    public const int CompanyURLFieldNumber = 10;
    private string companyURL_ = "";
    /// <summary>
    ///公司连接
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyURL {
      get { return companyURL_; }
      set {
        companyURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrganizerID != other.OrganizerID) return false;
      if (OrganizerLevelID != other.OrganizerLevelID) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (Sort != other.Sort) return false;
      if (IMGSRC != other.IMGSRC) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (CompanyURL != other.CompanyURL) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrganizerID.Length != 0) hash ^= OrganizerID.GetHashCode();
      if (OrganizerLevelID.Length != 0) hash ^= OrganizerLevelID.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (IMGSRC.Length != 0) hash ^= IMGSRC.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (CompanyURL.Length != 0) hash ^= CompanyURL.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrganizerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrganizerID);
      }
      if (OrganizerLevelID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrganizerLevelID);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sort);
      }
      if (IMGSRC.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IMGSRC);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedBy);
      }
      if (CompanyURL.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CompanyURL);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrganizerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizerID);
      }
      if (OrganizerLevelID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizerLevelID);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (IMGSRC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IMGSRC);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (CompanyURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyURL);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerStruct other) {
      if (other == null) {
        return;
      }
      if (other.OrganizerID.Length != 0) {
        OrganizerID = other.OrganizerID;
      }
      if (other.OrganizerLevelID.Length != 0) {
        OrganizerLevelID = other.OrganizerLevelID;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceService.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.IMGSRC.Length != 0) {
        IMGSRC = other.IMGSRC;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.CompanyURL.Length != 0) {
        CompanyURL = other.CompanyURL;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrganizerID = input.ReadString();
            break;
          }
          case 18: {
            OrganizerLevelID = input.ReadString();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceService.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 34: {
            Sort = input.ReadString();
            break;
          }
          case 42: {
            IMGSRC = input.ReadString();
            break;
          }
          case 50: {
            CreatedOn = input.ReadString();
            break;
          }
          case 58: {
            CreatedBy = input.ReadString();
            break;
          }
          case 66: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 74: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 82: {
            CompanyURL = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrganizerID : pb::IMessage<OrganizerID> {
    private static readonly pb::MessageParser<OrganizerID> _parser = new pb::MessageParser<OrganizerID>(() => new OrganizerID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrganizerID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerID(OrganizerID other) : this() {
      organizerID_ = other.organizerID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrganizerID Clone() {
      return new OrganizerID(this);
    }

    /// <summary>Field number for the "OrganizerID" field.</summary>
    public const int OrganizerID_FieldNumber = 1;
    private string organizerID_ = "";
    /// <summary>
    ///赞助商id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizerID_ {
      get { return organizerID_; }
      set {
        organizerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrganizerID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrganizerID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrganizerID_ != other.OrganizerID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrganizerID_.Length != 0) hash ^= OrganizerID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrganizerID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrganizerID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrganizerID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizerID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrganizerID other) {
      if (other == null) {
        return;
      }
      if (other.OrganizerID_.Length != 0) {
        OrganizerID_ = other.OrganizerID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrganizerID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresenterList : pb::IMessage<PresenterList> {
    private static readonly pb::MessageParser<PresenterList> _parser = new pb::MessageParser<PresenterList>(() => new PresenterList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresenterList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterList(PresenterList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterList Clone() {
      return new PresenterList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.PresenterStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.PresenterStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.PresenterStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.PresenterStruct>();
    /// <summary>
    ///主持人集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.PresenterStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresenterList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresenterList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresenterList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresenterStruct : pb::IMessage<PresenterStruct> {
    private static readonly pb::MessageParser<PresenterStruct> _parser = new pb::MessageParser<PresenterStruct>(() => new PresenterStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresenterStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterStruct(PresenterStruct other) : this() {
      presenterID_ = other.presenterID_;
      conferenceID_ = other.conferenceID_;
      presenterNameTranslation_ = other.presenterNameTranslation_;
      presenterTypeTranslation_ = other.presenterTypeTranslation_;
      jobTitleTranslation_ = other.jobTitleTranslation_;
      appellationTranslation_ = other.appellationTranslation_;
      countryTranslation_ = other.countryTranslation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      mobile_ = other.mobile_;
      eMail_ = other.eMail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterStruct Clone() {
      return new PresenterStruct(this);
    }

    /// <summary>Field number for the "PresenterID" field.</summary>
    public const int PresenterIDFieldNumber = 1;
    private string presenterID_ = "";
    /// <summary>
    ///主持人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PresenterID {
      get { return presenterID_; }
      set {
        presenterID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PresenterNameTranslation" field.</summary>
    public const int PresenterNameTranslationFieldNumber = 3;
    private string presenterNameTranslation_ = "";
    /// <summary>
    ///名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PresenterNameTranslation {
      get { return presenterNameTranslation_; }
      set {
        presenterNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PresenterTypeTranslation" field.</summary>
    public const int PresenterTypeTranslationFieldNumber = 4;
    private string presenterTypeTranslation_ = "";
    /// <summary>
    ///主持人类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PresenterTypeTranslation {
      get { return presenterTypeTranslation_; }
      set {
        presenterTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTitleTranslation" field.</summary>
    public const int JobTitleTranslationFieldNumber = 5;
    private string jobTitleTranslation_ = "";
    /// <summary>
    ///职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTitleTranslation {
      get { return jobTitleTranslation_; }
      set {
        jobTitleTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 6;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称呼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 7;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 10;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 11;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 12;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EMail" field.</summary>
    public const int EMailFieldNumber = 13;
    private string eMail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EMail {
      get { return eMail_; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresenterStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresenterStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PresenterID != other.PresenterID) return false;
      if (ConferenceID != other.ConferenceID) return false;
      if (PresenterNameTranslation != other.PresenterNameTranslation) return false;
      if (PresenterTypeTranslation != other.PresenterTypeTranslation) return false;
      if (JobTitleTranslation != other.JobTitleTranslation) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Mobile != other.Mobile) return false;
      if (EMail != other.EMail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PresenterID.Length != 0) hash ^= PresenterID.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (PresenterNameTranslation.Length != 0) hash ^= PresenterNameTranslation.GetHashCode();
      if (PresenterTypeTranslation.Length != 0) hash ^= PresenterTypeTranslation.GetHashCode();
      if (JobTitleTranslation.Length != 0) hash ^= JobTitleTranslation.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (EMail.Length != 0) hash ^= EMail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PresenterID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PresenterID);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (PresenterNameTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PresenterNameTranslation);
      }
      if (PresenterTypeTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PresenterTypeTranslation);
      }
      if (JobTitleTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JobTitleTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AppellationTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CountryTranslation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModifiedBy);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Mobile);
      }
      if (EMail.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EMail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PresenterID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresenterID);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (PresenterNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresenterNameTranslation);
      }
      if (PresenterTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresenterTypeTranslation);
      }
      if (JobTitleTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTitleTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (EMail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresenterStruct other) {
      if (other == null) {
        return;
      }
      if (other.PresenterID.Length != 0) {
        PresenterID = other.PresenterID;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.PresenterNameTranslation.Length != 0) {
        PresenterNameTranslation = other.PresenterNameTranslation;
      }
      if (other.PresenterTypeTranslation.Length != 0) {
        PresenterTypeTranslation = other.PresenterTypeTranslation;
      }
      if (other.JobTitleTranslation.Length != 0) {
        JobTitleTranslation = other.JobTitleTranslation;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.EMail.Length != 0) {
        EMail = other.EMail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PresenterID = input.ReadString();
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
          case 26: {
            PresenterNameTranslation = input.ReadString();
            break;
          }
          case 34: {
            PresenterTypeTranslation = input.ReadString();
            break;
          }
          case 42: {
            JobTitleTranslation = input.ReadString();
            break;
          }
          case 50: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 58: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 90: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 98: {
            Mobile = input.ReadString();
            break;
          }
          case 106: {
            EMail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresenterID : pb::IMessage<PresenterID> {
    private static readonly pb::MessageParser<PresenterID> _parser = new pb::MessageParser<PresenterID>(() => new PresenterID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresenterID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterID(PresenterID other) : this() {
      presenterID_ = other.presenterID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenterID Clone() {
      return new PresenterID(this);
    }

    /// <summary>Field number for the "PresenterID" field.</summary>
    public const int PresenterID_FieldNumber = 1;
    private string presenterID_ = "";
    /// <summary>
    ///主持人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PresenterID_ {
      get { return presenterID_; }
      set {
        presenterID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresenterID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresenterID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PresenterID_ != other.PresenterID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PresenterID_.Length != 0) hash ^= PresenterID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PresenterID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PresenterID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PresenterID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresenterID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresenterID other) {
      if (other == null) {
        return;
      }
      if (other.PresenterID_.Length != 0) {
        PresenterID_ = other.PresenterID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PresenterID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantList : pb::IMessage<ParticipantList> {
    private static readonly pb::MessageParser<ParticipantList> _parser = new pb::MessageParser<ParticipantList>(() => new ParticipantList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantList(ParticipantList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantList Clone() {
      return new ParticipantList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ParticipantStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantStruct>();
    /// <summary>
    ///嘉宾集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantStruct : pb::IMessage<ParticipantStruct> {
    private static readonly pb::MessageParser<ParticipantStruct> _parser = new pb::MessageParser<ParticipantStruct>(() => new ParticipantStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantStruct(ParticipantStruct other) : this() {
      participantID_ = other.participantID_;
      participantNameTranslation_ = other.participantNameTranslation_;
      iMGSRC_ = other.iMGSRC_;
      companyTranslation_ = other.companyTranslation_;
      jobTranslation_ = other.jobTranslation_;
      countryTranslation_ = other.countryTranslation_;
      email_ = other.email_;
      mobile_ = other.mobile_;
      introduceTranslation_ = other.introduceTranslation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      personContractID_ = other.personContractID_;
      perContractNumber_ = other.perContractNumber_;
      isDelete_ = other.isDelete_;
      sort_ = other.sort_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      appellationTranslation_ = other.appellationTranslation_;
      companyId_ = other.companyId_;
      confirmPPT_ = other.confirmPPT_;
      memberPK_ = other.memberPK_;
      showOnFont_ = other.showOnFont_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantStruct Clone() {
      return new ParticipantStruct(this);
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 1;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 2;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IMGSRC" field.</summary>
    public const int IMGSRCFieldNumber = 3;
    private string iMGSRC_ = "";
    /// <summary>
    ///头像路劲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IMGSRC {
      get { return iMGSRC_; }
      set {
        iMGSRC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 4;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 5;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 6;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 7;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 8;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IntroduceTranslation" field.</summary>
    public const int IntroduceTranslationFieldNumber = 9;
    private string introduceTranslation_ = "";
    /// <summary>
    ///简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IntroduceTranslation {
      get { return introduceTranslation_; }
      set {
        introduceTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 10;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 11;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 12;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 13;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractID" field.</summary>
    public const int PersonContractIDFieldNumber = 14;
    private string personContractID_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractID {
      get { return personContractID_; }
      set {
        personContractID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 15;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 16;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 17;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 18;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 19;
    private string ower_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 20;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 21;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfirmPPT" field.</summary>
    public const int ConfirmPPTFieldNumber = 22;
    private bool confirmPPT_;
    /// <summary>
    ///是否提交ppt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ConfirmPPT {
      get { return confirmPPT_; }
      set {
        confirmPPT_ = value;
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 23;
    private string memberPK_ = "";
    /// <summary>
    ///人员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowOnFont" field.</summary>
    public const int ShowOnFontFieldNumber = 24;
    private int showOnFont_;
    /// <summary>
    ///受否前台显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowOnFont {
      get { return showOnFont_; }
      set {
        showOnFont_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 25;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantID != other.ParticipantID) return false;
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (IMGSRC != other.IMGSRC) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (Email != other.Email) return false;
      if (Mobile != other.Mobile) return false;
      if (IntroduceTranslation != other.IntroduceTranslation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (PersonContractID != other.PersonContractID) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (IsDelete != other.IsDelete) return false;
      if (Sort != other.Sort) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ConfirmPPT != other.ConfirmPPT) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ShowOnFont != other.ShowOnFont) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (IMGSRC.Length != 0) hash ^= IMGSRC.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (IntroduceTranslation.Length != 0) hash ^= IntroduceTranslation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (PersonContractID.Length != 0) hash ^= PersonContractID.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ConfirmPPT != false) hash ^= ConfirmPPT.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ShowOnFont != 0) hash ^= ShowOnFont.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantID);
      }
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantNameTranslation);
      }
      if (IMGSRC.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IMGSRC);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CountryTranslation);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Email);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Mobile);
      }
      if (IntroduceTranslation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IntroduceTranslation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedBy);
      }
      if (PersonContractID.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PersonContractID);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(PerContractNumber);
      }
      if (IsDelete != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsDelete);
      }
      if (Sort != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Sort);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Ower);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AppellationTranslation);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CompanyId);
      }
      if (ConfirmPPT != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(ConfirmPPT);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MemberPK);
      }
      if (ShowOnFont != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(ShowOnFont);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (IMGSRC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IMGSRC);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (IntroduceTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntroduceTranslation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (PersonContractID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractID);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (IsDelete != false) {
        size += 2 + 1;
      }
      if (Sort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (AppellationTranslation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (CompanyId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ConfirmPPT != false) {
        size += 2 + 1;
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ShowOnFont != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShowOnFont);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.IMGSRC.Length != 0) {
        IMGSRC = other.IMGSRC;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.IntroduceTranslation.Length != 0) {
        IntroduceTranslation = other.IntroduceTranslation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.PersonContractID.Length != 0) {
        PersonContractID = other.PersonContractID;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ConfirmPPT != false) {
        ConfirmPPT = other.ConfirmPPT;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ShowOnFont != 0) {
        ShowOnFont = other.ShowOnFont;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 26: {
            IMGSRC = input.ReadString();
            break;
          }
          case 34: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 42: {
            JobTranslation = input.ReadString();
            break;
          }
          case 50: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 58: {
            Email = input.ReadString();
            break;
          }
          case 66: {
            Mobile = input.ReadString();
            break;
          }
          case 74: {
            IntroduceTranslation = input.ReadString();
            break;
          }
          case 82: {
            CreatedOn = input.ReadString();
            break;
          }
          case 90: {
            CreatedBy = input.ReadString();
            break;
          }
          case 98: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 106: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 114: {
            PersonContractID = input.ReadString();
            break;
          }
          case 122: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 128: {
            IsDelete = input.ReadBool();
            break;
          }
          case 136: {
            Sort = input.ReadInt32();
            break;
          }
          case 146: {
            Owerid = input.ReadString();
            break;
          }
          case 154: {
            Ower = input.ReadString();
            break;
          }
          case 162: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 170: {
            CompanyId = input.ReadString();
            break;
          }
          case 176: {
            ConfirmPPT = input.ReadBool();
            break;
          }
          case 186: {
            MemberPK = input.ReadString();
            break;
          }
          case 192: {
            ShowOnFont = input.ReadInt32();
            break;
          }
          case 202: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantID : pb::IMessage<ParticipantID> {
    private static readonly pb::MessageParser<ParticipantID> _parser = new pb::MessageParser<ParticipantID>(() => new ParticipantID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantID(ParticipantID other) : this() {
      participantID_ = other.participantID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantID Clone() {
      return new ParticipantID(this);
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantID_FieldNumber = 1;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID_ {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantID_ != other.ParticipantID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantID_.Length != 0) hash ^= ParticipantID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantID other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantID_.Length != 0) {
        ParticipantID_ = other.ParticipantID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PerContractNumberID : pb::IMessage<PerContractNumberID> {
    private static readonly pb::MessageParser<PerContractNumberID> _parser = new pb::MessageParser<PerContractNumberID>(() => new PerContractNumberID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerContractNumberID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberID(PerContractNumberID other) : this() {
      perContractNumberID_ = other.perContractNumberID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberID Clone() {
      return new PerContractNumberID(this);
    }

    /// <summary>Field number for the "PerContractNumberID" field.</summary>
    public const int PerContractNumberID_FieldNumber = 1;
    private string perContractNumberID_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumberID_ {
      get { return perContractNumberID_; }
      set {
        perContractNumberID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerContractNumberID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerContractNumberID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerContractNumberID_ != other.PerContractNumberID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerContractNumberID_.Length != 0) hash ^= PerContractNumberID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerContractNumberID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PerContractNumberID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerContractNumberID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumberID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerContractNumberID other) {
      if (other == null) {
        return;
      }
      if (other.PerContractNumberID_.Length != 0) {
        PerContractNumberID_ = other.PerContractNumberID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PerContractNumberID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantName : pb::IMessage<ParticipantName> {
    private static readonly pb::MessageParser<ParticipantName> _parser = new pb::MessageParser<ParticipantName>(() => new ParticipantName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantName(ParticipantName other) : this() {
      participantName_ = other.participantName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantName Clone() {
      return new ParticipantName(this);
    }

    /// <summary>Field number for the "ParticipantName" field.</summary>
    public const int ParticipantName_FieldNumber = 1;
    private string participantName_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantName_ {
      get { return participantName_; }
      set {
        participantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantName_ != other.ParticipantName_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantName_.Length != 0) hash ^= ParticipantName_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantName_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantName_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantName_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantName_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantName other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantName_.Length != 0) {
        ParticipantName_ = other.ParticipantName_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantName_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantInfoList : pb::IMessage<ParticipantInfoList> {
    private static readonly pb::MessageParser<ParticipantInfoList> _parser = new pb::MessageParser<ParticipantInfoList>(() => new ParticipantInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoList(ParticipantInfoList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoList Clone() {
      return new ParticipantInfoList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantInfoStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ParticipantInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct>();
    /// <summary>
    ///自定义嘉宾信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantInfoStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantInfoList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantInfoStruct : pb::IMessage<ParticipantInfoStruct> {
    private static readonly pb::MessageParser<ParticipantInfoStruct> _parser = new pb::MessageParser<ParticipantInfoStruct>(() => new ParticipantInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoStruct(ParticipantInfoStruct other) : this() {
      participantNameTranslation_ = other.participantNameTranslation_;
      companyTranslation_ = other.companyTranslation_;
      jobTranslation_ = other.jobTranslation_;
      countryTranslation_ = other.countryTranslation_;
      appellationTranslation_ = other.appellationTranslation_;
      participantTypeTranslation_ = other.participantTypeTranslation_;
      participantID_ = other.participantID_;
      participantTypeID_ = other.participantTypeID_;
      eMail_ = other.eMail_;
      mobile_ = other.mobile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantInfoStruct Clone() {
      return new ParticipantInfoStruct(this);
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 1;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 2;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 3;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 4;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 5;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeTranslation" field.</summary>
    public const int ParticipantTypeTranslationFieldNumber = 6;
    private string participantTypeTranslation_ = "";
    /// <summary>
    ///嘉宾类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeTranslation {
      get { return participantTypeTranslation_; }
      set {
        participantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 7;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeID" field.</summary>
    public const int ParticipantTypeIDFieldNumber = 8;
    private string participantTypeID_ = "";
    /// <summary>
    ///嘉宾类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeID {
      get { return participantTypeID_; }
      set {
        participantTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EMail" field.</summary>
    public const int EMailFieldNumber = 9;
    private string eMail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EMail {
      get { return eMail_; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 10;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (ParticipantTypeTranslation != other.ParticipantTypeTranslation) return false;
      if (ParticipantID != other.ParticipantID) return false;
      if (ParticipantTypeID != other.ParticipantTypeID) return false;
      if (EMail != other.EMail) return false;
      if (Mobile != other.Mobile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (ParticipantTypeTranslation.Length != 0) hash ^= ParticipantTypeTranslation.GetHashCode();
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (ParticipantTypeID.Length != 0) hash ^= ParticipantTypeID.GetHashCode();
      if (EMail.Length != 0) hash ^= EMail.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantNameTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppellationTranslation);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantTypeTranslation);
      }
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantID);
      }
      if (ParticipantTypeID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ParticipantTypeID);
      }
      if (EMail.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EMail);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Mobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeTranslation);
      }
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (ParticipantTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeID);
      }
      if (EMail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.ParticipantTypeTranslation.Length != 0) {
        ParticipantTypeTranslation = other.ParticipantTypeTranslation;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.ParticipantTypeID.Length != 0) {
        ParticipantTypeID = other.ParticipantTypeID;
      }
      if (other.EMail.Length != 0) {
        EMail = other.EMail;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 18: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 26: {
            JobTranslation = input.ReadString();
            break;
          }
          case 34: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 42: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 50: {
            ParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 58: {
            ParticipantID = input.ReadString();
            break;
          }
          case 66: {
            ParticipantTypeID = input.ReadString();
            break;
          }
          case 74: {
            EMail = input.ReadString();
            break;
          }
          case 82: {
            Mobile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractID : pb::IMessage<PersonContractID> {
    private static readonly pb::MessageParser<PersonContractID> _parser = new pb::MessageParser<PersonContractID>(() => new PersonContractID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractID(PersonContractID other) : this() {
      personContractID_ = other.personContractID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractID Clone() {
      return new PersonContractID(this);
    }

    /// <summary>Field number for the "PersonContractID" field.</summary>
    public const int PersonContractID_FieldNumber = 1;
    private string personContractID_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractID_ {
      get { return personContractID_; }
      set {
        personContractID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractID_ != other.PersonContractID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractID_.Length != 0) hash ^= PersonContractID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractID other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractID_.Length != 0) {
        PersonContractID_ = other.PersonContractID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantIDList : pb::IMessage<ParticipantIDList> {
    private static readonly pb::MessageParser<ParticipantIDList> _parser = new pb::MessageParser<ParticipantIDList>(() => new ParticipantIDList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantIDList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDList(ParticipantIDList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDList Clone() {
      return new ParticipantIDList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_listdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> listdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///嘉宾id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantIDList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantIDList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantIDList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyId : pb::IMessage<CompanyId> {
    private static readonly pb::MessageParser<CompanyId> _parser = new pb::MessageParser<CompanyId>(() => new CompanyId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyId(CompanyId other) : this() {
      companyId_ = other.companyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyId Clone() {
      return new CompanyId(this);
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyId_FieldNumber = 1;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId_ {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyId_ != other.CompanyId_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyId_.Length != 0) hash ^= CompanyId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyId_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyId_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyId_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyId other) {
      if (other == null) {
        return;
      }
      if (other.CompanyId_.Length != 0) {
        CompanyId_ = other.CompanyId_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyId_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberPK : pb::IMessage<MemberPK> {
    private static readonly pb::MessageParser<MemberPK> _parser = new pb::MessageParser<MemberPK>(() => new MemberPK());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberPK> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPK() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPK(MemberPK other) : this() {
      memberPK_ = other.memberPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberPK Clone() {
      return new MemberPK(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPK_FieldNumber = 1;
    private string memberPK_ = "";
    /// <summary>
    ///个人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK_ {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberPK);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberPK other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK_ != other.MemberPK_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK_.Length != 0) hash ^= MemberPK_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberPK other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK_.Length != 0) {
        MemberPK_ = other.MemberPK_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PInfo : pb::IMessage<PInfo> {
    private static readonly pb::MessageParser<PInfo> _parser = new pb::MessageParser<PInfo>(() => new PInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PInfo(PInfo other) : this() {
      memberPK_ = other.memberPK_;
      showOnFont_ = other.showOnFont_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PInfo Clone() {
      return new PInfo(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    /// <summary>
    ///个人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowOnFont" field.</summary>
    public const int ShowOnFontFieldNumber = 2;
    private int showOnFont_;
    /// <summary>
    ///是否显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowOnFont {
      get { return showOnFont_; }
      set {
        showOnFont_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if (ShowOnFont != other.ShowOnFont) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ShowOnFont != 0) hash ^= ShowOnFont.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      if (ShowOnFont != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ShowOnFont);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ShowOnFont != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowOnFont);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PInfo other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ShowOnFont != 0) {
        ShowOnFont = other.ShowOnFont;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 16: {
            ShowOnFont = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PagingInfo : pb::IMessage<PagingInfo> {
    private static readonly pb::MessageParser<PagingInfo> _parser = new pb::MessageParser<PagingInfo>(() => new PagingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PagingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingInfo(PagingInfo other) : this() {
      conferencrID_ = other.conferencrID_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingInfo Clone() {
      return new PagingInfo(this);
    }

    /// <summary>Field number for the "ConferencrID" field.</summary>
    public const int ConferencrIDFieldNumber = 1;
    private string conferencrID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferencrID {
      get { return conferencrID_; }
      set {
        conferencrID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    /// <summary>
    ///pageindex
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    /// <summary>
    ///pagesize 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PagingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PagingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferencrID != other.ConferencrID) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferencrID.Length != 0) hash ^= ConferencrID.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferencrID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferencrID);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferencrID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferencrID);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PagingInfo other) {
      if (other == null) {
        return;
      }
      if (other.ConferencrID.Length != 0) {
        ConferencrID = other.ConferencrID;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferencrID = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkParticipantMapStruct : pb::IMessage<TalkParticipantMapStruct> {
    private static readonly pb::MessageParser<TalkParticipantMapStruct> _parser = new pb::MessageParser<TalkParticipantMapStruct>(() => new TalkParticipantMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkParticipantMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapStruct(TalkParticipantMapStruct other) : this() {
      talkParticipantMapID_ = other.talkParticipantMapID_;
      participantID_ = other.participantID_;
      talkID_ = other.talkID_;
      conferenceID_ = other.conferenceID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapStruct Clone() {
      return new TalkParticipantMapStruct(this);
    }

    /// <summary>Field number for the "TalkParticipantMapID" field.</summary>
    public const int TalkParticipantMapIDFieldNumber = 1;
    private string talkParticipantMapID_ = "";
    /// <summary>
    ///板块与嘉宾关系
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkParticipantMapID {
      get { return talkParticipantMapID_; }
      set {
        talkParticipantMapID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 2;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 3;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 4;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkParticipantMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkParticipantMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkParticipantMapID != other.TalkParticipantMapID) return false;
      if (ParticipantID != other.ParticipantID) return false;
      if (TalkID != other.TalkID) return false;
      if (ConferenceID != other.ConferenceID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkParticipantMapID.Length != 0) hash ^= TalkParticipantMapID.GetHashCode();
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkParticipantMapID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkParticipantMapID);
      }
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantID);
      }
      if (TalkID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TalkID);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkParticipantMapID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkParticipantMapID);
      }
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkParticipantMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkParticipantMapID.Length != 0) {
        TalkParticipantMapID = other.TalkParticipantMapID;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkParticipantMapID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantID = input.ReadString();
            break;
          }
          case 26: {
            TalkID = input.ReadString();
            break;
          }
          case 34: {
            ConferenceID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TalkParticipantMapInfo : pb::IMessage<TalkParticipantMapInfo> {
    private static readonly pb::MessageParser<TalkParticipantMapInfo> _parser = new pb::MessageParser<TalkParticipantMapInfo>(() => new TalkParticipantMapInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TalkParticipantMapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapInfo(TalkParticipantMapInfo other) : this() {
      talkID_ = other.talkID_;
      participantIDs_ = other.participantIDs_;
      participantTypeIDs_ = other.participantTypeIDs_;
      conferenceID_ = other.conferenceID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TalkParticipantMapInfo Clone() {
      return new TalkParticipantMapInfo(this);
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 1;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantIDs" field.</summary>
    public const int ParticipantIDsFieldNumber = 2;
    private string participantIDs_ = "";
    /// <summary>
    ///嘉宾id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantIDs {
      get { return participantIDs_; }
      set {
        participantIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeIDs" field.</summary>
    public const int ParticipantTypeIDsFieldNumber = 3;
    private string participantTypeIDs_ = "";
    /// <summary>
    ///嘉宾类型id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeIDs {
      get { return participantTypeIDs_; }
      set {
        participantTypeIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 4;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TalkParticipantMapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TalkParticipantMapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkID != other.TalkID) return false;
      if (ParticipantIDs != other.ParticipantIDs) return false;
      if (ParticipantTypeIDs != other.ParticipantTypeIDs) return false;
      if (ConferenceID != other.ConferenceID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (ParticipantIDs.Length != 0) hash ^= ParticipantIDs.GetHashCode();
      if (ParticipantTypeIDs.Length != 0) hash ^= ParticipantTypeIDs.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkID);
      }
      if (ParticipantIDs.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantIDs);
      }
      if (ParticipantTypeIDs.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParticipantTypeIDs);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (ParticipantIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIDs);
      }
      if (ParticipantTypeIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeIDs);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TalkParticipantMapInfo other) {
      if (other == null) {
        return;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      if (other.ParticipantIDs.Length != 0) {
        ParticipantIDs = other.ParticipantIDs;
      }
      if (other.ParticipantTypeIDs.Length != 0) {
        ParticipantTypeIDs = other.ParticipantTypeIDs;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantIDs = input.ReadString();
            break;
          }
          case 26: {
            ParticipantTypeIDs = input.ReadString();
            break;
          }
          case 34: {
            ConferenceID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityParticipantMapInfo : pb::IMessage<ActivityParticipantMapInfo> {
    private static readonly pb::MessageParser<ActivityParticipantMapInfo> _parser = new pb::MessageParser<ActivityParticipantMapInfo>(() => new ActivityParticipantMapInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityParticipantMapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityParticipantMapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityParticipantMapInfo(ActivityParticipantMapInfo other) : this() {
      activityID_ = other.activityID_;
      participantIDs_ = other.participantIDs_;
      participantTypeIDs_ = other.participantTypeIDs_;
      conferenceID_ = other.conferenceID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityParticipantMapInfo Clone() {
      return new ActivityParticipantMapInfo(this);
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 1;
    private string activityID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantIDs" field.</summary>
    public const int ParticipantIDsFieldNumber = 2;
    private string participantIDs_ = "";
    /// <summary>
    ///嘉宾id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantIDs {
      get { return participantIDs_; }
      set {
        participantIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeIDs" field.</summary>
    public const int ParticipantTypeIDsFieldNumber = 3;
    private string participantTypeIDs_ = "";
    /// <summary>
    ///嘉宾类型id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeIDs {
      get { return participantTypeIDs_; }
      set {
        participantTypeIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 4;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityParticipantMapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityParticipantMapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityID != other.ActivityID) return false;
      if (ParticipantIDs != other.ParticipantIDs) return false;
      if (ParticipantTypeIDs != other.ParticipantTypeIDs) return false;
      if (ConferenceID != other.ConferenceID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (ParticipantIDs.Length != 0) hash ^= ParticipantIDs.GetHashCode();
      if (ParticipantTypeIDs.Length != 0) hash ^= ParticipantTypeIDs.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityID);
      }
      if (ParticipantIDs.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantIDs);
      }
      if (ParticipantTypeIDs.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParticipantTypeIDs);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (ParticipantIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIDs);
      }
      if (ParticipantTypeIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeIDs);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityParticipantMapInfo other) {
      if (other == null) {
        return;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      if (other.ParticipantIDs.Length != 0) {
        ParticipantIDs = other.ParticipantIDs;
      }
      if (other.ParticipantTypeIDs.Length != 0) {
        ParticipantTypeIDs = other.ParticipantTypeIDs;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantIDs = input.ReadString();
            break;
          }
          case 26: {
            ParticipantTypeIDs = input.ReadString();
            break;
          }
          case 34: {
            ConferenceID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantGroupList : pb::IMessage<ParticipantGroupList> {
    private static readonly pb::MessageParser<ParticipantGroupList> _parser = new pb::MessageParser<ParticipantGroupList>(() => new ParticipantGroupList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantGroupList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupList(ParticipantGroupList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupList Clone() {
      return new ParticipantGroupList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantGroupStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ParticipantGroupStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantGroupStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantGroupStruct>();
    /// <summary>
    ///嘉宾组集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantGroupStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantGroupList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantGroupList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantGroupList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantGroupStruct : pb::IMessage<ParticipantGroupStruct> {
    private static readonly pb::MessageParser<ParticipantGroupStruct> _parser = new pb::MessageParser<ParticipantGroupStruct>(() => new ParticipantGroupStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantGroupStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupStruct(ParticipantGroupStruct other) : this() {
      participantGroupID_ = other.participantGroupID_;
      conferenceID_ = other.conferenceID_;
      participantGroupNameTranslation_ = other.participantGroupNameTranslation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      conferenceName_ = other.conferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupStruct Clone() {
      return new ParticipantGroupStruct(this);
    }

    /// <summary>Field number for the "ParticipantGroupID" field.</summary>
    public const int ParticipantGroupIDFieldNumber = 1;
    private string participantGroupID_ = "";
    /// <summary>
    ///嘉宾组id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupID {
      get { return participantGroupID_; }
      set {
        participantGroupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantGroupNameTranslation" field.</summary>
    public const int ParticipantGroupNameTranslationFieldNumber = 3;
    private string participantGroupNameTranslation_ = "";
    /// <summary>
    ///嘉宾组名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupNameTranslation {
      get { return participantGroupNameTranslation_; }
      set {
        participantGroupNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 6;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 7;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 8;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantGroupStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantGroupStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantGroupID != other.ParticipantGroupID) return false;
      if (ConferenceID != other.ConferenceID) return false;
      if (ParticipantGroupNameTranslation != other.ParticipantGroupNameTranslation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (ConferenceName != other.ConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantGroupID.Length != 0) hash ^= ParticipantGroupID.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (ParticipantGroupNameTranslation.Length != 0) hash ^= ParticipantGroupNameTranslation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantGroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantGroupID);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (ParticipantGroupNameTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParticipantGroupNameTranslation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedBy);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantGroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupID);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (ParticipantGroupNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupNameTranslation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantGroupStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantGroupID.Length != 0) {
        ParticipantGroupID = other.ParticipantGroupID;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.ParticipantGroupNameTranslation.Length != 0) {
        ParticipantGroupNameTranslation = other.ParticipantGroupNameTranslation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantGroupID = input.ReadString();
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
          case 26: {
            ParticipantGroupNameTranslation = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 58: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 66: {
            ConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantGroupID : pb::IMessage<ParticipantGroupID> {
    private static readonly pb::MessageParser<ParticipantGroupID> _parser = new pb::MessageParser<ParticipantGroupID>(() => new ParticipantGroupID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantGroupID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupID(ParticipantGroupID other) : this() {
      participantGroupID_ = other.participantGroupID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupID Clone() {
      return new ParticipantGroupID(this);
    }

    /// <summary>Field number for the "ParticipantGroupID" field.</summary>
    public const int ParticipantGroupID_FieldNumber = 1;
    private string participantGroupID_ = "";
    /// <summary>
    ///嘉宾组id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupID_ {
      get { return participantGroupID_; }
      set {
        participantGroupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantGroupID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantGroupID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantGroupID_ != other.ParticipantGroupID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantGroupID_.Length != 0) hash ^= ParticipantGroupID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantGroupID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantGroupID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantGroupID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantGroupID other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantGroupID_.Length != 0) {
        ParticipantGroupID_ = other.ParticipantGroupID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantGroupID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantGroupInfo : pb::IMessage<ParticipantGroupInfo> {
    private static readonly pb::MessageParser<ParticipantGroupInfo> _parser = new pb::MessageParser<ParticipantGroupInfo>(() => new ParticipantGroupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantGroupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupInfo(ParticipantGroupInfo other) : this() {
      ParticipantGroupStruct = other.participantGroupStruct_ != null ? other.ParticipantGroupStruct.Clone() : null;
      IDs = other.iDs_ != null ? other.IDs.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupInfo Clone() {
      return new ParticipantGroupInfo(this);
    }

    /// <summary>Field number for the "ParticipantGroupStruct" field.</summary>
    public const int ParticipantGroupStructFieldNumber = 1;
    private global::GrpcConferenceService.ParticipantGroupStruct participantGroupStruct_;
    /// <summary>
    ///嘉宾组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.ParticipantGroupStruct ParticipantGroupStruct {
      get { return participantGroupStruct_; }
      set {
        participantGroupStruct_ = value;
      }
    }

    /// <summary>Field number for the "IDs" field.</summary>
    public const int IDsFieldNumber = 2;
    private global::GrpcConferenceService.IDs iDs_;
    /// <summary>
    ///id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.IDs IDs {
      get { return iDs_; }
      set {
        iDs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantGroupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantGroupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ParticipantGroupStruct, other.ParticipantGroupStruct)) return false;
      if (!object.Equals(IDs, other.IDs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (participantGroupStruct_ != null) hash ^= ParticipantGroupStruct.GetHashCode();
      if (iDs_ != null) hash ^= IDs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (participantGroupStruct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ParticipantGroupStruct);
      }
      if (iDs_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IDs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (participantGroupStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParticipantGroupStruct);
      }
      if (iDs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IDs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantGroupInfo other) {
      if (other == null) {
        return;
      }
      if (other.participantGroupStruct_ != null) {
        if (participantGroupStruct_ == null) {
          participantGroupStruct_ = new global::GrpcConferenceService.ParticipantGroupStruct();
        }
        ParticipantGroupStruct.MergeFrom(other.ParticipantGroupStruct);
      }
      if (other.iDs_ != null) {
        if (iDs_ == null) {
          iDs_ = new global::GrpcConferenceService.IDs();
        }
        IDs.MergeFrom(other.IDs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (participantGroupStruct_ == null) {
              participantGroupStruct_ = new global::GrpcConferenceService.ParticipantGroupStruct();
            }
            input.ReadMessage(participantGroupStruct_);
            break;
          }
          case 18: {
            if (iDs_ == null) {
              iDs_ = new global::GrpcConferenceService.IDs();
            }
            input.ReadMessage(iDs_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantGroupMapStruct : pb::IMessage<ParticipantGroupMapStruct> {
    private static readonly pb::MessageParser<ParticipantGroupMapStruct> _parser = new pb::MessageParser<ParticipantGroupMapStruct>(() => new ParticipantGroupMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantGroupMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupMapStruct(ParticipantGroupMapStruct other) : this() {
      participantGroupMapID_ = other.participantGroupMapID_;
      participantGroupID_ = other.participantGroupID_;
      participantID_ = other.participantID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantGroupMapStruct Clone() {
      return new ParticipantGroupMapStruct(this);
    }

    /// <summary>Field number for the "ParticipantGroupMapID" field.</summary>
    public const int ParticipantGroupMapIDFieldNumber = 1;
    private string participantGroupMapID_ = "";
    /// <summary>
    ///嘉宾与嘉宾组关系id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupMapID {
      get { return participantGroupMapID_; }
      set {
        participantGroupMapID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantGroupID" field.</summary>
    public const int ParticipantGroupIDFieldNumber = 2;
    private string participantGroupID_ = "";
    /// <summary>
    ///嘉宾组id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupID {
      get { return participantGroupID_; }
      set {
        participantGroupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 3;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantGroupMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantGroupMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantGroupMapID != other.ParticipantGroupMapID) return false;
      if (ParticipantGroupID != other.ParticipantGroupID) return false;
      if (ParticipantID != other.ParticipantID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantGroupMapID.Length != 0) hash ^= ParticipantGroupMapID.GetHashCode();
      if (ParticipantGroupID.Length != 0) hash ^= ParticipantGroupID.GetHashCode();
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantGroupMapID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantGroupMapID);
      }
      if (ParticipantGroupID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantGroupID);
      }
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParticipantID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantGroupMapID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupMapID);
      }
      if (ParticipantGroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupID);
      }
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantGroupMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantGroupMapID.Length != 0) {
        ParticipantGroupMapID = other.ParticipantGroupMapID;
      }
      if (other.ParticipantGroupID.Length != 0) {
        ParticipantGroupID = other.ParticipantGroupID;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantGroupMapID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantGroupID = input.ReadString();
            break;
          }
          case 26: {
            ParticipantID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantIDs : pb::IMessage<ParticipantIDs> {
    private static readonly pb::MessageParser<ParticipantIDs> _parser = new pb::MessageParser<ParticipantIDs>(() => new ParticipantIDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantIDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDs(ParticipantIDs other) : this() {
      participantIDs_ = other.participantIDs_;
      participantGroupID_ = other.participantGroupID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantIDs Clone() {
      return new ParticipantIDs(this);
    }

    /// <summary>Field number for the "ParticipantIDs" field.</summary>
    public const int ParticipantIDs_FieldNumber = 1;
    private string participantIDs_ = "";
    /// <summary>
    ///嘉宾id集合，格式:id1,is2,id3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantIDs_ {
      get { return participantIDs_; }
      set {
        participantIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantGroupID" field.</summary>
    public const int ParticipantGroupIDFieldNumber = 2;
    private string participantGroupID_ = "";
    /// <summary>
    ///嘉宾组id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupID {
      get { return participantGroupID_; }
      set {
        participantGroupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantIDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantIDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantIDs_ != other.ParticipantIDs_) return false;
      if (ParticipantGroupID != other.ParticipantGroupID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantIDs_.Length != 0) hash ^= ParticipantIDs_.GetHashCode();
      if (ParticipantGroupID.Length != 0) hash ^= ParticipantGroupID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantIDs_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantIDs_);
      }
      if (ParticipantGroupID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantGroupID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantIDs_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantIDs_);
      }
      if (ParticipantGroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantIDs other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantIDs_.Length != 0) {
        ParticipantIDs_ = other.ParticipantIDs_;
      }
      if (other.ParticipantGroupID.Length != 0) {
        ParticipantGroupID = other.ParticipantGroupID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantIDs_ = input.ReadString();
            break;
          }
          case 18: {
            ParticipantGroupID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantTypeList : pb::IMessage<ParticipantTypeList> {
    private static readonly pb::MessageParser<ParticipantTypeList> _parser = new pb::MessageParser<ParticipantTypeList>(() => new ParticipantTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeList(ParticipantTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeList Clone() {
      return new ParticipantTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ParticipantTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantTypeStruct>();
    /// <summary>
    ///嘉宾类型集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantTypeStruct : pb::IMessage<ParticipantTypeStruct> {
    private static readonly pb::MessageParser<ParticipantTypeStruct> _parser = new pb::MessageParser<ParticipantTypeStruct>(() => new ParticipantTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeStruct(ParticipantTypeStruct other) : this() {
      participantTypeID_ = other.participantTypeID_;
      participantTypeTranslation_ = other.participantTypeTranslation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeStruct Clone() {
      return new ParticipantTypeStruct(this);
    }

    /// <summary>Field number for the "ParticipantTypeID" field.</summary>
    public const int ParticipantTypeIDFieldNumber = 1;
    private string participantTypeID_ = "";
    /// <summary>
    ///	嘉宾类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeID {
      get { return participantTypeID_; }
      set {
        participantTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeTranslation" field.</summary>
    public const int ParticipantTypeTranslationFieldNumber = 2;
    private string participantTypeTranslation_ = "";
    /// <summary>
    ///嘉宾类型名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeTranslation {
      get { return participantTypeTranslation_; }
      set {
        participantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 3;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 4;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 5;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 6;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantTypeID != other.ParticipantTypeID) return false;
      if (ParticipantTypeTranslation != other.ParticipantTypeTranslation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantTypeID.Length != 0) hash ^= ParticipantTypeID.GetHashCode();
      if (ParticipantTypeTranslation.Length != 0) hash ^= ParticipantTypeTranslation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantTypeID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantTypeID);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantTypeTranslation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeID);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeTranslation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantTypeID.Length != 0) {
        ParticipantTypeID = other.ParticipantTypeID;
      }
      if (other.ParticipantTypeTranslation.Length != 0) {
        ParticipantTypeTranslation = other.ParticipantTypeTranslation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantTypeID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 26: {
            CreatedOn = input.ReadString();
            break;
          }
          case 34: {
            CreatedBy = input.ReadString();
            break;
          }
          case 42: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 50: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantTypeID : pb::IMessage<ParticipantTypeID> {
    private static readonly pb::MessageParser<ParticipantTypeID> _parser = new pb::MessageParser<ParticipantTypeID>(() => new ParticipantTypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantTypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeID(ParticipantTypeID other) : this() {
      participantTypeID_ = other.participantTypeID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeID Clone() {
      return new ParticipantTypeID(this);
    }

    /// <summary>Field number for the "ParticipantTypeID" field.</summary>
    public const int ParticipantTypeID_FieldNumber = 1;
    private string participantTypeID_ = "";
    /// <summary>
    ///嘉宾类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeID_ {
      get { return participantTypeID_; }
      set {
        participantTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantTypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantTypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantTypeID_ != other.ParticipantTypeID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantTypeID_.Length != 0) hash ^= ParticipantTypeID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantTypeID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantTypeID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantTypeID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantTypeID other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantTypeID_.Length != 0) {
        ParticipantTypeID_ = other.ParticipantTypeID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantTypeID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantTypeMapInfo : pb::IMessage<ParticipantTypeMapInfo> {
    private static readonly pb::MessageParser<ParticipantTypeMapInfo> _parser = new pb::MessageParser<ParticipantTypeMapInfo>(() => new ParticipantTypeMapInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantTypeMapInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeMapInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeMapInfo(ParticipantTypeMapInfo other) : this() {
      participantID_ = other.participantID_;
      Ids = other.ids_ != null ? other.Ids.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantTypeMapInfo Clone() {
      return new ParticipantTypeMapInfo(this);
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 1;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private global::GrpcConferenceService.IDs ids_;
    /// <summary>
    ///id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.IDs Ids {
      get { return ids_; }
      set {
        ids_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantTypeMapInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantTypeMapInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantID != other.ParticipantID) return false;
      if (!object.Equals(Ids, other.Ids)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (ids_ != null) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantID);
      }
      if (ids_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (ids_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantTypeMapInfo other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.ids_ != null) {
        if (ids_ == null) {
          ids_ = new global::GrpcConferenceService.IDs();
        }
        Ids.MergeFrom(other.Ids);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantID = input.ReadString();
            break;
          }
          case 18: {
            if (ids_ == null) {
              ids_ = new global::GrpcConferenceService.IDs();
            }
            input.ReadMessage(ids_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceptionList : pb::IMessage<ReceptionList> {
    private static readonly pb::MessageParser<ReceptionList> _parser = new pb::MessageParser<ReceptionList>(() => new ReceptionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceptionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionList(ReceptionList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionList Clone() {
      return new ReceptionList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ReceptionStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ReceptionStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ReceptionStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ReceptionStruct>();
    /// <summary>
    ///接待集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ReceptionStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceptionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceptionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceptionList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceptionStruct : pb::IMessage<ReceptionStruct> {
    private static readonly pb::MessageParser<ReceptionStruct> _parser = new pb::MessageParser<ReceptionStruct>(() => new ReceptionStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceptionStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionStruct(ReceptionStruct other) : this() {
      receptionID_ = other.receptionID_;
      memberPK_ = other.memberPK_;
      isReception_ = other.isReception_;
      isArrange_ = other.isArrange_;
      arriveDate_ = other.arriveDate_;
      leaveDate_ = other.leaveDate_;
      hotel_ = other.hotel_;
      receptioner_ = other.receptioner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionStruct Clone() {
      return new ReceptionStruct(this);
    }

    /// <summary>Field number for the "ReceptionID" field.</summary>
    public const int ReceptionIDFieldNumber = 1;
    private string receptionID_ = "";
    /// <summary>
    ///接待id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceptionID {
      get { return receptionID_; }
      set {
        receptionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 2;
    private string memberPK_ = "";
    /// <summary>
    ///个人id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsReception" field.</summary>
    public const int IsReceptionFieldNumber = 3;
    private bool isReception_;
    /// <summary>
    ///是否接机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReception {
      get { return isReception_; }
      set {
        isReception_ = value;
      }
    }

    /// <summary>Field number for the "IsArrange" field.</summary>
    public const int IsArrangeFieldNumber = 4;
    private bool isArrange_;
    /// <summary>
    ///是否到达
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsArrange {
      get { return isArrange_; }
      set {
        isArrange_ = value;
      }
    }

    /// <summary>Field number for the "ArriveDate" field.</summary>
    public const int ArriveDateFieldNumber = 5;
    private string arriveDate_ = "";
    /// <summary>
    ///到达时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArriveDate {
      get { return arriveDate_; }
      set {
        arriveDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LeaveDate" field.</summary>
    public const int LeaveDateFieldNumber = 6;
    private string leaveDate_ = "";
    /// <summary>
    ///离开时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaveDate {
      get { return leaveDate_; }
      set {
        leaveDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Hotel" field.</summary>
    public const int HotelFieldNumber = 7;
    private string hotel_ = "";
    /// <summary>
    ///酒店
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hotel {
      get { return hotel_; }
      set {
        hotel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Receptioner" field.</summary>
    public const int ReceptionerFieldNumber = 8;
    private string receptioner_ = "";
    /// <summary>
    ///接待人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Receptioner {
      get { return receptioner_; }
      set {
        receptioner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceptionStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceptionStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceptionID != other.ReceptionID) return false;
      if (MemberPK != other.MemberPK) return false;
      if (IsReception != other.IsReception) return false;
      if (IsArrange != other.IsArrange) return false;
      if (ArriveDate != other.ArriveDate) return false;
      if (LeaveDate != other.LeaveDate) return false;
      if (Hotel != other.Hotel) return false;
      if (Receptioner != other.Receptioner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceptionID.Length != 0) hash ^= ReceptionID.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (IsReception != false) hash ^= IsReception.GetHashCode();
      if (IsArrange != false) hash ^= IsArrange.GetHashCode();
      if (ArriveDate.Length != 0) hash ^= ArriveDate.GetHashCode();
      if (LeaveDate.Length != 0) hash ^= LeaveDate.GetHashCode();
      if (Hotel.Length != 0) hash ^= Hotel.GetHashCode();
      if (Receptioner.Length != 0) hash ^= Receptioner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceptionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReceptionID);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberPK);
      }
      if (IsReception != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsReception);
      }
      if (IsArrange != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsArrange);
      }
      if (ArriveDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ArriveDate);
      }
      if (LeaveDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LeaveDate);
      }
      if (Hotel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Hotel);
      }
      if (Receptioner.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Receptioner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceptionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceptionID);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (IsReception != false) {
        size += 1 + 1;
      }
      if (IsArrange != false) {
        size += 1 + 1;
      }
      if (ArriveDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArriveDate);
      }
      if (LeaveDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaveDate);
      }
      if (Hotel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hotel);
      }
      if (Receptioner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Receptioner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceptionStruct other) {
      if (other == null) {
        return;
      }
      if (other.ReceptionID.Length != 0) {
        ReceptionID = other.ReceptionID;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.IsReception != false) {
        IsReception = other.IsReception;
      }
      if (other.IsArrange != false) {
        IsArrange = other.IsArrange;
      }
      if (other.ArriveDate.Length != 0) {
        ArriveDate = other.ArriveDate;
      }
      if (other.LeaveDate.Length != 0) {
        LeaveDate = other.LeaveDate;
      }
      if (other.Hotel.Length != 0) {
        Hotel = other.Hotel;
      }
      if (other.Receptioner.Length != 0) {
        Receptioner = other.Receptioner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReceptionID = input.ReadString();
            break;
          }
          case 18: {
            MemberPK = input.ReadString();
            break;
          }
          case 24: {
            IsReception = input.ReadBool();
            break;
          }
          case 32: {
            IsArrange = input.ReadBool();
            break;
          }
          case 42: {
            ArriveDate = input.ReadString();
            break;
          }
          case 50: {
            LeaveDate = input.ReadString();
            break;
          }
          case 58: {
            Hotel = input.ReadString();
            break;
          }
          case 66: {
            Receptioner = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceptionID : pb::IMessage<ReceptionID> {
    private static readonly pb::MessageParser<ReceptionID> _parser = new pb::MessageParser<ReceptionID>(() => new ReceptionID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceptionID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionID(ReceptionID other) : this() {
      receptionID_ = other.receptionID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceptionID Clone() {
      return new ReceptionID(this);
    }

    /// <summary>Field number for the "ReceptionID" field.</summary>
    public const int ReceptionID_FieldNumber = 1;
    private string receptionID_ = "";
    /// <summary>
    ///	接待id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceptionID_ {
      get { return receptionID_; }
      set {
        receptionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceptionID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceptionID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceptionID_ != other.ReceptionID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReceptionID_.Length != 0) hash ^= ReceptionID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReceptionID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReceptionID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReceptionID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReceptionID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceptionID other) {
      if (other == null) {
        return;
      }
      if (other.ReceptionID_.Length != 0) {
        ReceptionID_ = other.ReceptionID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReceptionID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PolicyList : pb::IMessage<PolicyList> {
    private static readonly pb::MessageParser<PolicyList> _parser = new pb::MessageParser<PolicyList>(() => new PolicyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolicyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyList(PolicyList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyList Clone() {
      return new PolicyList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.PolicyStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.PolicyStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.PolicyStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.PolicyStruct>();
    /// <summary>
    ///会议保单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.PolicyStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///总数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolicyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolicyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolicyList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PolicyID : pb::IMessage<PolicyID> {
    private static readonly pb::MessageParser<PolicyID> _parser = new pb::MessageParser<PolicyID>(() => new PolicyID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolicyID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyID(PolicyID other) : this() {
      policyID_ = other.policyID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyID Clone() {
      return new PolicyID(this);
    }

    /// <summary>Field number for the "PolicyID" field.</summary>
    public const int PolicyID_FieldNumber = 1;
    private string policyID_ = "";
    /// <summary>
    ///	保单id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyID_ {
      get { return policyID_; }
      set {
        policyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolicyID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolicyID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyID_ != other.PolicyID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyID_.Length != 0) hash ^= PolicyID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PolicyID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PolicyID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolicyID other) {
      if (other == null) {
        return;
      }
      if (other.PolicyID_.Length != 0) {
        PolicyID_ = other.PolicyID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PolicyStruct : pb::IMessage<PolicyStruct> {
    private static readonly pb::MessageParser<PolicyStruct> _parser = new pb::MessageParser<PolicyStruct>(() => new PolicyStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolicyStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyStruct(PolicyStruct other) : this() {
      policyID_ = other.policyID_;
      companyNameTranslation_ = other.companyNameTranslation_;
      companyID_ = other.companyID_;
      country_ = other.country_;
      countryID_ = other.countryID_;
      address_ = other.address_;
      postCode_ = other.postCode_;
      contactName_ = other.contactName_;
      eMail_ = other.eMail_;
      tel_ = other.tel_;
      mobile_ = other.mobile_;
      webSite_ = other.webSite_;
      isDelete_ = other.isDelete_;
      adminName_ = other.adminName_;
      adminID_ = other.adminID_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      deleteOn_ = other.deleteOn_;
      deleteBy_ = other.deleteBy_;
      year_ = other.year_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyStruct Clone() {
      return new PolicyStruct(this);
    }

    /// <summary>Field number for the "PolicyID" field.</summary>
    public const int PolicyIDFieldNumber = 1;
    private string policyID_ = "";
    /// <summary>
    ///保单id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyID {
      get { return policyID_; }
      set {
        policyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyNameTranslation" field.</summary>
    public const int CompanyNameTranslationFieldNumber = 2;
    private string companyNameTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameTranslation {
      get { return companyNameTranslation_; }
      set {
        companyNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyID" field.</summary>
    public const int CompanyIDFieldNumber = 3;
    private string companyID_ = "";
    /// <summary>
    ///公司id，没有则传空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyID {
      get { return companyID_; }
      set {
        companyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 4;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryID" field.</summary>
    public const int CountryIDFieldNumber = 5;
    private string countryID_ = "";
    /// <summary>
    ///国家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryID {
      get { return countryID_; }
      set {
        countryID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 6;
    private string address_ = "";
    /// <summary>
    ///地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PostCode" field.</summary>
    public const int PostCodeFieldNumber = 7;
    private string postCode_ = "";
    /// <summary>
    ///邮编
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostCode {
      get { return postCode_; }
      set {
        postCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContactName" field.</summary>
    public const int ContactNameFieldNumber = 8;
    private string contactName_ = "";
    /// <summary>
    ///联系人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactName {
      get { return contactName_; }
      set {
        contactName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EMail" field.</summary>
    public const int EMailFieldNumber = 9;
    private string eMail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EMail {
      get { return eMail_; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tel" field.</summary>
    public const int TelFieldNumber = 10;
    private string tel_ = "";
    /// <summary>
    ///电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 11;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebSite" field.</summary>
    public const int WebSiteFieldNumber = 12;
    private string webSite_ = "";
    /// <summary>
    ///网址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 13;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "AdminName" field.</summary>
    public const int AdminNameFieldNumber = 14;
    private string adminName_ = "";
    /// <summary>
    ///业务员名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdminName {
      get { return adminName_; }
      set {
        adminName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AdminID" field.</summary>
    public const int AdminIDFieldNumber = 15;
    private string adminID_ = "";
    /// <summary>
    ///业务员id，没有则传空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdminID {
      get { return adminID_; }
      set {
        adminID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 16;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间，自动生成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 17;
    private string createdBy_ = "";
    /// <summary>
    ///创建人（创建信息时必传）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 18;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间，自动生成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 19;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人（修改时必传）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DeleteOn" field.</summary>
    public const int DeleteOnFieldNumber = 20;
    private string deleteOn_ = "";
    /// <summary>
    ///删除时间，自动生成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeleteOn {
      get { return deleteOn_; }
      set {
        deleteOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DeleteBy" field.</summary>
    public const int DeleteByFieldNumber = 21;
    private string deleteBy_ = "";
    /// <summary>
    ///删除人（删除时必传）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeleteBy {
      get { return deleteBy_; }
      set {
        deleteBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 22;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 23;
    private string score_ = "";
    /// <summary>
    ///来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Score {
      get { return score_; }
      set {
        score_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolicyStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolicyStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyID != other.PolicyID) return false;
      if (CompanyNameTranslation != other.CompanyNameTranslation) return false;
      if (CompanyID != other.CompanyID) return false;
      if (Country != other.Country) return false;
      if (CountryID != other.CountryID) return false;
      if (Address != other.Address) return false;
      if (PostCode != other.PostCode) return false;
      if (ContactName != other.ContactName) return false;
      if (EMail != other.EMail) return false;
      if (Tel != other.Tel) return false;
      if (Mobile != other.Mobile) return false;
      if (WebSite != other.WebSite) return false;
      if (IsDelete != other.IsDelete) return false;
      if (AdminName != other.AdminName) return false;
      if (AdminID != other.AdminID) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (DeleteOn != other.DeleteOn) return false;
      if (DeleteBy != other.DeleteBy) return false;
      if (Year != other.Year) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyID.Length != 0) hash ^= PolicyID.GetHashCode();
      if (CompanyNameTranslation.Length != 0) hash ^= CompanyNameTranslation.GetHashCode();
      if (CompanyID.Length != 0) hash ^= CompanyID.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (CountryID.Length != 0) hash ^= CountryID.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PostCode.Length != 0) hash ^= PostCode.GetHashCode();
      if (ContactName.Length != 0) hash ^= ContactName.GetHashCode();
      if (EMail.Length != 0) hash ^= EMail.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (AdminName.Length != 0) hash ^= AdminName.GetHashCode();
      if (AdminID.Length != 0) hash ^= AdminID.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (DeleteOn.Length != 0) hash ^= DeleteOn.GetHashCode();
      if (DeleteBy.Length != 0) hash ^= DeleteBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (Score.Length != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PolicyID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyID);
      }
      if (CompanyNameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyNameTranslation);
      }
      if (CompanyID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyID);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Country);
      }
      if (CountryID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CountryID);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Address);
      }
      if (PostCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PostCode);
      }
      if (ContactName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContactName);
      }
      if (EMail.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EMail);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Tel);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Mobile);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(WebSite);
      }
      if (IsDelete != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsDelete);
      }
      if (AdminName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(AdminName);
      }
      if (AdminID.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(AdminID);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ModifiedBy);
      }
      if (DeleteOn.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DeleteOn);
      }
      if (DeleteBy.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(DeleteBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Year);
      }
      if (Score.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PolicyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyID);
      }
      if (CompanyNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameTranslation);
      }
      if (CompanyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyID);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (CountryID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryID);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostCode);
      }
      if (ContactName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactName);
      }
      if (EMail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (Tel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (WebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (AdminName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdminName);
      }
      if (AdminID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdminID);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (DeleteOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeleteOn);
      }
      if (DeleteBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeleteBy);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (Score.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolicyStruct other) {
      if (other == null) {
        return;
      }
      if (other.PolicyID.Length != 0) {
        PolicyID = other.PolicyID;
      }
      if (other.CompanyNameTranslation.Length != 0) {
        CompanyNameTranslation = other.CompanyNameTranslation;
      }
      if (other.CompanyID.Length != 0) {
        CompanyID = other.CompanyID;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.CountryID.Length != 0) {
        CountryID = other.CountryID;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PostCode.Length != 0) {
        PostCode = other.PostCode;
      }
      if (other.ContactName.Length != 0) {
        ContactName = other.ContactName;
      }
      if (other.EMail.Length != 0) {
        EMail = other.EMail;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.AdminName.Length != 0) {
        AdminName = other.AdminName;
      }
      if (other.AdminID.Length != 0) {
        AdminID = other.AdminID;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.DeleteOn.Length != 0) {
        DeleteOn = other.DeleteOn;
      }
      if (other.DeleteBy.Length != 0) {
        DeleteBy = other.DeleteBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.Score.Length != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyID = input.ReadString();
            break;
          }
          case 18: {
            CompanyNameTranslation = input.ReadString();
            break;
          }
          case 26: {
            CompanyID = input.ReadString();
            break;
          }
          case 34: {
            Country = input.ReadString();
            break;
          }
          case 42: {
            CountryID = input.ReadString();
            break;
          }
          case 50: {
            Address = input.ReadString();
            break;
          }
          case 58: {
            PostCode = input.ReadString();
            break;
          }
          case 66: {
            ContactName = input.ReadString();
            break;
          }
          case 74: {
            EMail = input.ReadString();
            break;
          }
          case 82: {
            Tel = input.ReadString();
            break;
          }
          case 90: {
            Mobile = input.ReadString();
            break;
          }
          case 98: {
            WebSite = input.ReadString();
            break;
          }
          case 104: {
            IsDelete = input.ReadBool();
            break;
          }
          case 114: {
            AdminName = input.ReadString();
            break;
          }
          case 122: {
            AdminID = input.ReadString();
            break;
          }
          case 130: {
            CreatedOn = input.ReadString();
            break;
          }
          case 138: {
            CreatedBy = input.ReadString();
            break;
          }
          case 146: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 154: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 162: {
            DeleteOn = input.ReadString();
            break;
          }
          case 170: {
            DeleteBy = input.ReadString();
            break;
          }
          case 178: {
            Year = input.ReadString();
            break;
          }
          case 186: {
            Score = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteInfo : pb::IMessage<DeleteInfo> {
    private static readonly pb::MessageParser<DeleteInfo> _parser = new pb::MessageParser<DeleteInfo>(() => new DeleteInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfo(DeleteInfo other) : this() {
      policyID_ = other.policyID_;
      userName_ = other.userName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfo Clone() {
      return new DeleteInfo(this);
    }

    /// <summary>Field number for the "PolicyID" field.</summary>
    public const int PolicyIDFieldNumber = 1;
    private string policyID_ = "";
    /// <summary>
    ///保单id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyID {
      get { return policyID_; }
      set {
        policyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    /// <summary>
    ///删除人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyID != other.PolicyID) return false;
      if (UserName != other.UserName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyID.Length != 0) hash ^= PolicyID.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PolicyID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyID);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PolicyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyID);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInfo other) {
      if (other == null) {
        return;
      }
      if (other.PolicyID.Length != 0) {
        PolicyID = other.PolicyID;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyID = input.ReadString();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePolicyInfo : pb::IMessage<CreatePolicyInfo> {
    private static readonly pb::MessageParser<CreatePolicyInfo> _parser = new pb::MessageParser<CreatePolicyInfo>(() => new CreatePolicyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePolicyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePolicyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePolicyInfo(CreatePolicyInfo other) : this() {
      PolicyStruct = other.policyStruct_ != null ? other.PolicyStruct.Clone() : null;
      userMaxForum_ = other.userMaxForum_;
      userPK_ = other.userPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePolicyInfo Clone() {
      return new CreatePolicyInfo(this);
    }

    /// <summary>Field number for the "PolicyStruct" field.</summary>
    public const int PolicyStructFieldNumber = 1;
    private global::GrpcConferenceService.PolicyStruct policyStruct_;
    /// <summary>
    ///保单对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.PolicyStruct PolicyStruct {
      get { return policyStruct_; }
      set {
        policyStruct_ = value;
      }
    }

    /// <summary>Field number for the "UserMaxForum" field.</summary>
    public const int UserMaxForumFieldNumber = 2;
    private int userMaxForum_;
    /// <summary>
    ///最大个人保单数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserMaxForum {
      get { return userMaxForum_; }
      set {
        userMaxForum_ = value;
      }
    }

    /// <summary>Field number for the "UserPK" field.</summary>
    public const int UserPKFieldNumber = 3;
    private string userPK_ = "";
    /// <summary>
    ///用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserPK {
      get { return userPK_; }
      set {
        userPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePolicyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePolicyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PolicyStruct, other.PolicyStruct)) return false;
      if (UserMaxForum != other.UserMaxForum) return false;
      if (UserPK != other.UserPK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (policyStruct_ != null) hash ^= PolicyStruct.GetHashCode();
      if (UserMaxForum != 0) hash ^= UserMaxForum.GetHashCode();
      if (UserPK.Length != 0) hash ^= UserPK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (policyStruct_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PolicyStruct);
      }
      if (UserMaxForum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserMaxForum);
      }
      if (UserPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserPK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (policyStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolicyStruct);
      }
      if (UserMaxForum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserMaxForum);
      }
      if (UserPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePolicyInfo other) {
      if (other == null) {
        return;
      }
      if (other.policyStruct_ != null) {
        if (policyStruct_ == null) {
          policyStruct_ = new global::GrpcConferenceService.PolicyStruct();
        }
        PolicyStruct.MergeFrom(other.PolicyStruct);
      }
      if (other.UserMaxForum != 0) {
        UserMaxForum = other.UserMaxForum;
      }
      if (other.UserPK.Length != 0) {
        UserPK = other.UserPK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (policyStruct_ == null) {
              policyStruct_ = new global::GrpcConferenceService.PolicyStruct();
            }
            input.ReadMessage(policyStruct_);
            break;
          }
          case 16: {
            UserMaxForum = input.ReadInt32();
            break;
          }
          case 26: {
            UserPK = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserName : pb::IMessage<UserName> {
    private static readonly pb::MessageParser<UserName> _parser = new pb::MessageParser<UserName>(() => new UserName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserName(UserName other) : this() {
      userName_ = other.userName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserName Clone() {
      return new UserName(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserName_FieldNumber = 1;
    private string userName_ = "";
    /// <summary>
    ///	用户名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName_ {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName_ != other.UserName_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName_.Length != 0) hash ^= UserName_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserName other) {
      if (other == null) {
        return;
      }
      if (other.UserName_.Length != 0) {
        UserName_ = other.UserName_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PolicyInfoStruct : pb::IMessage<PolicyInfoStruct> {
    private static readonly pb::MessageParser<PolicyInfoStruct> _parser = new pb::MessageParser<PolicyInfoStruct>(() => new PolicyInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolicyInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyInfoStruct(PolicyInfoStruct other) : this() {
      policyNumber_ = other.policyNumber_;
      isDisplay_ = other.isDisplay_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyInfoStruct Clone() {
      return new PolicyInfoStruct(this);
    }

    /// <summary>Field number for the "PolicyNumber" field.</summary>
    public const int PolicyNumberFieldNumber = 1;
    private string policyNumber_ = "";
    /// <summary>
    ///剩余保单数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyNumber {
      get { return policyNumber_; }
      set {
        policyNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDisplay" field.</summary>
    public const int IsDisplayFieldNumber = 2;
    private bool isDisplay_;
    /// <summary>
    ///是否显示新增按钮
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDisplay {
      get { return isDisplay_; }
      set {
        isDisplay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolicyInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolicyInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PolicyNumber != other.PolicyNumber) return false;
      if (IsDisplay != other.IsDisplay) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PolicyNumber.Length != 0) hash ^= PolicyNumber.GetHashCode();
      if (IsDisplay != false) hash ^= IsDisplay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PolicyNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PolicyNumber);
      }
      if (IsDisplay != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsDisplay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PolicyNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyNumber);
      }
      if (IsDisplay != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolicyInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.PolicyNumber.Length != 0) {
        PolicyNumber = other.PolicyNumber;
      }
      if (other.IsDisplay != false) {
        IsDisplay = other.IsDisplay;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PolicyNumber = input.ReadString();
            break;
          }
          case 16: {
            IsDisplay = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantConferenceMapList : pb::IMessage<ParticipantConferenceMapList> {
    private static readonly pb::MessageParser<ParticipantConferenceMapList> _parser = new pb::MessageParser<ParticipantConferenceMapList>(() => new ParticipantConferenceMapList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantConferenceMapList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapList(ParticipantConferenceMapList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapList Clone() {
      return new ParticipantConferenceMapList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.ParticipantConferenceMapStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.ParticipantConferenceMapStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.ParticipantConferenceMapStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.ParticipantConferenceMapStruct>();
    /// <summary>
    ///会议嘉宾关系集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.ParticipantConferenceMapStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantConferenceMapList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantConferenceMapList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantConferenceMapList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantConferenceMapStruct : pb::IMessage<ParticipantConferenceMapStruct> {
    private static readonly pb::MessageParser<ParticipantConferenceMapStruct> _parser = new pb::MessageParser<ParticipantConferenceMapStruct>(() => new ParticipantConferenceMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantConferenceMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapStruct(ParticipantConferenceMapStruct other) : this() {
      participantConferenceMapID_ = other.participantConferenceMapID_;
      participantID_ = other.participantID_;
      iMGSRC_ = other.iMGSRC_;
      sessionConferenceID_ = other.sessionConferenceID_;
      sessionCN_ = other.sessionCN_;
      sessionEN_ = other.sessionEN_;
      speechTimeCN_ = other.speechTimeCN_;
      speechTimeEN_ = other.speechTimeEN_;
      hasPersonInfo_ = other.hasPersonInfo_;
      participantGroupID_ = other.participantGroupID_;
      abstractDraftID_ = other.abstractDraftID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapStruct Clone() {
      return new ParticipantConferenceMapStruct(this);
    }

    /// <summary>Field number for the "ParticipantConferenceMapID" field.</summary>
    public const int ParticipantConferenceMapIDFieldNumber = 1;
    private string participantConferenceMapID_ = "";
    /// <summary>
    ///会议嘉宾关系id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantConferenceMapID {
      get { return participantConferenceMapID_; }
      set {
        participantConferenceMapID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 2;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IMGSRC" field.</summary>
    public const int IMGSRCFieldNumber = 3;
    private string iMGSRC_ = "";
    /// <summary>
    ///图片路劲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IMGSRC {
      get { return iMGSRC_; }
      set {
        iMGSRC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceID" field.</summary>
    public const int SessionConferenceIDFieldNumber = 4;
    private string sessionConferenceID_ = "";
    /// <summary>
    ///二级会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceID {
      get { return sessionConferenceID_; }
      set {
        sessionConferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionCN" field.</summary>
    public const int SessionCNFieldNumber = 5;
    private string sessionCN_ = "";
    /// <summary>
    ///二级会议中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionCN {
      get { return sessionCN_; }
      set {
        sessionCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionEN" field.</summary>
    public const int SessionENFieldNumber = 6;
    private string sessionEN_ = "";
    /// <summary>
    ///二级会议英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionEN {
      get { return sessionEN_; }
      set {
        sessionEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SpeechTimeCN" field.</summary>
    public const int SpeechTimeCNFieldNumber = 7;
    private string speechTimeCN_ = "";
    /// <summary>
    ///演讲时间中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpeechTimeCN {
      get { return speechTimeCN_; }
      set {
        speechTimeCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SpeechTimeEN" field.</summary>
    public const int SpeechTimeENFieldNumber = 8;
    private string speechTimeEN_ = "";
    /// <summary>
    ///演讲时间英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpeechTimeEN {
      get { return speechTimeEN_; }
      set {
        speechTimeEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HasPersonInfo" field.</summary>
    public const int HasPersonInfoFieldNumber = 9;
    private bool hasPersonInfo_;
    /// <summary>
    ///是否有人员信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPersonInfo {
      get { return hasPersonInfo_; }
      set {
        hasPersonInfo_ = value;
      }
    }

    /// <summary>Field number for the "ParticipantGroupID" field.</summary>
    public const int ParticipantGroupIDFieldNumber = 10;
    private string participantGroupID_ = "";
    /// <summary>
    ///嘉宾组id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantGroupID {
      get { return participantGroupID_; }
      set {
        participantGroupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AbstractDraftID" field.</summary>
    public const int AbstractDraftIDFieldNumber = 11;
    private string abstractDraftID_ = "";
    /// <summary>
    ///摘要id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbstractDraftID {
      get { return abstractDraftID_; }
      set {
        abstractDraftID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantConferenceMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantConferenceMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantConferenceMapID != other.ParticipantConferenceMapID) return false;
      if (ParticipantID != other.ParticipantID) return false;
      if (IMGSRC != other.IMGSRC) return false;
      if (SessionConferenceID != other.SessionConferenceID) return false;
      if (SessionCN != other.SessionCN) return false;
      if (SessionEN != other.SessionEN) return false;
      if (SpeechTimeCN != other.SpeechTimeCN) return false;
      if (SpeechTimeEN != other.SpeechTimeEN) return false;
      if (HasPersonInfo != other.HasPersonInfo) return false;
      if (ParticipantGroupID != other.ParticipantGroupID) return false;
      if (AbstractDraftID != other.AbstractDraftID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantConferenceMapID.Length != 0) hash ^= ParticipantConferenceMapID.GetHashCode();
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (IMGSRC.Length != 0) hash ^= IMGSRC.GetHashCode();
      if (SessionConferenceID.Length != 0) hash ^= SessionConferenceID.GetHashCode();
      if (SessionCN.Length != 0) hash ^= SessionCN.GetHashCode();
      if (SessionEN.Length != 0) hash ^= SessionEN.GetHashCode();
      if (SpeechTimeCN.Length != 0) hash ^= SpeechTimeCN.GetHashCode();
      if (SpeechTimeEN.Length != 0) hash ^= SpeechTimeEN.GetHashCode();
      if (HasPersonInfo != false) hash ^= HasPersonInfo.GetHashCode();
      if (ParticipantGroupID.Length != 0) hash ^= ParticipantGroupID.GetHashCode();
      if (AbstractDraftID.Length != 0) hash ^= AbstractDraftID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantConferenceMapID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantConferenceMapID);
      }
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantID);
      }
      if (IMGSRC.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IMGSRC);
      }
      if (SessionConferenceID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionConferenceID);
      }
      if (SessionCN.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionCN);
      }
      if (SessionEN.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SessionEN);
      }
      if (SpeechTimeCN.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SpeechTimeCN);
      }
      if (SpeechTimeEN.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SpeechTimeEN);
      }
      if (HasPersonInfo != false) {
        output.WriteRawTag(72);
        output.WriteBool(HasPersonInfo);
      }
      if (ParticipantGroupID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ParticipantGroupID);
      }
      if (AbstractDraftID.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AbstractDraftID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantConferenceMapID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantConferenceMapID);
      }
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (IMGSRC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IMGSRC);
      }
      if (SessionConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceID);
      }
      if (SessionCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionCN);
      }
      if (SessionEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionEN);
      }
      if (SpeechTimeCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpeechTimeCN);
      }
      if (SpeechTimeEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpeechTimeEN);
      }
      if (HasPersonInfo != false) {
        size += 1 + 1;
      }
      if (ParticipantGroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantGroupID);
      }
      if (AbstractDraftID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbstractDraftID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantConferenceMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantConferenceMapID.Length != 0) {
        ParticipantConferenceMapID = other.ParticipantConferenceMapID;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.IMGSRC.Length != 0) {
        IMGSRC = other.IMGSRC;
      }
      if (other.SessionConferenceID.Length != 0) {
        SessionConferenceID = other.SessionConferenceID;
      }
      if (other.SessionCN.Length != 0) {
        SessionCN = other.SessionCN;
      }
      if (other.SessionEN.Length != 0) {
        SessionEN = other.SessionEN;
      }
      if (other.SpeechTimeCN.Length != 0) {
        SpeechTimeCN = other.SpeechTimeCN;
      }
      if (other.SpeechTimeEN.Length != 0) {
        SpeechTimeEN = other.SpeechTimeEN;
      }
      if (other.HasPersonInfo != false) {
        HasPersonInfo = other.HasPersonInfo;
      }
      if (other.ParticipantGroupID.Length != 0) {
        ParticipantGroupID = other.ParticipantGroupID;
      }
      if (other.AbstractDraftID.Length != 0) {
        AbstractDraftID = other.AbstractDraftID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantConferenceMapID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantID = input.ReadString();
            break;
          }
          case 26: {
            IMGSRC = input.ReadString();
            break;
          }
          case 34: {
            SessionConferenceID = input.ReadString();
            break;
          }
          case 42: {
            SessionCN = input.ReadString();
            break;
          }
          case 50: {
            SessionEN = input.ReadString();
            break;
          }
          case 58: {
            SpeechTimeCN = input.ReadString();
            break;
          }
          case 66: {
            SpeechTimeEN = input.ReadString();
            break;
          }
          case 72: {
            HasPersonInfo = input.ReadBool();
            break;
          }
          case 82: {
            ParticipantGroupID = input.ReadString();
            break;
          }
          case 90: {
            AbstractDraftID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ParticipantConferenceMapID : pb::IMessage<ParticipantConferenceMapID> {
    private static readonly pb::MessageParser<ParticipantConferenceMapID> _parser = new pb::MessageParser<ParticipantConferenceMapID>(() => new ParticipantConferenceMapID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantConferenceMapID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapID(ParticipantConferenceMapID other) : this() {
      participantConferenceMapID_ = other.participantConferenceMapID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantConferenceMapID Clone() {
      return new ParticipantConferenceMapID(this);
    }

    /// <summary>Field number for the "ParticipantConferenceMapID" field.</summary>
    public const int ParticipantConferenceMapID_FieldNumber = 1;
    private string participantConferenceMapID_ = "";
    /// <summary>
    ///会议嘉宾关系id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantConferenceMapID_ {
      get { return participantConferenceMapID_; }
      set {
        participantConferenceMapID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantConferenceMapID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantConferenceMapID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantConferenceMapID_ != other.ParticipantConferenceMapID_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantConferenceMapID_.Length != 0) hash ^= ParticipantConferenceMapID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantConferenceMapID_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantConferenceMapID_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantConferenceMapID_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantConferenceMapID_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantConferenceMapID other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantConferenceMapID_.Length != 0) {
        ParticipantConferenceMapID_ = other.ParticipantConferenceMapID_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantConferenceMapID_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HistoryPolicyList : pb::IMessage<HistoryPolicyList> {
    private static readonly pb::MessageParser<HistoryPolicyList> _parser = new pb::MessageParser<HistoryPolicyList>(() => new HistoryPolicyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryPolicyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyList(HistoryPolicyList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyList Clone() {
      return new HistoryPolicyList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceService.HistoryPolicyStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceService.HistoryPolicyStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceService.HistoryPolicyStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceService.HistoryPolicyStruct>();
    /// <summary>
    ///所有信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceService.HistoryPolicyStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryPolicyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryPolicyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryPolicyList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HistoryPolicyStruct : pb::IMessage<HistoryPolicyStruct> {
    private static readonly pb::MessageParser<HistoryPolicyStruct> _parser = new pb::MessageParser<HistoryPolicyStruct>(() => new HistoryPolicyStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryPolicyStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyStruct(HistoryPolicyStruct other) : this() {
      historyPolicyID_ = other.historyPolicyID_;
      policyID_ = other.policyID_;
      companyNameTranslation_ = other.companyNameTranslation_;
      country_ = other.country_;
      address_ = other.address_;
      postCode_ = other.postCode_;
      contactName_ = other.contactName_;
      eMail_ = other.eMail_;
      tel_ = other.tel_;
      mobile_ = other.mobile_;
      webSite_ = other.webSite_;
      ownerName_ = other.ownerName_;
      ownerID_ = other.ownerID_;
      operation_ = other.operation_;
      operator_ = other.operator_;
      operationTime_ = other.operationTime_;
      year_ = other.year_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryPolicyStruct Clone() {
      return new HistoryPolicyStruct(this);
    }

    /// <summary>Field number for the "HistoryPolicyID" field.</summary>
    public const int HistoryPolicyIDFieldNumber = 1;
    private string historyPolicyID_ = "";
    /// <summary>
    ///主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HistoryPolicyID {
      get { return historyPolicyID_; }
      set {
        historyPolicyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PolicyID" field.</summary>
    public const int PolicyIDFieldNumber = 2;
    private string policyID_ = "";
    /// <summary>
    ///保单id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PolicyID {
      get { return policyID_; }
      set {
        policyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyNameTranslation" field.</summary>
    public const int CompanyNameTranslationFieldNumber = 3;
    private string companyNameTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameTranslation {
      get { return companyNameTranslation_; }
      set {
        companyNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 4;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 5;
    private string address_ = "";
    /// <summary>
    ///地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PostCode" field.</summary>
    public const int PostCodeFieldNumber = 6;
    private string postCode_ = "";
    /// <summary>
    ///邮编
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostCode {
      get { return postCode_; }
      set {
        postCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContactName" field.</summary>
    public const int ContactNameFieldNumber = 7;
    private string contactName_ = "";
    /// <summary>
    ///联系人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactName {
      get { return contactName_; }
      set {
        contactName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EMail" field.</summary>
    public const int EMailFieldNumber = 8;
    private string eMail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EMail {
      get { return eMail_; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tel" field.</summary>
    public const int TelFieldNumber = 9;
    private string tel_ = "";
    /// <summary>
    ///电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 10;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebSite" field.</summary>
    public const int WebSiteFieldNumber = 11;
    private string webSite_ = "";
    /// <summary>
    ///网址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerName" field.</summary>
    public const int OwnerNameFieldNumber = 12;
    private string ownerName_ = "";
    /// <summary>
    ///管理员名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 13;
    private string ownerID_ = "";
    /// <summary>
    ///管理员pk
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Operation" field.</summary>
    public const int OperationFieldNumber = 14;
    private string operation_ = "";
    /// <summary>
    ///操作
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Operation {
      get { return operation_; }
      set {
        operation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Operator" field.</summary>
    public const int OperatorFieldNumber = 15;
    private string operator_ = "";
    /// <summary>
    ///操作人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Operator {
      get { return operator_; }
      set {
        operator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OperationTime" field.</summary>
    public const int OperationTimeFieldNumber = 16;
    private string operationTime_ = "";
    /// <summary>
    ///操作时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationTime {
      get { return operationTime_; }
      set {
        operationTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 17;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 18;
    private string score_ = "";
    /// <summary>
    ///来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Score {
      get { return score_; }
      set {
        score_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryPolicyStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryPolicyStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HistoryPolicyID != other.HistoryPolicyID) return false;
      if (PolicyID != other.PolicyID) return false;
      if (CompanyNameTranslation != other.CompanyNameTranslation) return false;
      if (Country != other.Country) return false;
      if (Address != other.Address) return false;
      if (PostCode != other.PostCode) return false;
      if (ContactName != other.ContactName) return false;
      if (EMail != other.EMail) return false;
      if (Tel != other.Tel) return false;
      if (Mobile != other.Mobile) return false;
      if (WebSite != other.WebSite) return false;
      if (OwnerName != other.OwnerName) return false;
      if (OwnerID != other.OwnerID) return false;
      if (Operation != other.Operation) return false;
      if (Operator != other.Operator) return false;
      if (OperationTime != other.OperationTime) return false;
      if (Year != other.Year) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HistoryPolicyID.Length != 0) hash ^= HistoryPolicyID.GetHashCode();
      if (PolicyID.Length != 0) hash ^= PolicyID.GetHashCode();
      if (CompanyNameTranslation.Length != 0) hash ^= CompanyNameTranslation.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PostCode.Length != 0) hash ^= PostCode.GetHashCode();
      if (ContactName.Length != 0) hash ^= ContactName.GetHashCode();
      if (EMail.Length != 0) hash ^= EMail.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (Operation.Length != 0) hash ^= Operation.GetHashCode();
      if (Operator.Length != 0) hash ^= Operator.GetHashCode();
      if (OperationTime.Length != 0) hash ^= OperationTime.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (Score.Length != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HistoryPolicyID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HistoryPolicyID);
      }
      if (PolicyID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PolicyID);
      }
      if (CompanyNameTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyNameTranslation);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Country);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Address);
      }
      if (PostCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PostCode);
      }
      if (ContactName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContactName);
      }
      if (EMail.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(EMail);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Tel);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Mobile);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(WebSite);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OwnerName);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OwnerID);
      }
      if (Operation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Operation);
      }
      if (Operator.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Operator);
      }
      if (OperationTime.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(OperationTime);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Year);
      }
      if (Score.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HistoryPolicyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HistoryPolicyID);
      }
      if (PolicyID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PolicyID);
      }
      if (CompanyNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameTranslation);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostCode);
      }
      if (ContactName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactName);
      }
      if (EMail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (Tel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (WebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerID);
      }
      if (Operation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Operation);
      }
      if (Operator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Operator);
      }
      if (OperationTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OperationTime);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (Score.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryPolicyStruct other) {
      if (other == null) {
        return;
      }
      if (other.HistoryPolicyID.Length != 0) {
        HistoryPolicyID = other.HistoryPolicyID;
      }
      if (other.PolicyID.Length != 0) {
        PolicyID = other.PolicyID;
      }
      if (other.CompanyNameTranslation.Length != 0) {
        CompanyNameTranslation = other.CompanyNameTranslation;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PostCode.Length != 0) {
        PostCode = other.PostCode;
      }
      if (other.ContactName.Length != 0) {
        ContactName = other.ContactName;
      }
      if (other.EMail.Length != 0) {
        EMail = other.EMail;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.Operation.Length != 0) {
        Operation = other.Operation;
      }
      if (other.Operator.Length != 0) {
        Operator = other.Operator;
      }
      if (other.OperationTime.Length != 0) {
        OperationTime = other.OperationTime;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.Score.Length != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HistoryPolicyID = input.ReadString();
            break;
          }
          case 18: {
            PolicyID = input.ReadString();
            break;
          }
          case 26: {
            CompanyNameTranslation = input.ReadString();
            break;
          }
          case 34: {
            Country = input.ReadString();
            break;
          }
          case 42: {
            Address = input.ReadString();
            break;
          }
          case 50: {
            PostCode = input.ReadString();
            break;
          }
          case 58: {
            ContactName = input.ReadString();
            break;
          }
          case 66: {
            EMail = input.ReadString();
            break;
          }
          case 74: {
            Tel = input.ReadString();
            break;
          }
          case 82: {
            Mobile = input.ReadString();
            break;
          }
          case 90: {
            WebSite = input.ReadString();
            break;
          }
          case 98: {
            OwnerName = input.ReadString();
            break;
          }
          case 106: {
            OwnerID = input.ReadString();
            break;
          }
          case 114: {
            Operation = input.ReadString();
            break;
          }
          case 122: {
            Operator = input.ReadString();
            break;
          }
          case 130: {
            OperationTime = input.ReadString();
            break;
          }
          case 138: {
            Year = input.ReadString();
            break;
          }
          case 146: {
            Score = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchStruct : pb::IMessage<SearchStruct> {
    private static readonly pb::MessageParser<SearchStruct> _parser = new pb::MessageParser<SearchStruct>(() => new SearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct(SearchStruct other) : this() {
      memEmail_ = other.memEmail_;
      memIsDelete_ = other.memIsDelete_;
      memIsActivation_ = other.memIsActivation_;
      comNameCn_ = other.comNameCn_;
      comNameEn_ = other.comNameEn_;
      comIsDelete_ = other.comIsDelete_;
      comIsVerify_ = other.comIsVerify_;
      roomName_ = other.roomName_;
      seatName_ = other.seatName_;
      addressName_ = other.addressName_;
      roomTypeName_ = other.roomTypeName_;
      massMeetingName_ = other.massMeetingName_;
      subEventName_ = other.subEventName_;
      cFSessionName_ = other.cFSessionName_;
      cFTopicName_ = other.cFTopicName_;
      companyName_ = other.companyName_;
      ower_ = other.ower_;
      perContractNumber_ = other.perContractNumber_;
      participantName_ = other.participantName_;
      contactName_ = other.contactName_;
      showOnFont_ = other.showOnFont_;
      ownerID_ = other.ownerID_;
      year_ = other.year_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct Clone() {
      return new SearchStruct(this);
    }

    /// <summary>Field number for the "memEmail" field.</summary>
    public const int MemEmailFieldNumber = 1;
    private string memEmail_ = "";
    /// <summary>
    ///个人邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memIsDelete" field.</summary>
    public const int MemIsDeleteFieldNumber = 2;
    private bool memIsDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsDelete {
      get { return memIsDelete_; }
      set {
        memIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "memIsActivation" field.</summary>
    public const int MemIsActivationFieldNumber = 3;
    private bool memIsActivation_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsActivation {
      get { return memIsActivation_; }
      set {
        memIsActivation_ = value;
      }
    }

    /// <summary>Field number for the "comNameCn" field.</summary>
    public const int ComNameCnFieldNumber = 4;
    private string comNameCn_ = "";
    /// <summary>
    ///名称中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameCn {
      get { return comNameCn_; }
      set {
        comNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comNameEn" field.</summary>
    public const int ComNameEnFieldNumber = 5;
    private string comNameEn_ = "";
    /// <summary>
    ///名称英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameEn {
      get { return comNameEn_; }
      set {
        comNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comIsDelete" field.</summary>
    public const int ComIsDeleteFieldNumber = 6;
    private bool comIsDelete_;
    /// <summary>
    ///公司是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsDelete {
      get { return comIsDelete_; }
      set {
        comIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "comIsVerify" field.</summary>
    public const int ComIsVerifyFieldNumber = 7;
    private bool comIsVerify_;
    /// <summary>
    ///是否审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsVerify {
      get { return comIsVerify_; }
      set {
        comIsVerify_ = value;
      }
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 8;
    private string roomName_ = "";
    /// <summary>
    ///会议室名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seatName" field.</summary>
    public const int SeatNameFieldNumber = 9;
    private string seatName_ = "";
    /// <summary>
    ///会议桌名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeatName {
      get { return seatName_; }
      set {
        seatName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressName" field.</summary>
    public const int AddressNameFieldNumber = 10;
    private string addressName_ = "";
    /// <summary>
    ///狐疑地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressName {
      get { return addressName_; }
      set {
        addressName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RoomTypeName" field.</summary>
    public const int RoomTypeNameFieldNumber = 11;
    private string roomTypeName_ = "";
    /// <summary>
    ///房间类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomTypeName {
      get { return roomTypeName_; }
      set {
        roomTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MassMeetingName" field.</summary>
    public const int MassMeetingNameFieldNumber = 12;
    private string massMeetingName_ = "";
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MassMeetingName {
      get { return massMeetingName_; }
      set {
        massMeetingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubEventName" field.</summary>
    public const int SubEventNameFieldNumber = 13;
    private string subEventName_ = "";
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubEventName {
      get { return subEventName_; }
      set {
        subEventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFSessionName" field.</summary>
    public const int CFSessionNameFieldNumber = 14;
    private string cFSessionName_ = "";
    /// <summary>
    ///二级会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFSessionName {
      get { return cFSessionName_; }
      set {
        cFSessionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicName" field.</summary>
    public const int CFTopicNameFieldNumber = 15;
    private string cFTopicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicName {
      get { return cFTopicName_; }
      set {
        cFTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyName" field.</summary>
    public const int CompanyNameFieldNumber = 16;
    private string companyName_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 17;
    private string ower_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 18;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantName" field.</summary>
    public const int ParticipantNameFieldNumber = 19;
    private string participantName_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantName {
      get { return participantName_; }
      set {
        participantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContactName" field.</summary>
    public const int ContactNameFieldNumber = 20;
    private string contactName_ = "";
    /// <summary>
    ///联系人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactName {
      get { return contactName_; }
      set {
        contactName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowOnFont" field.</summary>
    public const int ShowOnFontFieldNumber = 21;
    private string showOnFont_ = "";
    /// <summary>
    ///是否前台显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShowOnFont {
      get { return showOnFont_; }
      set {
        showOnFont_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 22;
    private string ownerID_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 23;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 24;
    private string score_ = "";
    /// <summary>
    ///来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Score {
      get { return score_; }
      set {
        score_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemEmail != other.MemEmail) return false;
      if (MemIsDelete != other.MemIsDelete) return false;
      if (MemIsActivation != other.MemIsActivation) return false;
      if (ComNameCn != other.ComNameCn) return false;
      if (ComNameEn != other.ComNameEn) return false;
      if (ComIsDelete != other.ComIsDelete) return false;
      if (ComIsVerify != other.ComIsVerify) return false;
      if (RoomName != other.RoomName) return false;
      if (SeatName != other.SeatName) return false;
      if (AddressName != other.AddressName) return false;
      if (RoomTypeName != other.RoomTypeName) return false;
      if (MassMeetingName != other.MassMeetingName) return false;
      if (SubEventName != other.SubEventName) return false;
      if (CFSessionName != other.CFSessionName) return false;
      if (CFTopicName != other.CFTopicName) return false;
      if (CompanyName != other.CompanyName) return false;
      if (Ower != other.Ower) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (ParticipantName != other.ParticipantName) return false;
      if (ContactName != other.ContactName) return false;
      if (ShowOnFont != other.ShowOnFont) return false;
      if (OwnerID != other.OwnerID) return false;
      if (Year != other.Year) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemIsDelete != false) hash ^= MemIsDelete.GetHashCode();
      if (MemIsActivation != false) hash ^= MemIsActivation.GetHashCode();
      if (ComNameCn.Length != 0) hash ^= ComNameCn.GetHashCode();
      if (ComNameEn.Length != 0) hash ^= ComNameEn.GetHashCode();
      if (ComIsDelete != false) hash ^= ComIsDelete.GetHashCode();
      if (ComIsVerify != false) hash ^= ComIsVerify.GetHashCode();
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (SeatName.Length != 0) hash ^= SeatName.GetHashCode();
      if (AddressName.Length != 0) hash ^= AddressName.GetHashCode();
      if (RoomTypeName.Length != 0) hash ^= RoomTypeName.GetHashCode();
      if (MassMeetingName.Length != 0) hash ^= MassMeetingName.GetHashCode();
      if (SubEventName.Length != 0) hash ^= SubEventName.GetHashCode();
      if (CFSessionName.Length != 0) hash ^= CFSessionName.GetHashCode();
      if (CFTopicName.Length != 0) hash ^= CFTopicName.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (ParticipantName.Length != 0) hash ^= ParticipantName.GetHashCode();
      if (ContactName.Length != 0) hash ^= ContactName.GetHashCode();
      if (ShowOnFont.Length != 0) hash ^= ShowOnFont.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (Score.Length != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemEmail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemEmail);
      }
      if (MemIsDelete != false) {
        output.WriteRawTag(16);
        output.WriteBool(MemIsDelete);
      }
      if (MemIsActivation != false) {
        output.WriteRawTag(24);
        output.WriteBool(MemIsActivation);
      }
      if (ComNameCn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComNameEn);
      }
      if (ComIsDelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(ComIsDelete);
      }
      if (ComIsVerify != false) {
        output.WriteRawTag(56);
        output.WriteBool(ComIsVerify);
      }
      if (RoomName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RoomName);
      }
      if (SeatName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SeatName);
      }
      if (AddressName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AddressName);
      }
      if (RoomTypeName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RoomTypeName);
      }
      if (MassMeetingName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MassMeetingName);
      }
      if (SubEventName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SubEventName);
      }
      if (CFSessionName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CFSessionName);
      }
      if (CFTopicName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CFTopicName);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CompanyName);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ower);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(PerContractNumber);
      }
      if (ParticipantName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ParticipantName);
      }
      if (ContactName.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ContactName);
      }
      if (ShowOnFont.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ShowOnFont);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(OwnerID);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Year);
      }
      if (Score.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemIsDelete != false) {
        size += 1 + 1;
      }
      if (MemIsActivation != false) {
        size += 1 + 1;
      }
      if (ComNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameEn);
      }
      if (ComIsDelete != false) {
        size += 1 + 1;
      }
      if (ComIsVerify != false) {
        size += 1 + 1;
      }
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (SeatName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatName);
      }
      if (AddressName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressName);
      }
      if (RoomTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomTypeName);
      }
      if (MassMeetingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MassMeetingName);
      }
      if (SubEventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubEventName);
      }
      if (CFSessionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFSessionName);
      }
      if (CFTopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicName);
      }
      if (CompanyName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (Ower.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (PerContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (ParticipantName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ParticipantName);
      }
      if (ContactName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContactName);
      }
      if (ShowOnFont.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ShowOnFont);
      }
      if (OwnerID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerID);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (Score.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemIsDelete != false) {
        MemIsDelete = other.MemIsDelete;
      }
      if (other.MemIsActivation != false) {
        MemIsActivation = other.MemIsActivation;
      }
      if (other.ComNameCn.Length != 0) {
        ComNameCn = other.ComNameCn;
      }
      if (other.ComNameEn.Length != 0) {
        ComNameEn = other.ComNameEn;
      }
      if (other.ComIsDelete != false) {
        ComIsDelete = other.ComIsDelete;
      }
      if (other.ComIsVerify != false) {
        ComIsVerify = other.ComIsVerify;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.SeatName.Length != 0) {
        SeatName = other.SeatName;
      }
      if (other.AddressName.Length != 0) {
        AddressName = other.AddressName;
      }
      if (other.RoomTypeName.Length != 0) {
        RoomTypeName = other.RoomTypeName;
      }
      if (other.MassMeetingName.Length != 0) {
        MassMeetingName = other.MassMeetingName;
      }
      if (other.SubEventName.Length != 0) {
        SubEventName = other.SubEventName;
      }
      if (other.CFSessionName.Length != 0) {
        CFSessionName = other.CFSessionName;
      }
      if (other.CFTopicName.Length != 0) {
        CFTopicName = other.CFTopicName;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.ParticipantName.Length != 0) {
        ParticipantName = other.ParticipantName;
      }
      if (other.ContactName.Length != 0) {
        ContactName = other.ContactName;
      }
      if (other.ShowOnFont.Length != 0) {
        ShowOnFont = other.ShowOnFont;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.Score.Length != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemEmail = input.ReadString();
            break;
          }
          case 16: {
            MemIsDelete = input.ReadBool();
            break;
          }
          case 24: {
            MemIsActivation = input.ReadBool();
            break;
          }
          case 34: {
            ComNameCn = input.ReadString();
            break;
          }
          case 42: {
            ComNameEn = input.ReadString();
            break;
          }
          case 48: {
            ComIsDelete = input.ReadBool();
            break;
          }
          case 56: {
            ComIsVerify = input.ReadBool();
            break;
          }
          case 66: {
            RoomName = input.ReadString();
            break;
          }
          case 74: {
            SeatName = input.ReadString();
            break;
          }
          case 82: {
            AddressName = input.ReadString();
            break;
          }
          case 90: {
            RoomTypeName = input.ReadString();
            break;
          }
          case 98: {
            MassMeetingName = input.ReadString();
            break;
          }
          case 106: {
            SubEventName = input.ReadString();
            break;
          }
          case 114: {
            CFSessionName = input.ReadString();
            break;
          }
          case 122: {
            CFTopicName = input.ReadString();
            break;
          }
          case 130: {
            CompanyName = input.ReadString();
            break;
          }
          case 138: {
            Ower = input.ReadString();
            break;
          }
          case 146: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 154: {
            ParticipantName = input.ReadString();
            break;
          }
          case 162: {
            ContactName = input.ReadString();
            break;
          }
          case 170: {
            ShowOnFont = input.ReadString();
            break;
          }
          case 178: {
            OwnerID = input.ReadString();
            break;
          }
          case 186: {
            Year = input.ReadString();
            break;
          }
          case 194: {
            Score = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateInfoVM : pb::IMessage<CreateInfoVM> {
    private static readonly pb::MessageParser<CreateInfoVM> _parser = new pb::MessageParser<CreateInfoVM>(() => new CreateInfoVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateInfoVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInfoVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInfoVM(CreateInfoVM other) : this() {
      success_ = other.success_;
      createcount_ = other.createcount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateInfoVM Clone() {
      return new CreateInfoVM(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "createcount" field.</summary>
    public const int CreatecountFieldNumber = 2;
    private int createcount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Createcount {
      get { return createcount_; }
      set {
        createcount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateInfoVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateInfoVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Createcount != other.Createcount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Createcount != 0) hash ^= Createcount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Createcount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Createcount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Createcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Createcount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateInfoVM other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Createcount != 0) {
        Createcount = other.Createcount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            Createcount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifiedInfoVM : pb::IMessage<ModifiedInfoVM> {
    private static readonly pb::MessageParser<ModifiedInfoVM> _parser = new pb::MessageParser<ModifiedInfoVM>(() => new ModifiedInfoVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifiedInfoVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifiedInfoVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifiedInfoVM(ModifiedInfoVM other) : this() {
      success_ = other.success_;
      modifiedcount_ = other.modifiedcount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifiedInfoVM Clone() {
      return new ModifiedInfoVM(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modifiedcount" field.</summary>
    public const int ModifiedcountFieldNumber = 2;
    private int modifiedcount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Modifiedcount {
      get { return modifiedcount_; }
      set {
        modifiedcount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifiedInfoVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifiedInfoVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Modifiedcount != other.Modifiedcount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Modifiedcount != 0) hash ^= Modifiedcount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Modifiedcount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Modifiedcount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Modifiedcount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Modifiedcount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifiedInfoVM other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Modifiedcount != 0) {
        Modifiedcount = other.Modifiedcount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            Modifiedcount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteInfoVM : pb::IMessage<DeleteInfoVM> {
    private static readonly pb::MessageParser<DeleteInfoVM> _parser = new pb::MessageParser<DeleteInfoVM>(() => new DeleteInfoVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInfoVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfoVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfoVM(DeleteInfoVM other) : this() {
      success_ = other.success_;
      deletecount_ = other.deletecount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInfoVM Clone() {
      return new DeleteInfoVM(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "deletecount" field.</summary>
    public const int DeletecountFieldNumber = 2;
    private int deletecount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Deletecount {
      get { return deletecount_; }
      set {
        deletecount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInfoVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInfoVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Deletecount != other.Deletecount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Deletecount != 0) hash ^= Deletecount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Deletecount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Deletecount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Deletecount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deletecount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInfoVM other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Deletecount != 0) {
        Deletecount = other.Deletecount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            Deletecount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequestSearch : pb::IMessage<PaginationRequestSearch> {
    private static readonly pb::MessageParser<PaginationRequestSearch> _parser = new pb::MessageParser<PaginationRequestSearch>(() => new PaginationRequestSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequestSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch(PaginationRequestSearch other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch Clone() {
      return new PaginationRequestSearch(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    /// <summary>
    ///pageindex
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    /// <summary>
    ///pagesize
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcConferenceService.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceService.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequestSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequestSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequestSearch other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceService.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceService.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Translation : pb::IMessage<Translation> {
    private static readonly pb::MessageParser<Translation> _parser = new pb::MessageParser<Translation>(() => new Translation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Translation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation(Translation other) : this() {
      cN_ = other.cN_;
      eN_ = other.eN_;
      jP_ = other.jP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation Clone() {
      return new Translation(this);
    }

    /// <summary>Field number for the "CN" field.</summary>
    public const int CNFieldNumber = 1;
    private string cN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CN {
      get { return cN_; }
      set {
        cN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EN" field.</summary>
    public const int ENFieldNumber = 2;
    private string eN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EN {
      get { return eN_; }
      set {
        eN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JP" field.</summary>
    public const int JPFieldNumber = 3;
    private string jP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JP {
      get { return jP_; }
      set {
        jP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Translation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Translation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CN != other.CN) return false;
      if (EN != other.EN) return false;
      if (JP != other.JP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CN.Length != 0) hash ^= CN.GetHashCode();
      if (EN.Length != 0) hash ^= EN.GetHashCode();
      if (JP.Length != 0) hash ^= JP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CN);
      }
      if (EN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EN);
      }
      if (JP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CN);
      }
      if (EN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EN);
      }
      if (JP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Translation other) {
      if (other == null) {
        return;
      }
      if (other.CN.Length != 0) {
        CN = other.CN;
      }
      if (other.EN.Length != 0) {
        EN = other.EN;
      }
      if (other.JP.Length != 0) {
        JP = other.JP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CN = input.ReadString();
            break;
          }
          case 18: {
            EN = input.ReadString();
            break;
          }
          case 26: {
            JP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IDs : pb::IMessage<IDs> {
    private static readonly pb::MessageParser<IDs> _parser = new pb::MessageParser<IDs>(() => new IDs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IDs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDs(IDs other) : this() {
      ids_ = other.ids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDs Clone() {
      return new IDs(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private string ids_ = "";
    /// <summary>
    ///格式:id1,id2,id3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IDs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IDs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ids.Length != 0) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ids.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IDs other) {
      if (other == null) {
        return;
      }
      if (other.Ids.Length != 0) {
        Ids = other.Ids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResBool : pb::IMessage<ResBool> {
    private static readonly pb::MessageParser<ResBool> _parser = new pb::MessageParser<ResBool>(() => new ResBool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceService.GrpcConferenceServiceReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBool(ResBool other) : this() {
      resBool_ = other.resBool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResBool Clone() {
      return new ResBool(this);
    }

    /// <summary>Field number for the "ResBool" field.</summary>
    public const int ResBool_FieldNumber = 1;
    private bool resBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResBool_ {
      get { return resBool_; }
      set {
        resBool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResBool_ != other.ResBool_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResBool_ != false) hash ^= ResBool_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResBool_ != false) {
        output.WriteRawTag(8);
        output.WriteBool(ResBool_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResBool_ != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResBool other) {
      if (other == null) {
        return;
      }
      if (other.ResBool_ != false) {
        ResBool_ = other.ResBool_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResBool_ = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
