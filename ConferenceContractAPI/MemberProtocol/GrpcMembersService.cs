// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcMembersService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcMembersService {

  /// <summary>Holder for reflection information generated from GrpcMembersService.proto</summary>
  public static partial class GrpcMembersServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcMembersService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcMembersServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhHcnBjTWVtYmVyc1NlcnZpY2UucHJvdG8SEkdycGNNZW1iZXJzU2Vydmlj",
            "ZSIuChBHZXRNc2dOdW1SZXF1ZXN0EgwKBE51bTEYASABKAUSDAoETnVtMhgC",
            "IAEoBSIdCg5HZXRNc2dTdW1SZXBseRILCgNTdW0YASABKAUiMQoKUHdkUmVx",
            "dWVzdBIQCghNZW1iZXJQaxgBIAEoCRIRCglNZW1iZXJQd2QYAiABKAkiNgoN",
            "TWVtYmVyUmVxdWVzdBIQCghNZW1FbWFpbBgBIAEoCRITCgtNZW1QYXNzd29y",
            "ZBgCIAEoCSI+ChJNZW1Db250cmFjdFJlcXVlc3QSEwoLTWVtQ29udHJhY3QY",
            "ASABKAkSEwoLTWVtUGFzc3dvcmQYAiABKAkiagoOTG9naW5JbmZvUmVwbHkS",
            "DwoHc3VjY2VzcxgBIAEoCBIQCghtZW1iZXJQaxgCIAEoCRIVCg1tZW1iZXJB",
            "Y2NvdW50GAMgASgJEhEKCWNvbXBhbnlQaxgEIAEoCRILCgNtc2cYBSABKAki",
            "BwoFRW1wdHkiFwoJSWRSZXF1ZXN0EgoKAmlkGAEgASgJIi8KFU1lbWJlckNv",
            "bnRyYWN0UmVxdWVzdBIWCg5NZW1iZXJDb250cmFjdBgBIAEoCSI+ChFQYWdp",
            "bmF0aW9uUmVxdWVzdBIKCgJpZBgBIAEoBRIOCgZvZmZzZXQYAiABKAUSDQoF",
            "bGltaXQYAyABKAUidgoXUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gSCgoCaWQY",
            "ASABKAUSDgoGb2Zmc2V0GAIgASgFEg0KBWxpbWl0GAMgASgFEjAKBnNlYXJj",
            "aBgEIAEoCzIgLkdycGNNZW1iZXJzU2VydmljZS5TZWFyY2hTdHJ1Y3QiQAoM",
            "TWVtYmVyU2VhcmNoEjAKBnNlYXJjaBgEIAEoCzIgLkdycGNNZW1iZXJzU2Vy",
            "dmljZS5TZWFyY2hTdHJ1Y3Qi/gEKDFNlYXJjaFN0cnVjdBIQCghtZW1FbWFp",
            "bBgBIAEoCRITCgttZW1Jc0RlbGV0ZRgCIAEoCBIXCg9tZW1Jc0FjdGl2YXRp",
            "b24YAyABKAgSEQoJY29tTmFtZUNuGAQgASgJEhEKCWNvbU5hbWVFbhgFIAEo",
            "CRITCgtjb21Jc0RlbGV0ZRgGIAEoCBITCgtjb21Jc1ZlcmlmeRgHIAEoCBIS",
            "CgptZW1iZXJOYW1lGAggASgJEhMKC2NvbXBhbnlOYW1lGAkgASgJEhEKCWNv",
            "bXBhbnlQaxgKIAEoCRIQCghzb3VyY2VQaxgLIAEoCRIQCghtZW1iZXJQaxgM",
            "IAEoCSJLCghBcmVhTGlzdBIwCghsaXN0ZGF0YRgBIAMoCzIeLkdycGNNZW1i",
            "ZXJzU2VydmljZS5BcmVhU3RydWN0Eg0KBXRvdGFsGAIgASgFIk8KCk1lbWJl",
            "ckxpc3QSMgoIbGlzdGRhdGEYASADKAsyIC5HcnBjTWVtYmVyc1NlcnZpY2Uu",
            "TWVtYmVyU3RydWN0Eg0KBXRvdGFsGAIgASgFIiAKDE1lbWJlcklkTGlzdBIQ",
            "CghsaXN0ZGF0YRgBIAMoCSJPCgpTb3VyY2VMaXN0EjIKCGxpc3RkYXRhGAEg",
            "AygLMiAuR3JwY01lbWJlcnNTZXJ2aWNlLlNvdXJjZVN0cnVjdBINCgV0b3Rh",
            "bBgCIAEoBSJRCgtDb21wYW55TGlzdBIzCghsaXN0ZGF0YRgBIAMoCzIhLkdy",
            "cGNNZW1iZXJzU2VydmljZS5Db21wYW55U3RydWN0Eg0KBXRvdGFsGAIgASgF",
            "IiIKDkNvbW5wYW55SWRMaXN0EhAKCGxpc3RkYXRhGAEgAygJIlsKEEluZHVz",
            "dHJ5VHlwZUxpc3QSOAoIbGlzdGRhdGEYASADKAsyJi5HcnBjTWVtYmVyc1Nl",
            "cnZpY2UuSW5kdXN0cnlUeXBlU3RydWN0Eg0KBXRvdGFsGAIgASgFIlkKD0Nv",
            "bXBhbnlUeXBlTGlzdBI3CghsaXN0ZGF0YRgBIAMoCzIlLkdycGNNZW1iZXJz",
            "U2VydmljZS5Db21wYW55VHlwZVN0cnVjdBINCgV0b3RhbBgCIAEoBSJWCgpB",
            "cmVhU3RydWN0Eg4KBkFyZWFQSxgBIAEoCRISCgpBcmVhTnVtYmVyGAIgASgJ",
            "EhAKCEFyZWFOYW1lGAMgASgJEhIKCkNpdHlOdW1iZXIYBCABKAkiiwEKFE1l",
            "bWJlckNvbnRyYWN0U3RydWN0EgwKBE1DUGsYASABKAkSEQoJTWVtZWJlclBL",
            "GAIgASgJEhMKC01lbUNvbnRyYWN0GAMgASgJEhcKD01lbUNvbnRyYWN0VHlw",
            "ZRgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJ",
            "IuEFCgxNZW1iZXJTdHJ1Y3QSEAoITWVtYmVyUEsYASABKAkSEAoIU291cmNl",
            "UEsYAiABKAkSEQoJTWVtTmFtZUNuGAMgASgJEhEKCU1lbU5hbWVFbhgEIAEo",
            "CRIQCghNZW1FbWFpbBgFIAEoCRITCgtNZW1QYXNzd29yZBgGIAEoCRIPCgdN",
            "ZW1UeXBlGAcgASgJEhEKCU1lbUdlbmRlchgIIAEoCRIVCg1NZW1EZXBhcnRt",
            "ZW50GAkgASgJEhAKCE1lbVRpdGxlGAogASgJEhMKC01lbVBvc2l0aW9uGAsg",
            "ASgJEhMKC01lbVByb1RpdGxlGAwgASgJEg0KBU1lbVFRGA0gASgJEg4KBk1l",
            "bUZheBgOIAEoCRIOCgZNZW1NU04YDyABKAkSEQoJTWVtTW9iaWxlGBAgASgJ",
            "Eg4KBk1lbVRlbBgRIAEoCRITCgtNZW1Qb3N0Q29kZRgSIAEoCRIYChBNZW1M",
            "YXN0TG9naW5UaW1lGBMgASgJEhIKCk1lbUFkZHJlc3MYFCABKAkSGAoQTWVt",
            "QWRkcmVzc0RldGFpbBgVIAEoCRITCgtNZW1Jc0RlbGV0ZRgWIAEoCBIXCg9N",
            "ZW1Jc0FjdGl2YXRpb24YFyABKAgSEQoJQ3JlYXRlZE9uGBggASgJEhEKCUNy",
            "ZWF0ZWRCeRgZIAEoCRITCgtNb2RlZmllbGRPbhgaIAEoCRITCgtNb2RlZmll",
            "bGRCeRgbIAEoCRIRCglDb21wYW55UEsYHCABKAkSGAoQTWVtQ291bnRyeU5h",
            "bWVDbhgdIAEoCRIYChBNZW1Db3VudHJ5TmFtZUVuGB4gASgJEhIKCk1lbUNv",
            "bXBhbnkYHyABKAkSFQoNQXNzaXN0YW50TmFtZRggIAEoCRIZChFBc3Npc3Rh",
            "bnRQb3NpdGlvbhghIAEoCRIXCg9Bc3Npc3RhbnRNb2JpbGUYIiABKAkSFgoO",
            "QXNzaXN0YW50RW1haWwYIyABKAkiugUKE01lbWJlckFjY291bnRTdHJ1Y3QS",
            "EAoITWVtYmVyUEsYASABKAkSEAoIU291cmNlUEsYAiABKAkSEQoJTWVtTmFt",
            "ZUNuGAMgASgJEhEKCU1lbU5hbWVFbhgEIAEoCRIQCghNZW1FbWFpbBgFIAEo",
            "CRITCgtNZW1QYXNzd29yZBgGIAEoCRIPCgdNZW1UeXBlGAcgASgJEhEKCU1l",
            "bUdlbmRlchgIIAEoCRIVCg1NZW1EZXBhcnRtZW50GAkgASgJEhAKCE1lbVRp",
            "dGxlGAogASgJEhMKC01lbVBvc2l0aW9uGAsgASgJEhMKC01lbVByb1RpdGxl",
            "GAwgASgJEg0KBU1lbVFRGA0gASgJEg4KBk1lbUZheBgOIAEoCRIOCgZNZW1N",
            "U04YDyABKAkSEQoJTWVtTW9iaWxlGBAgASgJEg4KBk1lbVRlbBgRIAEoCRIT",
            "CgtNZW1Qb3N0Q29kZRgSIAEoCRIYChBNZW1MYXN0TG9naW5UaW1lGBMgASgJ",
            "EhIKCk1lbUFkZHJlc3MYFCABKAkSGAoQTWVtQWRkcmVzc0RldGFpbBgVIAEo",
            "CRIRCglDcmVhdGVkT24YFiABKAkSEQoJQ3JlYXRlZEJ5GBcgASgJEhMKC01v",
            "ZGVmaWVsZE9uGBggASgJEhMKC01vZGVmaWVsZEJ5GBkgASgJEhgKEE1lbUNv",
            "dW50cnlOYW1lQ24YGiABKAkSGAoQTWVtQ291bnRyeU5hbWVFbhgbIAEoCRIS",
            "CgpNZW1Db21wYW55GBwgASgJEhEKCUNvbXBhbnlQSxgdIAEoCRIVCg1Bc3Np",
            "c3RhbnROYW1lGB4gASgJEhkKEUFzc2lzdGFudFBvc2l0aW9uGB8gASgJEhcK",
            "D0Fzc2lzdGFudE1vYmlsZRggIAEoCRIWCg5Bc3Npc3RhbnRFbWFpbBghIAEo",
            "CSL0AQoMU291cmNlU3RydWN0EhAKCFNvdXJjZVBLGAEgASgJEhIKClNvdXJj",
            "ZUFiYnIYAiABKAkSFAoMU291cmNlTmFtZUNuGAMgASgJEhQKDFNvdXJjZU5h",
            "bWVFbhgEIAEoCRIXCg9Tb3VyY2VCZWdpblRpbWUYBSABKAkSFQoNU291cmNl",
            "RW5kVGltZRgGIAEoCRIRCglDcmVhdGVkT24YByABKAkSEQoJQ3JlYXRlZEJ5",
            "GAggASgJEhMKC01vZGVmaWVsZE9uGAkgASgJEhMKC01vZGVmaWVsZEJ5GAog",
            "ASgJEhIKClNvdXJjZUNvZGUYCyABKAki8AMKDUNvbXBhbnlTdHJ1Y3QSEQoJ",
            "Q29tcGFueVBLGAEgASgJEhUKDUNvbXBhbnlUeXBlUEsYAiABKAkSFgoOSW5k",
            "dXN0cnlUeXBlUEsYAyABKAkSEAoITWVtYmVyUEsYBCABKAkSEQoJQ29tTmFt",
            "ZUNuGAUgASgJEhEKCUNvbU5hbWVFbhgGIAEoCRIVCg1Db21BcmVhRGV0YWls",
            "GAcgASgJEhcKD0NvbUNvbnRhY3RFbWFpbBgIIAEoCRITCgtDb21Qb3N0Q29k",
            "ZRgJIAEoCRIOCgZDb21GYXgYCiABKAkSDgoGQ29tVGVsGAsgASgJEhIKCkNv",
            "bVdlYlNpdGUYDCABKAkSEQoJQ29tQ2xpZW50GA0gASgJEhEKCUNvbU5hdHVy",
            "ZRgOIAEoCRIPCgdDb21MYW5nGA8gASgJEhEKCUNvbVJlbWFyaxgQIAEoCRIT",
            "CgtDb21Jc0RlbGV0ZRgRIAEoCBITCgtDb21Jc1ZlcmlmeRgSIAEoCBIUCgxD",
            "b21Jc1dlYlNpdGUYEyABKAgSEgoKQ29tQWRkcmVzcxgUIAEoCRIRCglDcmVh",
            "dGVkT24YFSABKAkSEQoJQ3JlYXRlZEJ5GBYgASgJEhMKC01vZGVmaWVsZE9u",
            "GBcgASgJEhMKC01vZGVmaWVsZEJ5GBggASgJItEBChJJbmR1c3RyeVR5cGVT",
            "dHJ1Y3QSFgoOSW5kdXN0cnlUeXBlUEsYASABKAkSGgoSSW5kdXN0cnlUeXBl",
            "TmFtZUNuGAIgASgJEhoKEkluZHVzdHJ5VHlwZU5hbWVFbhgDIAEoCRIbChNJ",
            "bmR1c3RyeU9yZGVyTnVtYmVyGAQgASgFEhEKCUNyZWF0ZWRPbhgFIAEoCRIR",
            "CglDcmVhdGVkQnkYBiABKAkSEwoLTW9kZWZpZWxkT24YByABKAkSEwoLTW9k",
            "ZWZpZWxkQnkYCCABKAkisAEKEUNvbXBhbnlUeXBlU3RydWN0EhUKDUNvbXBh",
            "bnlUeXBlUEsYASABKAkSGQoRQ29tcGFueVR5cGVOYW1lQ24YAiABKAkSGQoR",
            "Q29tcGFueVR5cGVOYW1lRW4YAyABKAkSEQoJQ3JlYXRlZE9uGAQgASgJEhEK",
            "CUNyZWF0ZWRCeRgFIAEoCRITCgtNb2RlZmllbGRPbhgGIAEoCRITCgtNb2Rl",
            "ZmllbGRCeRgHIAEoCSI7Cg1Db3VudHJ5U3RydWN0EgoKAklkGAEgASgJEg4K",
            "Bk5hbWVDbhgCIAEoCRIOCgZOYW1lRW4YAyABKAkiRQoOQ29tcGFueURpY0xp",
            "c3QSMwoIbGlzdGRhdGEYASADKAsyIS5HcnBjTWVtYmVyc1NlcnZpY2UuQ29t",
            "cGFueVN0cnVjdCJDCg1Tb3VyY2VEaWNMaXN0EjIKCGxpc3RkYXRhGAEgAygL",
            "MiAuR3JwY01lbWJlcnNTZXJ2aWNlLlNvdXJjZVN0cnVjdCJFCg5Db3VudHJ5",
            "RGljTGlzdBIzCghsaXN0ZGF0YRgBIAMoCzIhLkdycGNNZW1iZXJzU2Vydmlj",
            "ZS5Db3VudHJ5U3RydWN0Ik8KE0luZHVzdHJ5VHlwZURpY0xpc3QSOAoIbGlz",
            "dGRhdGEYASADKAsyJi5HcnBjTWVtYmVyc1NlcnZpY2UuSW5kdXN0cnlUeXBl",
            "U3RydWN0Ik0KEkNvbXBhbnlUeXBlRGljTGlzdBI3CghsaXN0ZGF0YRgBIAMo",
            "CzIlLkdycGNNZW1iZXJzU2VydmljZS5Db21wYW55VHlwZVN0cnVjdCJDCgtN",
            "b2RpZnlSZXBseRIPCgdzdWNjZXNzGAEgASgIEhYKDm1vZGlmaWVkX2NvdW50",
            "GAIgASgFEgsKA21zZxgDIAEoCSJgChpNb2RpZnlSZXBseUZvckNyZWF0ZU1l",
            "bWJlchIPCgdzdWNjZXNzGAEgASgIEhYKDm1vZGlmaWVkX2NvdW50GAIgASgF",
            "EgsKA21zZxgDIAEoCRIMCgRleHQxGAQgASgJIl8KGU1vZGlmeVJlcGx5Rm9y",
            "Q3JlYXRlT3RoZXISDwoHc3VjY2VzcxgBIAEoCBIWCg5tb2RpZmllZF9jb3Vu",
            "dBgCIAEoBRILCgNtc2cYAyABKAkSDAoEZXh0MRgEIAEoCSIbCglCb29sUmVw",
            "bHkSDgoGcmVzdWx0GAEgASgIIkMKEEFjdGl2YXRpb25TdHJ1Y3QSEAoITWVt",
            "YmVyUEsYASABKAkSDQoFRW1haWwYAiABKAkSDgoGTW9iaWxlGAMgASgJMpoq",
            "ChNNZW1iZXJTZXJ2aWNlVG9HcnBjElQKBkdldFN1bRIkLkdycGNNZW1iZXJz",
            "U2VydmljZS5HZXRNc2dOdW1SZXF1ZXN0GiIuR3JwY01lbWJlcnNTZXJ2aWNl",
            "LkdldE1zZ1N1bVJlcGx5IgASWAoNTG9naW5Ub01lbWJlchIhLkdycGNNZW1i",
            "ZXJzU2VydmljZS5NZW1iZXJSZXF1ZXN0GiIuR3JwY01lbWJlcnNTZXJ2aWNl",
            "LkxvZ2luSW5mb1JlcGx5IgASYgoSTG9naW5Ub01lbUNvbnRyYWN0EiYuR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLk1lbUNvbnRyYWN0UmVxdWVzdBoiLkdycGNNZW1i",
            "ZXJzU2VydmljZS5Mb2dpbkluZm9SZXBseSIAEmcKGENyZWF0ZU1lbWJlckNv",
            "bnRyYWN0SW5mbxIoLkdycGNNZW1iZXJzU2VydmljZS5NZW1iZXJDb250cmFj",
            "dFN0cnVjdBofLkdycGNNZW1iZXJzU2VydmljZS5Nb2RpZnlSZXBseSIAEnQK",
            "G0dldE1lbUNvbnRyYWN0QnlNZW1Db250cmFjdBIpLkdycGNNZW1iZXJzU2Vy",
            "dmljZS5NZW1iZXJDb250cmFjdFJlcXVlc3QaKC5HcnBjTWVtYmVyc1NlcnZp",
            "Y2UuTWVtYmVyQ29udHJhY3RTdHJ1Y3QiABJuCh5EZWxldGVNZW1Db250cmFj",
            "dEJ5TWVtQ29udHJhY3QSKS5HcnBjTWVtYmVyc1NlcnZpY2UuTWVtYmVyQ29u",
            "dHJhY3RSZXF1ZXN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5",
            "IgASXgoNR2V0TWVtYmVyTGlzdBIrLkdycGNNZW1iZXJzU2VydmljZS5QYWdp",
            "bmF0aW9uUmVxdWVzdFNlYXJjaBoeLkdycGNNZW1iZXJzU2VydmljZS5NZW1i",
            "ZXJMaXN0IgASaQoYR2V0TWVtYmVyTGlzdEJ5Q29tcGFueVBLEisuR3JwY01l",
            "bWJlcnNTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGh4uR3JwY01l",
            "bWJlcnNTZXJ2aWNlLk1lbWJlckxpc3QiABJmCiBHZXRNZW1iZXJMaXN0QnlN",
            "ZW1iZXJTZWFyY2hUb0FsbBIgLkdycGNNZW1iZXJzU2VydmljZS5NZW1iZXJT",
            "ZWFyY2gaHi5HcnBjTWVtYmVyc1NlcnZpY2UuTWVtYmVyTGlzdCIAEmEKG0dl",
            "dE1lbWJlckxpc3RCeU1lbWJlclNlYXJjaBIgLkdycGNNZW1iZXJzU2Vydmlj",
            "ZS5NZW1iZXJTZWFyY2gaHi5HcnBjTWVtYmVyc1NlcnZpY2UuTWVtYmVyTGlz",
            "dCIAElIKDUdldE1lbWJlckJ5SWQSHS5HcnBjTWVtYmVyc1NlcnZpY2UuSWRS",
            "ZXF1ZXN0GiAuR3JwY01lbWJlcnNTZXJ2aWNlLk1lbWJlclN0cnVjdCIAEnQK",
            "F0NyZWF0ZU1lbWJlckFjY291bnRJbmZvEicuR3JwY01lbWJlcnNTZXJ2aWNl",
            "Lk1lbWJlckFjY291bnRTdHJ1Y3QaLi5HcnBjTWVtYmVyc1NlcnZpY2UuTW9k",
            "aWZ5UmVwbHlGb3JDcmVhdGVNZW1iZXIiABJmChBDcmVhdGVNZW1iZXJJbmZv",
            "EiAuR3JwY01lbWJlcnNTZXJ2aWNlLk1lbWJlclN0cnVjdBouLkdycGNNZW1i",
            "ZXJzU2VydmljZS5Nb2RpZnlSZXBseUZvckNyZWF0ZU1lbWJlciIAElcKEFVw",
            "ZGF0ZU1lbWJlckluZm8SIC5HcnBjTWVtYmVyc1NlcnZpY2UuTWVtYmVyU3Ry",
            "dWN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASVAoQRGVs",
            "ZXRlTWVtYmVyQnlJZBIdLkdycGNNZW1iZXJzU2VydmljZS5JZFJlcXVlc3Qa",
            "Hy5HcnBjTWVtYmVyc1NlcnZpY2UuTW9kaWZ5UmVwbHkiABJZChJEZWxldGVN",
            "ZW1iZXJCeUxpc3QSIC5HcnBjTWVtYmVyc1NlcnZpY2UuTWVtYmVySWRMaXN0",
            "Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASZAoZQWN0aXZh",
            "dGVNZW1BY2NvdW50QnlFbWFpbBIkLkdycGNNZW1iZXJzU2VydmljZS5BY3Rp",
            "dmF0aW9uU3RydWN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5",
            "IgASZQoaQWN0aXZhdGVNZW1BY2NvdW50QnlNb2JpbGUSJC5HcnBjTWVtYmVy",
            "c1NlcnZpY2UuQWN0aXZhdGlvblN0cnVjdBofLkdycGNNZW1iZXJzU2Vydmlj",
            "ZS5Nb2RpZnlSZXBseSIAElQKD1Jlc2V0TWVtUHdkSW5mbxIeLkdycGNNZW1i",
            "ZXJzU2VydmljZS5Qd2RSZXF1ZXN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1v",
            "ZGlmeVJlcGx5IgASUAoNR2V0Q29tcGFueURpYxIZLkdycGNNZW1iZXJzU2Vy",
            "dmljZS5FbXB0eRoiLkdycGNNZW1iZXJzU2VydmljZS5Db21wYW55RGljTGlz",
            "dCIAEmAKDkdldENvbXBhbnlMaXN0EisuR3JwY01lbWJlcnNTZXJ2aWNlLlBh",
            "Z2luYXRpb25SZXF1ZXN0U2VhcmNoGh8uR3JwY01lbWJlcnNTZXJ2aWNlLkNv",
            "bXBhbnlMaXN0IgASZgofR2V0Q29tQWNjb3VudExpc3RCeU1lbWJlclNlYXJj",
            "aBIgLkdycGNNZW1iZXJzU2VydmljZS5NZW1iZXJTZWFyY2gaHy5HcnBjTWVt",
            "YmVyc1NlcnZpY2UuQ29tcGFueUxpc3QiABJgChdHZXRDb21wYW55QnlDb21w",
            "YW55TmFtZRIgLkdycGNNZW1iZXJzU2VydmljZS5TZWFyY2hTdHJ1Y3QaIS5H",
            "cnBjTWVtYmVyc1NlcnZpY2UuQ29tcGFueVN0cnVjdCIAElQKD0lzRXhpdENv",
            "bXBhbnlDbhIgLkdycGNNZW1iZXJzU2VydmljZS5TZWFyY2hTdHJ1Y3QaHS5H",
            "cnBjTWVtYmVyc1NlcnZpY2UuQm9vbFJlcGx5IgASVAoPSXNFeGl0Q29tcGFu",
            "eUVuEiAuR3JwY01lbWJlcnNTZXJ2aWNlLlNlYXJjaFN0cnVjdBodLkdycGNN",
            "ZW1iZXJzU2VydmljZS5Cb29sUmVwbHkiABJUCg5HZXRDb21wYW55QnlJZBId",
            "LkdycGNNZW1iZXJzU2VydmljZS5JZFJlcXVlc3QaIS5HcnBjTWVtYmVyc1Nl",
            "cnZpY2UuQ29tcGFueVN0cnVjdCIAEmcKEUNyZWF0ZUNvbXBhbnlJbmZvEiEu",
            "R3JwY01lbWJlcnNTZXJ2aWNlLkNvbXBhbnlTdHJ1Y3QaLS5HcnBjTWVtYmVy",
            "c1NlcnZpY2UuTW9kaWZ5UmVwbHlGb3JDcmVhdGVPdGhlciIAEnMKHUNyZWF0",
            "ZUNvbXBhbnlJbmZvRm9yU25lY0FkbWluEiEuR3JwY01lbWJlcnNTZXJ2aWNl",
            "LkNvbXBhbnlTdHJ1Y3QaLS5HcnBjTWVtYmVyc1NlcnZpY2UuTW9kaWZ5UmVw",
            "bHlGb3JDcmVhdGVPdGhlciIAElkKEVVwZGF0ZUNvbXBhbnlJbmZvEiEuR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLkNvbXBhbnlTdHJ1Y3QaHy5HcnBjTWVtYmVyc1Nl",
            "cnZpY2UuTW9kaWZ5UmVwbHkiABJlCh5VcGRhdGVDb21wYW55TWFuYWdlckJ5",
            "TWVtYmVyUEsSIC5HcnBjTWVtYmVyc1NlcnZpY2UuU2VhcmNoU3RydWN0Gh8u",
            "R3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASVQoRRGVsZXRlQ29t",
            "cGFueUJ5SWQSHS5HcnBjTWVtYmVyc1NlcnZpY2UuSWRSZXF1ZXN0Gh8uR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASXAoTRGVsZXRlQ29tcGFu",
            "eUJ5TGlzdBIiLkdycGNNZW1iZXJzU2VydmljZS5Db21ucGFueUlkTGlzdBof",
            "LkdycGNNZW1iZXJzU2VydmljZS5Nb2RpZnlSZXBseSIAElQKEFZlcmlmeUNv",
            "bUFjY291bnQSHS5HcnBjTWVtYmVyc1NlcnZpY2UuSWRSZXF1ZXN0Gh8uR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASTgoMR2V0U291cmNlRGlj",
            "EhkuR3JwY01lbWJlcnNTZXJ2aWNlLkVtcHR5GiEuR3JwY01lbWJlcnNTZXJ2",
            "aWNlLlNvdXJjZURpY0xpc3QiABJYCg1HZXRTb3VyY2VMaXN0EiUuR3JwY01l",
            "bWJlcnNTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0Gh4uR3JwY01lbWJlcnNT",
            "ZXJ2aWNlLlNvdXJjZUxpc3QiABJSCg1HZXRTb3VyY2VCeUlkEh0uR3JwY01l",
            "bWJlcnNTZXJ2aWNlLklkUmVxdWVzdBogLkdycGNNZW1iZXJzU2VydmljZS5T",
            "b3VyY2VTdHJ1Y3QiABJXChBDcmVhdGVTb3VyY2VJbmZvEiAuR3JwY01lbWJl",
            "cnNTZXJ2aWNlLlNvdXJjZVN0cnVjdBofLkdycGNNZW1iZXJzU2VydmljZS5N",
            "b2RpZnlSZXBseSIAElcKEFVwZGF0ZVNvdXJjZUluZm8SIC5HcnBjTWVtYmVy",
            "c1NlcnZpY2UuU291cmNlU3RydWN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1v",
            "ZGlmeVJlcGx5IgASVAoQRGVsZXRlU291cmNlQnlJZBIdLkdycGNNZW1iZXJz",
            "U2VydmljZS5JZFJlcXVlc3QaHy5HcnBjTWVtYmVyc1NlcnZpY2UuTW9kaWZ5",
            "UmVwbHkiABJaChJHZXRJbmR1c3RyeVR5cGVEaWMSGS5HcnBjTWVtYmVyc1Nl",
            "cnZpY2UuRW1wdHkaJy5HcnBjTWVtYmVyc1NlcnZpY2UuSW5kdXN0cnlUeXBl",
            "RGljTGlzdCIAEmQKE0dldEluZHVzdHJ5VHlwZUxpc3QSJS5HcnBjTWVtYmVy",
            "c1NlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3QaJC5HcnBjTWVtYmVyc1NlcnZp",
            "Y2UuSW5kdXN0cnlUeXBlTGlzdCIAEl4KE0dldEluZHVzdHJ5VHlwZUJ5SWQS",
            "HS5HcnBjTWVtYmVyc1NlcnZpY2UuSWRSZXF1ZXN0GiYuR3JwY01lbWJlcnNT",
            "ZXJ2aWNlLkluZHVzdHJ5VHlwZVN0cnVjdCIAEmMKFkNyZWF0ZUluZHVzdHJ5",
            "VHlwZUluZm8SJi5HcnBjTWVtYmVyc1NlcnZpY2UuSW5kdXN0cnlUeXBlU3Ry",
            "dWN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASYwoWVXBk",
            "YXRlSW5kdXN0cnlUeXBlSW5mbxImLkdycGNNZW1iZXJzU2VydmljZS5JbmR1",
            "c3RyeVR5cGVTdHJ1Y3QaHy5HcnBjTWVtYmVyc1NlcnZpY2UuTW9kaWZ5UmVw",
            "bHkiABJaChZEZWxldGVJbmR1c3RyeVR5cGVCeUlkEh0uR3JwY01lbWJlcnNT",
            "ZXJ2aWNlLklkUmVxdWVzdBofLkdycGNNZW1iZXJzU2VydmljZS5Nb2RpZnlS",
            "ZXBseSIAElgKEUdldENvbXBhbnlUeXBlRGljEhkuR3JwY01lbWJlcnNTZXJ2",
            "aWNlLkVtcHR5GiYuR3JwY01lbWJlcnNTZXJ2aWNlLkNvbXBhbnlUeXBlRGlj",
            "TGlzdCIAEmIKEkdldENvbXBhbnlUeXBlTGlzdBIlLkdycGNNZW1iZXJzU2Vy",
            "dmljZS5QYWdpbmF0aW9uUmVxdWVzdBojLkdycGNNZW1iZXJzU2VydmljZS5D",
            "b21wYW55VHlwZUxpc3QiABJcChJHZXRDb21wYW55VHlwZUJ5SWQSHS5HcnBj",
            "TWVtYmVyc1NlcnZpY2UuSWRSZXF1ZXN0GiUuR3JwY01lbWJlcnNTZXJ2aWNl",
            "LkNvbXBhbnlUeXBlU3RydWN0IgASYQoVQ3JlYXRlQ29tcGFueVR5cGVJbmZv",
            "EiUuR3JwY01lbWJlcnNTZXJ2aWNlLkNvbXBhbnlUeXBlU3RydWN0Gh8uR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASYQoVVXBkYXRlQ29tcGFu",
            "eVR5cGVJbmZvEiUuR3JwY01lbWJlcnNTZXJ2aWNlLkNvbXBhbnlUeXBlU3Ry",
            "dWN0Gh8uR3JwY01lbWJlcnNTZXJ2aWNlLk1vZGlmeVJlcGx5IgASWQoVRGVs",
            "ZXRlQ29tcGFueVR5cGVCeUlkEh0uR3JwY01lbWJlcnNTZXJ2aWNlLklkUmVx",
            "dWVzdBofLkdycGNNZW1iZXJzU2VydmljZS5Nb2RpZnlSZXBseSIAElUKDEdl",
            "dEFyZWFzTGlzdBIlLkdycGNNZW1iZXJzU2VydmljZS5QYWdpbmF0aW9uUmVx",
            "dWVzdBocLkdycGNNZW1iZXJzU2VydmljZS5BcmVhTGlzdCIAEk4KC0dldEFy",
            "ZWFCeUlkEh0uR3JwY01lbWJlcnNTZXJ2aWNlLklkUmVxdWVzdBoeLkdycGNN",
            "ZW1iZXJzU2VydmljZS5BcmVhU3RydWN0IgASUwoOQ3JlYXRlQXJlYUluZm8S",
            "Hi5HcnBjTWVtYmVyc1NlcnZpY2UuQXJlYVN0cnVjdBofLkdycGNNZW1iZXJz",
            "U2VydmljZS5Nb2RpZnlSZXBseSIAElMKDlVwZGF0ZUFyZWFJbmZvEh4uR3Jw",
            "Y01lbWJlcnNTZXJ2aWNlLkFyZWFTdHJ1Y3QaHy5HcnBjTWVtYmVyc1NlcnZp",
            "Y2UuTW9kaWZ5UmVwbHkiABJSCg5EZWxldGVBcmVhQnlJZBIdLkdycGNNZW1i",
            "ZXJzU2VydmljZS5JZFJlcXVlc3QaHy5HcnBjTWVtYmVyc1NlcnZpY2UuTW9k",
            "aWZ5UmVwbHkiABJQCg1HZXRDb3VudHJ5RGljEhkuR3JwY01lbWJlcnNTZXJ2",
            "aWNlLkVtcHR5GiIuR3JwY01lbWJlcnNTZXJ2aWNlLkNvdW50cnlEaWNMaXN0",
            "IgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.GetMsgNumRequest), global::GrpcMembersService.GetMsgNumRequest.Parser, new[]{ "Num1", "Num2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.GetMsgSumReply), global::GrpcMembersService.GetMsgSumReply.Parser, new[]{ "Sum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.PwdRequest), global::GrpcMembersService.PwdRequest.Parser, new[]{ "MemberPk", "MemberPwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberRequest), global::GrpcMembersService.MemberRequest.Parser, new[]{ "MemEmail", "MemPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemContractRequest), global::GrpcMembersService.MemContractRequest.Parser, new[]{ "MemContract", "MemPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.LoginInfoReply), global::GrpcMembersService.LoginInfoReply.Parser, new[]{ "Success", "MemberPk", "MemberAccount", "CompanyPk", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.Empty), global::GrpcMembersService.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.IdRequest), global::GrpcMembersService.IdRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberContractRequest), global::GrpcMembersService.MemberContractRequest.Parser, new[]{ "MemberContract" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.PaginationRequest), global::GrpcMembersService.PaginationRequest.Parser, new[]{ "Id", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.PaginationRequestSearch), global::GrpcMembersService.PaginationRequestSearch.Parser, new[]{ "Id", "Offset", "Limit", "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberSearch), global::GrpcMembersService.MemberSearch.Parser, new[]{ "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.SearchStruct), global::GrpcMembersService.SearchStruct.Parser, new[]{ "MemEmail", "MemIsDelete", "MemIsActivation", "ComNameCn", "ComNameEn", "ComIsDelete", "ComIsVerify", "MemberName", "CompanyName", "CompanyPk", "SourcePk", "MemberPk" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.AreaList), global::GrpcMembersService.AreaList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberList), global::GrpcMembersService.MemberList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberIdList), global::GrpcMembersService.MemberIdList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.SourceList), global::GrpcMembersService.SourceList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyList), global::GrpcMembersService.CompanyList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.ComnpanyIdList), global::GrpcMembersService.ComnpanyIdList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.IndustryTypeList), global::GrpcMembersService.IndustryTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyTypeList), global::GrpcMembersService.CompanyTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.AreaStruct), global::GrpcMembersService.AreaStruct.Parser, new[]{ "AreaPK", "AreaNumber", "AreaName", "CityNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberContractStruct), global::GrpcMembersService.MemberContractStruct.Parser, new[]{ "MCPk", "MemeberPK", "MemContract", "MemContractType", "CreatedOn", "CreatedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberStruct), global::GrpcMembersService.MemberStruct.Parser, new[]{ "MemberPK", "SourcePK", "MemNameCn", "MemNameEn", "MemEmail", "MemPassword", "MemType", "MemGender", "MemDepartment", "MemTitle", "MemPosition", "MemProTitle", "MemQQ", "MemFax", "MemMSN", "MemMobile", "MemTel", "MemPostCode", "MemLastLoginTime", "MemAddress", "MemAddressDetail", "MemIsDelete", "MemIsActivation", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "CompanyPK", "MemCountryNameCn", "MemCountryNameEn", "MemCompany", "AssistantName", "AssistantPosition", "AssistantMobile", "AssistantEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.MemberAccountStruct), global::GrpcMembersService.MemberAccountStruct.Parser, new[]{ "MemberPK", "SourcePK", "MemNameCn", "MemNameEn", "MemEmail", "MemPassword", "MemType", "MemGender", "MemDepartment", "MemTitle", "MemPosition", "MemProTitle", "MemQQ", "MemFax", "MemMSN", "MemMobile", "MemTel", "MemPostCode", "MemLastLoginTime", "MemAddress", "MemAddressDetail", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "MemCountryNameCn", "MemCountryNameEn", "MemCompany", "CompanyPK", "AssistantName", "AssistantPosition", "AssistantMobile", "AssistantEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.SourceStruct), global::GrpcMembersService.SourceStruct.Parser, new[]{ "SourcePK", "SourceAbbr", "SourceNameCn", "SourceNameEn", "SourceBeginTime", "SourceEndTime", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "SourceCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyStruct), global::GrpcMembersService.CompanyStruct.Parser, new[]{ "CompanyPK", "CompanyTypePK", "IndustryTypePK", "MemberPK", "ComNameCn", "ComNameEn", "ComAreaDetail", "ComContactEmail", "ComPostCode", "ComFax", "ComTel", "ComWebSite", "ComClient", "ComNature", "ComLang", "ComRemark", "ComIsDelete", "ComIsVerify", "ComIsWebSite", "ComAddress", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.IndustryTypeStruct), global::GrpcMembersService.IndustryTypeStruct.Parser, new[]{ "IndustryTypePK", "IndustryTypeNameCn", "IndustryTypeNameEn", "IndustryOrderNumber", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyTypeStruct), global::GrpcMembersService.CompanyTypeStruct.Parser, new[]{ "CompanyTypePK", "CompanyTypeNameCn", "CompanyTypeNameEn", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CountryStruct), global::GrpcMembersService.CountryStruct.Parser, new[]{ "Id", "NameCn", "NameEn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyDicList), global::GrpcMembersService.CompanyDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.SourceDicList), global::GrpcMembersService.SourceDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CountryDicList), global::GrpcMembersService.CountryDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.IndustryTypeDicList), global::GrpcMembersService.IndustryTypeDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.CompanyTypeDicList), global::GrpcMembersService.CompanyTypeDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.ModifyReply), global::GrpcMembersService.ModifyReply.Parser, new[]{ "Success", "ModifiedCount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.ModifyReplyForCreateMember), global::GrpcMembersService.ModifyReplyForCreateMember.Parser, new[]{ "Success", "ModifiedCount", "Msg", "Ext1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.ModifyReplyForCreateOther), global::GrpcMembersService.ModifyReplyForCreateOther.Parser, new[]{ "Success", "ModifiedCount", "Msg", "Ext1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.BoolReply), global::GrpcMembersService.BoolReply.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcMembersService.ActivationStruct), global::GrpcMembersService.ActivationStruct.Parser, new[]{ "MemberPK", "Email", "Mobile" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetMsgNumRequest : pb::IMessage<GetMsgNumRequest> {
    private static readonly pb::MessageParser<GetMsgNumRequest> _parser = new pb::MessageParser<GetMsgNumRequest>(() => new GetMsgNumRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMsgNumRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgNumRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgNumRequest(GetMsgNumRequest other) : this() {
      num1_ = other.num1_;
      num2_ = other.num2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgNumRequest Clone() {
      return new GetMsgNumRequest(this);
    }

    /// <summary>Field number for the "Num1" field.</summary>
    public const int Num1FieldNumber = 1;
    private int num1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num1 {
      get { return num1_; }
      set {
        num1_ = value;
      }
    }

    /// <summary>Field number for the "Num2" field.</summary>
    public const int Num2FieldNumber = 2;
    private int num2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Num2 {
      get { return num2_; }
      set {
        num2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMsgNumRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMsgNumRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num1 != other.Num1) return false;
      if (Num2 != other.Num2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num1 != 0) hash ^= Num1.GetHashCode();
      if (Num2 != 0) hash ^= Num2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Num1);
      }
      if (Num2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Num2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num1);
      }
      if (Num2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Num2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMsgNumRequest other) {
      if (other == null) {
        return;
      }
      if (other.Num1 != 0) {
        Num1 = other.Num1;
      }
      if (other.Num2 != 0) {
        Num2 = other.Num2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num1 = input.ReadInt32();
            break;
          }
          case 16: {
            Num2 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMsgSumReply : pb::IMessage<GetMsgSumReply> {
    private static readonly pb::MessageParser<GetMsgSumReply> _parser = new pb::MessageParser<GetMsgSumReply>(() => new GetMsgSumReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMsgSumReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgSumReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgSumReply(GetMsgSumReply other) : this() {
      sum_ = other.sum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMsgSumReply Clone() {
      return new GetMsgSumReply(this);
    }

    /// <summary>Field number for the "Sum" field.</summary>
    public const int SumFieldNumber = 1;
    private int sum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sum {
      get { return sum_; }
      set {
        sum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMsgSumReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMsgSumReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sum != other.Sum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sum != 0) hash ^= Sum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Sum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMsgSumReply other) {
      if (other == null) {
        return;
      }
      if (other.Sum != 0) {
        Sum = other.Sum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PwdRequest : pb::IMessage<PwdRequest> {
    private static readonly pb::MessageParser<PwdRequest> _parser = new pb::MessageParser<PwdRequest>(() => new PwdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PwdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PwdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PwdRequest(PwdRequest other) : this() {
      memberPk_ = other.memberPk_;
      memberPwd_ = other.memberPwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PwdRequest Clone() {
      return new PwdRequest(this);
    }

    /// <summary>Field number for the "MemberPk" field.</summary>
    public const int MemberPkFieldNumber = 1;
    private string memberPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPk {
      get { return memberPk_; }
      set {
        memberPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPwd" field.</summary>
    public const int MemberPwdFieldNumber = 2;
    private string memberPwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPwd {
      get { return memberPwd_; }
      set {
        memberPwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PwdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PwdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPk != other.MemberPk) return false;
      if (MemberPwd != other.MemberPwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPk.Length != 0) hash ^= MemberPk.GetHashCode();
      if (MemberPwd.Length != 0) hash ^= MemberPwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPk);
      }
      if (MemberPwd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberPwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPk);
      }
      if (MemberPwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PwdRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberPk.Length != 0) {
        MemberPk = other.MemberPk;
      }
      if (other.MemberPwd.Length != 0) {
        MemberPwd = other.MemberPwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPk = input.ReadString();
            break;
          }
          case 18: {
            MemberPwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberRequest : pb::IMessage<MemberRequest> {
    private static readonly pb::MessageParser<MemberRequest> _parser = new pb::MessageParser<MemberRequest>(() => new MemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRequest(MemberRequest other) : this() {
      memEmail_ = other.memEmail_;
      memPassword_ = other.memPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberRequest Clone() {
      return new MemberRequest(this);
    }

    /// <summary>Field number for the "MemEmail" field.</summary>
    public const int MemEmailFieldNumber = 1;
    private string memEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPassword" field.</summary>
    public const int MemPasswordFieldNumber = 2;
    private string memPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPassword {
      get { return memPassword_; }
      set {
        memPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemEmail != other.MemEmail) return false;
      if (MemPassword != other.MemPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemPassword.Length != 0) hash ^= MemPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemEmail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemEmail);
      }
      if (MemPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemPassword.Length != 0) {
        MemPassword = other.MemPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemEmail = input.ReadString();
            break;
          }
          case 18: {
            MemPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemContractRequest : pb::IMessage<MemContractRequest> {
    private static readonly pb::MessageParser<MemContractRequest> _parser = new pb::MessageParser<MemContractRequest>(() => new MemContractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemContractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemContractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemContractRequest(MemContractRequest other) : this() {
      memContract_ = other.memContract_;
      memPassword_ = other.memPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemContractRequest Clone() {
      return new MemContractRequest(this);
    }

    /// <summary>Field number for the "MemContract" field.</summary>
    public const int MemContractFieldNumber = 1;
    private string memContract_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemContract {
      get { return memContract_; }
      set {
        memContract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPassword" field.</summary>
    public const int MemPasswordFieldNumber = 2;
    private string memPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPassword {
      get { return memPassword_; }
      set {
        memPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemContractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemContractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemContract != other.MemContract) return false;
      if (MemPassword != other.MemPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemContract.Length != 0) hash ^= MemContract.GetHashCode();
      if (MemPassword.Length != 0) hash ^= MemPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemContract.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemContract);
      }
      if (MemPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemContract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemContract);
      }
      if (MemPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemContractRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemContract.Length != 0) {
        MemContract = other.MemContract;
      }
      if (other.MemPassword.Length != 0) {
        MemPassword = other.MemPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemContract = input.ReadString();
            break;
          }
          case 18: {
            MemPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginInfoReply : pb::IMessage<LoginInfoReply> {
    private static readonly pb::MessageParser<LoginInfoReply> _parser = new pb::MessageParser<LoginInfoReply>(() => new LoginInfoReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginInfoReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfoReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfoReply(LoginInfoReply other) : this() {
      success_ = other.success_;
      memberPk_ = other.memberPk_;
      memberAccount_ = other.memberAccount_;
      companyPk_ = other.companyPk_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginInfoReply Clone() {
      return new LoginInfoReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "memberPk" field.</summary>
    public const int MemberPkFieldNumber = 2;
    private string memberPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPk {
      get { return memberPk_; }
      set {
        memberPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberAccount" field.</summary>
    public const int MemberAccountFieldNumber = 3;
    private string memberAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberAccount {
      get { return memberAccount_; }
      set {
        memberAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyPk" field.</summary>
    public const int CompanyPkFieldNumber = 4;
    private string companyPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPk {
      get { return companyPk_; }
      set {
        companyPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 5;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginInfoReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginInfoReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (MemberPk != other.MemberPk) return false;
      if (MemberAccount != other.MemberAccount) return false;
      if (CompanyPk != other.CompanyPk) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (MemberPk.Length != 0) hash ^= MemberPk.GetHashCode();
      if (MemberAccount.Length != 0) hash ^= MemberAccount.GetHashCode();
      if (CompanyPk.Length != 0) hash ^= CompanyPk.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (MemberPk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberPk);
      }
      if (MemberAccount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberAccount);
      }
      if (CompanyPk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyPk);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (MemberPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPk);
      }
      if (MemberAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberAccount);
      }
      if (CompanyPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyPk);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginInfoReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.MemberPk.Length != 0) {
        MemberPk = other.MemberPk;
      }
      if (other.MemberAccount.Length != 0) {
        MemberAccount = other.MemberAccount;
      }
      if (other.CompanyPk.Length != 0) {
        CompanyPk = other.CompanyPk;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            MemberPk = input.ReadString();
            break;
          }
          case 26: {
            MemberAccount = input.ReadString();
            break;
          }
          case 34: {
            CompanyPk = input.ReadString();
            break;
          }
          case 42: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IdRequest : pb::IMessage<IdRequest> {
    private static readonly pb::MessageParser<IdRequest> _parser = new pb::MessageParser<IdRequest>(() => new IdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest(IdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest Clone() {
      return new IdRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberContractRequest : pb::IMessage<MemberContractRequest> {
    private static readonly pb::MessageParser<MemberContractRequest> _parser = new pb::MessageParser<MemberContractRequest>(() => new MemberContractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberContractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractRequest(MemberContractRequest other) : this() {
      memberContract_ = other.memberContract_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractRequest Clone() {
      return new MemberContractRequest(this);
    }

    /// <summary>Field number for the "MemberContract" field.</summary>
    public const int MemberContractFieldNumber = 1;
    private string memberContract_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberContract {
      get { return memberContract_; }
      set {
        memberContract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberContractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberContractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberContract != other.MemberContract) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberContract.Length != 0) hash ^= MemberContract.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberContract.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberContract);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberContract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberContract);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberContractRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberContract.Length != 0) {
        MemberContract = other.MemberContract;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberContract = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequest : pb::IMessage<PaginationRequest> {
    private static readonly pb::MessageParser<PaginationRequest> _parser = new pb::MessageParser<PaginationRequest>(() => new PaginationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest(PaginationRequest other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest Clone() {
      return new PaginationRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequestSearch : pb::IMessage<PaginationRequestSearch> {
    private static readonly pb::MessageParser<PaginationRequestSearch> _parser = new pb::MessageParser<PaginationRequestSearch>(() => new PaginationRequestSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequestSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch(PaginationRequestSearch other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch Clone() {
      return new PaginationRequestSearch(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcMembersService.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcMembersService.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequestSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequestSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequestSearch other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcMembersService.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcMembersService.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberSearch : pb::IMessage<MemberSearch> {
    private static readonly pb::MessageParser<MemberSearch> _parser = new pb::MessageParser<MemberSearch>(() => new MemberSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSearch(MemberSearch other) : this() {
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberSearch Clone() {
      return new MemberSearch(this);
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcMembersService.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcMembersService.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberSearch other) {
      if (other == null) {
        return;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcMembersService.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcMembersService.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchStruct : pb::IMessage<SearchStruct> {
    private static readonly pb::MessageParser<SearchStruct> _parser = new pb::MessageParser<SearchStruct>(() => new SearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct(SearchStruct other) : this() {
      memEmail_ = other.memEmail_;
      memIsDelete_ = other.memIsDelete_;
      memIsActivation_ = other.memIsActivation_;
      comNameCn_ = other.comNameCn_;
      comNameEn_ = other.comNameEn_;
      comIsDelete_ = other.comIsDelete_;
      comIsVerify_ = other.comIsVerify_;
      memberName_ = other.memberName_;
      companyName_ = other.companyName_;
      companyPk_ = other.companyPk_;
      sourcePk_ = other.sourcePk_;
      memberPk_ = other.memberPk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct Clone() {
      return new SearchStruct(this);
    }

    /// <summary>Field number for the "memEmail" field.</summary>
    public const int MemEmailFieldNumber = 1;
    private string memEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memIsDelete" field.</summary>
    public const int MemIsDeleteFieldNumber = 2;
    private bool memIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsDelete {
      get { return memIsDelete_; }
      set {
        memIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "memIsActivation" field.</summary>
    public const int MemIsActivationFieldNumber = 3;
    private bool memIsActivation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsActivation {
      get { return memIsActivation_; }
      set {
        memIsActivation_ = value;
      }
    }

    /// <summary>Field number for the "comNameCn" field.</summary>
    public const int ComNameCnFieldNumber = 4;
    private string comNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameCn {
      get { return comNameCn_; }
      set {
        comNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comNameEn" field.</summary>
    public const int ComNameEnFieldNumber = 5;
    private string comNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameEn {
      get { return comNameEn_; }
      set {
        comNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comIsDelete" field.</summary>
    public const int ComIsDeleteFieldNumber = 6;
    private bool comIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsDelete {
      get { return comIsDelete_; }
      set {
        comIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "comIsVerify" field.</summary>
    public const int ComIsVerifyFieldNumber = 7;
    private bool comIsVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsVerify {
      get { return comIsVerify_; }
      set {
        comIsVerify_ = value;
      }
    }

    /// <summary>Field number for the "memberName" field.</summary>
    public const int MemberNameFieldNumber = 8;
    private string memberName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 9;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyPk" field.</summary>
    public const int CompanyPkFieldNumber = 10;
    private string companyPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPk {
      get { return companyPk_; }
      set {
        companyPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sourcePk" field.</summary>
    public const int SourcePkFieldNumber = 11;
    private string sourcePk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePk {
      get { return sourcePk_; }
      set {
        sourcePk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberPk" field.</summary>
    public const int MemberPkFieldNumber = 12;
    private string memberPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPk {
      get { return memberPk_; }
      set {
        memberPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemEmail != other.MemEmail) return false;
      if (MemIsDelete != other.MemIsDelete) return false;
      if (MemIsActivation != other.MemIsActivation) return false;
      if (ComNameCn != other.ComNameCn) return false;
      if (ComNameEn != other.ComNameEn) return false;
      if (ComIsDelete != other.ComIsDelete) return false;
      if (ComIsVerify != other.ComIsVerify) return false;
      if (MemberName != other.MemberName) return false;
      if (CompanyName != other.CompanyName) return false;
      if (CompanyPk != other.CompanyPk) return false;
      if (SourcePk != other.SourcePk) return false;
      if (MemberPk != other.MemberPk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemIsDelete != false) hash ^= MemIsDelete.GetHashCode();
      if (MemIsActivation != false) hash ^= MemIsActivation.GetHashCode();
      if (ComNameCn.Length != 0) hash ^= ComNameCn.GetHashCode();
      if (ComNameEn.Length != 0) hash ^= ComNameEn.GetHashCode();
      if (ComIsDelete != false) hash ^= ComIsDelete.GetHashCode();
      if (ComIsVerify != false) hash ^= ComIsVerify.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (CompanyPk.Length != 0) hash ^= CompanyPk.GetHashCode();
      if (SourcePk.Length != 0) hash ^= SourcePk.GetHashCode();
      if (MemberPk.Length != 0) hash ^= MemberPk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemEmail.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemEmail);
      }
      if (MemIsDelete != false) {
        output.WriteRawTag(16);
        output.WriteBool(MemIsDelete);
      }
      if (MemIsActivation != false) {
        output.WriteRawTag(24);
        output.WriteBool(MemIsActivation);
      }
      if (ComNameCn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComNameEn);
      }
      if (ComIsDelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(ComIsDelete);
      }
      if (ComIsVerify != false) {
        output.WriteRawTag(56);
        output.WriteBool(ComIsVerify);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemberName);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CompanyName);
      }
      if (CompanyPk.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CompanyPk);
      }
      if (SourcePk.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SourcePk);
      }
      if (MemberPk.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MemberPk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemIsDelete != false) {
        size += 1 + 1;
      }
      if (MemIsActivation != false) {
        size += 1 + 1;
      }
      if (ComNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameEn);
      }
      if (ComIsDelete != false) {
        size += 1 + 1;
      }
      if (ComIsVerify != false) {
        size += 1 + 1;
      }
      if (MemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (CompanyPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyPk);
      }
      if (SourcePk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePk);
      }
      if (MemberPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemIsDelete != false) {
        MemIsDelete = other.MemIsDelete;
      }
      if (other.MemIsActivation != false) {
        MemIsActivation = other.MemIsActivation;
      }
      if (other.ComNameCn.Length != 0) {
        ComNameCn = other.ComNameCn;
      }
      if (other.ComNameEn.Length != 0) {
        ComNameEn = other.ComNameEn;
      }
      if (other.ComIsDelete != false) {
        ComIsDelete = other.ComIsDelete;
      }
      if (other.ComIsVerify != false) {
        ComIsVerify = other.ComIsVerify;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.CompanyPk.Length != 0) {
        CompanyPk = other.CompanyPk;
      }
      if (other.SourcePk.Length != 0) {
        SourcePk = other.SourcePk;
      }
      if (other.MemberPk.Length != 0) {
        MemberPk = other.MemberPk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemEmail = input.ReadString();
            break;
          }
          case 16: {
            MemIsDelete = input.ReadBool();
            break;
          }
          case 24: {
            MemIsActivation = input.ReadBool();
            break;
          }
          case 34: {
            ComNameCn = input.ReadString();
            break;
          }
          case 42: {
            ComNameEn = input.ReadString();
            break;
          }
          case 48: {
            ComIsDelete = input.ReadBool();
            break;
          }
          case 56: {
            ComIsVerify = input.ReadBool();
            break;
          }
          case 66: {
            MemberName = input.ReadString();
            break;
          }
          case 74: {
            CompanyName = input.ReadString();
            break;
          }
          case 82: {
            CompanyPk = input.ReadString();
            break;
          }
          case 90: {
            SourcePk = input.ReadString();
            break;
          }
          case 98: {
            MemberPk = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AreaList : pb::IMessage<AreaList> {
    private static readonly pb::MessageParser<AreaList> _parser = new pb::MessageParser<AreaList>(() => new AreaList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaList(AreaList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaList Clone() {
      return new AreaList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.AreaStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.AreaStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.AreaStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.AreaStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.AreaStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberList : pb::IMessage<MemberList> {
    private static readonly pb::MessageParser<MemberList> _parser = new pb::MessageParser<MemberList>(() => new MemberList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberList(MemberList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberList Clone() {
      return new MemberList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.MemberStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.MemberStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.MemberStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.MemberStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.MemberStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberIdList : pb::IMessage<MemberIdList> {
    private static readonly pb::MessageParser<MemberIdList> _parser = new pb::MessageParser<MemberIdList>(() => new MemberIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdList(MemberIdList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberIdList Clone() {
      return new MemberIdList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_listdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> listdata_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberIdList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SourceList : pb::IMessage<SourceList> {
    private static readonly pb::MessageParser<SourceList> _parser = new pb::MessageParser<SourceList>(() => new SourceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceList(SourceList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceList Clone() {
      return new SourceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.SourceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.SourceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.SourceStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.SourceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.SourceStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyList : pb::IMessage<CompanyList> {
    private static readonly pb::MessageParser<CompanyList> _parser = new pb::MessageParser<CompanyList>(() => new CompanyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyList(CompanyList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyList Clone() {
      return new CompanyList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.CompanyStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.CompanyStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.CompanyStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.CompanyStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.CompanyStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComnpanyIdList : pb::IMessage<ComnpanyIdList> {
    private static readonly pb::MessageParser<ComnpanyIdList> _parser = new pb::MessageParser<ComnpanyIdList>(() => new ComnpanyIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComnpanyIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComnpanyIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComnpanyIdList(ComnpanyIdList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComnpanyIdList Clone() {
      return new ComnpanyIdList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_listdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> listdata_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComnpanyIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComnpanyIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComnpanyIdList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndustryTypeList : pb::IMessage<IndustryTypeList> {
    private static readonly pb::MessageParser<IndustryTypeList> _parser = new pb::MessageParser<IndustryTypeList>(() => new IndustryTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndustryTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeList(IndustryTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeList Clone() {
      return new IndustryTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.IndustryTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.IndustryTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndustryTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndustryTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndustryTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyTypeList : pb::IMessage<CompanyTypeList> {
    private static readonly pb::MessageParser<CompanyTypeList> _parser = new pb::MessageParser<CompanyTypeList>(() => new CompanyTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeList(CompanyTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeList Clone() {
      return new CompanyTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.CompanyTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.CompanyTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AreaStruct : pb::IMessage<AreaStruct> {
    private static readonly pb::MessageParser<AreaStruct> _parser = new pb::MessageParser<AreaStruct>(() => new AreaStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AreaStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaStruct(AreaStruct other) : this() {
      areaPK_ = other.areaPK_;
      areaNumber_ = other.areaNumber_;
      areaName_ = other.areaName_;
      cityNumber_ = other.cityNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AreaStruct Clone() {
      return new AreaStruct(this);
    }

    /// <summary>Field number for the "AreaPK" field.</summary>
    public const int AreaPKFieldNumber = 1;
    private string areaPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaPK {
      get { return areaPK_; }
      set {
        areaPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AreaNumber" field.</summary>
    public const int AreaNumberFieldNumber = 2;
    private string areaNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaNumber {
      get { return areaNumber_; }
      set {
        areaNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AreaName" field.</summary>
    public const int AreaNameFieldNumber = 3;
    private string areaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AreaName {
      get { return areaName_; }
      set {
        areaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CityNumber" field.</summary>
    public const int CityNumberFieldNumber = 4;
    private string cityNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityNumber {
      get { return cityNumber_; }
      set {
        cityNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AreaStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AreaStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaPK != other.AreaPK) return false;
      if (AreaNumber != other.AreaNumber) return false;
      if (AreaName != other.AreaName) return false;
      if (CityNumber != other.CityNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaPK.Length != 0) hash ^= AreaPK.GetHashCode();
      if (AreaNumber.Length != 0) hash ^= AreaNumber.GetHashCode();
      if (AreaName.Length != 0) hash ^= AreaName.GetHashCode();
      if (CityNumber.Length != 0) hash ^= CityNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AreaPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AreaPK);
      }
      if (AreaNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AreaNumber);
      }
      if (AreaName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AreaName);
      }
      if (CityNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CityNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AreaPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaPK);
      }
      if (AreaNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaNumber);
      }
      if (AreaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AreaName);
      }
      if (CityNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CityNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AreaStruct other) {
      if (other == null) {
        return;
      }
      if (other.AreaPK.Length != 0) {
        AreaPK = other.AreaPK;
      }
      if (other.AreaNumber.Length != 0) {
        AreaNumber = other.AreaNumber;
      }
      if (other.AreaName.Length != 0) {
        AreaName = other.AreaName;
      }
      if (other.CityNumber.Length != 0) {
        CityNumber = other.CityNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AreaPK = input.ReadString();
            break;
          }
          case 18: {
            AreaNumber = input.ReadString();
            break;
          }
          case 26: {
            AreaName = input.ReadString();
            break;
          }
          case 34: {
            CityNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberContractStruct : pb::IMessage<MemberContractStruct> {
    private static readonly pb::MessageParser<MemberContractStruct> _parser = new pb::MessageParser<MemberContractStruct>(() => new MemberContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractStruct(MemberContractStruct other) : this() {
      mCPk_ = other.mCPk_;
      memeberPK_ = other.memeberPK_;
      memContract_ = other.memContract_;
      memContractType_ = other.memContractType_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberContractStruct Clone() {
      return new MemberContractStruct(this);
    }

    /// <summary>Field number for the "MCPk" field.</summary>
    public const int MCPkFieldNumber = 1;
    private string mCPk_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MCPk {
      get { return mCPk_; }
      set {
        mCPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemeberPK" field.</summary>
    public const int MemeberPKFieldNumber = 2;
    private string memeberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemeberPK {
      get { return memeberPK_; }
      set {
        memeberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemContract" field.</summary>
    public const int MemContractFieldNumber = 3;
    private string memContract_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemContract {
      get { return memContract_; }
      set {
        memContract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemContractType" field.</summary>
    public const int MemContractTypeFieldNumber = 4;
    private string memContractType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemContractType {
      get { return memContractType_; }
      set {
        memContractType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MCPk != other.MCPk) return false;
      if (MemeberPK != other.MemeberPK) return false;
      if (MemContract != other.MemContract) return false;
      if (MemContractType != other.MemContractType) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MCPk.Length != 0) hash ^= MCPk.GetHashCode();
      if (MemeberPK.Length != 0) hash ^= MemeberPK.GetHashCode();
      if (MemContract.Length != 0) hash ^= MemContract.GetHashCode();
      if (MemContractType.Length != 0) hash ^= MemContractType.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MCPk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MCPk);
      }
      if (MemeberPK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemeberPK);
      }
      if (MemContract.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemContract);
      }
      if (MemContractType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemContractType);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MCPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MCPk);
      }
      if (MemeberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemeberPK);
      }
      if (MemContract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemContract);
      }
      if (MemContractType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemContractType);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.MCPk.Length != 0) {
        MCPk = other.MCPk;
      }
      if (other.MemeberPK.Length != 0) {
        MemeberPK = other.MemeberPK;
      }
      if (other.MemContract.Length != 0) {
        MemContract = other.MemContract;
      }
      if (other.MemContractType.Length != 0) {
        MemContractType = other.MemContractType;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MCPk = input.ReadString();
            break;
          }
          case 18: {
            MemeberPK = input.ReadString();
            break;
          }
          case 26: {
            MemContract = input.ReadString();
            break;
          }
          case 34: {
            MemContractType = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberStruct : pb::IMessage<MemberStruct> {
    private static readonly pb::MessageParser<MemberStruct> _parser = new pb::MessageParser<MemberStruct>(() => new MemberStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberStruct(MemberStruct other) : this() {
      memberPK_ = other.memberPK_;
      sourcePK_ = other.sourcePK_;
      memNameCn_ = other.memNameCn_;
      memNameEn_ = other.memNameEn_;
      memEmail_ = other.memEmail_;
      memPassword_ = other.memPassword_;
      memType_ = other.memType_;
      memGender_ = other.memGender_;
      memDepartment_ = other.memDepartment_;
      memTitle_ = other.memTitle_;
      memPosition_ = other.memPosition_;
      memProTitle_ = other.memProTitle_;
      memQQ_ = other.memQQ_;
      memFax_ = other.memFax_;
      memMSN_ = other.memMSN_;
      memMobile_ = other.memMobile_;
      memTel_ = other.memTel_;
      memPostCode_ = other.memPostCode_;
      memLastLoginTime_ = other.memLastLoginTime_;
      memAddress_ = other.memAddress_;
      memAddressDetail_ = other.memAddressDetail_;
      memIsDelete_ = other.memIsDelete_;
      memIsActivation_ = other.memIsActivation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      companyPK_ = other.companyPK_;
      memCountryNameCn_ = other.memCountryNameCn_;
      memCountryNameEn_ = other.memCountryNameEn_;
      memCompany_ = other.memCompany_;
      assistantName_ = other.assistantName_;
      assistantPosition_ = other.assistantPosition_;
      assistantMobile_ = other.assistantMobile_;
      assistantEmail_ = other.assistantEmail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberStruct Clone() {
      return new MemberStruct(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourcePK" field.</summary>
    public const int SourcePKFieldNumber = 2;
    private string sourcePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePK {
      get { return sourcePK_; }
      set {
        sourcePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameCn" field.</summary>
    public const int MemNameCnFieldNumber = 3;
    private string memNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameCn {
      get { return memNameCn_; }
      set {
        memNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameEn" field.</summary>
    public const int MemNameEnFieldNumber = 4;
    private string memNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameEn {
      get { return memNameEn_; }
      set {
        memNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemEmail" field.</summary>
    public const int MemEmailFieldNumber = 5;
    private string memEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPassword" field.</summary>
    public const int MemPasswordFieldNumber = 6;
    private string memPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPassword {
      get { return memPassword_; }
      set {
        memPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemType" field.</summary>
    public const int MemTypeFieldNumber = 7;
    private string memType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemType {
      get { return memType_; }
      set {
        memType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemGender" field.</summary>
    public const int MemGenderFieldNumber = 8;
    private string memGender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemGender {
      get { return memGender_; }
      set {
        memGender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemDepartment" field.</summary>
    public const int MemDepartmentFieldNumber = 9;
    private string memDepartment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemDepartment {
      get { return memDepartment_; }
      set {
        memDepartment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTitle" field.</summary>
    public const int MemTitleFieldNumber = 10;
    private string memTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTitle {
      get { return memTitle_; }
      set {
        memTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPosition" field.</summary>
    public const int MemPositionFieldNumber = 11;
    private string memPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPosition {
      get { return memPosition_; }
      set {
        memPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemProTitle" field.</summary>
    public const int MemProTitleFieldNumber = 12;
    private string memProTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemProTitle {
      get { return memProTitle_; }
      set {
        memProTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemQQ" field.</summary>
    public const int MemQQFieldNumber = 13;
    private string memQQ_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemQQ {
      get { return memQQ_; }
      set {
        memQQ_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemFax" field.</summary>
    public const int MemFaxFieldNumber = 14;
    private string memFax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemFax {
      get { return memFax_; }
      set {
        memFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMSN" field.</summary>
    public const int MemMSNFieldNumber = 15;
    private string memMSN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMSN {
      get { return memMSN_; }
      set {
        memMSN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMobile" field.</summary>
    public const int MemMobileFieldNumber = 16;
    private string memMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMobile {
      get { return memMobile_; }
      set {
        memMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTel" field.</summary>
    public const int MemTelFieldNumber = 17;
    private string memTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTel {
      get { return memTel_; }
      set {
        memTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPostCode" field.</summary>
    public const int MemPostCodeFieldNumber = 18;
    private string memPostCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPostCode {
      get { return memPostCode_; }
      set {
        memPostCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemLastLoginTime" field.</summary>
    public const int MemLastLoginTimeFieldNumber = 19;
    private string memLastLoginTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemLastLoginTime {
      get { return memLastLoginTime_; }
      set {
        memLastLoginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddress" field.</summary>
    public const int MemAddressFieldNumber = 20;
    private string memAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddress {
      get { return memAddress_; }
      set {
        memAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddressDetail" field.</summary>
    public const int MemAddressDetailFieldNumber = 21;
    private string memAddressDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddressDetail {
      get { return memAddressDetail_; }
      set {
        memAddressDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemIsDelete" field.</summary>
    public const int MemIsDeleteFieldNumber = 22;
    private bool memIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsDelete {
      get { return memIsDelete_; }
      set {
        memIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "MemIsActivation" field.</summary>
    public const int MemIsActivationFieldNumber = 23;
    private bool memIsActivation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsActivation {
      get { return memIsActivation_; }
      set {
        memIsActivation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 24;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 25;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 26;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 27;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyPK" field.</summary>
    public const int CompanyPKFieldNumber = 28;
    private string companyPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPK {
      get { return companyPK_; }
      set {
        companyPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameCn" field.</summary>
    public const int MemCountryNameCnFieldNumber = 29;
    private string memCountryNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameCn {
      get { return memCountryNameCn_; }
      set {
        memCountryNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameEn" field.</summary>
    public const int MemCountryNameEnFieldNumber = 30;
    private string memCountryNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameEn {
      get { return memCountryNameEn_; }
      set {
        memCountryNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCompany" field.</summary>
    public const int MemCompanyFieldNumber = 31;
    private string memCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCompany {
      get { return memCompany_; }
      set {
        memCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantName" field.</summary>
    public const int AssistantNameFieldNumber = 32;
    private string assistantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantName {
      get { return assistantName_; }
      set {
        assistantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantPosition" field.</summary>
    public const int AssistantPositionFieldNumber = 33;
    private string assistantPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantPosition {
      get { return assistantPosition_; }
      set {
        assistantPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantMobile" field.</summary>
    public const int AssistantMobileFieldNumber = 34;
    private string assistantMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantMobile {
      get { return assistantMobile_; }
      set {
        assistantMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantEmail" field.</summary>
    public const int AssistantEmailFieldNumber = 35;
    private string assistantEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantEmail {
      get { return assistantEmail_; }
      set {
        assistantEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if (SourcePK != other.SourcePK) return false;
      if (MemNameCn != other.MemNameCn) return false;
      if (MemNameEn != other.MemNameEn) return false;
      if (MemEmail != other.MemEmail) return false;
      if (MemPassword != other.MemPassword) return false;
      if (MemType != other.MemType) return false;
      if (MemGender != other.MemGender) return false;
      if (MemDepartment != other.MemDepartment) return false;
      if (MemTitle != other.MemTitle) return false;
      if (MemPosition != other.MemPosition) return false;
      if (MemProTitle != other.MemProTitle) return false;
      if (MemQQ != other.MemQQ) return false;
      if (MemFax != other.MemFax) return false;
      if (MemMSN != other.MemMSN) return false;
      if (MemMobile != other.MemMobile) return false;
      if (MemTel != other.MemTel) return false;
      if (MemPostCode != other.MemPostCode) return false;
      if (MemLastLoginTime != other.MemLastLoginTime) return false;
      if (MemAddress != other.MemAddress) return false;
      if (MemAddressDetail != other.MemAddressDetail) return false;
      if (MemIsDelete != other.MemIsDelete) return false;
      if (MemIsActivation != other.MemIsActivation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (CompanyPK != other.CompanyPK) return false;
      if (MemCountryNameCn != other.MemCountryNameCn) return false;
      if (MemCountryNameEn != other.MemCountryNameEn) return false;
      if (MemCompany != other.MemCompany) return false;
      if (AssistantName != other.AssistantName) return false;
      if (AssistantPosition != other.AssistantPosition) return false;
      if (AssistantMobile != other.AssistantMobile) return false;
      if (AssistantEmail != other.AssistantEmail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SourcePK.Length != 0) hash ^= SourcePK.GetHashCode();
      if (MemNameCn.Length != 0) hash ^= MemNameCn.GetHashCode();
      if (MemNameEn.Length != 0) hash ^= MemNameEn.GetHashCode();
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemPassword.Length != 0) hash ^= MemPassword.GetHashCode();
      if (MemType.Length != 0) hash ^= MemType.GetHashCode();
      if (MemGender.Length != 0) hash ^= MemGender.GetHashCode();
      if (MemDepartment.Length != 0) hash ^= MemDepartment.GetHashCode();
      if (MemTitle.Length != 0) hash ^= MemTitle.GetHashCode();
      if (MemPosition.Length != 0) hash ^= MemPosition.GetHashCode();
      if (MemProTitle.Length != 0) hash ^= MemProTitle.GetHashCode();
      if (MemQQ.Length != 0) hash ^= MemQQ.GetHashCode();
      if (MemFax.Length != 0) hash ^= MemFax.GetHashCode();
      if (MemMSN.Length != 0) hash ^= MemMSN.GetHashCode();
      if (MemMobile.Length != 0) hash ^= MemMobile.GetHashCode();
      if (MemTel.Length != 0) hash ^= MemTel.GetHashCode();
      if (MemPostCode.Length != 0) hash ^= MemPostCode.GetHashCode();
      if (MemLastLoginTime.Length != 0) hash ^= MemLastLoginTime.GetHashCode();
      if (MemAddress.Length != 0) hash ^= MemAddress.GetHashCode();
      if (MemAddressDetail.Length != 0) hash ^= MemAddressDetail.GetHashCode();
      if (MemIsDelete != false) hash ^= MemIsDelete.GetHashCode();
      if (MemIsActivation != false) hash ^= MemIsActivation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (CompanyPK.Length != 0) hash ^= CompanyPK.GetHashCode();
      if (MemCountryNameCn.Length != 0) hash ^= MemCountryNameCn.GetHashCode();
      if (MemCountryNameEn.Length != 0) hash ^= MemCountryNameEn.GetHashCode();
      if (MemCompany.Length != 0) hash ^= MemCompany.GetHashCode();
      if (AssistantName.Length != 0) hash ^= AssistantName.GetHashCode();
      if (AssistantPosition.Length != 0) hash ^= AssistantPosition.GetHashCode();
      if (AssistantMobile.Length != 0) hash ^= AssistantMobile.GetHashCode();
      if (AssistantEmail.Length != 0) hash ^= AssistantEmail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      if (SourcePK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MemEmail);
      }
      if (MemPassword.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MemPassword);
      }
      if (MemType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MemType);
      }
      if (MemGender.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemGender);
      }
      if (MemDepartment.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MemTitle);
      }
      if (MemPosition.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MemQQ);
      }
      if (MemFax.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MemFax);
      }
      if (MemMSN.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MemMSN);
      }
      if (MemMobile.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MemMobile);
      }
      if (MemTel.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(MemTel);
      }
      if (MemPostCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(MemAddressDetail);
      }
      if (MemIsDelete != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(MemIsDelete);
      }
      if (MemIsActivation != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(MemIsActivation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ModefieldBy);
      }
      if (CompanyPK.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(CompanyPK);
      }
      if (MemCountryNameCn.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(MemCompany);
      }
      if (AssistantName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(AssistantEmail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SourcePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPassword);
      }
      if (MemType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemType);
      }
      if (MemGender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemGender);
      }
      if (MemDepartment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTitle);
      }
      if (MemPosition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemQQ);
      }
      if (MemFax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemFax);
      }
      if (MemMSN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemMSN);
      }
      if (MemMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemMobile);
      }
      if (MemTel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemTel);
      }
      if (MemPostCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddressDetail);
      }
      if (MemIsDelete != false) {
        size += 2 + 1;
      }
      if (MemIsActivation != false) {
        size += 2 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (CompanyPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyPK);
      }
      if (MemCountryNameCn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCompany);
      }
      if (AssistantName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantEmail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SourcePK.Length != 0) {
        SourcePK = other.SourcePK;
      }
      if (other.MemNameCn.Length != 0) {
        MemNameCn = other.MemNameCn;
      }
      if (other.MemNameEn.Length != 0) {
        MemNameEn = other.MemNameEn;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemPassword.Length != 0) {
        MemPassword = other.MemPassword;
      }
      if (other.MemType.Length != 0) {
        MemType = other.MemType;
      }
      if (other.MemGender.Length != 0) {
        MemGender = other.MemGender;
      }
      if (other.MemDepartment.Length != 0) {
        MemDepartment = other.MemDepartment;
      }
      if (other.MemTitle.Length != 0) {
        MemTitle = other.MemTitle;
      }
      if (other.MemPosition.Length != 0) {
        MemPosition = other.MemPosition;
      }
      if (other.MemProTitle.Length != 0) {
        MemProTitle = other.MemProTitle;
      }
      if (other.MemQQ.Length != 0) {
        MemQQ = other.MemQQ;
      }
      if (other.MemFax.Length != 0) {
        MemFax = other.MemFax;
      }
      if (other.MemMSN.Length != 0) {
        MemMSN = other.MemMSN;
      }
      if (other.MemMobile.Length != 0) {
        MemMobile = other.MemMobile;
      }
      if (other.MemTel.Length != 0) {
        MemTel = other.MemTel;
      }
      if (other.MemPostCode.Length != 0) {
        MemPostCode = other.MemPostCode;
      }
      if (other.MemLastLoginTime.Length != 0) {
        MemLastLoginTime = other.MemLastLoginTime;
      }
      if (other.MemAddress.Length != 0) {
        MemAddress = other.MemAddress;
      }
      if (other.MemAddressDetail.Length != 0) {
        MemAddressDetail = other.MemAddressDetail;
      }
      if (other.MemIsDelete != false) {
        MemIsDelete = other.MemIsDelete;
      }
      if (other.MemIsActivation != false) {
        MemIsActivation = other.MemIsActivation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.CompanyPK.Length != 0) {
        CompanyPK = other.CompanyPK;
      }
      if (other.MemCountryNameCn.Length != 0) {
        MemCountryNameCn = other.MemCountryNameCn;
      }
      if (other.MemCountryNameEn.Length != 0) {
        MemCountryNameEn = other.MemCountryNameEn;
      }
      if (other.MemCompany.Length != 0) {
        MemCompany = other.MemCompany;
      }
      if (other.AssistantName.Length != 0) {
        AssistantName = other.AssistantName;
      }
      if (other.AssistantPosition.Length != 0) {
        AssistantPosition = other.AssistantPosition;
      }
      if (other.AssistantMobile.Length != 0) {
        AssistantMobile = other.AssistantMobile;
      }
      if (other.AssistantEmail.Length != 0) {
        AssistantEmail = other.AssistantEmail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            SourcePK = input.ReadString();
            break;
          }
          case 26: {
            MemNameCn = input.ReadString();
            break;
          }
          case 34: {
            MemNameEn = input.ReadString();
            break;
          }
          case 42: {
            MemEmail = input.ReadString();
            break;
          }
          case 50: {
            MemPassword = input.ReadString();
            break;
          }
          case 58: {
            MemType = input.ReadString();
            break;
          }
          case 66: {
            MemGender = input.ReadString();
            break;
          }
          case 74: {
            MemDepartment = input.ReadString();
            break;
          }
          case 82: {
            MemTitle = input.ReadString();
            break;
          }
          case 90: {
            MemPosition = input.ReadString();
            break;
          }
          case 98: {
            MemProTitle = input.ReadString();
            break;
          }
          case 106: {
            MemQQ = input.ReadString();
            break;
          }
          case 114: {
            MemFax = input.ReadString();
            break;
          }
          case 122: {
            MemMSN = input.ReadString();
            break;
          }
          case 130: {
            MemMobile = input.ReadString();
            break;
          }
          case 138: {
            MemTel = input.ReadString();
            break;
          }
          case 146: {
            MemPostCode = input.ReadString();
            break;
          }
          case 154: {
            MemLastLoginTime = input.ReadString();
            break;
          }
          case 162: {
            MemAddress = input.ReadString();
            break;
          }
          case 170: {
            MemAddressDetail = input.ReadString();
            break;
          }
          case 176: {
            MemIsDelete = input.ReadBool();
            break;
          }
          case 184: {
            MemIsActivation = input.ReadBool();
            break;
          }
          case 194: {
            CreatedOn = input.ReadString();
            break;
          }
          case 202: {
            CreatedBy = input.ReadString();
            break;
          }
          case 210: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 218: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 226: {
            CompanyPK = input.ReadString();
            break;
          }
          case 234: {
            MemCountryNameCn = input.ReadString();
            break;
          }
          case 242: {
            MemCountryNameEn = input.ReadString();
            break;
          }
          case 250: {
            MemCompany = input.ReadString();
            break;
          }
          case 258: {
            AssistantName = input.ReadString();
            break;
          }
          case 266: {
            AssistantPosition = input.ReadString();
            break;
          }
          case 274: {
            AssistantMobile = input.ReadString();
            break;
          }
          case 282: {
            AssistantEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemberAccountStruct : pb::IMessage<MemberAccountStruct> {
    private static readonly pb::MessageParser<MemberAccountStruct> _parser = new pb::MessageParser<MemberAccountStruct>(() => new MemberAccountStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemberAccountStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAccountStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAccountStruct(MemberAccountStruct other) : this() {
      memberPK_ = other.memberPK_;
      sourcePK_ = other.sourcePK_;
      memNameCn_ = other.memNameCn_;
      memNameEn_ = other.memNameEn_;
      memEmail_ = other.memEmail_;
      memPassword_ = other.memPassword_;
      memType_ = other.memType_;
      memGender_ = other.memGender_;
      memDepartment_ = other.memDepartment_;
      memTitle_ = other.memTitle_;
      memPosition_ = other.memPosition_;
      memProTitle_ = other.memProTitle_;
      memQQ_ = other.memQQ_;
      memFax_ = other.memFax_;
      memMSN_ = other.memMSN_;
      memMobile_ = other.memMobile_;
      memTel_ = other.memTel_;
      memPostCode_ = other.memPostCode_;
      memLastLoginTime_ = other.memLastLoginTime_;
      memAddress_ = other.memAddress_;
      memAddressDetail_ = other.memAddressDetail_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      memCountryNameCn_ = other.memCountryNameCn_;
      memCountryNameEn_ = other.memCountryNameEn_;
      memCompany_ = other.memCompany_;
      companyPK_ = other.companyPK_;
      assistantName_ = other.assistantName_;
      assistantPosition_ = other.assistantPosition_;
      assistantMobile_ = other.assistantMobile_;
      assistantEmail_ = other.assistantEmail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberAccountStruct Clone() {
      return new MemberAccountStruct(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourcePK" field.</summary>
    public const int SourcePKFieldNumber = 2;
    private string sourcePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePK {
      get { return sourcePK_; }
      set {
        sourcePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameCn" field.</summary>
    public const int MemNameCnFieldNumber = 3;
    private string memNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameCn {
      get { return memNameCn_; }
      set {
        memNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameEn" field.</summary>
    public const int MemNameEnFieldNumber = 4;
    private string memNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameEn {
      get { return memNameEn_; }
      set {
        memNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemEmail" field.</summary>
    public const int MemEmailFieldNumber = 5;
    private string memEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPassword" field.</summary>
    public const int MemPasswordFieldNumber = 6;
    private string memPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPassword {
      get { return memPassword_; }
      set {
        memPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemType" field.</summary>
    public const int MemTypeFieldNumber = 7;
    private string memType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemType {
      get { return memType_; }
      set {
        memType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemGender" field.</summary>
    public const int MemGenderFieldNumber = 8;
    private string memGender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemGender {
      get { return memGender_; }
      set {
        memGender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemDepartment" field.</summary>
    public const int MemDepartmentFieldNumber = 9;
    private string memDepartment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemDepartment {
      get { return memDepartment_; }
      set {
        memDepartment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTitle" field.</summary>
    public const int MemTitleFieldNumber = 10;
    private string memTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTitle {
      get { return memTitle_; }
      set {
        memTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPosition" field.</summary>
    public const int MemPositionFieldNumber = 11;
    private string memPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPosition {
      get { return memPosition_; }
      set {
        memPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemProTitle" field.</summary>
    public const int MemProTitleFieldNumber = 12;
    private string memProTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemProTitle {
      get { return memProTitle_; }
      set {
        memProTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemQQ" field.</summary>
    public const int MemQQFieldNumber = 13;
    private string memQQ_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemQQ {
      get { return memQQ_; }
      set {
        memQQ_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemFax" field.</summary>
    public const int MemFaxFieldNumber = 14;
    private string memFax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemFax {
      get { return memFax_; }
      set {
        memFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMSN" field.</summary>
    public const int MemMSNFieldNumber = 15;
    private string memMSN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMSN {
      get { return memMSN_; }
      set {
        memMSN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMobile" field.</summary>
    public const int MemMobileFieldNumber = 16;
    private string memMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMobile {
      get { return memMobile_; }
      set {
        memMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTel" field.</summary>
    public const int MemTelFieldNumber = 17;
    private string memTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTel {
      get { return memTel_; }
      set {
        memTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPostCode" field.</summary>
    public const int MemPostCodeFieldNumber = 18;
    private string memPostCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPostCode {
      get { return memPostCode_; }
      set {
        memPostCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemLastLoginTime" field.</summary>
    public const int MemLastLoginTimeFieldNumber = 19;
    private string memLastLoginTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemLastLoginTime {
      get { return memLastLoginTime_; }
      set {
        memLastLoginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddress" field.</summary>
    public const int MemAddressFieldNumber = 20;
    private string memAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddress {
      get { return memAddress_; }
      set {
        memAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddressDetail" field.</summary>
    public const int MemAddressDetailFieldNumber = 21;
    private string memAddressDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddressDetail {
      get { return memAddressDetail_; }
      set {
        memAddressDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 22;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 23;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 24;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 25;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameCn" field.</summary>
    public const int MemCountryNameCnFieldNumber = 26;
    private string memCountryNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameCn {
      get { return memCountryNameCn_; }
      set {
        memCountryNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameEn" field.</summary>
    public const int MemCountryNameEnFieldNumber = 27;
    private string memCountryNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameEn {
      get { return memCountryNameEn_; }
      set {
        memCountryNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCompany" field.</summary>
    public const int MemCompanyFieldNumber = 28;
    private string memCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCompany {
      get { return memCompany_; }
      set {
        memCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyPK" field.</summary>
    public const int CompanyPKFieldNumber = 29;
    private string companyPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPK {
      get { return companyPK_; }
      set {
        companyPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantName" field.</summary>
    public const int AssistantNameFieldNumber = 30;
    private string assistantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantName {
      get { return assistantName_; }
      set {
        assistantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantPosition" field.</summary>
    public const int AssistantPositionFieldNumber = 31;
    private string assistantPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantPosition {
      get { return assistantPosition_; }
      set {
        assistantPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantMobile" field.</summary>
    public const int AssistantMobileFieldNumber = 32;
    private string assistantMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantMobile {
      get { return assistantMobile_; }
      set {
        assistantMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantEmail" field.</summary>
    public const int AssistantEmailFieldNumber = 33;
    private string assistantEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantEmail {
      get { return assistantEmail_; }
      set {
        assistantEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemberAccountStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemberAccountStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if (SourcePK != other.SourcePK) return false;
      if (MemNameCn != other.MemNameCn) return false;
      if (MemNameEn != other.MemNameEn) return false;
      if (MemEmail != other.MemEmail) return false;
      if (MemPassword != other.MemPassword) return false;
      if (MemType != other.MemType) return false;
      if (MemGender != other.MemGender) return false;
      if (MemDepartment != other.MemDepartment) return false;
      if (MemTitle != other.MemTitle) return false;
      if (MemPosition != other.MemPosition) return false;
      if (MemProTitle != other.MemProTitle) return false;
      if (MemQQ != other.MemQQ) return false;
      if (MemFax != other.MemFax) return false;
      if (MemMSN != other.MemMSN) return false;
      if (MemMobile != other.MemMobile) return false;
      if (MemTel != other.MemTel) return false;
      if (MemPostCode != other.MemPostCode) return false;
      if (MemLastLoginTime != other.MemLastLoginTime) return false;
      if (MemAddress != other.MemAddress) return false;
      if (MemAddressDetail != other.MemAddressDetail) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (MemCountryNameCn != other.MemCountryNameCn) return false;
      if (MemCountryNameEn != other.MemCountryNameEn) return false;
      if (MemCompany != other.MemCompany) return false;
      if (CompanyPK != other.CompanyPK) return false;
      if (AssistantName != other.AssistantName) return false;
      if (AssistantPosition != other.AssistantPosition) return false;
      if (AssistantMobile != other.AssistantMobile) return false;
      if (AssistantEmail != other.AssistantEmail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SourcePK.Length != 0) hash ^= SourcePK.GetHashCode();
      if (MemNameCn.Length != 0) hash ^= MemNameCn.GetHashCode();
      if (MemNameEn.Length != 0) hash ^= MemNameEn.GetHashCode();
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemPassword.Length != 0) hash ^= MemPassword.GetHashCode();
      if (MemType.Length != 0) hash ^= MemType.GetHashCode();
      if (MemGender.Length != 0) hash ^= MemGender.GetHashCode();
      if (MemDepartment.Length != 0) hash ^= MemDepartment.GetHashCode();
      if (MemTitle.Length != 0) hash ^= MemTitle.GetHashCode();
      if (MemPosition.Length != 0) hash ^= MemPosition.GetHashCode();
      if (MemProTitle.Length != 0) hash ^= MemProTitle.GetHashCode();
      if (MemQQ.Length != 0) hash ^= MemQQ.GetHashCode();
      if (MemFax.Length != 0) hash ^= MemFax.GetHashCode();
      if (MemMSN.Length != 0) hash ^= MemMSN.GetHashCode();
      if (MemMobile.Length != 0) hash ^= MemMobile.GetHashCode();
      if (MemTel.Length != 0) hash ^= MemTel.GetHashCode();
      if (MemPostCode.Length != 0) hash ^= MemPostCode.GetHashCode();
      if (MemLastLoginTime.Length != 0) hash ^= MemLastLoginTime.GetHashCode();
      if (MemAddress.Length != 0) hash ^= MemAddress.GetHashCode();
      if (MemAddressDetail.Length != 0) hash ^= MemAddressDetail.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (MemCountryNameCn.Length != 0) hash ^= MemCountryNameCn.GetHashCode();
      if (MemCountryNameEn.Length != 0) hash ^= MemCountryNameEn.GetHashCode();
      if (MemCompany.Length != 0) hash ^= MemCompany.GetHashCode();
      if (CompanyPK.Length != 0) hash ^= CompanyPK.GetHashCode();
      if (AssistantName.Length != 0) hash ^= AssistantName.GetHashCode();
      if (AssistantPosition.Length != 0) hash ^= AssistantPosition.GetHashCode();
      if (AssistantMobile.Length != 0) hash ^= AssistantMobile.GetHashCode();
      if (AssistantEmail.Length != 0) hash ^= AssistantEmail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      if (SourcePK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MemEmail);
      }
      if (MemPassword.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MemPassword);
      }
      if (MemType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MemType);
      }
      if (MemGender.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemGender);
      }
      if (MemDepartment.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MemTitle);
      }
      if (MemPosition.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MemQQ);
      }
      if (MemFax.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MemFax);
      }
      if (MemMSN.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MemMSN);
      }
      if (MemMobile.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MemMobile);
      }
      if (MemTel.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(MemTel);
      }
      if (MemPostCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(MemAddressDetail);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ModefieldBy);
      }
      if (MemCountryNameCn.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(MemCompany);
      }
      if (CompanyPK.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(CompanyPK);
      }
      if (AssistantName.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(AssistantEmail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SourcePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPassword);
      }
      if (MemType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemType);
      }
      if (MemGender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemGender);
      }
      if (MemDepartment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTitle);
      }
      if (MemPosition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemQQ);
      }
      if (MemFax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemFax);
      }
      if (MemMSN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemMSN);
      }
      if (MemMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemMobile);
      }
      if (MemTel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemTel);
      }
      if (MemPostCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddressDetail);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (MemCountryNameCn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCompany);
      }
      if (CompanyPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyPK);
      }
      if (AssistantName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantEmail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemberAccountStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SourcePK.Length != 0) {
        SourcePK = other.SourcePK;
      }
      if (other.MemNameCn.Length != 0) {
        MemNameCn = other.MemNameCn;
      }
      if (other.MemNameEn.Length != 0) {
        MemNameEn = other.MemNameEn;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemPassword.Length != 0) {
        MemPassword = other.MemPassword;
      }
      if (other.MemType.Length != 0) {
        MemType = other.MemType;
      }
      if (other.MemGender.Length != 0) {
        MemGender = other.MemGender;
      }
      if (other.MemDepartment.Length != 0) {
        MemDepartment = other.MemDepartment;
      }
      if (other.MemTitle.Length != 0) {
        MemTitle = other.MemTitle;
      }
      if (other.MemPosition.Length != 0) {
        MemPosition = other.MemPosition;
      }
      if (other.MemProTitle.Length != 0) {
        MemProTitle = other.MemProTitle;
      }
      if (other.MemQQ.Length != 0) {
        MemQQ = other.MemQQ;
      }
      if (other.MemFax.Length != 0) {
        MemFax = other.MemFax;
      }
      if (other.MemMSN.Length != 0) {
        MemMSN = other.MemMSN;
      }
      if (other.MemMobile.Length != 0) {
        MemMobile = other.MemMobile;
      }
      if (other.MemTel.Length != 0) {
        MemTel = other.MemTel;
      }
      if (other.MemPostCode.Length != 0) {
        MemPostCode = other.MemPostCode;
      }
      if (other.MemLastLoginTime.Length != 0) {
        MemLastLoginTime = other.MemLastLoginTime;
      }
      if (other.MemAddress.Length != 0) {
        MemAddress = other.MemAddress;
      }
      if (other.MemAddressDetail.Length != 0) {
        MemAddressDetail = other.MemAddressDetail;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.MemCountryNameCn.Length != 0) {
        MemCountryNameCn = other.MemCountryNameCn;
      }
      if (other.MemCountryNameEn.Length != 0) {
        MemCountryNameEn = other.MemCountryNameEn;
      }
      if (other.MemCompany.Length != 0) {
        MemCompany = other.MemCompany;
      }
      if (other.CompanyPK.Length != 0) {
        CompanyPK = other.CompanyPK;
      }
      if (other.AssistantName.Length != 0) {
        AssistantName = other.AssistantName;
      }
      if (other.AssistantPosition.Length != 0) {
        AssistantPosition = other.AssistantPosition;
      }
      if (other.AssistantMobile.Length != 0) {
        AssistantMobile = other.AssistantMobile;
      }
      if (other.AssistantEmail.Length != 0) {
        AssistantEmail = other.AssistantEmail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            SourcePK = input.ReadString();
            break;
          }
          case 26: {
            MemNameCn = input.ReadString();
            break;
          }
          case 34: {
            MemNameEn = input.ReadString();
            break;
          }
          case 42: {
            MemEmail = input.ReadString();
            break;
          }
          case 50: {
            MemPassword = input.ReadString();
            break;
          }
          case 58: {
            MemType = input.ReadString();
            break;
          }
          case 66: {
            MemGender = input.ReadString();
            break;
          }
          case 74: {
            MemDepartment = input.ReadString();
            break;
          }
          case 82: {
            MemTitle = input.ReadString();
            break;
          }
          case 90: {
            MemPosition = input.ReadString();
            break;
          }
          case 98: {
            MemProTitle = input.ReadString();
            break;
          }
          case 106: {
            MemQQ = input.ReadString();
            break;
          }
          case 114: {
            MemFax = input.ReadString();
            break;
          }
          case 122: {
            MemMSN = input.ReadString();
            break;
          }
          case 130: {
            MemMobile = input.ReadString();
            break;
          }
          case 138: {
            MemTel = input.ReadString();
            break;
          }
          case 146: {
            MemPostCode = input.ReadString();
            break;
          }
          case 154: {
            MemLastLoginTime = input.ReadString();
            break;
          }
          case 162: {
            MemAddress = input.ReadString();
            break;
          }
          case 170: {
            MemAddressDetail = input.ReadString();
            break;
          }
          case 178: {
            CreatedOn = input.ReadString();
            break;
          }
          case 186: {
            CreatedBy = input.ReadString();
            break;
          }
          case 194: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 202: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 210: {
            MemCountryNameCn = input.ReadString();
            break;
          }
          case 218: {
            MemCountryNameEn = input.ReadString();
            break;
          }
          case 226: {
            MemCompany = input.ReadString();
            break;
          }
          case 234: {
            CompanyPK = input.ReadString();
            break;
          }
          case 242: {
            AssistantName = input.ReadString();
            break;
          }
          case 250: {
            AssistantPosition = input.ReadString();
            break;
          }
          case 258: {
            AssistantMobile = input.ReadString();
            break;
          }
          case 266: {
            AssistantEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SourceStruct : pb::IMessage<SourceStruct> {
    private static readonly pb::MessageParser<SourceStruct> _parser = new pb::MessageParser<SourceStruct>(() => new SourceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceStruct(SourceStruct other) : this() {
      sourcePK_ = other.sourcePK_;
      sourceAbbr_ = other.sourceAbbr_;
      sourceNameCn_ = other.sourceNameCn_;
      sourceNameEn_ = other.sourceNameEn_;
      sourceBeginTime_ = other.sourceBeginTime_;
      sourceEndTime_ = other.sourceEndTime_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      sourceCode_ = other.sourceCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceStruct Clone() {
      return new SourceStruct(this);
    }

    /// <summary>Field number for the "SourcePK" field.</summary>
    public const int SourcePKFieldNumber = 1;
    private string sourcePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePK {
      get { return sourcePK_; }
      set {
        sourcePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceAbbr" field.</summary>
    public const int SourceAbbrFieldNumber = 2;
    private string sourceAbbr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceAbbr {
      get { return sourceAbbr_; }
      set {
        sourceAbbr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceNameCn" field.</summary>
    public const int SourceNameCnFieldNumber = 3;
    private string sourceNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceNameCn {
      get { return sourceNameCn_; }
      set {
        sourceNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceNameEn" field.</summary>
    public const int SourceNameEnFieldNumber = 4;
    private string sourceNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceNameEn {
      get { return sourceNameEn_; }
      set {
        sourceNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceBeginTime" field.</summary>
    public const int SourceBeginTimeFieldNumber = 5;
    private string sourceBeginTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceBeginTime {
      get { return sourceBeginTime_; }
      set {
        sourceBeginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceEndTime" field.</summary>
    public const int SourceEndTimeFieldNumber = 6;
    private string sourceEndTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceEndTime {
      get { return sourceEndTime_; }
      set {
        sourceEndTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourceCode" field.</summary>
    public const int SourceCodeFieldNumber = 11;
    private string sourceCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceCode {
      get { return sourceCode_; }
      set {
        sourceCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourcePK != other.SourcePK) return false;
      if (SourceAbbr != other.SourceAbbr) return false;
      if (SourceNameCn != other.SourceNameCn) return false;
      if (SourceNameEn != other.SourceNameEn) return false;
      if (SourceBeginTime != other.SourceBeginTime) return false;
      if (SourceEndTime != other.SourceEndTime) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (SourceCode != other.SourceCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourcePK.Length != 0) hash ^= SourcePK.GetHashCode();
      if (SourceAbbr.Length != 0) hash ^= SourceAbbr.GetHashCode();
      if (SourceNameCn.Length != 0) hash ^= SourceNameCn.GetHashCode();
      if (SourceNameEn.Length != 0) hash ^= SourceNameEn.GetHashCode();
      if (SourceBeginTime.Length != 0) hash ^= SourceBeginTime.GetHashCode();
      if (SourceEndTime.Length != 0) hash ^= SourceEndTime.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (SourceCode.Length != 0) hash ^= SourceCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourcePK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourcePK);
      }
      if (SourceAbbr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceAbbr);
      }
      if (SourceNameCn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceNameCn);
      }
      if (SourceNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceNameEn);
      }
      if (SourceBeginTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SourceBeginTime);
      }
      if (SourceEndTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SourceEndTime);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (SourceCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SourceCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourcePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePK);
      }
      if (SourceAbbr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceAbbr);
      }
      if (SourceNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceNameCn);
      }
      if (SourceNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceNameEn);
      }
      if (SourceBeginTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceBeginTime);
      }
      if (SourceEndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceEndTime);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (SourceCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceStruct other) {
      if (other == null) {
        return;
      }
      if (other.SourcePK.Length != 0) {
        SourcePK = other.SourcePK;
      }
      if (other.SourceAbbr.Length != 0) {
        SourceAbbr = other.SourceAbbr;
      }
      if (other.SourceNameCn.Length != 0) {
        SourceNameCn = other.SourceNameCn;
      }
      if (other.SourceNameEn.Length != 0) {
        SourceNameEn = other.SourceNameEn;
      }
      if (other.SourceBeginTime.Length != 0) {
        SourceBeginTime = other.SourceBeginTime;
      }
      if (other.SourceEndTime.Length != 0) {
        SourceEndTime = other.SourceEndTime;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.SourceCode.Length != 0) {
        SourceCode = other.SourceCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourcePK = input.ReadString();
            break;
          }
          case 18: {
            SourceAbbr = input.ReadString();
            break;
          }
          case 26: {
            SourceNameCn = input.ReadString();
            break;
          }
          case 34: {
            SourceNameEn = input.ReadString();
            break;
          }
          case 42: {
            SourceBeginTime = input.ReadString();
            break;
          }
          case 50: {
            SourceEndTime = input.ReadString();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 90: {
            SourceCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyStruct : pb::IMessage<CompanyStruct> {
    private static readonly pb::MessageParser<CompanyStruct> _parser = new pb::MessageParser<CompanyStruct>(() => new CompanyStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyStruct(CompanyStruct other) : this() {
      companyPK_ = other.companyPK_;
      companyTypePK_ = other.companyTypePK_;
      industryTypePK_ = other.industryTypePK_;
      memberPK_ = other.memberPK_;
      comNameCn_ = other.comNameCn_;
      comNameEn_ = other.comNameEn_;
      comAreaDetail_ = other.comAreaDetail_;
      comContactEmail_ = other.comContactEmail_;
      comPostCode_ = other.comPostCode_;
      comFax_ = other.comFax_;
      comTel_ = other.comTel_;
      comWebSite_ = other.comWebSite_;
      comClient_ = other.comClient_;
      comNature_ = other.comNature_;
      comLang_ = other.comLang_;
      comRemark_ = other.comRemark_;
      comIsDelete_ = other.comIsDelete_;
      comIsVerify_ = other.comIsVerify_;
      comIsWebSite_ = other.comIsWebSite_;
      comAddress_ = other.comAddress_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyStruct Clone() {
      return new CompanyStruct(this);
    }

    /// <summary>Field number for the "CompanyPK" field.</summary>
    public const int CompanyPKFieldNumber = 1;
    private string companyPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPK {
      get { return companyPK_; }
      set {
        companyPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTypePK" field.</summary>
    public const int CompanyTypePKFieldNumber = 2;
    private string companyTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTypePK {
      get { return companyTypePK_; }
      set {
        companyTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IndustryTypePK" field.</summary>
    public const int IndustryTypePKFieldNumber = 3;
    private string industryTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndustryTypePK {
      get { return industryTypePK_; }
      set {
        industryTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameCn" field.</summary>
    public const int ComNameCnFieldNumber = 5;
    private string comNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameCn {
      get { return comNameCn_; }
      set {
        comNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameEn" field.</summary>
    public const int ComNameEnFieldNumber = 6;
    private string comNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameEn {
      get { return comNameEn_; }
      set {
        comNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComAreaDetail" field.</summary>
    public const int ComAreaDetailFieldNumber = 7;
    private string comAreaDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComAreaDetail {
      get { return comAreaDetail_; }
      set {
        comAreaDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComContactEmail" field.</summary>
    public const int ComContactEmailFieldNumber = 8;
    private string comContactEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContactEmail {
      get { return comContactEmail_; }
      set {
        comContactEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComPostCode" field.</summary>
    public const int ComPostCodeFieldNumber = 9;
    private string comPostCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPostCode {
      get { return comPostCode_; }
      set {
        comPostCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComFax" field.</summary>
    public const int ComFaxFieldNumber = 10;
    private string comFax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComFax {
      get { return comFax_; }
      set {
        comFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComTel" field.</summary>
    public const int ComTelFieldNumber = 11;
    private string comTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComTel {
      get { return comTel_; }
      set {
        comTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComWebSite" field.</summary>
    public const int ComWebSiteFieldNumber = 12;
    private string comWebSite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComWebSite {
      get { return comWebSite_; }
      set {
        comWebSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComClient" field.</summary>
    public const int ComClientFieldNumber = 13;
    private string comClient_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComClient {
      get { return comClient_; }
      set {
        comClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNature" field.</summary>
    public const int ComNatureFieldNumber = 14;
    private string comNature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNature {
      get { return comNature_; }
      set {
        comNature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComLang" field.</summary>
    public const int ComLangFieldNumber = 15;
    private string comLang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComLang {
      get { return comLang_; }
      set {
        comLang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComRemark" field.</summary>
    public const int ComRemarkFieldNumber = 16;
    private string comRemark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComRemark {
      get { return comRemark_; }
      set {
        comRemark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComIsDelete" field.</summary>
    public const int ComIsDeleteFieldNumber = 17;
    private bool comIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsDelete {
      get { return comIsDelete_; }
      set {
        comIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "ComIsVerify" field.</summary>
    public const int ComIsVerifyFieldNumber = 18;
    private bool comIsVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsVerify {
      get { return comIsVerify_; }
      set {
        comIsVerify_ = value;
      }
    }

    /// <summary>Field number for the "ComIsWebSite" field.</summary>
    public const int ComIsWebSiteFieldNumber = 19;
    private bool comIsWebSite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsWebSite {
      get { return comIsWebSite_; }
      set {
        comIsWebSite_ = value;
      }
    }

    /// <summary>Field number for the "ComAddress" field.</summary>
    public const int ComAddressFieldNumber = 20;
    private string comAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComAddress {
      get { return comAddress_; }
      set {
        comAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 21;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 22;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 23;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 24;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyPK != other.CompanyPK) return false;
      if (CompanyTypePK != other.CompanyTypePK) return false;
      if (IndustryTypePK != other.IndustryTypePK) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ComNameCn != other.ComNameCn) return false;
      if (ComNameEn != other.ComNameEn) return false;
      if (ComAreaDetail != other.ComAreaDetail) return false;
      if (ComContactEmail != other.ComContactEmail) return false;
      if (ComPostCode != other.ComPostCode) return false;
      if (ComFax != other.ComFax) return false;
      if (ComTel != other.ComTel) return false;
      if (ComWebSite != other.ComWebSite) return false;
      if (ComClient != other.ComClient) return false;
      if (ComNature != other.ComNature) return false;
      if (ComLang != other.ComLang) return false;
      if (ComRemark != other.ComRemark) return false;
      if (ComIsDelete != other.ComIsDelete) return false;
      if (ComIsVerify != other.ComIsVerify) return false;
      if (ComIsWebSite != other.ComIsWebSite) return false;
      if (ComAddress != other.ComAddress) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyPK.Length != 0) hash ^= CompanyPK.GetHashCode();
      if (CompanyTypePK.Length != 0) hash ^= CompanyTypePK.GetHashCode();
      if (IndustryTypePK.Length != 0) hash ^= IndustryTypePK.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ComNameCn.Length != 0) hash ^= ComNameCn.GetHashCode();
      if (ComNameEn.Length != 0) hash ^= ComNameEn.GetHashCode();
      if (ComAreaDetail.Length != 0) hash ^= ComAreaDetail.GetHashCode();
      if (ComContactEmail.Length != 0) hash ^= ComContactEmail.GetHashCode();
      if (ComPostCode.Length != 0) hash ^= ComPostCode.GetHashCode();
      if (ComFax.Length != 0) hash ^= ComFax.GetHashCode();
      if (ComTel.Length != 0) hash ^= ComTel.GetHashCode();
      if (ComWebSite.Length != 0) hash ^= ComWebSite.GetHashCode();
      if (ComClient.Length != 0) hash ^= ComClient.GetHashCode();
      if (ComNature.Length != 0) hash ^= ComNature.GetHashCode();
      if (ComLang.Length != 0) hash ^= ComLang.GetHashCode();
      if (ComRemark.Length != 0) hash ^= ComRemark.GetHashCode();
      if (ComIsDelete != false) hash ^= ComIsDelete.GetHashCode();
      if (ComIsVerify != false) hash ^= ComIsVerify.GetHashCode();
      if (ComIsWebSite != false) hash ^= ComIsWebSite.GetHashCode();
      if (ComAddress.Length != 0) hash ^= ComAddress.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyPK);
      }
      if (CompanyTypePK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTypePK);
      }
      if (IndustryTypePK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IndustryTypePK);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (ComNameCn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ComNameEn);
      }
      if (ComAreaDetail.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ComAreaDetail);
      }
      if (ComContactEmail.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ComContactEmail);
      }
      if (ComPostCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComPostCode);
      }
      if (ComFax.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ComFax);
      }
      if (ComTel.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ComTel);
      }
      if (ComWebSite.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ComWebSite);
      }
      if (ComClient.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ComClient);
      }
      if (ComNature.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ComNature);
      }
      if (ComLang.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ComLang);
      }
      if (ComRemark.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ComRemark);
      }
      if (ComIsDelete != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ComIsDelete);
      }
      if (ComIsVerify != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(ComIsVerify);
      }
      if (ComIsWebSite != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ComIsWebSite);
      }
      if (ComAddress.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ComAddress);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyPK);
      }
      if (CompanyTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTypePK);
      }
      if (IndustryTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndustryTypePK);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ComNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameEn);
      }
      if (ComAreaDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComAreaDetail);
      }
      if (ComContactEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContactEmail);
      }
      if (ComPostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComPostCode);
      }
      if (ComFax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComFax);
      }
      if (ComTel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComTel);
      }
      if (ComWebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComWebSite);
      }
      if (ComClient.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComClient);
      }
      if (ComNature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNature);
      }
      if (ComLang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComLang);
      }
      if (ComRemark.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComRemark);
      }
      if (ComIsDelete != false) {
        size += 2 + 1;
      }
      if (ComIsVerify != false) {
        size += 2 + 1;
      }
      if (ComIsWebSite != false) {
        size += 2 + 1;
      }
      if (ComAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComAddress);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyPK.Length != 0) {
        CompanyPK = other.CompanyPK;
      }
      if (other.CompanyTypePK.Length != 0) {
        CompanyTypePK = other.CompanyTypePK;
      }
      if (other.IndustryTypePK.Length != 0) {
        IndustryTypePK = other.IndustryTypePK;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ComNameCn.Length != 0) {
        ComNameCn = other.ComNameCn;
      }
      if (other.ComNameEn.Length != 0) {
        ComNameEn = other.ComNameEn;
      }
      if (other.ComAreaDetail.Length != 0) {
        ComAreaDetail = other.ComAreaDetail;
      }
      if (other.ComContactEmail.Length != 0) {
        ComContactEmail = other.ComContactEmail;
      }
      if (other.ComPostCode.Length != 0) {
        ComPostCode = other.ComPostCode;
      }
      if (other.ComFax.Length != 0) {
        ComFax = other.ComFax;
      }
      if (other.ComTel.Length != 0) {
        ComTel = other.ComTel;
      }
      if (other.ComWebSite.Length != 0) {
        ComWebSite = other.ComWebSite;
      }
      if (other.ComClient.Length != 0) {
        ComClient = other.ComClient;
      }
      if (other.ComNature.Length != 0) {
        ComNature = other.ComNature;
      }
      if (other.ComLang.Length != 0) {
        ComLang = other.ComLang;
      }
      if (other.ComRemark.Length != 0) {
        ComRemark = other.ComRemark;
      }
      if (other.ComIsDelete != false) {
        ComIsDelete = other.ComIsDelete;
      }
      if (other.ComIsVerify != false) {
        ComIsVerify = other.ComIsVerify;
      }
      if (other.ComIsWebSite != false) {
        ComIsWebSite = other.ComIsWebSite;
      }
      if (other.ComAddress.Length != 0) {
        ComAddress = other.ComAddress;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyPK = input.ReadString();
            break;
          }
          case 18: {
            CompanyTypePK = input.ReadString();
            break;
          }
          case 26: {
            IndustryTypePK = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            ComNameCn = input.ReadString();
            break;
          }
          case 50: {
            ComNameEn = input.ReadString();
            break;
          }
          case 58: {
            ComAreaDetail = input.ReadString();
            break;
          }
          case 66: {
            ComContactEmail = input.ReadString();
            break;
          }
          case 74: {
            ComPostCode = input.ReadString();
            break;
          }
          case 82: {
            ComFax = input.ReadString();
            break;
          }
          case 90: {
            ComTel = input.ReadString();
            break;
          }
          case 98: {
            ComWebSite = input.ReadString();
            break;
          }
          case 106: {
            ComClient = input.ReadString();
            break;
          }
          case 114: {
            ComNature = input.ReadString();
            break;
          }
          case 122: {
            ComLang = input.ReadString();
            break;
          }
          case 130: {
            ComRemark = input.ReadString();
            break;
          }
          case 136: {
            ComIsDelete = input.ReadBool();
            break;
          }
          case 144: {
            ComIsVerify = input.ReadBool();
            break;
          }
          case 152: {
            ComIsWebSite = input.ReadBool();
            break;
          }
          case 162: {
            ComAddress = input.ReadString();
            break;
          }
          case 170: {
            CreatedOn = input.ReadString();
            break;
          }
          case 178: {
            CreatedBy = input.ReadString();
            break;
          }
          case 186: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 194: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndustryTypeStruct : pb::IMessage<IndustryTypeStruct> {
    private static readonly pb::MessageParser<IndustryTypeStruct> _parser = new pb::MessageParser<IndustryTypeStruct>(() => new IndustryTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndustryTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeStruct(IndustryTypeStruct other) : this() {
      industryTypePK_ = other.industryTypePK_;
      industryTypeNameCn_ = other.industryTypeNameCn_;
      industryTypeNameEn_ = other.industryTypeNameEn_;
      industryOrderNumber_ = other.industryOrderNumber_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeStruct Clone() {
      return new IndustryTypeStruct(this);
    }

    /// <summary>Field number for the "IndustryTypePK" field.</summary>
    public const int IndustryTypePKFieldNumber = 1;
    private string industryTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndustryTypePK {
      get { return industryTypePK_; }
      set {
        industryTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IndustryTypeNameCn" field.</summary>
    public const int IndustryTypeNameCnFieldNumber = 2;
    private string industryTypeNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndustryTypeNameCn {
      get { return industryTypeNameCn_; }
      set {
        industryTypeNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IndustryTypeNameEn" field.</summary>
    public const int IndustryTypeNameEnFieldNumber = 3;
    private string industryTypeNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndustryTypeNameEn {
      get { return industryTypeNameEn_; }
      set {
        industryTypeNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IndustryOrderNumber" field.</summary>
    public const int IndustryOrderNumberFieldNumber = 4;
    private int industryOrderNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IndustryOrderNumber {
      get { return industryOrderNumber_; }
      set {
        industryOrderNumber_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndustryTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndustryTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IndustryTypePK != other.IndustryTypePK) return false;
      if (IndustryTypeNameCn != other.IndustryTypeNameCn) return false;
      if (IndustryTypeNameEn != other.IndustryTypeNameEn) return false;
      if (IndustryOrderNumber != other.IndustryOrderNumber) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IndustryTypePK.Length != 0) hash ^= IndustryTypePK.GetHashCode();
      if (IndustryTypeNameCn.Length != 0) hash ^= IndustryTypeNameCn.GetHashCode();
      if (IndustryTypeNameEn.Length != 0) hash ^= IndustryTypeNameEn.GetHashCode();
      if (IndustryOrderNumber != 0) hash ^= IndustryOrderNumber.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IndustryTypePK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IndustryTypePK);
      }
      if (IndustryTypeNameCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IndustryTypeNameCn);
      }
      if (IndustryTypeNameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IndustryTypeNameEn);
      }
      if (IndustryOrderNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IndustryOrderNumber);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IndustryTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndustryTypePK);
      }
      if (IndustryTypeNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndustryTypeNameCn);
      }
      if (IndustryTypeNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndustryTypeNameEn);
      }
      if (IndustryOrderNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IndustryOrderNumber);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndustryTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.IndustryTypePK.Length != 0) {
        IndustryTypePK = other.IndustryTypePK;
      }
      if (other.IndustryTypeNameCn.Length != 0) {
        IndustryTypeNameCn = other.IndustryTypeNameCn;
      }
      if (other.IndustryTypeNameEn.Length != 0) {
        IndustryTypeNameEn = other.IndustryTypeNameEn;
      }
      if (other.IndustryOrderNumber != 0) {
        IndustryOrderNumber = other.IndustryOrderNumber;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IndustryTypePK = input.ReadString();
            break;
          }
          case 18: {
            IndustryTypeNameCn = input.ReadString();
            break;
          }
          case 26: {
            IndustryTypeNameEn = input.ReadString();
            break;
          }
          case 32: {
            IndustryOrderNumber = input.ReadInt32();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyTypeStruct : pb::IMessage<CompanyTypeStruct> {
    private static readonly pb::MessageParser<CompanyTypeStruct> _parser = new pb::MessageParser<CompanyTypeStruct>(() => new CompanyTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeStruct(CompanyTypeStruct other) : this() {
      companyTypePK_ = other.companyTypePK_;
      companyTypeNameCn_ = other.companyTypeNameCn_;
      companyTypeNameEn_ = other.companyTypeNameEn_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeStruct Clone() {
      return new CompanyTypeStruct(this);
    }

    /// <summary>Field number for the "CompanyTypePK" field.</summary>
    public const int CompanyTypePKFieldNumber = 1;
    private string companyTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTypePK {
      get { return companyTypePK_; }
      set {
        companyTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTypeNameCn" field.</summary>
    public const int CompanyTypeNameCnFieldNumber = 2;
    private string companyTypeNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTypeNameCn {
      get { return companyTypeNameCn_; }
      set {
        companyTypeNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTypeNameEn" field.</summary>
    public const int CompanyTypeNameEnFieldNumber = 3;
    private string companyTypeNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTypeNameEn {
      get { return companyTypeNameEn_; }
      set {
        companyTypeNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 6;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 7;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyTypePK != other.CompanyTypePK) return false;
      if (CompanyTypeNameCn != other.CompanyTypeNameCn) return false;
      if (CompanyTypeNameEn != other.CompanyTypeNameEn) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyTypePK.Length != 0) hash ^= CompanyTypePK.GetHashCode();
      if (CompanyTypeNameCn.Length != 0) hash ^= CompanyTypeNameCn.GetHashCode();
      if (CompanyTypeNameEn.Length != 0) hash ^= CompanyTypeNameEn.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyTypePK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyTypePK);
      }
      if (CompanyTypeNameCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTypeNameCn);
      }
      if (CompanyTypeNameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyTypeNameEn);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTypePK);
      }
      if (CompanyTypeNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTypeNameCn);
      }
      if (CompanyTypeNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTypeNameEn);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyTypePK.Length != 0) {
        CompanyTypePK = other.CompanyTypePK;
      }
      if (other.CompanyTypeNameCn.Length != 0) {
        CompanyTypeNameCn = other.CompanyTypeNameCn;
      }
      if (other.CompanyTypeNameEn.Length != 0) {
        CompanyTypeNameEn = other.CompanyTypeNameEn;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyTypePK = input.ReadString();
            break;
          }
          case 18: {
            CompanyTypeNameCn = input.ReadString();
            break;
          }
          case 26: {
            CompanyTypeNameEn = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 58: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountryStruct : pb::IMessage<CountryStruct> {
    private static readonly pb::MessageParser<CountryStruct> _parser = new pb::MessageParser<CountryStruct>(() => new CountryStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountryStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct(CountryStruct other) : this() {
      id_ = other.id_;
      nameCn_ = other.nameCn_;
      nameEn_ = other.nameEn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryStruct Clone() {
      return new CountryStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NameCn" field.</summary>
    public const int NameCnFieldNumber = 2;
    private string nameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameCn {
      get { return nameCn_; }
      set {
        nameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NameEn" field.</summary>
    public const int NameEnFieldNumber = 3;
    private string nameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameEn {
      get { return nameEn_; }
      set {
        nameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountryStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountryStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NameCn != other.NameCn) return false;
      if (NameEn != other.NameEn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (NameCn.Length != 0) hash ^= NameCn.GetHashCode();
      if (NameEn.Length != 0) hash ^= NameEn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (NameCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameCn);
      }
      if (NameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NameEn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (NameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameCn);
      }
      if (NameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameEn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountryStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.NameCn.Length != 0) {
        NameCn = other.NameCn;
      }
      if (other.NameEn.Length != 0) {
        NameEn = other.NameEn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            NameCn = input.ReadString();
            break;
          }
          case 26: {
            NameEn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyDicList : pb::IMessage<CompanyDicList> {
    private static readonly pb::MessageParser<CompanyDicList> _parser = new pb::MessageParser<CompanyDicList>(() => new CompanyDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyDicList(CompanyDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyDicList Clone() {
      return new CompanyDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.CompanyStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.CompanyStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.CompanyStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.CompanyStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.CompanyStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SourceDicList : pb::IMessage<SourceDicList> {
    private static readonly pb::MessageParser<SourceDicList> _parser = new pb::MessageParser<SourceDicList>(() => new SourceDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceDicList(SourceDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceDicList Clone() {
      return new SourceDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.SourceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.SourceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.SourceStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.SourceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.SourceStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountryDicList : pb::IMessage<CountryDicList> {
    private static readonly pb::MessageParser<CountryDicList> _parser = new pb::MessageParser<CountryDicList>(() => new CountryDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountryDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryDicList(CountryDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountryDicList Clone() {
      return new CountryDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.CountryStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.CountryStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.CountryStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.CountryStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.CountryStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountryDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountryDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountryDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndustryTypeDicList : pb::IMessage<IndustryTypeDicList> {
    private static readonly pb::MessageParser<IndustryTypeDicList> _parser = new pb::MessageParser<IndustryTypeDicList>(() => new IndustryTypeDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndustryTypeDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeDicList(IndustryTypeDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndustryTypeDicList Clone() {
      return new IndustryTypeDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.IndustryTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.IndustryTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.IndustryTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndustryTypeDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndustryTypeDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndustryTypeDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyTypeDicList : pb::IMessage<CompanyTypeDicList> {
    private static readonly pb::MessageParser<CompanyTypeDicList> _parser = new pb::MessageParser<CompanyTypeDicList>(() => new CompanyTypeDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyTypeDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeDicList(CompanyTypeDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyTypeDicList Clone() {
      return new CompanyTypeDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcMembersService.CompanyTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcMembersService.CompanyTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcMembersService.CompanyTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyTypeDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyTypeDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyTypeDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReply : pb::IMessage<ModifyReply> {
    private static readonly pb::MessageParser<ModifyReply> _parser = new pb::MessageParser<ModifyReply>(() => new ModifyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply(ModifyReply other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply Clone() {
      return new ModifyReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForCreateMember : pb::IMessage<ModifyReplyForCreateMember> {
    private static readonly pb::MessageParser<ModifyReplyForCreateMember> _parser = new pb::MessageParser<ModifyReplyForCreateMember>(() => new ModifyReplyForCreateMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForCreateMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateMember(ModifyReplyForCreateMember other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ext1_ = other.ext1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateMember Clone() {
      return new ModifyReplyForCreateMember(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext1" field.</summary>
    public const int Ext1FieldNumber = 4;
    private string ext1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext1 {
      get { return ext1_; }
      set {
        ext1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForCreateMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForCreateMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (Ext1 != other.Ext1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Ext1.Length != 0) hash ^= Ext1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (Ext1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ext1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Ext1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForCreateMember other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Ext1.Length != 0) {
        Ext1 = other.Ext1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            Ext1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForCreateOther : pb::IMessage<ModifyReplyForCreateOther> {
    private static readonly pb::MessageParser<ModifyReplyForCreateOther> _parser = new pb::MessageParser<ModifyReplyForCreateOther>(() => new ModifyReplyForCreateOther());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForCreateOther> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther(ModifyReplyForCreateOther other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ext1_ = other.ext1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther Clone() {
      return new ModifyReplyForCreateOther(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext1" field.</summary>
    public const int Ext1FieldNumber = 4;
    private string ext1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext1 {
      get { return ext1_; }
      set {
        ext1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForCreateOther);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForCreateOther other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (Ext1 != other.Ext1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Ext1.Length != 0) hash ^= Ext1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (Ext1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ext1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Ext1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForCreateOther other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Ext1.Length != 0) {
        Ext1 = other.Ext1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            Ext1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolReply : pb::IMessage<BoolReply> {
    private static readonly pb::MessageParser<BoolReply> _parser = new pb::MessageParser<BoolReply>(() => new BoolReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply(BoolReply other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply Clone() {
      return new BoolReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivationStruct : pb::IMessage<ActivationStruct> {
    private static readonly pb::MessageParser<ActivationStruct> _parser = new pb::MessageParser<ActivationStruct>(() => new ActivationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcMembersService.GrpcMembersServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationStruct(ActivationStruct other) : this() {
      memberPK_ = other.memberPK_;
      email_ = other.email_;
      mobile_ = other.mobile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivationStruct Clone() {
      return new ActivationStruct(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 3;
    private string mobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if (Email != other.Email) return false;
      if (Mobile != other.Mobile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivationStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Mobile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
