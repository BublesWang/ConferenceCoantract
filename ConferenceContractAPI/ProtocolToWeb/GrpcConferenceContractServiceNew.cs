// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcConferenceContractServiceNew.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcConferenceContractServiceNew {

  /// <summary>Holder for reflection information generated from GrpcConferenceContractServiceNew.proto</summary>
  public static partial class GrpcConferenceContractServiceNewReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcConferenceContractServiceNew.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcConferenceContractServiceNewReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZHcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5wcm90bxIgR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXciBwoFRW1wdHkiFwoJSWRS",
            "ZXF1ZXN0EgoKAmlkGAEgASgJIhoKDElkSW50UmVxdWVzdBIKCgJpZBgBIAEo",
            "BSIZCgpJZHNSZXF1ZXN0EgsKA2lkcxgBIAEoCSIbCgtDb2RlUmVxdWVzdBIM",
            "CgRjb2RlGAEgASgJIj4KEVBhZ2luYXRpb25SZXF1ZXN0EgoKAmlkGAEgASgF",
            "Eg4KBm9mZnNldBgCIAEoBRINCgVsaW1pdBgDIAEoBSKEAQoXUGFnaW5hdGlv",
            "blJlcXVlc3RTZWFyY2gSCgoCaWQYASABKAUSDgoGb2Zmc2V0GAIgASgFEg0K",
            "BWxpbWl0GAMgASgFEj4KBnNlYXJjaBgEIAEoCzIuLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LlNlYXJjaFN0cnVjdCL7CAoMU2VhcmNoU3Ry",
            "dWN0EhoKEmNvbU5hbWVUcmFuc2xhdGlvbhgBIAEoCRIZChFjb21Db250cmFj",
            "dE51bWJlchgCIAEoCRIWCg5jb250cmFjdFR5cGVJZBgDIAEoCRIUCgxjb25m",
            "ZXJlbmNlSWQYBCABKAkSEgoKY2NJc2RlbGV0ZRgFIAEoCBITCgtUcmFuc2xh",
            "dGlvbhgGIAEoCRIZChFwZXJDb250cmFjdE51bWJlchgHIAEoCRIWCg5tZW1U",
            "cmFuc2xhdGlvbhgIIAEoCRISCgpwY0lzZGVsZXRlGAkgASgIEhIKCmNvbnRy",
            "YWN0SWQYCiABKAkSEgoKaXNEaXNjb3VudBgLIAEoCBIRCglpc0NoZWNrSW4Y",
            "DCABKAgSEAoIaXNWZXJpZnkYDSABKAgSEAoIaXNEZWxldGUYDiABKAgSGwoT",
            "ZXh0cmFDb250cmFjdE51bWJlchgPIAEoCRIQCghtZW1iZXJQSxgQIAEoCRIS",
            "CgphY3Rpdml0eUlkGBEgASgJEgwKBHllYXIYEiABKAkSEAoIaXNGaWxsUEMY",
            "EyABKAgSEQoJaXNDb25maXJtGBQgASgIEg4KBm93ZXJpZBgVIAEoCRIRCglj",
            "VHlwZUNvZGUYFiABKAkSHAoUY29tcGFueVNlcnZpY2VQYWNrSWQYFyABKAkS",
            "HwoXaXNDb250cmFjdFR5cGVXaXRoRUNvZGUYGCABKAgSGwoTc2Vzc2lvbkNv",
            "bmZlcmVuY2VJZBgZIAEoCRIRCgljb21wYW55SWQYGiABKAkSEAoIY29tUHJp",
            "Y2UYGyABKAkSGgoSY29udHJhY3RTdGF0dXNDb2RlGBwgASgJEg4KBmlzR2l2",
            "ZRgdIAEoCBINCgVpc1VzZRgeIAEoCBIRCglvcmRlcmluZ3MYHyABKAkSEwoL",
            "dGFndHlwZUNvZGUYICABKAkSEQoJaXNOb3dZZWFyGCEgASgIEhQKDGNvbnRy",
            "YWN0Q29kZRgiIAEoCRIOCgZpc093ZXIYIyABKAgSFgoOY29uZmVyZW5jZU5h",
            "bWUYJCABKAkSHAoUY29uZmVyZW5jZUNvbnRyYWN0SWQYJSABKAkSGAoQbW9k",
            "aWZ5UGVybWlzc2lvbhgmIAEoCRIWCg5lbnRlcnByaXNlVHlwZRgnIAEoCRIW",
            "Cg5jb250cmFjdE51bWJlchgoIAEoCRITCgtjb21wYW55TmFtZRgpIAEoCRIS",
            "CgpleFR5cGVDb2RlGCogASgJEhAKCHVzZXJOYW1lGCsgASgJEg8KB3dlYlNp",
            "dGUYLCABKAkSGwoTaXNGdWxsVXNlSW52aXRlQ29kZRgtIAEoCBIeChZpc05v",
            "dEZ1bGxVc2VJbnZpdGVDb2RlGC4gASgIEhgKEGludml0ZUNvZGVOdW1iZXIY",
            "LyABKAkSFAoMaW52aXRlQ29kZUlkGDAgASgJEg8KB2lzUHJpbnQYMSABKAgS",
            "FAoMaXNWZXJpZnlHaXZlGDIgASgIEhUKDXBlckNvbnRyYWN0SWQYMyABKAkS",
            "CgoCaWQYNCABKAkiMAoZQ29uZmVyZW5jZUNvbnRyYWN0Q2lkTGlzdBITCgtD",
            "aWRsaXN0ZGF0YRgBIAMoCSIsChVQZXJzb25Db250cmFjdFBpZExpc3QSEwoL",
            "UGlkbGlzdGRhdGEYASADKAkiaQoZUGVyc29uQ29udHJhY3RQQ05vUmVxdWVz",
            "dBJMCghsaXN0ZGF0YRgBIAMoCzI6LkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0UENOb1N0cnVjdCJIChhQZXJzb25D",
            "b250cmFjdFBDTm9TdHJ1Y3QSGQoRUGVyQ29udHJhY3ROdW1iZXIYASABKAkS",
            "EQoJQ29tZmlybWVkGAIgASgIIi0KFkNvbXBhbnlDb250cmFjdENpZExpc3QS",
            "EwoLQ2lkbGlzdGRhdGEYASADKAkidQoWQ29uZmVyZW5jZUNvbnRyYWN0TGlz",
            "dBJMCghsaXN0ZGF0YRgBIAMoCzI6LkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3LkNvbmZlcmVuY2VDb250cmFjdFN0cnVjdBINCgV0b3RhbBgC",
            "IAEoBSJvChNDb21wYW55Q29udHJhY3RMaXN0EkkKCGxpc3RkYXRhGAEgAygL",
            "MjcuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueUNv",
            "bnRyYWN0U3RydWN0Eg0KBXRvdGFsGAIgASgFIm0KElBlcnNvbkNvbnRyYWN0",
            "TGlzdBJICghsaXN0ZGF0YRgBIAMoCzI2LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0U3RydWN0Eg0KBXRvdGFsGAIg",
            "ASgFInUKFkNvbXBhbnlTZXJ2aWNlUGFja0xpc3QSTAoIbGlzdGRhdGEYASAD",
            "KAsyOi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55",
            "U2VydmljZVBhY2tTdHJ1Y3QSDQoFdG90YWwYAiABKAUiaQoQRXh0cmFTZXJ2",
            "aWNlTGlzdBJGCghsaXN0ZGF0YRgBIAMoCzI0LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LkV4dHJhU2VydmljZVN0cnVjdBINCgV0b3RhbBgC",
            "IAEoBSJnCg9TZXJ2aWNlUGFja0xpc3QSRQoIbGlzdGRhdGEYASADKAsyMy5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5TZXJ2aWNlUGFja1N0",
            "cnVjdBINCgV0b3RhbBgCIAEoBSJtChJDQ051bWJlckNvbmZpZ0xpc3QSSAoI",
            "bGlzdGRhdGEYASADKAsyNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5DQ051bWJlckNvbmZpZ1N0cnVjdBINCgV0b3RhbBgCIAEoBSJpChBD",
            "b250cmFjdFR5cGVMaXN0EkYKCGxpc3RkYXRhGAEgAygLMjQuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RUeXBlU3RydWN0Eg0K",
            "BXRvdGFsGAIgASgFIosBCh9EZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRM",
            "aXN0ElkKCGxpc3RkYXRhGAEgAygLMkcuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50TGlzdFN0",
            "cnVjdBINCgV0b3RhbBgCIAEoBSK1AQo0RGVsZWdhdGVTZXJ2aWNlUGFja0Rp",
            "c2NvdW50Rm9yQ29uZmVyZW5jZUNvbnRyYWN0TGlzdBJuCghsaXN0ZGF0YRgB",
            "IAMoCzJcLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkRlbGVn",
            "YXRlU2VydmljZVBhY2tEaXNjb3VudEZvckNvbmZlcmVuY2VDb250cmFjdExp",
            "c3RTdHJ1Y3QSDQoFdG90YWwYAiABKAUicQoUQ29uZmVyZW5jZU9uc2l0ZUxp",
            "c3QSSgoIbGlzdGRhdGEYASADKAsyOC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5Db25mZXJlbmNlT25zaXRlU3RydWN0Eg0KBXRvdGFsGAIg",
            "ASgFImoKDkludml0ZUNvZGVMaXN0EkkKCGxpc3RkYXRhGAEgAygLMjcuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSW52aXRlQ29kZUNTUFZN",
            "U3RydWN0Eg0KBXRvdGFsGAIgASgFInEKFEludml0ZUNvZGVSZWNvcmRMaXN0",
            "EkoKCGxpc3RkYXRhGAEgAygLMjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcuSW52aXRlQ29kZVJlY29yZFN0cnVjdBINCgV0b3RhbBgCIAEo",
            "BSKsAQooUGVyc29uQ29udHJhY3RBbmRTZXNzaW9uQ29uZmVyZW5jZUlkTGlz",
            "dBJfCghsaXN0ZGF0YRgBIAMoCzJNLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0QW5kU2Vzc2lvbkNvbmZlcmVuY2VJ",
            "ZHNTdHJ1Y3QSDQoFdG90YWwYAiABKAUSEAoIYWxsVG90YWwYAyABKAUidAod",
            "UGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcExpc3QSUwoIbGlzdGRhdGEYASAD",
            "KAsyQS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QZXJzb25D",
            "b250cmFjdEFjdGl2aXR5TWFwU3RydWN0Im4KGUNvbXBhbnlTZXJ2aWNlUGFj",
            "a01hcExpc3QSUQoIbGlzdGRhdGEYASADKAsyPy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Db21wYW55U2VydmljZVBhY2tNYXBWTVN0cnVj",
            "dCJmChZDb250cmFjdFN0YXRpc3RpY3NMaXN0EkwKCGxpc3RkYXRhGAEgAygL",
            "MjouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RT",
            "dGF0aXN0aWNzU3RydWN0Io4BCiVQZXJzb25Db250cmFjdEFjdGl2aXR5TWFw",
            "TGlzdFRvVXBkYXRlEhAKCE1lbWJlclBLGAEgASgJElMKCGxpc3RkYXRhGAIg",
            "AygLMkEuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29u",
            "Q29udHJhY3RBY3Rpdml0eU1hcFN0cnVjdCLRBQoYQ29uZmVyZW5jZUNvbnRy",
            "YWN0U3RydWN0EhwKFENvbmZlcmVuY2VDb250cmFjdElkGAEgASgJEhEKCUNv",
            "bXBhbnlJZBgCIAEoCRJWChJDb21OYW1lVHJhbnNsYXRpb24YAyABKAsyOi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21OYW1lVHJhbnNs",
            "YXRpb25TdHJ1Y3QSFgoOQ29udHJhY3ROdW1iZXIYBCABKAkSFAoMQ29udHJh",
            "Y3RDb2RlGAUgASgJEhAKCElzRGVsZXRlGAYgASgIEg4KBk93ZXJpZBgHIAEo",
            "CRIMCgRPd2VyGAggASgJEhEKCUNyZWF0ZWRPbhgJIAEoCRIRCglDcmVhdGVk",
            "QnkYCiABKAkSEwoLTW9kZWZpZWxkT24YCyABKAkSEwoLTW9kZWZpZWxkQnkY",
            "DCABKAkSSgoJQ2xpc3RkYXRhGA0gAygLMjcuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuQ29tcGFueUNvbnRyYWN0U3RydWN0EhQKDENvbnRy",
            "YWN0WWVhchgOIAEoCRJrCglkbGlzdGRhdGEYDyADKAsyWC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5EZWxlZ2F0ZVNlcnZpY2VQYWNrRGlz",
            "Y291bnRGb3JDb25mZXJlbmNlQ29udHJhY3RTdHJ1Y3QSFAoMQ29uZmVyZW5j",
            "ZUlkGBAgASgJEiEKGUFsdGVybmF0aXZlQ29udHJhY3ROdW1iZXIYESABKAkS",
            "GgoSQ29udHJhY3RTdGF0dXNDb2RlGBIgASgJEhkKEVBheW1lbnRTdGF0dXND",
            "b2RlGBMgASgJEhMKC0lzU2VuZEVtYWlsGBQgASgIEhAKCElzTW9kaWZ5GBUg",
            "ASgIEhgKEE1vZGlmeVBlcm1pc3Npb24YFiABKAkirQcKFUNvbXBhbnlDb250",
            "cmFjdFN0cnVjdBISCgpDb250cmFjdElkGAEgASgJEhwKFENvbXBhbnlTZXJ2",
            "aWNlUGFja0lkGAIgASgJEhEKCUNvbXBhbnlJZBgDIAEoCRJWChJDb21OYW1l",
            "VHJhbnNsYXRpb24YBCABKAsyOi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5Db21OYW1lVHJhbnNsYXRpb25TdHJ1Y3QSGQoRQ29tQ29udHJh",
            "Y3ROdW1iZXIYBSABKAkSDwoHQ291bnRyeRgGIAEoCRJWChJBZGRyZXNzVHJh",
            "bnNsYXRpb24YByABKAsyOi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5BZGRyZXNzVHJhbnNsYXRpb25TdHJ1Y3QSGQoRTWF4Q29udHJhY3RO",
            "dW1iZXIYCCABKAkSEgoKQ0NJc2RlbGV0ZRgJIAEoCBIWCg5FbnRlcnByaXNl",
            "VHlwZRgKIAEoBRIQCghJc1ZlcmlmeRgLIAEoCBIOCgZPd2VyaWQYDCABKAkS",
            "DAoET3dlchgNIAEoCRIRCglDcmVhdGVkT24YDiABKAkSEQoJQ3JlYXRlZEJ5",
            "GA8gASgJEhMKC01vZGVmaWVsZE9uGBAgASgJEhMKC01vZGVmaWVsZEJ5GBEg",
            "ASgJElYKEkNvbXBhbnlTZXJ2aWNlUGFjaxgSIAEoCzI6LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlTZXJ2aWNlUGFja1N0cnVj",
            "dBJWCglkbGlzdGRhdGEYEyADKAsyQy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5EZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRTdHJ1Y3QS",
            "FAoMQ29udHJhY3RDb2RlGBQgASgJEhQKDENvbmZlcmVuY2VJZBgVIAEoCRIW",
            "Cg5Db25mZXJlbmNlTmFtZRgWIAEoCRIRCglJc0NoZWNrSW4YFyABKAgSDgoG",
            "UFBUVXJsGBggASgJEhoKEkNvbnRyYWN0U3RhdHVzQ29kZRgZIAEoCRIcChRD",
            "b25mZXJlbmNlQ29udHJhY3RJZBgaIAEoCRJJCglwbGlzdGRhdGEYGyADKAsy",
            "Ni5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QZXJzb25Db250",
            "cmFjdFN0cnVjdBIQCghDb21QcmljZRgcIAEoCSKZBQoUUGVyc29uQ29udHJh",
            "Y3RTdHJ1Y3QSGAoQUGVyc29uQ29udHJhY3RJZBgBIAEoCRISCgpDb250cmFj",
            "dElkGAIgASgJEhkKEVBlckNvbnRyYWN0TnVtYmVyGAMgASgJEhAKCE1lbWJl",
            "clBLGAQgASgJEk4KDk1lbVRyYW5zbGF0aW9uGAUgASgLMjYuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTWVtVHJhbnNsYXRpb25TdHJ1Y3QS",
            "EgoKUENJc2RlbGV0ZRgGIAEoCBIRCglDcmVhdGVkT24YByABKAkSEQoJQ3Jl",
            "YXRlZEJ5GAggASgJEhMKC01vZGVmaWVsZE9uGAkgASgJEhMKC01vZGVmaWVs",
            "ZEJ5GAogASgJEg4KBk93ZXJpZBgLIAEoCRIMCgRPd2VyGAwgASgJEhwKFENv",
            "bmZlcmVuY2VDb250cmFjdElkGA0gASgJEhEKCUNUeXBlQ29kZRgOIAEoCRJQ",
            "Cg9Db21wYW55Q29udHJhY3QYDyABKAsyNy5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Db21wYW55Q29udHJhY3RTdHJ1Y3QSEQoJSXNDaGVj",
            "a0luGBAgASgIEhMKC0lzU2VuZEVtYWlsGBEgASgIEhAKCElzTW9kaWZ5GBIg",
            "ASgIEhQKDENvbmZlcmVuY2VJZBgTIAEoCRIWCg5Jc0ZpYW5jZVJlY29yZBgU",
            "IAEoCBIUCgxJc0ludml0ZUNvZGUYFSABKAgSFAoMSW52aXRlQ29kZUlkGBYg",
            "ASgJEhgKEElzQ29tbWl0QWJzdHJhY3QYFyABKAgSDwoHSXNQcmludBgYIAEo",
            "CBISCgpQYWlkQW1vdW50GBkgASgJIooEChhDb21wYW55U2VydmljZVBhY2tT",
            "dHJ1Y3QSHAoUQ29tcGFueVNlcnZpY2VQYWNrSWQYASABKAkSFgoOQ29udHJh",
            "Y3RUeXBlSWQYAiABKAkSDAoEU29ydBgDIAEoBRJICgtUcmFuc2xhdGlvbhgE",
            "IAEoCzIzLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlRyYW5z",
            "bGF0aW9uU3RydWN0EhAKCFByaWNlUk1CGAUgASgJEhAKCFByaWNlVVNEGAYg",
            "ASgJEhYKDklzU2hvd25PbkZyb250GAcgASgIEhEKCUNyZWF0ZWRPbhgIIAEo",
            "CRIRCglDcmVhdGVkQnkYCSABKAkSEwoLTW9kZWZpZWxkT24YCiABKAkSEwoL",
            "TW9kZWZpZWxkQnkYCyABKAkSTgoRUmVtYXJrVHJhbnNsYXRpb24YDCABKAsy",
            "My5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5UcmFuc2xhdGlv",
            "blN0cnVjdBIUCgxDb25mZXJlbmNlSWQYDSABKAkSFgoOQ29uZmVyZW5jZU5h",
            "bWUYDiABKAkSEQoJSXNTcGVha2VyGA8gASgIEhEKCUNUeXBlQ29kZRgQIAEo",
            "CRIOCgZJc0dpdmUYESABKAgSDAoEWWVhchgSIAEoCRISCgpSZW1hcmtDb2Rl",
            "GBMgASgJIscBChpDb21wYW55U2VydmljZVBhY2tWTVN0cnVjdBJWChJDb21w",
            "YW55U2VydmljZVBhY2sYASABKAsyOi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5Db21wYW55U2VydmljZVBhY2tTdHJ1Y3QSUQoUc2Vydmlj",
            "ZXBhY2tfbGlzdGRhdGEYAiADKAsyMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5TZXJ2aWNlUGFja1N0cnVjdCK1AQoURXh0cmFTZXJ2aWNl",
            "Vk1TdHJ1Y3QSSgoMRXh0cmFTZXJ2aWNlGAEgASgLMjQuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuRXh0cmFTZXJ2aWNlU3RydWN0ElEKFHNl",
            "cnZpY2VwYWNrX2xpc3RkYXRhGAIgAygLMjMuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuU2VydmljZVBhY2tTdHJ1Y3QirAEKE1NlcnZpY2VQ",
            "YWNrVk1TdHJ1Y3QSSAoLU2VydmljZVBhY2sYASABKAsyMy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5TZXJ2aWNlUGFja1N0cnVjdBJLChFh",
            "Y3Rpdml0eV9saXN0ZGF0YRgCIAMoCzIwLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LkFjdGl2aXR5U3RydWN0IpkCChJFeHRyYVNlcnZpY2VT",
            "dHJ1Y3QSFgoORXh0cmFTZXJ2aWNlSWQYASABKAkSGwoTRXh0cmFDb250cmFj",
            "dE51bWJlchgCIAEoCRIQCghNZW1iZXJQSxgDIAEoCRJOCg5NZW1UcmFuc2xh",
            "dGlvbhgEIAEoCzI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lk1lbVRyYW5zbGF0aW9uU3RydWN0Eg4KBk93ZXJpZBgFIAEoCRIMCgRPd2Vy",
            "GAYgASgJEhEKCUNyZWF0ZWRPbhgHIAEoCRIRCglDcmVhdGVkQnkYCCABKAkS",
            "EwoLTW9kZWZpZWxkT24YCSABKAkSEwoLTW9kZWZpZWxkQnkYCiABKAki7QMK",
            "EVNlcnZpY2VQYWNrU3RydWN0EhUKDVNlcnZpY2VQYWNrSWQYASABKAkSSAoL",
            "VHJhbnNsYXRpb24YAiABKAsyMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5UcmFuc2xhdGlvblN0cnVjdBIQCghQcmljZVJNQhgDIAEoCRIQ",
            "CghQcmljZVVTRBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRl",
            "ZEJ5GAYgASgJEhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5",
            "GAggASgJEhQKDENvbmZlcmVuY2VJZBgJIAEoCRIWCg5Db25mZXJlbmNlTmFt",
            "ZRgKIAEoCRIbChNTZXNzaW9uQ29uZmVyZW5jZUlkGAsgASgJEh0KFVNlc3Np",
            "b25Db25mZXJlbmNlTmFtZRgMIAEoCRITCgtTZXNzaW9uRGF0ZRgNIAEoCRIY",
            "ChBTZXNzaW9uU3RhcnRUaW1lGA4gASgJEiAKGFRoaXJkU2Vzc2lvbkNvbmZl",
            "cmVuY2VJZBgPIAEoCRIiChpUaGlyZFNlc3Npb25Db25mZXJlbmNlTmFtZRgQ",
            "IAEoCRIWCg5TZXNzaW9uQWRkcmVzcxgRIAEoCRIMCgRZZWFyGBIgASgJIoIC",
            "Cg5BY3Rpdml0eVN0cnVjdBISCgpBY3Rpdml0eUlkGAEgASgJEkkKDEFjdGl2",
            "aXR5TmFtZRgCIAEoCzIzLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LlRyYW5zbGF0aW9uU3RydWN0EhsKE1Nlc3Npb25Db25mZXJlbmNlSUQY",
            "AyABKAkSUgoVU2Vzc2lvbkNvbmZlcmVuY2VOYW1lGAQgASgLMjMuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuVHJhbnNsYXRpb25TdHJ1Y3QS",
            "DAoEU29ydBgFIAEoBRISCgpTZXNzaW9uSURzGAYgASgJIq4BChRDQ051bWJl",
            "ckNvbmZpZ1N0cnVjdBIKCgJJZBgBIAEoCRIOCgZQcmVmaXgYAiABKAkSDAoE",
            "WWVhchgDIAEoCRINCgVDTmFubxgEIAEoCRINCgVDb3VudBgFIAEoBRIOCgZT",
            "dGF0dXMYBiABKAUSEAoISXNEZWxldGUYByABKAgSFAoMQ29uZmVyZW5jZUlk",
            "GAggASgJEhYKDkNvbmZlcmVuY2VOYW1lGAkgASgJIooCChJDb250cmFjdFR5",
            "cGVTdHJ1Y3QSFgoOQ29udHJhY3RUeXBlSWQYASABKAkSDAoEU29ydBgCIAEo",
            "BRJICgtUcmFuc2xhdGlvbhgDIAEoCzIzLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LlRyYW5zbGF0aW9uU3RydWN0EhEKCUNUeXBlQ29kZRgE",
            "IAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhMK",
            "C01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEhEKCUlz",
            "U3BlYWtlchgJIAEoCBIOCgZJc0dpdmUYCiABKAgiqQIKJURlbGVnYXRlU2Vy",
            "dmljZVBhY2tEaXNjb3VudExpc3RTdHJ1Y3QSEgoKRGlzY291bnRJZBgBIAEo",
            "CRJQCg9Db21wYW55Q29udHJhY3QYAiABKAsyNy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Db21wYW55Q29udHJhY3RTdHJ1Y3QSHQoVUHJp",
            "Y2VBZnRlckRpc2NvdW50Uk1CGAMgASgJEh0KFVByaWNlQWZ0ZXJEaXNjb3Vu",
            "dFVTRBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYg",
            "ASgJEhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJ",
            "EgwKBFllYXIYCSABKAkitgIKOkRlbGVnYXRlU2VydmljZVBhY2tEaXNjb3Vu",
            "dEZvckNvbmZlcmVuY2VDb250cmFjdExpc3RTdHJ1Y3QSEgoKRGlzY291bnRJ",
            "ZBgBIAEoCRJWChJDb25mZXJlbmNlQ29udHJhY3QYAiABKAsyOi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNlQ29udHJhY3RT",
            "dHJ1Y3QSHQoVUHJpY2VBZnRlckRpc2NvdW50Uk1CGAMgASgJEh0KFVByaWNl",
            "QWZ0ZXJEaXNjb3VudFVTRBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJ",
            "Q3JlYXRlZEJ5GAYgASgJEhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVm",
            "aWVsZEJ5GAggASgJIvgBCjZEZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRG",
            "b3JDb25mZXJlbmNlQ29udHJhY3RTdHJ1Y3QSEgoKRGlzY291bnRJZBgBIAEo",
            "CRIcChRDb25mZXJlbmNlQ29udHJhY3RJZBgCIAEoCRIdChVQcmljZUFmdGVy",
            "RGlzY291bnRSTUIYAyABKAkSHQoVUHJpY2VBZnRlckRpc2NvdW50VVNEGAQg",
            "ASgJEhEKCUNyZWF0ZWRPbhgFIAEoCRIRCglDcmVhdGVkQnkYBiABKAkSEwoL",
            "TW9kZWZpZWxkT24YByABKAkSEwoLTW9kZWZpZWxkQnkYCCABKAki5wEKIURl",
            "bGVnYXRlU2VydmljZVBhY2tEaXNjb3VudFN0cnVjdBISCgpEaXNjb3VudElk",
            "GAEgASgJEhIKCkNvbnRyYWN0SWQYAiABKAkSHQoVUHJpY2VBZnRlckRpc2Nv",
            "dW50Uk1CGAMgASgJEh0KFVByaWNlQWZ0ZXJEaXNjb3VudFVTRBgEIAEoCRIR",
            "CglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhMKC01vZGVm",
            "aWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEgwKBFllYXIYCSAB",
            "KAkiNwoRVHJhbnNsYXRpb25TdHJ1Y3QSCgoCQ04YASABKAkSCgoCRU4YAiAB",
            "KAkSCgoCSlAYAyABKAkiQAoYQ29tTmFtZVRyYW5zbGF0aW9uU3RydWN0EhEK",
            "CUNvbXBhbnlDThgBIAEoCRIRCglDb21wYW55RU4YAiABKAkiQAoYQWRkcmVz",
            "c1RyYW5zbGF0aW9uU3RydWN0EhEKCUFkZHJlc3NDThgBIAEoCRIRCglBZGRy",
            "ZXNzRU4YAiABKAkiOgoUTWVtVHJhbnNsYXRpb25TdHJ1Y3QSEAoITWVtYmVy",
            "Q04YASABKAkSEAoITWVtYmVyRU4YAiABKAkiLgoNTW9kaWZ5UmVxdWVzdBIK",
            "CgJJZBgBIAEoCRIRCglJc0NoZWNrSW4YAiABKAgiQwoLTW9kaWZ5UmVwbHkS",
            "DwoHc3VjY2VzcxgBIAEoCBIWCg5tb2RpZmllZF9jb3VudBgCIAEoBRILCgNt",
            "c2cYAyABKAkiqgEKHk1vZGlmeVJlcGx5Rm9yQ29uZmVyZW5jZU9uc2l0ZRIP",
            "CgdzdWNjZXNzGAEgASgIEhYKDm1vZGlmaWVkX2NvdW50GAIgASgFEgsKA21z",
            "ZxgDIAEoCRJSChBDb25mZXJlbmNlT25zaXRlGAQgASgLMjguR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29uZmVyZW5jZU9uc2l0ZVN0cnVj",
            "dCIdCgtSZXN1bHRSZXBseRIOCgZyZXN1bHQYASABKAgiagobQ29udHJhY3RT",
            "dGF0dXNEaWNGb3JEaWNMaXN0EksKCGxpc3RkYXRhGAEgAygLMjkuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RTdGF0dXNEaWNT",
            "dHJ1Y3QiWgoTUmVtYXJrRGljRm9yRGljTGlzdBJDCghsaXN0ZGF0YRgBIAMo",
            "CzIxLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlJlbWFya0Rp",
            "Y1N0cnVjdCJWChFUYWdUeXBlRm9yRGljTGlzdBJBCghsaXN0ZGF0YRgBIAMo",
            "CzIvLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlRhZ1R5cGVT",
            "dHJ1Y3QiXAoUWWVhckNvbmZpZ0ZvckRpY0xpc3QSRAoIbGlzdGRhdGEYASAD",
            "KAsyMi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5ZZWFyQ29u",
            "ZmlnU3RydWN0InMKFUNvbnRyYWN0U3RhdHVzRGljTGlzdBJLCghsaXN0ZGF0",
            "YRgBIAMoCzI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNv",
            "bnRyYWN0U3RhdHVzRGljU3RydWN0Eg0KBXRvdGFsGAIgASgFImMKDVJlbWFy",
            "a0RpY0xpc3QSQwoIbGlzdGRhdGEYASADKAsyMS5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5SZW1hcmtEaWNTdHJ1Y3QSDQoFdG90YWwYAiAB",
            "KAUinQEKF0NvbnRyYWN0U3RhdHVzRGljU3RydWN0EgoKAklkGAEgASgJEhIK",
            "ClN0YXR1c05hbWUYAiABKAkSEgoKU3RhdHVzQ29kZRgDIAEoCRIRCglDcmVh",
            "dGVkT24YBCABKAkSEQoJQ3JlYXRlZEJ5GAUgASgJEhMKC01vZGVmaWVsZE9u",
            "GAYgASgJEhMKC01vZGVmaWVsZEJ5GAcgASgJImsKD1JlbWFya0RpY1N0cnVj",
            "dBIKCgJJZBgBIAEoCRIRCglDb250ZW50Q24YAiABKAkSEQoJQ29udGVudEVu",
            "GAMgASgJEhEKCUNvbnRlbnRKcBgEIAEoCRITCgtDb250ZW50Q29kZRgFIAEo",
            "CSJtChlNb2RpZnlSZXBseUZvckNyZWF0ZU90aGVyEg8KB3N1Y2Nlc3MYASAB",
            "KAgSFgoObW9kaWZpZWRfY291bnQYAiABKAUSCwoDbXNnGAMgASgJEgwKBGV4",
            "dDEYBCABKAkSDAoEZXh0MhgFIAEoCSL0AQofUGVyc29uQ29udHJhY3RBY3Rp",
            "dml0eU1hcFN0cnVjdBINCgVNYXBJZBgBIAEoCRIQCghNZW1iZXJQSxgCIAEo",
            "CRISCgpBY3Rpdml0eUlkGAMgASgJEhQKDEFjdGl2aXR5TmFtZRgEIAEoCRIM",
            "CgRZZWFyGAUgASgJEhEKCUlzQ29uZmlybRgGIAEoCBIPCgdJc0NoZWNrGAcg",
            "ASgIEhgKEFBlcnNvbkNvbnRyYWN0SWQYCCABKAkSGwoTU2Vzc2lvbkNvbmZl",
            "cmVuY2VJZBgJIAEoCRIdChVTZXNzaW9uQ29uZmVyZW5jZU5hbWUYCiABKAki",
            "XgobQ29tcGFueVNlcnZpY2VQYWNrTWFwU3RydWN0EgoKAklkGAEgASgJEhwK",
            "FENvbXBhbnlTZXJ2aWNlUGFja0lkGAIgASgJEhUKDVNlcnZpY2VQYWNrSWQY",
            "AyABKAkikQEKHUNvbXBhbnlTZXJ2aWNlUGFja01hcFZNU3RydWN0Eg0KBU1h",
            "cElkGAEgASgJEhwKFENvbXBhbnlTZXJ2aWNlUGFja0lkGAIgASgJEhUKDVNl",
            "cnZpY2VQYWNrSWQYAyABKAkSFAoMQ29uZmVyZW5jZUlkGAQgASgJEhYKDkNv",
            "bmZlcmVuY2VOYW1lGAUgASgJIm8KE0FwcGx5Q29uZmVyZW5jZUxpc3QSSQoI",
            "bGlzdGRhdGEYASADKAsyNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5BcHBseUNvbmZlcmVuY2VTdHJ1Y3QSDQoFdG90YWwYAiABKAUimQIK",
            "FUFwcGx5Q29uZmVyZW5jZVN0cnVjdBIKCgJJZBgBIAEoCRIYChBQZXJzb25D",
            "b250cmFjdElkGAIgASgJEhAKCE1lbWJlclBLGAMgASgJEhsKE1Nlc3Npb25D",
            "b25mZXJlbmNlSWQYBCABKAkSEQoJSXNDb25maXJtGAUgASgIEhEKCUNvbXBh",
            "bnlJZBgGIAEoCRIUCgxUYWdUeXBlQ29kZXMYByABKAkSGQoRUmVtYXJrVHJh",
            "bnNsYXRpb24YCCABKAkSDAoEWWVhchgJIAEoCRIcChRTZXNzaW9uQ29uZmVy",
            "ZW5jZUlkcxgKIAMoCRIYChBJc1BhcnRpY3VsYXJDb25mGAsgASgIEg4KBk93",
            "ZXJpZBgMIAEoCSLrAgoWQ29uZmVyZW5jZU9uc2l0ZVN0cnVjdBIKCgJJZBgB",
            "IAEoBRIWCg5Db250cmFjdE51bWJlchgCIAEoCRITCgtDb21wYW55TmFtZRgD",
            "IAEoCRIQCghDdXJyZW5jeRgEIAEoCRIPCgdQYXlUeXBlGAUgASgJEhAKCENy",
            "ZWRpdGVkGAYgASgJEg8KB0FkZERhdGUYByABKAkSDAoEQ29zdBgIIAEoCRIO",
            "CgZSZW1hcmsYCSABKAkSFAoMQ29udHJhY3RZZWFyGAogASgJEhwKFENvbXBh",
            "bnlTZXJ2aWNlUGFja0lkGAsgASgJEhEKCUNyZWF0ZWRPbhgMIAEoCRIRCglD",
            "cmVhdGVkQnkYDSABKAkSEwoLTW9kZWZpZWxkT24YDiABKAkSEwoLTW9kZWZp",
            "ZWxkQnkYDyABKAkSEAoIVXNlck5hbWUYECABKAkSHgoWQ29tcGFueVNlcnZp",
            "Y2VQYWNrTmFtZRgRIAEoCSKNAgorUGVyc29uQ29udHJhY3RBbmRTZXNzaW9u",
            "Q29uZmVyZW5jZUlkc1N0cnVjdBJQCg9Db21wYW55Q29udHJhY3QYASABKAsy",
            "Ny5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55Q29u",
            "dHJhY3RTdHJ1Y3QSTgoOUGVyc29uQ29udHJhY3QYAiABKAsyNi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QZXJzb25Db250cmFjdFN0cnVj",
            "dBIcChRTZXNzaW9uQ29uZmVyZW5jZUlkcxgDIAMoCRIeChZDb21wYW55U2Vy",
            "dmljZVBhY2tOYW1lGAQgASgJIooBCiNBcHBseUNvbmZlcmVuY2VMaXN0VG9D",
            "cmVhdGVPclVwZGF0ZRIYChBQZXJzb25Db250cmFjdElkGAEgASgJEkkKCGxp",
            "c3RkYXRhGAIgAygLMjcuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuQXBwbHlDb25mZXJlbmNlU3RydWN0IpYBChJJbnZpdGVMZXR0ZXJTdHJ1",
            "Y3QSCgoCSWQYASABKAkSDwoHQ29tcGFueRgCIAEoCRINCgVFSGFsbBgDIAEo",
            "CRILCgNFTm8YBCABKAkSDwoHUHJvZmlsZRgFIAEoCRIRCglFQWNpdHZpdHkY",
            "BiABKAkSEAoITGFuZ3VhZ2UYByABKAkSEQoJQ3JlYXRlZE9uGAggASgJItQB",
            "ChBJbnZpdGVDb2RlU3RydWN0EgoKAklkGAEgASgJEhgKEEludml0ZUNvZGVO",
            "dW1iZXIYAiABKAkSHAoUQ29tcGFueVNlcnZpY2VQYWNrSWQYAyABKAkSDQoF",
            "Q291bnQYBCABKAUSDAoEWWVhchgFIAEoCRIPCgdXZWJTaXRlGAYgASgJEhEK",
            "CUNyZWF0ZWRPbhgHIAEoCRIRCglDcmVhdGVkQnkYCCABKAkSEwoLTW9kZWZp",
            "ZWxkT24YCSABKAkSEwoLTW9kZWZpZWxkQnkYCiABKAki0gEKFUludml0ZUNv",
            "ZGVDU1BWTVN0cnVjdBJGCgpJbnZpdGVDb2RlGAEgASgLMjIuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSW52aXRlQ29kZVN0cnVjdBJWChJD",
            "b21wYW55U2VydmljZVBhY2sYAiABKAsyOi5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Db21wYW55U2VydmljZVBhY2tTdHJ1Y3QSGQoRSW52",
            "aXRlUmVjb3JkQ291bnQYAyABKAkiuwEKFkludml0ZUNvZGVSZWNvcmRTdHJ1",
            "Y3QSCgoCSWQYASABKAkSFAoMSW52aXRlQ29kZUlkGAIgASgJEhAKCE1lbWJl",
            "clBLGAMgASgJEhIKCk1lbWJlck5hbWUYBCABKAkSDwoHVXNlRGF0ZRgFIAEo",
            "CRIYChBQZXJzb25Db250cmFjdElkGAYgASgJEhwKFFBlcnNvbkNvbnRyYWN0",
            "TnVtYmVyGAcgASgJEhAKCElzRGVsZXRlGAggASgIIkIKDVRhZ1R5cGVTdHJ1",
            "Y3QSCgoCSWQYASABKAkSFwoPTmFtZVRyYW5zbGF0aW9uGAIgASgJEgwKBENv",
            "ZGUYAyABKAkiSQoQWWVhckNvbmZpZ1N0cnVjdBIKCgJJZBgBIAEoCRIMCgRZ",
            "ZWFyGAIgASgJEg0KBUlzVXNlGAMgASgIEgwKBERhdGUYBCABKAkiMAoOQ2hl",
            "Y2tJblJlcXVlc3QSCwoDSWRzGAEgAygJEhEKCUlzQ2hlY2tJbhgCIAEoCCKL",
            "AQoYQ29udHJhY3RTdGF0aXN0aWNzU3RydWN0EhwKFENvbXBhbnlTZXJ2aWNl",
            "UGFja0lkGAEgASgJEh4KFkNvbXBhbnlTZXJ2aWNlUGFja05hbWUYAiABKAkS",
            "EwoLUGVyc29uQ291bnQYAyABKAkSHAoUTWF4Q29udHJhY3ROdW1iZXJTdW0Y",
            "BCABKAkiZwoYTW9kaWZ5Q0NQQ093ZXJJbmZvU3RydWN0EhIKCkNvbnRyYWN0",
            "SWQYASABKAkSDgoGT3dlcmlkGAIgASgJEgwKBE93ZXIYAyABKAkSGQoRTWF4",
            "Q29udHJhY3ROdW1iZXIYBCABKAUiGwoJQm9vbFJlcGx5Eg4KBnJlc3VsdBgB",
            "IAEoCCIwCg5tb2RpZnlSZXNwb25zZRIRCglpc1N1Y2Nlc3MYASABKAgSCwoD",
            "bXNnGAIgASgJIrAFChRuZXdTZXJ2aWNlUGFja1N0cnVjdBISCgpDb250cmFj",
            "dElkGAEgASgJEhwKFENvbmZlcmVuY2VDb250cmFjdElkGAIgASgJEhwKFENv",
            "bXBhbnlTZXJ2aWNlUGFja0lkGAMgASgJEhQKDENvbmZlcmVuY2VJZBgEIAEo",
            "CRIRCglDb21wYW55SWQYBSABKAkSGgoSQ29tTmFtZVRyYW5zbGF0aW9uGAYg",
            "ASgJEhkKEUNvbUNvbnRyYWN0TnVtYmVyGAcgASgJEg8KB0NvdW50cnkYCCAB",
            "KAkSGgoSQWRkcmVzc1RyYW5zbGF0aW9uGAkgASgJEhAKCENvbVByaWNlGAog",
            "ASgJEhkKEU1heENvbnRyYWN0TnVtYmVyGAsgASgFEh8KF01heENvbnRyYWN0",
            "TnVtYmVyU2F0VXNlGAwgASgFEhIKCkNDSXNkZWxldGUYDSABKAgSFgoORW50",
            "ZXJwcmlzZVR5cGUYDiABKAUSEAoISXNWZXJpZnkYDyABKAgSDgoGT3dlcmlk",
            "GBAgASgJEgwKBE93ZXIYESABKAkSFAoMQ29udHJhY3RDb2RlGBIgASgJEhEK",
            "CUlzQ2hlY2tJbhgTIAEoCBIOCgZQUFRVcmwYFCABKAkSGgoSQ29udHJhY3RT",
            "dGF0dXNDb2RlGBUgASgJEhYKDkNvbmZlcmVuY2VOYW1lGBYgASgJEhQKDE90",
            "aGVyT3duZXJJZBgXIAEoCRISCgpPdGhlck93bmVyGBggASgJEhEKCUNyZWF0",
            "ZWRPbhgZIAEoCRIRCglDcmVhdGVkQnkYGiABKAkSEgoKTW9kaWZpZWRPbhgb",
            "IAEoCRISCgpNb2RpZmllZEJ5GBwgASgJEgwKBFllYXIYHSABKAkSHgoWQ29t",
            "cGFueVNlcnZpY2VQYWNrQ29kZRgeIAEoCSK1AQocbmV3U2VydmljZVBhY2tT",
            "dHJ1Y3REaXNjb3VudBJFCgVtb2RlbBgBIAEoCzI2LkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3Lm5ld1NlcnZpY2VQYWNrU3RydWN0EhAKCERp",
            "c2NvdW50GAIgASgCEh0KFVByaWNlQWZ0ZXJEaXNjb3VudFJNQhgDIAEoCRId",
            "ChVQcmljZUFmdGVyRGlzY291bnRVU0QYBCABKAki3gQKF25ld1BlcnNvbkNv",
            "bnRyYWN0U3RydWN0EhgKEFBlcnNvbkNvbnRyYWN0SWQYASABKAkSEgoKQ29u",
            "dHJhY3RJZBgCIAEoCRIUCgxDb25mZXJlbmNlSWQYAyABKAkSEAoITWVtYmVy",
            "UEsYBCABKAkSFgoOTWVtVHJhbnNsYXRpb24YBSABKAkSEgoKUENJc2RlbGV0",
            "ZRgGIAEoCBIRCglDVHlwZUNvZGUYByABKAkSEQoJSXNDaGVja0luGAggASgI",
            "EhMKC0lzU2VuZEVtYWlsGAkgASgIEhAKCElzTW9kaWZ5GAogASgIEhYKDklz",
            "RmlhbmNlUmVjb3JkGAsgASgIEhQKDEludml0ZUNvZGVJZBgMIAEoCRIUCgxJ",
            "c0ludml0ZUNvZGUYDSABKAgSGAoQSXNDb21taXRBYnN0cmFjdBgOIAEoCBIP",
            "CgdJc1ByaW50GA8gASgIEg4KBk93ZXJpZBgQIAEoCRIMCgRPd2VyGBEgASgJ",
            "EhEKCUNyZWF0ZWRPbhgSIAEoCRIRCglDcmVhdGVkQnkYEyABKAkSEgoKTW9k",
            "aWZpZWRPbhgUIAEoCRITCgtNb2RlZmllbGRCeRgVIAEoCRIcChRDb21wYW55",
            "U2VydmljZVBhY2tJZBgWIAEoCRIcChRDb25mZXJlbmNlQ29udHJhY3RJZBgX",
            "IAEoCRIQCghQZXJQcmljZRgYIAEoCRISCgpQYWlkQW1vdW50GBkgASgJEhQK",
            "DE90aGVyT3duZXJJZBgaIAEoCRISCgpPdGhlck93bmVyGBsgASgJEgwKBFll",
            "YXIYHCABKAkivgEKG25ld0FkZFBlcnNvbkNvbnRyYWN0UmVxdWVzdBJJCgZw",
            "ZXJzb24YASABKAsyOS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5uZXdQZXJzb25Db250cmFjdFN0cnVjdBJUChRjb21wYW55Q29udHJhY3RN",
            "b2RlbBgCIAEoCzI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lm5ld1NlcnZpY2VQYWNrU3RydWN0IqkBCi9uZXdBZGRQZXJzb25Db250cmFj",
            "dFVuZGVyQ29tcGFueUNvbnRyYWN0UmVxdWVzdBJJCgZwZXJzb24YASABKAsy",
            "OS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdQZXJzb25D",
            "b250cmFjdFN0cnVjdBIMCgRZZWFyGAIgASgJEh0KFUNvbXBhbnlDb250cmFj",
            "dE51bWJlchgDIAEoCSKZAQo5bmV3Q3JlYXRlUGVyc29uQ29udHJhY3RCeUNv",
            "bXBhbnlDb250cmFjdEludml0ZUNvZGVSZXF1ZXN0EkkKBnBlcnNvbhgBIAEo",
            "CzI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld1BlcnNv",
            "bkNvbnRyYWN0U3RydWN0EhEKCUNvbXBhbnlJZBgCIAEoCSLyAQoqbmV3Q3Jl",
            "YXRlUGVyc29uQ29udHJhY3RCeUludml0ZUNvZGVSZXF1ZXN0EkkKBnBlcnNv",
            "bhgBIAEoCzI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5l",
            "d1BlcnNvbkNvbnRyYWN0U3RydWN0EhIKCkludml0ZUNvZGUYAiABKAkSDwoH",
            "V2ViU2l0ZRgDIAEoCRJUChRjb21wYW55Q29udHJhY3RNb2RlbBgEIAEoCzI2",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld1NlcnZpY2VQ",
            "YWNrU3RydWN0IiIKEkNvbXBhbnlOYW1lUmVxdWVzdBIMCgRuYW1lGAEgASgJ",
            "InkKE0NvbXBhbnlJbmZvUmVzcG9uc2USEgoKY29tcG55TmFtZRgBIAEoCRIV",
            "Cg1jb21wYW55TmFtZUVuGAIgASgJEhUKDWNvbXBhbnlOYW1lSnAYAyABKAkS",
            "DQoFRW1haWwYBCABKAkSEQoJY29tcGFueUlkGAUgASgJIukCChxuZXdHZXRT",
            "ZXJ2aWNlUGFja0xpc3RSZXF1ZXN0EgwKBHBhZ2UYASABKAUSEAoIcGFnZVNp",
            "emUYAiABKAUSagoGc2VhcmNoGAMgASgLMlouR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcubmV3R2V0U2VydmljZVBhY2tMaXN0UmVxdWVzdC5u",
            "ZXdHZXRTZXJ2aWNlUGFja0xpc3RTZWFyY2gavAEKG25ld0dldFNlcnZpY2VQ",
            "YWNrTGlzdFNlYXJjaBIMCgR5ZWFyGAEgASgJEhQKDGNvbmZlcmVuY2VJZBgC",
            "IAEoCRIVCg1zZXJ2aWNlUGFja0lkGAMgASgJEhMKC2NvbXBhbnlOYW1lGAQg",
            "ASgJEhYKDmNvbnRyYWN0TnVtYmVyGAUgASgJEg0KBW93bmVyGAYgASgJEhIK",
            "CmlzRGlzY291bnQYByABKAgSEgoKaXNNYXhDb3VudBgIIAEoCCLXAgobbmV3",
            "R2V0U2VydmljZVBhY2tMaXN0U3RydWN0EhYKDmNvbnRyYWN0TnVtYmVyGAEg",
            "ASgJEhUKDWNvbXBhbnlOYW1lQ24YAiABKAkSFQoNY29tcGFueU5hbWVFbhgD",
            "IAEoCRIWCg5lbnRlcnByaXNlVHlwZRgEIAEoCRITCgtzZXJ2aWNlUGFjaxgF",
            "IAEoCRILCgNwYXkYBiABKAkSFQoNY29udHJhY3RDb3VudBgHIAEoCRIbChNm",
            "aWxsZWRDb250cmFjdENvdW50GAggASgFEg0KBW93bmVyGAkgASgJEhIKCmlu",
            "dml0ZUNvZGUYCiABKAkSFgoOY29udHJhY3RTdGF0dXMYCyABKAkSEQoJY3Jl",
            "YXRlZEJ5GAwgASgJEhEKCWNyZWF0ZWRPbhgNIAEoCRIRCgltb2RpZml5QnkY",
            "DiABKAkSEAoIbW9kaWZ5T24YDyABKAkifwodbmV3R2V0U2VydmljZVBhY2tM",
            "aXN0UmVzcG9uc2USTwoIbGlzdGRhdGEYASADKAsyPS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRTZXJ2aWNlUGFja0xpc3RTdHJ1",
            "Y3QSDQoFdG90YWwYAiABKAUi/QIKIG5ld0dldENvbXBhbnlDb250cmFjdExp",
            "c3RSZXF1ZXN0EgwKBHBhZ2UYASABKAUSEAoIcGFnZVNpemUYAiABKAUScgoG",
            "c2VhcmNoGAMgASgLMmIuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcubmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdFJlcXVlc3QubmV3R2V0Q29t",
            "cGFueUNvbnRyYWN0TGlzdFNlYXJjaBrEAQofbmV3R2V0Q29tcGFueUNvbnRy",
            "YWN0TGlzdFNlYXJjaBIMCgRZZWFyGAEgASgJEhQKDENvbmZlcmVuY2VJZBgC",
            "IAEoCRITCgtDb21wYW55TmFtZRgDIAEoCRIWCg5Db250cmFjdE51bWJlchgE",
            "IAEoCRIPCgdPd25lcklkGAUgASgJEhwKFENvbXBhbnlTZXJ2aWNlUGFja0lk",
            "GAYgASgJEhEKCU9yZGVyaW5ncxgHIAEoCRIOCgZJc0dpdmUYCCABKAgiyQIK",
            "G25ld0dldE15U3BlYWtlcnNMaXN0UmVxdWVzdBIMCgRwYWdlGAEgASgFEhAK",
            "CHBhZ2VTaXplGAIgASgFEmgKBnNlYXJjaBgDIAEoCzJYLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dldE15U3BlYWtlcnNMaXN0UmVx",
            "dWVzdC5uZXdHZXRNeVNwZWFrZXJzTGlzdFNlYXJjaBqfAQoabmV3R2V0TXlT",
            "cGVha2Vyc0xpc3RTZWFyY2gSDAoEWWVhchgBIAEoCRIUCgxDb25mZXJlbmNl",
            "SWQYAiABKAkSEwoLQ29tcGFueU5hbWUYAyABKAkSFgoOQ29udHJhY3ROdW1i",
            "ZXIYBCABKAkSDAoETmFtZRgFIAEoCRIPCgdPd25lcklkGAYgASgJEhEKCU9y",
            "ZGVyaW5ncxgHIAEoCSKzAwoabmV3R2V0TXlTcGVha2Vyc0xpc3RTdHJ1Y3QS",
            "FgoOQ29udHJhY3ROdW1iZXIYASABKAkSFwoPUGVyQ29udHJhY3ROYW1lGAIg",
            "ASgJEiUKHVBlclBhcnRpY2lwYW50VHlwZVRyYW5zbGF0aW9uGAMgASgJEgwK",
            "BE5hbWUYBCABKAkSGgoSQ29tcGFueVRyYW5zbGF0aW9uGAUgASgJEhAKCFBv",
            "c2l0aW9uGAYgASgJEg4KBk1vYmlsZRgHIAEoCRINCgVFbWFpbBgIIAEoCRIN",
            "CgVPd25lchgJIAEoCRIPCgdPd25lcklkGAogASgJEhIKCk90aGVyT3duZXIY",
            "CyABKAkSFAoMT3RoZXJPd25lcklkGAwgASgJEg0KBUlzQWRkGA0gASgIEhEK",
            "CUNyZWF0ZWRCeRgOIAEoCRIRCglDcmVhdGVkT24YDyABKAkSEQoJTW9kaWZp",
            "eUJ5GBAgASgJEhAKCE1vZGlmeU9uGBEgASgJEhAKCE1lbWJlclBLGBIgASgJ",
            "EhYKDkVudGVycHJpc2VUeXBlGBMgASgFEhQKDENvbmZlcmVuY2VJZBgUIAEo",
            "CSJ9ChxuZXdHZXRNeVNwZWFrZXJzTGlzdFJlc3BvbnNlEk4KCGxpc3RkYXRh",
            "GAEgAygLMjwuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3",
            "R2V0TXlTcGVha2Vyc0xpc3RTdHJ1Y3QSDQoFdG90YWwYAiABKAUihgIKDm5l",
            "d0Jvb2xSZXF1ZXN0EgwKBHBhZ2UYASABKAUSEAoIcGFnZVNpemUYAiABKAUS",
            "YAoGc2VhcmNoGAMgASgLMlAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcubmV3Qm9vbFJlcXVlc3QubmV3R2V0Q29tcGFueUNvbnRyYWN0TGlz",
            "dFNlYXJjaBpyCh9uZXdHZXRDb21wYW55Q29udHJhY3RMaXN0U2VhcmNoEg0K",
            "BUNoZWNrGAEgASgIEgwKBFllYXIYAiABKAkSEQoJT3JkZXJpbmdzGAMgASgJ",
            "Eg4KBklzR2l2ZRgEIAEoCBIPCgdPd25lcklkGAUgASgJIt8ECh9uZXdHZXRD",
            "b21wYW55Q29udHJhY3RMaXN0U3RydWN0EhYKDkNvbnRyYWN0TnVtYmVyGAEg",
            "ASgJEh4KFkNvbXBhbnlOYW1lVHJhbnNsYXRpb24YAiABKAkSFgoORW50ZXJw",
            "cmlzZVR5cGUYAyABKAkSCwoDUGF5GAQgASgJEiEKGUNvbVNlcnZpY2VQYWNr",
            "VHJhbnNsYXRpb24YBSABKAkSDAoEWWVhchgGIAEoCRIZChFNYXhDb250cmFj",
            "dE51bWJlchgHIAEoBRINCgVPd25lchgIIAEoCRIbChNGaWxsZWRDb250cmFj",
            "dENvdW50GAkgASgJEhYKDkNvbnRyYWN0U3RhdHVzGAogASgJEhEKCUNyZWF0",
            "ZWRCeRgLIAEoCRIRCglDcmVhdGVkT24YDCABKAkSEQoJTW9kaWZpeUJ5GA0g",
            "ASgJEhAKCE1vZGlmeU9uGA4gASgJEg4KBklzR2l2ZRgPIAEoCBIPCgdPd25l",
            "cklkGBAgASgJEhIKCk90aGVyT3duZXIYESABKAkSFAoMT3RoZXJPd25lcklk",
            "GBIgASgJEhAKCENvbVByaWNlGBMgASgJEhEKCUNvbWFwbnlJZBgUIAEoCRIT",
            "CgtPcmlnaW5QcmljZRgVIAEoCRIZChFDb250cmFjdFN0YXRlTmFtZRgWIAEo",
            "CRISCgpEaXNjb3VudElkGBcgASgJEhIKCkNvbnRyYWN0SWQYGCABKAkSHQoV",
            "UHJpY2VBZnRlckRpc2NvdW50VVNEGBkgASgJEh0KFVByaWNlQWZ0ZXJEaXNj",
            "b3VudFJNQhgaIAEoCSLTAgoobmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdERp",
            "c2NvdW50UmVxdWVzdBIMCgRwYWdlGAEgASgFEhAKCHBhZ2VTaXplGAIgASgF",
            "EoIBCgZzZWFyY2gYAyABKAsyci5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5uZXdHZXRDb21wYW55Q29udHJhY3RMaXN0RGlzY291bnRSZXF1",
            "ZXN0Lm5ld0dldENvbXBhbnlDb250cmFjdExpc3REaXNjb3VudFNlYXJjaBqB",
            "AQonbmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdERpc2NvdW50U2VhcmNoEhQK",
            "DENvbmZlcmVuY2VJZBgBIAEoCRIaChJDb21wYW55VHJhbnNsYXRpb24YAiAB",
            "KAkSDAoEWWVhchgDIAEoCRIWCg5Db250cmFjdE51bWJlchgEIAEoCSKDAQon",
            "bmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdERpc2NvdW50U3RydWN0EhYKDkNv",
            "bnRyYWN0TnVtYmVyGAEgASgJEhoKEkNvbXBhbnlUcmFuc2xhdGlvbhgCIAEo",
            "CRINCgVQcmljZRgDIAEoCRIVCg1QcmljZURpc2NvdW50GAQgASgJIpcBCilu",
            "ZXdHZXRDb21wYW55Q29udHJhY3RMaXN0RGlzY291bnRSZXNwb25zZRJbCghs",
            "aXN0ZGF0YRgBIAMoCzJJLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3Lm5ld0dldENvbXBhbnlDb250cmFjdExpc3REaXNjb3VudFN0cnVjdBIN",
            "CgV0b3RhbBgCIAEoBSKHAQohbmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdFJl",
            "c3BvbnNlElMKCGxpc3RkYXRhGAEgAygLMkEuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdFN0cnVj",
            "dBINCgV0b3RhbBgCIAEoBSKPAwofbmV3R2V0UGVyc29uQ29udHJhY3RMaXN0",
            "UmVxdWVzdBIMCgRwYWdlGAEgASgFEhAKCHBhZ2VTaXplGAIgASgFEnAKBnNl",
            "YXJjaBgDIAEoCzJgLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lm5ld0dldFBlcnNvbkNvbnRyYWN0TGlzdFJlcXVlc3QubmV3R2V0UGVyc29u",
            "Q29udHJhY3RMaXN0U2VhcmNoGtkBCh5uZXdHZXRQZXJzb25Db250cmFjdExp",
            "c3RTZWFyY2gSDAoEWWVhchgBIAEoCRIUCgxDb25mZXJlbmNlSWQYAiABKAkS",
            "FQoNU2VydmljZVBhY2tJZBgDIAEoCRITCgtDb21wYW55TmFtZRgEIAEoCRIW",
            "Cg5Db250cmFjdE51bWJlchgFIAEoCRIPCgdPd25lcklkGAYgASgJEgwKBE5h",
            "bWUYByABKAkSDQoFRW1haWwYCCABKAkSEQoJT3JkZXJpbmdzGAkgASgJEg4K",
            "BmlzR2l2ZRgKIAEoBSKKAgoubmV3R2V0UGVyc29uQ29udHJhY3RMaXN0QnlD",
            "b21Db250cmF0Y0lkUmVxdWVzdBIMCgRwYWdlGAEgASgFEhAKCHBhZ2VTaXpl",
            "GAIgASgFEn8KBnNlYXJjaBgDIAEoCzJvLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3Lm5ld0dldFBlcnNvbkNvbnRyYWN0TGlzdEJ5Q29tQ29u",
            "dHJhdGNJZFJlcXVlc3QubmV3R2V0UGVyc29uQ29udHJhY3RMaXN0U2VhcmNo",
            "GjcKHm5ld0dldFBlcnNvbkNvbnRyYWN0TGlzdFNlYXJjaBIVCg1Db21Db250",
            "cmFjdElkGAEgASgJIjUKGFBlckNvbnRyYWN0TnVtYmVyUmVxdWVzdBIZChFQ",
            "ZXJDb250cmFjdE51bWJlchgBIAEoCSJbCiNuZXdHZXRDb21hcG55U2Vydmlj",
            "ZVBhY2tUeXBlUmVxdWVzdBIMCgRZZWFyGAEgASgJEhQKDENvbmZlcmVuY2VJ",
            "ZBgCIAEoCRIQCghNZW1iZXJQSxgDIAEoCSJ6CiRuZXdHZXRDb21hcG55U2Vy",
            "dmljZVBhY2tUeXBlUmVzcG9uc2USEQoJSXNTcGVha2VyGAEgASgIEgwKBE5h",
            "bWUYAiABKAkSFQoNQ29udHJhY3ROdW1lchgDIAEoCRIaChJDb21TZXJ2aWNl",
            "UGFja05hbWUYBCABKAkibAoZbmV3R2V0UmVwb3J0Tm90aWNlUmVxdWVzdBIZ",
            "ChFQZXJDb250cmFjdE51bWJlchgBIAEoCRIMCgRZZWFyGAIgASgJEhQKDENv",
            "bmZlcmVuY2VJZBgDIAEoCRIQCghNZW1iZXJQSxgEIAEoCSKoAgobTmV3VGFs",
            "a0FuZFBhcnRpY2lwYXRlU3RydWN0EhUKDVRhbGtUaW1lUmFuZ2UYASABKAkS",
            "FwoPVGFsa1RyYW5zbGF0aW9uGAIgASgJEhMKC0NGVG9waWNOYW1lGAMgASgJ",
            "EiIKGlBhcnRpY2lwYW50VHlwZVRyYW5zbGF0aW9uGAQgASgJEiIKGlBhcnRp",
            "Y2lwYW50TmFtZVRyYW5zbGF0aW9uGAUgASgJEh4KFkFwcGVsbGF0aW9uVHJh",
            "bnNsYXRpb24YBiABKAkSFgoOSm9iVHJhbnNsYXRpb24YByABKAkSGgoSQ29t",
            "cGFueVRyYW5zbGF0aW9uGAggASgJEhoKEkNvdW50cnlUcmFuc2xhdGlvbhgJ",
            "IAEoCRIMCgRTb3J0GAogASgJIv4CCh9OZXdBY3Rpdml0eUFuZFBhcnRpY2lw",
            "YXRlU3RydWN0EhsKE0FjdGl2aXR5VHJhbnNsYXRpb24YASABKAkSGQoRQWN0",
            "aXZpdHlUaW1lUmFuZ2UYAiABKAkSDAoEU29ydBgDIAEoBRIiChpQYXJ0aWNp",
            "cGFudFR5cGVUcmFuc2xhdGlvbhgEIAEoCRIiChpQYXJ0aWNpcGFudE5hbWVU",
            "cmFuc2xhdGlvbhgFIAEoCRIeChZBcHBlbGxhdGlvblRyYW5zbGF0aW9uGAYg",
            "ASgJEhYKDkpvYlRyYW5zbGF0aW9uGAcgASgJEhoKEkNvbXBhbnlUcmFuc2xh",
            "dGlvbhgIIAEoCRIaChJDb3VudHJ5VHJhbnNsYXRpb24YCSABKAkSXQoWdGFs",
            "a0FuZFBhcnRpY2lwYXRlTGlzdBgKIAMoCzI9LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lk5ld1RhbGtBbmRQYXJ0aWNpcGF0ZVN0cnVjdCKC",
            "AwoRTmV3Q2FsZW5kYXJTdHJ1Y3QSGwoTU2Vzc2lvbkNvbmZlcmVuY2VJZBgB",
            "IAEoCRIdChVTZXNzaW9uQ29uZmVyZW5jZU5hbWUYAiABKAkSEQoJSXNDb25m",
            "aXJtGAMgASgIEhQKDFRhZ1R5cGVDb2RlcxgEIAEoCRITCgtUYWdUeXBlTmFt",
            "ZRgFIAEoCRIZChFSZW1hcmtUcmFuc2xhdGlvbhgGIAEoCRIYChBJc1BhcnRp",
            "Y3VsYXJDb25mGAcgASgIEgwKBERhdGUYCCABKAkSDAoEVGltZRgJIAEoCRIP",
            "CgdBZGRyZXNzGAogASgJEhcKD2lzSW5zaWRlUGFja2FnZRgMIAEoCBIRCglp",
            "c0NoZWNrZWQYDSABKAgSZQoaYWN0aXZpdHlBbmRQYXJ0aWNpcGF0ZUxpc3QY",
            "DiADKAsyQS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdB",
            "Y3Rpdml0eUFuZFBhcnRpY2lwYXRlU3RydWN0IuMBChtOZXdQZXJzb25Db250",
            "cmFjdEluZm9TdHJ1Y3QSGAoQUGVyc29uQ29udHJhY3RJZBgBIAEoCRIZChFQ",
            "ZXJDb250cmFjdE51bWJlchgDIAEoCRIQCghNZW1iZXJQSxgEIAEoCRIWCg5N",
            "ZW1UcmFuc2xhdGlvbhgFIAEoCRIQCghNZW1FbWFpbBgGIAEoCRIeChZDb21w",
            "YW55TmFtZVRyYW5zbGF0aW9uGAcgASgJEiEKGUNvbVNlcnZpY2VQYWNrVHJh",
            "bnNsYXRpb24YCCABKAkSEAoIcGVyUHJpY2UYCSABKAkiRgoJT3duZXJJbmZv",
            "EgwKBE5hbWUYASABKAkSCwoDVGVsGAIgASgJEg0KBUVtYWlsGAMgASgJEg8K",
            "B0FkZHJlc3MYBCABKAki7wEKGW5ld0dldFJlcG9ydE5vdGljUmVzcG9uc2US",
            "TQoGcGVyc29uGAEgASgLMj0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTmV3UGVyc29uQ29udHJhY3RJbmZvU3RydWN0EkcKCGNhbGVuZGFy",
            "GAIgAygLMjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUmVw",
            "b3J0X0NvbmZlcmVuY2VWTRI6CgVvd25lchgDIAEoCzIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk93bmVySW5mbyL1AgoebmV3R2V0UGVy",
            "c29uQ29udHJhY3RMaXN0U3RydWN0EhYKDkNvbnRyYWN0TnVtYmVyGAEgASgJ",
            "EhoKEk1lbU5hbWVUcmFuc2xhdGlvbhgCIAEoCRIeChZDb21wYW55TmFtZVRy",
            "YW5zbGF0aW9uGAMgASgJEhAKCFBvc2l0aW9uGAQgASgJEg0KBUVtYWlsGAUg",
            "ASgJEg4KBk1vYmlsZRgGIAEoCRIhChlDb21TZXJ2aWNlUGFja1RyYW5zbGF0",
            "aW9uGAcgASgJEgsKA1BheRgIIAEoCRIMCgRQYWlkGAkgASgJEg0KBU93bmVy",
            "GAogASgJEhMKC0lzU2VuZEVtYWlsGAsgASgIEg8KB0lzUHJpbnQYDCABKAgS",
            "EQoJQ3JlYXRlZEJ5GA0gASgJEhEKCUNyZWF0ZWRPbhgOIAEoCRIRCglNb2Rp",
            "Zml5QnkYDyABKAkSEAoITW9kaWZ5T24YECABKAkSEAoITWVtYmVyUEsYESAB",
            "KAkihQEKIG5ld0dldFBlcnNvbkNvbnRyYWN0TGlzdFJlc3BvbnNlElIKCGxp",
            "c3RkYXRhGAEgAygLMkAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcubmV3R2V0UGVyc29uQ29udHJhY3RMaXN0U3RydWN0Eg0KBXRvdGFsGAIg",
            "ASgFIqkBCituZXdNb2RpZnlPd25lckJ5Q29uZmVyZW5jZUNvbnRyYWN0SWRS",
            "ZXF1ZXN0EhwKFENvbmZlcmVuY2VDb250cmFjdElkGAEgASgJEg8KB093bmVy",
            "SWQYAiABKAkSDQoFT3duZXIYAyABKAkSFAoMT3RoZXJPd25lcklkGAQgASgJ",
            "EhIKCk90aGVyT3duZXIYBSABKAkSEgoKTW9kaWZpZWRCeRgGIAEoCSI5Chlu",
            "ZXdHZXRTY2hlZHVsZUxpc3RSZXF1ZXN0EhwKFHBlcnNvbkNvbnRyYWN0TnVt",
            "YmVyGAEgASgJIqYDChpuZXdHZXRTY2hlZHVsZUxpc3RSZXNwb25zZRIYChBw",
            "ZXJzb25Db250cmFjdElkGAEgASgJEhwKFHBlcnNvbkNvbnRyYWN0TnVtYmVy",
            "GAIgASgJEhMKC3NlcnZpY2VQYWNrGAMgASgJEgwKBG5hbWUYBCABKAkSDQoF",
            "dGl0bGUYBSABKAkSDwoHcG9zaXRpbhgGIAEoCRIOCgZtb2JpbGUYByABKAkS",
            "DQoFZW1haWwYCCABKAkSEwoLY29tcGFueU5hbWUYCSABKAkSFAoMYWN0aXZp",
            "dHlOYW1lGAogASgJEhQKDGFjdGl2aXR5VnVuZRgLIAEoCRIUCgxhY3Rpdml0",
            "eVRpbWUYDCABKAkSDQoFb3duZXIYDSABKAkSEgoKb3duZXJFbWFpbBgOIAEo",
            "CRITCgtvd25lck1vYmlsZRgPIAEoCRIUCgxvd25lckFkZHJlc3MYECABKAkS",
            "EgoKY3J0ZWF0ZWRPbhgRIAEoCRIRCgljcmVhdGVkQnkYEiABKAkSEAoIbW9k",
            "aWZ5T24YEyABKAkSEAoIbW9kaWZ5QnkYFCABKAkioQMKFW5ld0FkZFNjaGVk",
            "dWxlUmVxdWVzdBIYChBwZXJzb25Db250cmFjdElkGAEgASgJEhwKFHBlcnNv",
            "bkNvbnRyYWN0TnVtYmVyGAIgASgJEhMKC3NlcnZpY2VQYWNrGAMgASgJEgwK",
            "BG5hbWUYBCABKAkSDQoFdGl0bGUYBSABKAkSDwoHcG9zaXRpbhgGIAEoCRIO",
            "CgZtb2JpbGUYByABKAkSDQoFZW1haWwYCCABKAkSEwoLY29tcGFueU5hbWUY",
            "CSABKAkSFAoMYWN0aXZpdHlOYW1lGAogASgJEhQKDGFjdGl2aXR5VnVuZRgL",
            "IAEoCRIUCgxhY3Rpdml0eVRpbWUYDCABKAkSDQoFb3duZXIYDSABKAkSEgoK",
            "b3duZXJFbWFpbBgOIAEoCRITCgtvd25lck1vYmlsZRgPIAEoCRIUCgxvd25l",
            "ckFkZHJlc3MYECABKAkSEgoKY3J0ZWF0ZWRPbhgRIAEoCRIRCgljcmVhdGVk",
            "QnkYEiABKAkSEAoIbW9kaWZ5T24YEyABKAkSEAoIbW9kaWZ5QnkYFCABKAki",
            "WgoybmV3R2V0Q29tcGFueU5vdGljZU9mUmVwb3J0QnlDb250cmFjdE51bWJl",
            "clJlcXVlc3QSFgoOY29udHJhY3ROdW1iZXIYASABKAkSDAoEeWVhchgCIAEo",
            "CSLyAwoTTmV3Q29uZmVyZW5jZVN0cnVjdBIUCgxDb25mZXJlbmNlSUQYASAB",
            "KAkSEAoIUGFyZW50SUQYAiABKAkSQgoLVHJhbnNsYXRpb24YAyABKAsyLS5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5UcmFuc2xhdGlvbhIT",
            "CgtDRkFkZHJlc3NQSxgEIAEoCRIRCglTdGFydERhdGUYBSABKAkSFQoNU3Rh",
            "cnREYXRlVGltZRgGIAEoCRIMCgRZZWFyGAcgASgJEgwKBFNvcnQYCCABKAkS",
            "FAoMQWJicmV2aWF0aW9uGAkgASgJEhsKE0NvbmZlcmVuY2VJbnRyb2R1Y2UY",
            "CiABKAkSEQoJQ3JlYXRlZE9uGAsgASgJEhEKCUNyZWF0ZWRCeRgMIAEoCRIS",
            "CgpNb2RpZmllZE9uGA0gASgJEhIKCk1vZGlmaWVkQnkYDiABKAkSDQoFTGV2",
            "ZWwYDyABKAUSEQoJVGltZVJhbmdlGBAgASgJEhMKC1Nob3dPbkZyb250GBEg",
            "ASgIEkcKCUNGQWRkcmVzcxgSIAEoCzI0LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3Lk5ld0NGQWRkcmVzc1N0cnVjdBITCgtBcHBseVNlYXJj",
            "aBgTIAEoCCLeAQoSTmV3Q0ZBZGRyZXNzU3RydWN0EhMKC0NGQWRkcmVzc1BL",
            "GAEgASgJEkIKC1RyYW5zbGF0aW9uGAIgASgLMi0uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuVHJhbnNsYXRpb24SEAoIUG9zdENvZGUYAyAB",
            "KAkSDwoHQ291bnRyeRgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3Jl",
            "YXRlZEJ5GAYgASgJEhIKCk1vZGlmaWVkT24YByABKAkSEgoKTW9kaWZpZWRC",
            "eRgIIAEoCSKcAgoYTmV3QXBwbHlDb25mZXJlbmNlU3RydWN0EgoKAklkGAEg",
            "ASgJEhgKEFBlcnNvbkNvbnRyYWN0SWQYAiABKAkSEAoITWVtYmVyUEsYAyAB",
            "KAkSGwoTU2Vzc2lvbkNvbmZlcmVuY2VJZBgEIAEoCRIRCglJc0NvbmZpcm0Y",
            "BSABKAgSEQoJQ29tcGFueUlkGAYgASgJEhQKDFRhZ1R5cGVDb2RlcxgHIAEo",
            "CRIZChFSZW1hcmtUcmFuc2xhdGlvbhgIIAEoCRIMCgRZZWFyGAkgASgJEhwK",
            "FFNlc3Npb25Db25mZXJlbmNlSWRzGAogAygJEhgKEElzUGFydGljdWxhckNv",
            "bmYYCyABKAgSDgoGT3dlcmlkGAwgASgJIrYHChhOZXdDb21wYW55Q29udHJh",
            "Y3RTdHJ1Y3QSEgoKQ29udHJhY3RJZBgBIAEoCRIcChRDb21wYW55U2Vydmlj",
            "ZVBhY2tJZBgCIAEoCRIRCglDb21wYW55SWQYAyABKAkSVgoSQ29tTmFtZVRy",
            "YW5zbGF0aW9uGAQgASgLMjouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuQ29tTmFtZVRyYW5zbGF0aW9uU3RydWN0EhkKEUNvbUNvbnRyYWN0",
            "TnVtYmVyGAUgASgJEg8KB0NvdW50cnkYBiABKAkSVgoSQWRkcmVzc1RyYW5z",
            "bGF0aW9uGAcgASgLMjouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuQWRkcmVzc1RyYW5zbGF0aW9uU3RydWN0EhkKEU1heENvbnRyYWN0TnVt",
            "YmVyGAggASgJEhIKCkNDSXNkZWxldGUYCSABKAgSFgoORW50ZXJwcmlzZVR5",
            "cGUYCiABKAUSEAoISXNWZXJpZnkYCyABKAgSDgoGT3dlcmlkGAwgASgJEgwK",
            "BE93ZXIYDSABKAkSEQoJQ3JlYXRlZE9uGA4gASgJEhEKCUNyZWF0ZWRCeRgP",
            "IAEoCRITCgtNb2RlZmllbGRPbhgQIAEoCRITCgtNb2RlZmllbGRCeRgRIAEo",
            "CRJZChJDb21wYW55U2VydmljZVBhY2sYEiABKAsyPS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5OZXdDb21wYW55U2VydmljZVBhY2tTdHJ1",
            "Y3QSVgoJZGxpc3RkYXRhGBMgAygLMkMuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50U3RydWN0",
            "EhQKDENvbnRyYWN0Q29kZRgUIAEoCRIUCgxDb25mZXJlbmNlSWQYFSABKAkS",
            "FgoOQ29uZmVyZW5jZU5hbWUYFiABKAkSEQoJSXNDaGVja0luGBcgASgIEg4K",
            "BlBQVFVybBgYIAEoCRIaChJDb250cmFjdFN0YXR1c0NvZGUYGSABKAkSHAoU",
            "Q29uZmVyZW5jZUNvbnRyYWN0SWQYGiABKAkSTAoJcGxpc3RkYXRhGBsgAygL",
            "MjkuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTmV3UGVyc29u",
            "Q29udHJhY3RTdHJ1Y3QSEAoIQ29tUHJpY2UYHCABKAkijQQKG05ld0NvbXBh",
            "bnlTZXJ2aWNlUGFja1N0cnVjdBIcChRDb21wYW55U2VydmljZVBhY2tJZBgB",
            "IAEoCRIWCg5Db250cmFjdFR5cGVJZBgCIAEoCRIMCgRTb3J0GAMgASgFEkgK",
            "C1RyYW5zbGF0aW9uGAQgASgLMjMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcuVHJhbnNsYXRpb25TdHJ1Y3QSEAoIUHJpY2VSTUIYBSABKAkS",
            "EAoIUHJpY2VVU0QYBiABKAkSFgoOSXNTaG93bk9uRnJvbnQYByABKAgSEQoJ",
            "Q3JlYXRlZE9uGAggASgJEhEKCUNyZWF0ZWRCeRgJIAEoCRITCgtNb2RlZmll",
            "bGRPbhgKIAEoCRITCgtNb2RlZmllbGRCeRgLIAEoCRJOChFSZW1hcmtUcmFu",
            "c2xhdGlvbhgMIAEoCzIzLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LlRyYW5zbGF0aW9uU3RydWN0EhQKDENvbmZlcmVuY2VJZBgNIAEoCRIW",
            "Cg5Db25mZXJlbmNlTmFtZRgOIAEoCRIRCglJc1NwZWFrZXIYDyABKAgSEQoJ",
            "Q1R5cGVDb2RlGBAgASgJEg4KBklzR2l2ZRgRIAEoCBIMCgRZZWFyGBIgASgJ",
            "EhIKClJlbWFya0NvZGUYEyABKAkikAQKFE5ld1NlcnZpY2VQYWNrU3RydWN0",
            "EhUKDVNlcnZpY2VQYWNrSWQYASABKAkSSAoLVHJhbnNsYXRpb24YAiABKAsy",
            "My5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5UcmFuc2xhdGlv",
            "blN0cnVjdBIQCghQcmljZVJNQhgDIAEoCRIQCghQcmljZVVTRBgEIAEoCRIR",
            "CglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhMKC01vZGVm",
            "aWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEhQKDENvbmZlcmVu",
            "Y2VJZBgJIAEoCRIWCg5Db25mZXJlbmNlTmFtZRgKIAEoCRIbChNTZXNzaW9u",
            "Q29uZmVyZW5jZUlkGAsgASgJEh0KFVNlc3Npb25Db25mZXJlbmNlTmFtZRgM",
            "IAEoCRITCgtTZXNzaW9uRGF0ZRgNIAEoCRIYChBTZXNzaW9uU3RhcnRUaW1l",
            "GA4gASgJEiAKGFRoaXJkU2Vzc2lvbkNvbmZlcmVuY2VJZBgPIAEoCRIiChpU",
            "aGlyZFNlc3Npb25Db25mZXJlbmNlTmFtZRgQIAEoCRIWCg5TZXNzaW9uQWRk",
            "cmVzcxgRIAEoCRIMCgRZZWFyGBIgASgJEh4KFmNvbXBhbnlTZXJ2aWNlUGFj",
            "a0NvZGUYEyABKAkihQIKEU5ld0FjdGl2aXR5U3RydWN0EhIKCkFjdGl2aXR5",
            "SWQYASABKAkSSQoMQWN0aXZpdHlOYW1lGAIgASgLMjMuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuVHJhbnNsYXRpb25TdHJ1Y3QSGwoTU2Vz",
            "c2lvbkNvbmZlcmVuY2VJRBgDIAEoCRJSChVTZXNzaW9uQ29uZmVyZW5jZU5h",
            "bWUYBCABKAsyMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5U",
            "cmFuc2xhdGlvblN0cnVjdBIMCgRTb3J0GAUgASgFEhIKClNlc3Npb25JRHMY",
            "BiABKAki8wMKEE5ld0NvbXBhbnlTdHJ1Y3QSEQoJQ29tcGFueVBLGAEgASgJ",
            "EhUKDUNvbXBhbnlUeXBlUEsYAiABKAkSFgoOSW5kdXN0cnlUeXBlUEsYAyAB",
            "KAkSEAoITWVtYmVyUEsYBCABKAkSEQoJQ29tTmFtZUNuGAUgASgJEhEKCUNv",
            "bU5hbWVFbhgGIAEoCRIVCg1Db21BcmVhRGV0YWlsGAcgASgJEhcKD0NvbUNv",
            "bnRhY3RFbWFpbBgIIAEoCRITCgtDb21Qb3N0Q29kZRgJIAEoCRIOCgZDb21G",
            "YXgYCiABKAkSDgoGQ29tVGVsGAsgASgJEhIKCkNvbVdlYlNpdGUYDCABKAkS",
            "EQoJQ29tQ2xpZW50GA0gASgJEhEKCUNvbU5hdHVyZRgOIAEoCRIPCgdDb21M",
            "YW5nGA8gASgJEhEKCUNvbVJlbWFyaxgQIAEoCRITCgtDb21Jc0RlbGV0ZRgR",
            "IAEoCBITCgtDb21Jc1ZlcmlmeRgSIAEoCBIUCgxDb21Jc1dlYlNpdGUYEyAB",
            "KAgSEgoKQ29tQWRkcmVzcxgUIAEoCRIRCglDcmVhdGVkT24YFSABKAkSEQoJ",
            "Q3JlYXRlZEJ5GBYgASgJEhMKC01vZGVmaWVsZE9uGBcgASgJEhMKC01vZGVm",
            "aWVsZEJ5GBggASgJIuQFCg9OZXdNZW1iZXJTdHJ1Y3QSEAoITWVtYmVyUEsY",
            "ASABKAkSEAoIU291cmNlUEsYAiABKAkSEQoJTWVtTmFtZUNuGAMgASgJEhEK",
            "CU1lbU5hbWVFbhgEIAEoCRIQCghNZW1FbWFpbBgFIAEoCRITCgtNZW1QYXNz",
            "d29yZBgGIAEoCRIPCgdNZW1UeXBlGAcgASgJEhEKCU1lbUdlbmRlchgIIAEo",
            "CRIVCg1NZW1EZXBhcnRtZW50GAkgASgJEhAKCE1lbVRpdGxlGAogASgJEhMK",
            "C01lbVBvc2l0aW9uGAsgASgJEhMKC01lbVByb1RpdGxlGAwgASgJEg0KBU1l",
            "bVFRGA0gASgJEg4KBk1lbUZheBgOIAEoCRIOCgZNZW1NU04YDyABKAkSEQoJ",
            "TWVtTW9iaWxlGBAgASgJEg4KBk1lbVRlbBgRIAEoCRITCgtNZW1Qb3N0Q29k",
            "ZRgSIAEoCRIYChBNZW1MYXN0TG9naW5UaW1lGBMgASgJEhIKCk1lbUFkZHJl",
            "c3MYFCABKAkSGAoQTWVtQWRkcmVzc0RldGFpbBgVIAEoCRITCgtNZW1Jc0Rl",
            "bGV0ZRgWIAEoCBIXCg9NZW1Jc0FjdGl2YXRpb24YFyABKAgSEQoJQ3JlYXRl",
            "ZE9uGBggASgJEhEKCUNyZWF0ZWRCeRgZIAEoCRITCgtNb2RlZmllbGRPbhga",
            "IAEoCRITCgtNb2RlZmllbGRCeRgbIAEoCRIRCglDb21wYW55UEsYHCABKAkS",
            "GAoQTWVtQ291bnRyeU5hbWVDbhgdIAEoCRIYChBNZW1Db3VudHJ5TmFtZUVu",
            "GB4gASgJEhIKCk1lbUNvbXBhbnkYHyABKAkSFQoNQXNzaXN0YW50TmFtZRgg",
            "IAEoCRIZChFBc3Npc3RhbnRQb3NpdGlvbhghIAEoCRIXCg9Bc3Npc3RhbnRN",
            "b2JpbGUYIiABKAkSFgoOQXNzaXN0YW50RW1haWwYIyABKAkiqgQKFE5ld1Bh",
            "cnRpY2lwYW50U3RydWN0EhUKDVBhcnRpY2lwYW50SUQYASABKAkSIgoaUGFy",
            "dGljaXBhbnROYW1lVHJhbnNsYXRpb24YAiABKAkSDgoGSU1HU1JDGAMgASgJ",
            "EhoKEkNvbXBhbnlUcmFuc2xhdGlvbhgEIAEoCRIWCg5Kb2JUcmFuc2xhdGlv",
            "bhgFIAEoCRIaChJDb3VudHJ5VHJhbnNsYXRpb24YBiABKAkSDQoFRW1haWwY",
            "ByABKAkSDgoGTW9iaWxlGAggASgJEhwKFEludHJvZHVjZVRyYW5zbGF0aW9u",
            "GAkgASgJEhEKCUNyZWF0ZWRPbhgKIAEoCRIRCglDcmVhdGVkQnkYCyABKAkS",
            "EgoKTW9kaWZpZWRPbhgMIAEoCRISCgpNb2RpZmllZEJ5GA0gASgJEhgKEFBl",
            "cnNvbkNvbnRyYWN0SUQYDiABKAkSGQoRUGVyQ29udHJhY3ROdW1iZXIYDyAB",
            "KAkSEAoISXNEZWxldGUYECABKAgSDAoEU29ydBgRIAEoBRIOCgZPd2VyaWQY",
            "EiABKAkSDAoET3dlchgTIAEoCRIeChZBcHBlbGxhdGlvblRyYW5zbGF0aW9u",
            "GBQgASgJEhEKCUNvbXBhbnlJZBgVIAEoCRISCgpDb25maXJtUFBUGBYgASgI",
            "EhAKCE1lbWJlclBLGBcgASgJEhIKClNob3dPbkZvbnQYGCABKAUSDAoEWWVh",
            "chgZIAEoCSLBAgoSTmV3QWN0aXZpdHlTdHJ1Y3QxEhIKCkFjdGl2aXR5SUQY",
            "ASABKAkSFAoMQ29uZmVyZW5jZUlEGAIgASgJEhYKDkFjdGl2aXR5VHlwZUlE",
            "GAMgASgJEhIKClRpbWVMZW5ndGgYBCABKAkSDAoEU29ydBgFIAEoBRIRCglT",
            "dGFydERhdGUYBiABKAkSQgoLVHJhbnNsYXRpb24YByABKAsyLS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5UcmFuc2xhdGlvbhIRCglDcmVh",
            "dGVkT24YCCABKAkSEQoJQ3JlYXRlZEJ5GAkgASgJEhIKCk1vZGlmaWVkT24Y",
            "CiABKAkSEgoKTW9kaWZpZWRCeRgLIAEoCRIRCglTdGFydFRpbWUYDCABKAkS",
            "DwoHRW5kVGltZRgNIAEoCSLaAgoNTmV3VGFsa1N0cnVjdBIOCgZUYWxrSUQY",
            "ASABKAkSEgoKQWN0aXZpdHlJRBgCIAEoCRISCgpUYWxrVHlwZUlEGAMgASgJ",
            "EhEKCUNGVG9waWNQSxgEIAEoCRJCCgtUcmFuc2xhdGlvbhgGIAEoCzItLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlRyYW5zbGF0aW9uEhEK",
            "CUNyZWF0ZWRPbhgHIAEoCRIRCglDcmVhdGVkQnkYCCABKAkSEgoKTW9kaWZp",
            "ZWRPbhgJIAEoCRISCgpNb2RpZmllZEJ5GAogASgJEhEKCVN0YXJ0RGF0ZRgL",
            "IAEoCRISCgpUaW1lTGVuZ3RoGAwgASgJEgwKBFNvcnQYDSABKAUSEQoJU3Rh",
            "cnRUaW1lGA4gASgJEg8KB0VuZFRpbWUYDyABKAkSEwoLQ0ZUb3BpY05hbWUY",
            "ECABKAkiowIKGE5ld1BhcnRpY2lwYW50SW5mb1N0cnVjdBIiChpQYXJ0aWNp",
            "cGFudE5hbWVUcmFuc2xhdGlvbhgBIAEoCRIaChJDb21wYW55VHJhbnNsYXRp",
            "b24YAiABKAkSFgoOSm9iVHJhbnNsYXRpb24YAyABKAkSGgoSQ291bnRyeVRy",
            "YW5zbGF0aW9uGAQgASgJEh4KFkFwcGVsbGF0aW9uVHJhbnNsYXRpb24YBSAB",
            "KAkSIgoaUGFydGljaXBhbnRUeXBlVHJhbnNsYXRpb24YBiABKAkSFQoNUGFy",
            "dGljaXBhbnRJRBgHIAEoCRIZChFQYXJ0aWNpcGFudFR5cGVJRBgIIAEoCRIN",
            "CgVFTWFpbBgJIAEoCRIOCgZNb2JpbGUYCiABKAkiXQoRbW9kaWZ5UmVzcG9u",
            "c2VOZXcSEQoJaXNTdWNjZXNzGAEgASgIEgsKA21zZxgCIAEoCRINCgV0b3Rh",
            "bBgDIAEoBRIZChFjb21wYW55Q29udHJhY3RJZBgEIAEoCSKzCQozbmV3R2V0",
            "Q29tcGFueU5vdGljZU9mUmVwb3J0QnlDb250cmFjdE51bWJlclJlc3BvbnNl",
            "ElcKGENvbmZlcmVuY2VTdHJ1Y3RMaXN0ZGF0YRgBIAMoCzI1LkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk5ld0NvbmZlcmVuY2VTdHJ1Y3QS",
            "VQoXQ0ZBZGRyZXNzU3RydWN0TGlzdGRhdGEYAiADKAsyNC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdDRkFkZHJlc3NTdHJ1Y3QSYQod",
            "QXBwbHlDb25mZXJlbmNlU3RydWN0TGlzdGRhdGEYAyADKAsyOi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdBcHBseUNvbmZlcmVuY2VT",
            "dHJ1Y3QSYQodQ29tcGFueUNvbnRyYWN0U3RydWN0TGlzdGRhdGEYBCADKAsy",
            "Oi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdDb21wYW55",
            "Q29udHJhY3RTdHJ1Y3QSZwogQ29tcGFueVNlcnZpY2VQYWNrU3RydWN0TGlz",
            "dGRhdGEYBSADKAsyPS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5OZXdDb21wYW55U2VydmljZVBhY2tTdHJ1Y3QSVAoUc2VydmljZXBhY2tf",
            "bGlzdGRhdGEYBiADKAsyNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5OZXdTZXJ2aWNlUGFja1N0cnVjdBJPChFhY3Rpdml0eV9saXN0ZGF0",
            "YRgHIAMoCzI0LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk5l",
            "d0FjdGl2aXR5U3RydWN0MRJRChVDb21wYW55U3RydWN0TGlzdGRhdGEYCCAD",
            "KAsyMi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdDb21w",
            "YW55U3RydWN0Ek8KFE1lbWJlclN0cnVjdExpc3RkYXRhGAkgAygLMjEuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTmV3TWVtYmVyU3RydWN0",
            "ElkKGVBhcnRpY2lwYW50U3RydWN0TGlzdGRhdGEYCiADKAsyNi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdQYXJ0aWNpcGFudFN0cnVj",
            "dBJPChJBY3Rpdml0eVN0cnVjdExpc3QYCyADKAsyMy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5OZXdBY3Rpdml0eVN0cnVjdBJdChlQYXJ0",
            "aWNpcGFudEluZm9TdHJ1Y3RMaXN0GAwgAygLMjouR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuTmV3UGFydGljaXBhbnRJbmZvU3RydWN0EkcK",
            "DlRhbGtTdHJ1Y3RMaXN0GA0gAygLMi8uR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuTmV3VGFsa1N0cnVjdCJRCjFuZXdHZXRQZXJzb25Ob3Rp",
            "Y2VPZlJlcG9ydEJ5Q29udHJhY3ROdW1iZXJSZXF1ZXN0EhwKFHBlcnNvbkNv",
            "bnRyYWN0TnVtYmVyGAEgASgJIvsCCjJuZXdHZXRQZXJzb25Ob3RpY2VPZlJl",
            "cG9ydEJ5Q29udHJhY3ROdW1iZXJSZXNwb25zZRIWCg5jb250cmFjdE51bWJl",
            "chgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2NvbXBhbnlOYW1lGAMgASgJEhMK",
            "C3NlcnZpY2VQYWNrGAQgASgJEgsKA2ZlZRgFIAEoAhINCgV0b3RhbBgGIAEo",
            "AhIUCgxhY3Rpdml0eU5hbWUYByABKAkSFAoMYWN0aXZpdHlWdW5lGAggASgJ",
            "EhQKDGFjdGl2aXR5VGltZRgJIAEoCRINCgVvd25lchgKIAEoCRITCgtvd25l",
            "ck1vYmlsZRgLIAEoCRISCgpvd25lckVtYWlsGAwgASgJEhQKDG93bmVyQWRk",
            "cmVzcxgNIAEoCRIRCgljcmVhdGVkQnkYDiABKAkSEQoJY3JlYXRlZE9uGA8g",
            "ASgJEhEKCW1vZGlmaXlCeRgQIAEoCRIQCghtb2RpZnlPbhgRIAEoCSIlChVu",
            "ZXdDb21wYW55TmFtZVJlcXVlc3QSDAoEbmFtZRgBIAEoCSIxCgtUcmFuc2xh",
            "dGlvbhIKCgJDThgBIAEoCRIKCgJFThgCIAEoCRIKCgJKUBgDIAEoCSKfBQoX",
            "TmV3UGVyc29uQ29udHJhY3RTdHJ1Y3QSGAoQUGVyc29uQ29udHJhY3RJZBgB",
            "IAEoCRISCgpDb250cmFjdElkGAIgASgJEhkKEVBlckNvbnRyYWN0TnVtYmVy",
            "GAMgASgJEhAKCE1lbWJlclBLGAQgASgJEk4KDk1lbVRyYW5zbGF0aW9uGAUg",
            "ASgLMjYuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTWVtVHJh",
            "bnNsYXRpb25TdHJ1Y3QSEgoKUENJc2RlbGV0ZRgGIAEoCBIRCglDcmVhdGVk",
            "T24YByABKAkSEQoJQ3JlYXRlZEJ5GAggASgJEhMKC01vZGVmaWVsZE9uGAkg",
            "ASgJEhMKC01vZGVmaWVsZEJ5GAogASgJEg4KBk93ZXJpZBgLIAEoCRIMCgRP",
            "d2VyGAwgASgJEhwKFENvbmZlcmVuY2VDb250cmFjdElkGA0gASgJEhEKCUNU",
            "eXBlQ29kZRgOIAEoCRJTCg9Db21wYW55Q29udHJhY3QYDyABKAsyOi5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5OZXdDb21wYW55Q29udHJh",
            "Y3RTdHJ1Y3QSEQoJSXNDaGVja0luGBAgASgIEhMKC0lzU2VuZEVtYWlsGBEg",
            "ASgIEhAKCElzTW9kaWZ5GBIgASgIEhQKDENvbmZlcmVuY2VJZBgTIAEoCRIW",
            "Cg5Jc0ZpYW5jZVJlY29yZBgUIAEoCBIUCgxJc0ludml0ZUNvZGUYFSABKAgS",
            "FAoMSW52aXRlQ29kZUlkGBYgASgJEhgKEElzQ29tbWl0QWJzdHJhY3QYFyAB",
            "KAgSDwoHSXNQcmludBgYIAEoCBISCgpQYWlkQW1vdW50GBkgASgJImYKGG5l",
            "d0dldFNlcnZpY2VQYWNrUmVxdWVzdBIUCgxDb25mZXJlbmNlSWQYASABKAkS",
            "FgoOQ29udHJhY3RUeXBlSWQYAiABKAkSDAoEWWVhchgDIAEoCRIOCgZJc0dp",
            "dmUYBCABKAki0AMKF25ld0dldFNlcnZpY2VQYWNrU3RydWN0EhwKFENvbXBh",
            "bnlTZXJ2aWNlUGFja0lkGAEgASgJEgwKBENvZGUYAiABKAkSEwoLVHJhbnNs",
            "YXRpb24YAyABKAkSEAoIUHJpY2VSTUIYBCABKAkSEAoIUHJpY2VVU0QYBSAB",
            "KAkSDwoHUHJpY2VKUBgGIAEoCRIOCgZJc0dpdmUYByABKAgSDAoEWWVhchgI",
            "IAEoCRIWCg5Db250cmFjdFR5cGVJZBgJIAEoCRIRCglDVHlwZUNvZGUYCiAB",
            "KAkSDAoEU29ydBgLIAEoBRIUCgxDb25mZXJlbmNlSWQYDCABKAkSFgoOQ29u",
            "ZmVyZW5jZU5hbWUYDSABKAkSFgoOSXNTaG93bk9uRnJvbnQYDiABKAgSGQoR",
            "UmVtYXJrVHJhbnNsYXRpb24YDyABKAkSEgoKUmVtYXJrQ29kZRgQIAEoCRIR",
            "CglJc1NwZWFrZXIYESABKAgSEAoISXNEZWxldGUYEiABKAgSEQoJQ3JlYXRl",
            "ZE9uGBMgASgJEhEKCUNyZWF0ZWRCeRgUIAEoCRITCgtNb2RlZmllbGRPbhgV",
            "IAEoCRITCgtNb2RlZmllbGRCeRgWIAEoCSJoChluZXdHZXRTZXJ2aWNlUGFj",
            "a1Jlc3BvbnNlEksKCGxpc3RkYXRhGAEgAygLMjkuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcubmV3R2V0U2VydmljZVBhY2tTdHJ1Y3QiVgoe",
            "bmV3TWVyZ2VDb21wYW55Q29udHJhY3RSZXF1ZXN0EhkKEWNvbXBhbnlDb250",
            "cmFjdElkGAEgASgJEhkKEU1heENvbnRyYWN0TnVtYmVyGAIgASgFItsCCiNu",
            "ZXdHZXRDb25mZXJlbmNlQ29udHJhY3RMaXN0UmVxdWVzdBIMCgRwYWdlGAEg",
            "ASgFEhAKCHBhZ2VTaXplGAIgASgFEngKBnNlYXJjaBgDIAEoCzJoLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dldENvbmZlcmVuY2VD",
            "b250cmFjdExpc3RSZXF1ZXN0Lm5ld0dldENvbmZlcmVuY2VDb250cmFjdExp",
            "c3RTZWFyY2gamQEKIm5ld0dldENvbmZlcmVuY2VDb250cmFjdExpc3RTZWFy",
            "Y2gSDAoEeWVhchgBIAEoCRIUCgxjb25mZXJlbmNlSWQYAiABKAkSEwoLY29t",
            "cGFueU5hbWUYAyABKAkSFgoOY29udHJhY3ROdW1iZXIYBCABKAkSDwoHb3du",
            "ZXJJZBgFIAEoCRIRCglvcmRlcmluZ3MYBiABKAki3QQKHm5ld0dldENvbmZl",
            "cmVuY2VDb250cmFjdFN0cnVjdBIcChRDb25mZXJlbmNlQ29udHJhY3RJZBgB",
            "IAEoCRIUCgxDb25mZXJlbmNlSWQYAiABKAkSEQoJQ29tcGFueUlkGAMgASgJ",
            "EhoKEkNvbU5hbWVUcmFuc2xhdGlvbhgEIAEoCRIWCg5Db250cmFjdE51bWJl",
            "chgFIAEoCRIUCgxDb250cmFjdFllYXIYBiABKAkSFAoMQ29udHJhY3RDb2Rl",
            "GAcgASgJEhoKEkNvbnRyYWN0U3RhdHVzQ29kZRgIIAEoCRIZChFQYXltZW50",
            "U3RhdHVzQ29kZRgJIAEoCRIYChBNb2RpZnlQZXJtaXNzaW9uGAogASgJEhAK",
            "CElzRGVsZXRlGAsgASgIEhMKC0lzU2VuZEVtYWlsGAwgASgIEhAKCElzTW9k",
            "aWZ5GA0gASgIEg4KBk93ZXJpZBgOIAEoCRIMCgRPd2VyGA8gASgJEhEKCUNy",
            "ZWF0ZWRPbhgQIAEoCRIRCglDcmVhdGVkQnkYESABKAkSEgoKTW9kaWZpZWRP",
            "bhgSIAEoCRISCgpNb2RpZmllZEJ5GBMgASgJEhIKCk90aGVyT3duZXIYFCAB",
            "KAkSFAoMT3RoZXJPd25lcklkGBUgASgJEhIKClRvdGFsUHJpY2UYFiABKAkS",
            "EQoJVG90YWxQYWlkGBcgASgJEhkKEUlzT3BQYXlTdGF0dWRDb2RlGBggASgI",
            "EhYKDkVudGVycHJpc2VUeXBlGBkgASgFEhoKEkNvbnRyYWN0U3RhdHVzTmFt",
            "ZRgaIAEoCSKJAQokbmV3R2V0Q29uZmVyZW5jZUNvbnRyYWN0TGlzdFJlc3Bv",
            "bnNlElIKCGxpc3RkYXRhGAEgAygLMkAuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcubmV3R2V0Q29uZmVyZW5jZUNvbnRyYWN0U3RydWN0Eg0K",
            "BXRvdGFsGAIgASgFIisKG25ld0dldENvbmZlcmVuY2VJbmZvUmVxdWVzdBIM",
            "CgR5ZWFyGAEgASgJIr4BChpuZXdHZXRDb25mZXJlbmNlSW5mb1N0cnVjdBIU",
            "CgxDb25mZXJlbmNlSWQYASABKAkSFgoOQ29uZmVyZW5jZU5hbWUYAiABKAkS",
            "DgoGUHJlZml4GAMgASgJEgwKBFllYXIYBCABKAkSDQoFQ05hbm8YBSABKAkS",
            "DQoFQ291bnQYBiABKAUSDgoGU3RhdHVzGAcgASgFEhAKCElzRGVsZXRlGAgg",
            "ASgIEhQKDEFiYnJldmlhdGlvbhgJIAEoCSJuChxuZXdHZXRDb25mZXJlbmNl",
            "SW5mb1Jlc3BvbnNlEk4KCGxpc3RkYXRhGAEgAygLMjwuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29uZmVyZW5jZUluZm9TdHJ1",
            "Y3QiYgopbmV3R2V0T3duZXJCeUNvbmZJZEFuZENvbUlkQW5kWWVhclJlcXVl",
            "c3QSEQoJQ29tcGFueUlkGAEgASgJEhQKDENvbmZlcmVuY2VJRBgCIAEoCRIM",
            "CgRZZWFyGAMgASgJInQKKG5ld0dldE93bmVyQnlDb25mSWRBbmRDb21JZEFu",
            "ZFllYXJTdHJ1Y3QSDwoHT3duZXJJZBgBIAEoCRINCgVPd25lchgCIAEoCRIU",
            "CgxPdGhlck93bmVySWQYAyABKAkSEgoKT3RoZXJPd25lchgEIAEoCSKKAQoq",
            "bmV3R2V0T3duZXJCeUNvbmZJZEFuZENvbUlkQW5kWWVhclJlc3BvbnNlElwK",
            "CGxpc3RkYXRhGAEgAygLMkouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcubmV3R2V0T3duZXJCeUNvbmZJZEFuZENvbUlkQW5kWWVhclN0cnVj",
            "dCIxChlJblNlcnZpY2VQYWNrQ29uZmVyZW5jZVZNEhQKDENvbmZlcmVuY2VJ",
            "ZBgBIAEoCSKiAgoTUmVwb3J0X0NvbmZlcmVuY2VWTRIWCg5Db25mZXJuZWNl",
            "TmFtZRgBIAEoCRIMCgREYXRlGAIgASgJEhEKCVRpbWVSYW5nZRgDIAEoCRIP",
            "CgdBZGRyZXNzGAQgASgJEgwKBFNvcnQYBSABKAkSFwoPUGFydGljaXBhdGVU",
            "eXBlGAYgASgJEg4KBlJlbWFyaxgHIAEoCRIXCg9Jc0luU2VydmljZVBhY2sY",
            "CCABKAgSEQoJSXNDaGVja2VkGAkgASgIEhEKCVN0YXJ0VGltZRgKIAEoCRJL",
            "Cg5BY3Rpdml0eVZNTGlzdBgLIAMoCzIzLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LlJlcG9ydF9BY3Rpdml0eVZNIokCChFSZXBvcnRfQWN0",
            "aXZpdHlWTRIUCgxBY3Rpdml0eU5hbWUYASABKAkSEQoJU3RhcnRUaW1lGAIg",
            "ASgJEhIKClRpbWVMZW5ndGgYAyABKAUSEQoJVGltZVJhbmdlGAQgASgJEgwK",
            "BFNvcnQYBSABKAUSQwoKVGFsa1ZNTGlzdBgGIAMoCzIvLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LlJlcG9ydF9UYWxrVk0SUQoRUGFydGlj",
            "aXBhbnRWTUxpc3QYByADKAsyNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5SZXBvcnRfUGFydGljaXBhbnRWTSKyAQoUUmVwb3J0X1BhcnRp",
            "Y2lwYW50Vk0SFwoPUGFydGljaXBhbnRUeXBlGAEgASgJEhcKD1BhcnRpY2lw",
            "YW50TmFtZRgCIAEoCRIWCg5QYXJ0aWNpcGFudEpvYhgDIAEoCRIYChBQYXJ0",
            "aWNpcGFudFRpdGxlGAQgASgJEhoKElBhcnRpY2lwYW50Q29tcGFueRgFIAEo",
            "CRIaChJQYXJ0aWNpcGFudENvdW50cnkYBiABKAkizwEKDVJlcG9ydF9UYWxr",
            "Vk0SEQoJVGltZVJhbmdlGAEgASgJEhAKCFRhbGtOYW1lGAIgASgJEhEKCVRv",
            "cGljTmFtZRgDIAEoCRIMCgRTb3J0GAQgASgFEhIKClRpbWVMZW5ndGgYBSAB",
            "KAUSEQoJU3RhcnRUaW1lGAYgASgJElEKEVBhcnRpY2lwYW50Vk1MaXN0GAcg",
            "AygLMjYuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUmVwb3J0",
            "X1BhcnRpY2lwYW50Vk0y+qIBCh9Db25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "VG9HcnBjEpIBChlHZXRDb25mZXJlbmNlQ29udHJhY3RMaXN0EjkuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RT",
            "ZWFyY2gaOC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db25m",
            "ZXJlbmNlQ29udHJhY3RMaXN0IgASmgEKIUdldENvbmZlcmVuY2VDb250cmFj",
            "dExpc3RCeUlzR2l2ZRI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjguR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuQ29uZmVyZW5jZUNvbnRyYWN0TGlzdCIAErMB",
            "CjpHZXRDb25mZXJlbmNlQ29udHJhY3RMaXN0QnlJc0dpdmVXaXRoQWxsQ29u",
            "dHJhY3RTdGF0dXNDb2RlEjkuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaOC5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNlQ29udHJhY3RMaXN0IgAS",
            "jwEKJEdldENvbmZlcmVuY2VDb250cmFjdEJ5Q29tcGFueUlkTGlzdBIrLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBo4Lkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbmZlcmVuY2VDb250",
            "cmFjdExpc3QiABKZAQorR2V0Q29uZmVyZW5jZUNvbnRyYWN0QnlDb21wYW55",
            "SWRBbmRZZWFyTGlzdBIuLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LlNlYXJjaFN0cnVjdBo4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LkNvbmZlcmVuY2VDb250cmFjdExpc3QiABKGAQoZR2V0Q29uZmVy",
            "ZW5jZUNvbnRyYWN0QnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LklkUmVxdWVzdBo6LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LkNvbmZlcmVuY2VDb250cmFjdFN0cnVjdCIAEpkBChxDcmVhdGVD",
            "b25mZXJlbmNlQ29udHJhY3RJbmZvEjouR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuQ29uZmVyZW5jZUNvbnRyYWN0U3RydWN0GjsuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHlGb3JDcmVh",
            "dGVPdGhlciIAEosBChxVcGRhdGVDb25mZXJlbmNlQ29udHJhY3RJbmZvEjou",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29uZmVyZW5jZUNv",
            "bnRyYWN0U3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuTW9kaWZ5UmVwbHkiABKNAQoeTW9kaWZ5Q29uZmVyZW5jZUNvbnRyYWN0",
            "QnlPd2VyEjouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABKYAQopTW9kaWZ5Q29uZmVyZW5j",
            "ZUNvbnRyYWN0UGF5bWVudFN0YXR1c0NvZGUSOi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNlQ29udHJhY3RTdHJ1Y3QaLS5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIA",
            "EpMBCiNNb2RpZnlDb25mZXJlbmNlQ29udHJhY3RJc1NlbmRFbWFpbBI7Lkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbmZlcmVuY2VDb250",
            "cmFjdENpZExpc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5Nb2RpZnlSZXBseSIAEn0KGk1vZGlmeU1vZGlmeVBlcm1pc3Npb25CeUlk",
            "Ei4uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3Ry",
            "dWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5",
            "UmVwbHkiABJ8ChxEZWxldGVDb25mZXJlbmNlQ29udHJhY3RCeUlkEisuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0Gi0uR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABKO",
            "AQoeRGVsZXRlQ29uZmVyZW5jZUNvbnRyYWN0QnlMaXN0EjsuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29uZmVyZW5jZUNvbnRyYWN0Q2lk",
            "TGlzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlm",
            "eVJlcGx5IgASjwEKH0RlbGV0ZUNvbkNBbmRDQ0FuZFBDQnlDb25JZExpc3QS",
            "Oy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNl",
            "Q29udHJhY3RDaWRMaXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTW9kaWZ5UmVwbHkiABKMAQoWR2V0Q29tcGFueUNvbnRyYWN0TGlz",
            "dBI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRp",
            "b25SZXF1ZXN0U2VhcmNoGjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuQ29tcGFueUNvbnRyYWN0TGlzdCIAEpQBCixHZXRDb21wYW55Q29u",
            "dHJhY3RCeUNvbmZlcmVuY2VDb250cmFjdElkTGlzdBIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBo1LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlDb250cmFjdExpc3QiABKJ",
            "AQohR2V0Q29tcGFueUNvbnRyYWN0QnlDb21wYW55SWRMaXN0EisuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjUuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueUNvbnRyYWN0TGlz",
            "dCIAEoABChZHZXRDb21wYW55Q29udHJhY3RCeUlkEisuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjcuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueUNvbnRyYWN0U3RydWN0IgAS",
            "kwEKGUNyZWF0ZUNvbXBhbnlDb250cmFjdEluZm8SNy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55Q29udHJhY3RTdHJ1Y3QaOy5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseUZv",
            "ckNyZWF0ZU90aGVyIgAShQEKGVVwZGF0ZUNvbXBhbnlDb250cmFjdEluZm8S",
            "Ny5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55Q29u",
            "dHJhY3RTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5Nb2RpZnlSZXBseSIAEoMBChdNb2RpZnlNYXhDb250cmFjdE51bWJlchI3",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlDb250",
            "cmFjdFN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lk1vZGlmeVJlcGx5IgASfQoOTW9kaWZ5Q0NQQ093ZXISOi5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlDQ1BDT3dlckluZm9TdHJ1",
            "Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlS",
            "ZXBseSIAEnkKGURlbGV0ZUNvbXBhbnlDb250cmFjdEJ5SWQSKy5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JZFJlcXVlc3QaLS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEpgBCipS",
            "ZW1vdmVDb21wYW55Q29udHJhY3RJZlBlcnNvbkNvbnRyYWN0RW1wdHkSKy5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JZFJlcXVlc3QaOy5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseUZv",
            "ckNyZWF0ZU90aGVyIgASiAEKG0RlbGV0ZUNvbXBhbnlDb250cmFjdEJ5TGlz",
            "dBI4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlD",
            "b250cmFjdENpZExpc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5Nb2RpZnlSZXBseSIAEoMBChZEZWxldGVDQ0FuZFBDQnlDaWRMaXN0",
            "EjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueUNv",
            "bnRyYWN0Q2lkTGlzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3Lk1vZGlmeVJlcGx5IgASigEKFUdldFBlcnNvbkNvbnRyYWN0TGlzdBI5",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25S",
            "ZXF1ZXN0U2VhcmNoGjQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuUGVyc29uQ29udHJhY3RMaXN0IgASlgEKIUdldFBlcnNvbkNvbnRyYWN0",
            "QnlDb250cmFjdElkTGlzdBI5LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjQuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RMaXN0IgASjwEK",
            "GkdldFBlcnNvbkNvbnRyYWN0QnlOZXdMaXN0EjkuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaNC5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QZXJzb25Db250cmFj",
            "dExpc3QiABKUAQofR2V0UGVyc29uQ29udHJhY3RCeU1lbWJlclBLTGlzdBI5",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25S",
            "ZXF1ZXN0U2VhcmNoGjQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuUGVyc29uQ29udHJhY3RMaXN0IgASmQEKL0dldFBlcnNvbkNvbnRyYWN0",
            "QnlNZW1iZXJQS0xpc3RXaXRoTm9QYWdpbmF0aW9uEi4uR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjQuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RMaXN0IgAS",
            "fgoVR2V0UGVyc29uQ29udHJhY3RCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjYuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RTdHJ1Y3QiABKTAQonR2V0",
            "UGVyc29uQ29udHJhY3RCeVBlcnNvbkNvbnRyYWN0TnVtYmVyEi4uR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjYuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RT",
            "dHJ1Y3QiABKRAQoYQ3JlYXRlUGVyc29uQ29udHJhY3RJbmZvEjYuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RTdHJ1",
            "Y3QaOy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlS",
            "ZXBseUZvckNyZWF0ZU90aGVyIgASgwEKGFVwZGF0ZVBlcnNvbkNvbnRyYWN0",
            "SW5mbxI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBlcnNv",
            "bkNvbnRyYWN0U3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTW9kaWZ5UmVwbHkiABKDAQofTW9kaWZ5UGVyc29uQ29udHJhY3RC",
            "eUlzQ2hlY2tJbhIvLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lk1vZGlmeVJlcXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5Nb2RpZnlSZXBseSIAEooBCiVNb2RpZnlQZXJzb25Db250cmFjdElz",
            "Q2hlY2tJbkJ5SWRMaXN0EjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuQ2hlY2tJblJlcXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEosBCh9Nb2RpZnlQZXJzb25Db250",
            "cmFjdElzU2VuZEVtYWlsEjcuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuUGVyc29uQ29udHJhY3RQaWRMaXN0Gi0uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABKSAQoiTW9kaWZ5UGVy",
            "c29uQ29udHJhY3RJc0ZpYW5jZVJlY29yZBI7LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0UENOb1JlcXVlc3QaLS5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIA",
            "EoYBCiNNb2RpZnlQZXJzb25Db250cmFjdElzUHJpbnRCeU93ZXJpZBIuLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlNlYXJjaFN0cnVjdBot",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5",
            "IgASgQEKIE1vZGlmeVBlcnNvbkNvbnRyYWN0SXNQcmludEJ5aWRzEiwuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRzUmVxdWVzdBotLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgAS",
            "eAoYRGVsZXRlUGVyc29uQ29udHJhY3RCeUlkEisuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0Gi0uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABKGAQoaRGVsZXRlUGVy",
            "c29uQ29udHJhY3RCeUxpc3QSNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5QZXJzb25Db250cmFjdFBpZExpc3QaLS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEn4KHkRlbGV0ZVBl",
            "cnNvbkNvbnRyYWN0QnlJZEZvcldlYhIrLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LklkUmVxdWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgASfwoYR2V0Q29tcGFueVNlcnZp",
            "Y2VQYWNrRGljEicuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcu",
            "RW1wdHkaOC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21w",
            "YW55U2VydmljZVBhY2tMaXN0IgASjAEKHkdldENvbXBhbnlTZXJ2aWNlUGFj",
            "a0RpY0J5WWVhchIuLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "LlNlYXJjaFN0cnVjdBo4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LkNvbXBhbnlTZXJ2aWNlUGFja0xpc3QiABKXAQopR2V0Q29tcGFueVNl",
            "cnZpY2VQYWNrTGlzdEJ5SXNTaG93bk9uRnJvbnQSLi5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5TZWFyY2hTdHJ1Y3QaOC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55U2VydmljZVBhY2tMaXN0",
            "IgASkgEKGUdldENvbXBhbnlTZXJ2aWNlUGFja0xpc3QSOS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QYWdpbmF0aW9uUmVxdWVzdFNlYXJj",
            "aBo4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlT",
            "ZXJ2aWNlUGFja0xpc3QiABKUAQopR2V0Q29tcGFueVNlcnZpY2VQYWNrTGlz",
            "dEJ5Q29udHJhY3RUeXBlSWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5JZFJlcXVlc3QaOC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5Db21wYW55U2VydmljZVBhY2tMaXN0IgASlwEKKUdldENvbXBh",
            "bnlTZXJ2aWNlUGFja0xpc3RGb3JMdW5jaE9yRGlubmVyEi4uR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjguR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueVNlcnZpY2VQYWNr",
            "TGlzdCIAEogBChlHZXRDb21wYW55U2VydmljZVBhY2tCeUlkEisuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjwuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29tcGFueVNlcnZpY2VQYWNr",
            "Vk1TdHJ1Y3QiABKNAQocQ3JlYXRlQ29tcGFueVNlcnZpY2VQYWNrSW5mbxI8",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbXBhbnlTZXJ2",
            "aWNlUGFja1ZNU3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTW9kaWZ5UmVwbHkiABKNAQocVXBkYXRlQ29tcGFueVNlcnZpY2VQ",
            "YWNrSW5mbxI8LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNv",
            "bXBhbnlTZXJ2aWNlUGFja1ZNU3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABJ8ChxEZWxldGVDb21wYW55",
            "U2VydmljZVBhY2tCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuSWRSZXF1ZXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTW9kaWZ5UmVwbHkiABKfAQotR2V0Q29tcGFueVNlcnZpY2VQYWNr",
            "Vk1CeVBlcnNvbkNvbnRyYWN0TnVtYmVyEi4uR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjwuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuQ29tcGFueVNlcnZpY2VQYWNrVk1TdHJ1Y3Qi",
            "ABKGAQoTR2V0RXh0cmFTZXJ2aWNlTGlzdBI5LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjIuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRXh0cmFTZXJ2aWNlTGlz",
            "dCIAEnwKE0dldEV4dHJhU2VydmljZUJ5SWQSKy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5JZFJlcXVlc3QaNi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5FeHRyYVNlcnZpY2VWTVN0cnVjdCIAEoEBChZD",
            "cmVhdGVFeHRyYVNlcnZpY2VJbmZvEjYuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcuRXh0cmFTZXJ2aWNlVk1TdHJ1Y3QaLS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEoEBChZVcGRh",
            "dGVFeHRyYVNlcnZpY2VJbmZvEjYuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcuRXh0cmFTZXJ2aWNlVk1TdHJ1Y3QaLS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnYKFkRlbGV0ZUV4",
            "dHJhU2VydmljZUJ5SWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5JZFJlcXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5Nb2RpZnlSZXBseSIAEnUKFUdldFNlcnZpY2VQYWNrTGlzdEFsbBIn",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkVtcHR5GjEuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VydmljZVBhY2tMaXN0",
            "IgAShAEKIEdldFNlcnZpY2VQYWNrQnlDb25mZXJlbmNlSWRMaXN0EisuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjEuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VydmljZVBhY2tMaXN0",
            "IgAShAEKEkdldFNlcnZpY2VQYWNrTGlzdBI5LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjEuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VydmljZVBhY2tMaXN0",
            "IgASegoSR2V0U2VydmljZVBhY2tCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjUuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuU2VydmljZVBhY2tWTVN0cnVjdCIAEn8KFUNyZWF0",
            "ZVNlcnZpY2VQYWNrSW5mbxI1LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LlNlcnZpY2VQYWNrVk1TdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEn8KFVVwZGF0ZVNlcnZp",
            "Y2VQYWNrSW5mbxI1LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "LlNlcnZpY2VQYWNrVk1TdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnUKFURlbGV0ZVNlcnZpY2VQYWNr",
            "QnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVx",
            "dWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlm",
            "eVJlcGx5IgAScwoTSXNDYW5EZWxldGVBY2l0dml0eRIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBotLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LlJlc3VsdFJlcGx5IgASfQoaSXNFeGlz",
            "dFNlc3Npb25Db25mZXJlbmNkSWQSLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5TZWFyY2hTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5SZXN1bHRSZXBseSIAEoABCh1SZW1vdmVTQ0J5U2Vz",
            "c2lvbkNvbmZlcmVuY2RJZBIuLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LlNlYXJjaFN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgAScwoSR2V0Q29udHJhY3RUeXBlRGlj",
            "EicuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRW1wdHkaMi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db250cmFjdFR5cGVM",
            "aXN0IgASgAEKE0dldENvbnRyYWN0VHlwZUxpc3QSMy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5QYWdpbmF0aW9uUmVxdWVzdBoyLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbnRyYWN0VHlwZUxpc3Qi",
            "ABJ6ChNHZXRDb250cmFjdFR5cGVCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjQuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RUeXBlU3RydWN0IgASfwoWQ3JlYXRl",
            "Q29udHJhY3RUeXBlSW5mbxI0LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LkNvbnRyYWN0VHlwZVN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgASfwoWVXBkYXRlQ29udHJh",
            "Y3RUeXBlSW5mbxI0LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "LkNvbnRyYWN0VHlwZVN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgASdgoWRGVsZXRlQ29udHJhY3RUeXBl",
            "QnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVx",
            "dWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlm",
            "eVJlcGx5IgASdwoUR2V0Q0NOdW1iZXJDb25maWdEaWMSJy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5FbXB0eRo0LkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LkNDTnVtYmVyQ29uZmlnTGlzdCIAEoQBChVH",
            "ZXRDQ051bWJlckNvbmZpZ0xpc3QSMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5QYWdpbmF0aW9uUmVxdWVzdBo0LkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LkNDTnVtYmVyQ29uZmlnTGlzdCIAEn4KFUdl",
            "dENDTnVtYmVyQ29uZmlnQnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3LklkUmVxdWVzdBo2LkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlTmV3LkNDTnVtYmVyQ29uZmlnU3RydWN0IgASgwEKGENyZWF0ZUND",
            "TnVtYmVyQ29uZmlnSW5mbxI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3LkNDTnVtYmVyQ29uZmlnU3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABKDAQoYVXBkYXRlQ0NO",
            "dW1iZXJDb25maWdJbmZvEjYuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuQ0NOdW1iZXJDb25maWdTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEngKGERlbGV0ZUNDTnVt",
            "YmVyQ29uZmlnQnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3LklkUmVxdWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3Lk1vZGlmeVJlcGx5IgASjQEKC0dldERTUERMaXN0EjkuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFy",
            "Y2gaQS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5EZWxlZ2F0",
            "ZVNlcnZpY2VQYWNrRGlzY291bnRMaXN0IgAShQEKC0dldERTUERCeUlkEisu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0Gkcu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRGVsZWdhdGVTZXJ2",
            "aWNlUGFja0Rpc2NvdW50TGlzdFN0cnVjdCIAEoYBCg5DcmVhdGVEU1BESW5m",
            "bxJDLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkRlbGVnYXRl",
            "U2VydmljZVBhY2tEaXNjb3VudFN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgAShgEKDlVwZGF0ZURTUERJ",
            "bmZvEkMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRGVsZWdh",
            "dGVTZXJ2aWNlUGFja0Rpc2NvdW50U3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABJuCg5EZWxldGVEU1BE",
            "QnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVx",
            "dWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlm",
            "eVJlcGx5IgASpQEKDkdldERTUERGQ0NMaXN0EjkuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaVi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5EZWxlZ2F0ZVNlcnZp",
            "Y2VQYWNrRGlzY291bnRGb3JDb25mZXJlbmNlQ29udHJhY3RMaXN0IgASnQEK",
            "DkdldERTUERGQ0NCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuSWRSZXF1ZXN0GlwuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50Rm9yQ29uZmVyZW5j",
            "ZUNvbnRyYWN0TGlzdFN0cnVjdCIAEp4BChFDcmVhdGVEU1BERkNDSW5mbxJY",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkRlbGVnYXRlU2Vy",
            "dmljZVBhY2tEaXNjb3VudEZvckNvbmZlcmVuY2VDb250cmFjdFN0cnVjdBot",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5",
            "IgASngEKEVVwZGF0ZURTUERGQ0NJbmZvElguR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50Rm9y",
            "Q29uZmVyZW5jZUNvbnRyYWN0U3RydWN0Gi0uR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABJxChFEZWxldGVEU1BERkND",
            "QnlJZBIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVx",
            "dWVzdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlm",
            "eVJlcGx5IgASgAEKFEdldENvbnRyYWN0U3RhdHVzRGljEicuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRW1wdHkaPS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Db250cmFjdFN0YXR1c0RpY0ZvckRpY0xp",
            "c3QiABKKAQoYR2V0Q29udHJhY3RTdGF0dXNEaWNMaXN0EjMuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3QaNy5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db250cmFjdFN0YXR1",
            "c0RpY0xpc3QiABKEAQoYR2V0Q29udHJhY3RTdGF0dXNEaWNCeUlkEisuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRSZXF1ZXN0GjkuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RTdGF0dXNE",
            "aWNTdHJ1Y3QiABKJAQobQ3JlYXRlQ29udHJhY3RTdGF0dXNEaWNJbmZvEjku",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29udHJhY3RTdGF0",
            "dXNEaWNTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5Nb2RpZnlSZXBseSIAEokBChtVcGRhdGVDb250cmFjdFN0YXR1c0RpY0lu",
            "Zm8SOS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db250cmFj",
            "dFN0YXR1c0RpY1N0cnVjdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3Lk1vZGlmeVJlcGx5IgASewobRGVsZXRlQ29udHJhY3RTdGF0dXNE",
            "aWNCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSWRS",
            "ZXF1ZXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9k",
            "aWZ5UmVwbHkiABJwCgxHZXRSZW1hcmtEaWMSJy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5FbXB0eRo1LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LlJlbWFya0RpY0ZvckRpY0xpc3QiABJ6ChBHZXRSZW1h",
            "cmtEaWNMaXN0EjMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcu",
            "UGFnaW5hdGlvblJlcXVlc3QaLy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5SZW1hcmtEaWNMaXN0IgASdAoQR2V0UmVtYXJrRGljQnlJZBIr",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBox",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlJlbWFya0RpY1N0",
            "cnVjdCIAEnkKE0NyZWF0ZVJlbWFya0RpY0luZm8SMS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5SZW1hcmtEaWNTdHJ1Y3QaLS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnkKE1Vw",
            "ZGF0ZVJlbWFya0RpY0luZm8SMS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5SZW1hcmtEaWNTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnMKE0RlbGV0ZVJlbWFya0Rp",
            "Y0J5SWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JZFJl",
            "cXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2Rp",
            "ZnlSZXBseSIAEp8BCipHZXRQZXJzb25Db250cmFjdEFjdGl2aXR5TWFwQnlN",
            "ZW1iZXJQS0xpc3QSLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5TZWFyY2hTdHJ1Y3QaPy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5QZXJzb25Db250cmFjdEFjdGl2aXR5TWFwTGlzdCIAEqEBCixHZXRQ",
            "ZXJzb25Db250cmFjdEFjdGl2aXR5TWFwQnlBY3Rpdml0eUlkTGlzdBIuLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlNlYXJjaFN0cnVjdBo/",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRy",
            "YWN0QWN0aXZpdHlNYXBMaXN0IgASqwEKNkdldFBlcnNvbkNvbnRyYWN0QWN0",
            "aXZpdHlNYXBCeVBlcnNvbkNvbnRyYWN0TnVtYmVyTGlzdBIuLkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlNlYXJjaFN0cnVjdBo/LkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0QWN0",
            "aXZpdHlNYXBMaXN0IgASlwEKI0NyZWF0ZVBlcnNvbkNvbnRyYWN0QWN0aXZp",
            "dHlNYXBJbmZvEj8uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcu",
            "UGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcExpc3QaLS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEp8BCiNVcGRhdGVQ",
            "ZXJzb25Db250cmFjdEFjdGl2aXR5TWFwSW5mbxJHLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0QWN0aXZpdHlNYXBM",
            "aXN0VG9VcGRhdGUaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5Nb2RpZnlSZXBseSIAEqsBCjVHZXRBcHBseUNvbmZlcmVuY2VCeVNlc3Np",
            "b25Db25mZXJlbmNlSWRMaXN0UGFnaW5hdGlvbhI5LkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjUu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQXBwbHlDb25mZXJl",
            "bmNlTGlzdCIAEo4BCiNHZXRBcHBseUNvbmZlcmVuY2VCeU1lbWJlclBrQW5k",
            "WWVhchIuLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlNlYXJj",
            "aFN0cnVjdBo1LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkFw",
            "cGx5Q29uZmVyZW5jZUxpc3QiABKvAQo5R2V0QXBwbHlDb25mZXJlbmNlQnlT",
            "ZXNzaW9uQ29uZmVyZW5jZUlkQW5kVGFnVHlwZUNvZGVMaXN0EjkuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RT",
            "ZWFyY2gaNS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5BcHBs",
            "eUNvbmZlcmVuY2VMaXN0IgASkAEKJUdldEFwcGx5Q29uZmVyZW5jZUJ5UGVy",
            "Q29udHJhY3RJZExpc3QSLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5TZWFyY2hTdHJ1Y3QaNS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5BcHBseUNvbmZlcmVuY2VMaXN0IgASiQEKIUdldEFwcGx5Q29u",
            "ZmVyZW5jZUJ5Q29tcGFueUlkTGlzdBIrLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LklkUmVxdWVzdBo1LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LkFwcGx5Q29uZmVyZW5jZUxpc3QiABKTAQorR2V0QXBw",
            "bHlDb25mZXJlbmNlQnlTZXNzaW9uQ29uZmVyZW5jZUlkTGlzdBIrLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBo1LkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkFwcGx5Q29uZmVyZW5jZUxp",
            "c3QiABKbAQohQ3JlYXRlT3JVcGRhdGVBcHBseUNvbmZlcmVuY2VJbmZvEkUu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQXBwbHlDb25mZXJl",
            "bmNlTGlzdFRvQ3JlYXRlT3JVcGRhdGUaLS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnoKE0dldEludml0ZUxldHRl",
            "ckJ5SWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JZFJl",
            "cXVlc3QaNC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JbnZp",
            "dGVMZXR0ZXJTdHJ1Y3QiABKNAQoWQ3JlYXRlSW52aXRlTGV0dGVySW5mbxI0",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lkludml0ZUxldHRl",
            "clN0cnVjdBo7LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1v",
            "ZGlmeVJlcGx5Rm9yQ3JlYXRlT3RoZXIiABJvCg1HZXRUYWdUeXBlRGljEicu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuRW1wdHkaMy5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5UYWdUeXBlRm9yRGljTGlz",
            "dCIAEnQKEEdldFRhZ1R5cGVCeUNvZGUSLS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Db2RlUmVxdWVzdBovLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LlRhZ1R5cGVTdHJ1Y3QiABJ1ChFDcmVhdGVUYWdU",
            "eXBlSW5mbxIvLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlRh",
            "Z1R5cGVTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5l",
            "dy5Nb2RpZnlSZXBseSIAEnUKEVVwZGF0ZVRhZ1R5cGVJbmZvEi8uR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuVGFnVHlwZVN0cnVjdBotLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgAS",
            "cQoRRGVsZXRlVGFnVHlwZUJ5SWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5JZFJlcXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnUKEEdldFllYXJDb25maWdEaWMS",
            "Jy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5FbXB0eRo2Lkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlllYXJDb25maWdGb3JE",
            "aWNMaXN0IgASgAEKFEdldFllYXJDb25maWdCeUlzVXNlEi4uR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjYuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuWWVhckNvbmZpZ0ZvckRpY0xp",
            "c3QiABJ7ChRDcmVhdGVZZWFyQ29uZmlnSW5mbxIyLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlTmV3LlllYXJDb25maWdTdHJ1Y3QaLS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnsKFFVw",
            "ZGF0ZVllYXJDb25maWdJbmZvEjIuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcuWWVhckNvbmZpZ1N0cnVjdBotLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lk1vZGlmeVJlcGx5IgASjgEKF0dldENvbmZlcmVu",
            "Y2VPbnNpdGVMaXN0EjkuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaNi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNlT25zaXRlTGlzdCIAEoUBChdH",
            "ZXRDb25mZXJlbmNlT25zaXRlQnlJZBIuLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3LklkSW50UmVxdWVzdBo4LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3LkNvbmZlcmVuY2VPbnNpdGVTdHJ1Y3QiABKaAQoa",
            "Q3JlYXRlQ29uZmVyZW5jZU9uc2l0ZUluZm8SOC5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Db25mZXJlbmNlT25zaXRlU3RydWN0GkAuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHlGb3JD",
            "b25mZXJlbmNlT25zaXRlIgAShwEKGlVwZGF0ZUNvbmZlcmVuY2VPbnNpdGVJ",
            "bmZvEjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuQ29uZmVy",
            "ZW5jZU9uc2l0ZVN0cnVjdBotLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3Lk1vZGlmeVJlcGx5IgASfQoaRGVsZXRlQ29uZmVyZW5jZU9uc2l0",
            "ZUJ5SWQSLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JZElu",
            "dFJlcXVlc3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5N",
            "b2RpZnlSZXBseSIAEoIBChFHZXRJbnZpdGVDb2RlTGlzdBI5LkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBhZ2luYXRpb25SZXF1ZXN0U2Vh",
            "cmNoGjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSW52aXRl",
            "Q29kZUxpc3QiABJ7ChFHZXRJbnZpdGVDb2RlQnlJZBIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LklkUmVxdWVzdBo3LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3Lkludml0ZUNvZGVDU1BWTVN0cnVjdCIA",
            "EowBCh9HZXRJbnZpdGVDb2RlQnlJbnZpdGVDb2RlTnVtYmVyEi4uR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjcuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuSW52aXRlQ29kZUNTUFZN",
            "U3RydWN0IgASewoUQ3JlYXRlSW52aXRlQ29kZUluZm8SMi5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5JbnZpdGVDb2RlU3RydWN0Gi0uR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9kaWZ5UmVwbHkiABJ7",
            "ChRVcGRhdGVJbnZpdGVDb2RlSW5mbxIyLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3Lkludml0ZUNvZGVTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnQKFERlbGV0ZUlu",
            "dml0ZUNvZGVCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuSWRSZXF1ZXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcuTW9kaWZ5UmVwbHkiABKOAQoXR2V0SW52aXRlQ29kZVJlY29yZExpc3QS",
            "OS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QYWdpbmF0aW9u",
            "UmVxdWVzdFNlYXJjaBo2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3Lkludml0ZUNvZGVSZWNvcmRMaXN0IgASggEKF0dldEludml0ZUNvZGVS",
            "ZWNvcmRCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcu",
            "SWRSZXF1ZXN0GjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcu",
            "SW52aXRlQ29kZVJlY29yZFN0cnVjdCIAEocBChpDcmVhdGVJbnZpdGVDb2Rl",
            "UmVjb3JkSW5mbxI4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lkludml0ZUNvZGVSZWNvcmRTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEocBChpVcGRhdGVJbnZpdGVD",
            "b2RlUmVjb3JkSW5mbxI4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "TmV3Lkludml0ZUNvZGVSZWNvcmRTdHJ1Y3QaLS5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBseSIAEnoKGkRlbGV0ZUludml0",
            "ZUNvZGVSZWNvcmRCeUlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuSWRSZXF1ZXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcuTW9kaWZ5UmVwbHkiABJ1ChJDb3B5UGFja0luZm9CeVllYXISLi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5TZWFyY2hTdHJ1Y3Qa",
            "LS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Nb2RpZnlSZXBs",
            "eSIAEosBChtDcmVhdGVDb21wYW55U2VydmljZVBhY2tNYXASOy5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55U2VydmljZVBhY2tN",
            "YXBMaXN0Gi0uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcuTW9k",
            "aWZ5UmVwbHkiABKHAQoZR2V0Q29udHJhY3RTdGF0aXN0aWNzTGlzdBIuLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LlNlYXJjaFN0cnVjdBo4",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3LkNvbnRyYWN0U3Rh",
            "dGlzdGljc0xpc3QiABKTAQoySXNNYXhDb250cmFjdE51bWJlckVxdWFsc1BD",
            "Q291bnRCeUNvbXBhbnlQS0FuZFllYXISLi5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZU5ldy5TZWFyY2hTdHJ1Y3QaKy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5Cb29sUmVwbHkiABKoAQodR2V0UGVyc29uQ29u",
            "dHJhY3RMaXN0Rm9yTHVuY2gSOS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBpKLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3LlBlcnNvbkNvbnRyYWN0QW5kU2Vzc2lv",
            "bkNvbmZlcmVuY2VJZExpc3QiABKcAQonR2V0UGVyc29uQ29udHJhY3RMaXN0",
            "QW5kQXBwbHlDb25mZXJlbmNlEjkuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaNC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5QZXJzb25Db250cmFjdExpc3QiABKC",
            "AQoYRXhwb3J0UGVyc29uQ29udHJhY3RMaXN0Ei4uR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcuU2VhcmNoU3RydWN0GjQuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcuUGVyc29uQ29udHJhY3RMaXN0IgAyxCcK",
            "HENvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcSjgEKEW5ld0dldFNlcnZp",
            "Y2VQYWNrEjouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3",
            "R2V0U2VydmljZVBhY2tSZXF1ZXN0GjsuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcubmV3R2V0U2VydmljZVBhY2tSZXNwb25zZSIAEoYBChVu",
            "ZXdBZGRDb21wYW55Q29udHJhY3QSNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdTZXJ2aWNlUGFja1N0cnVjdBozLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm1vZGlmeVJlc3BvbnNlTmV3IgASlgEK",
            "HW5ld0FkZENvbXBhbnlDb250cmFjdERpc2NvdW50Ej4uR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcubmV3U2VydmljZVBhY2tTdHJ1Y3REaXNj",
            "b3VudBozLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm1vZGlm",
            "eVJlc3BvbnNlTmV3IgASjwEKF25ld01lcmdlQ29tcGFueUNvbnRyYWN0EkAu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3TWVyZ2VDb21w",
            "YW55Q29udHJhY3RSZXF1ZXN0GjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2VOZXcubW9kaWZ5UmVzcG9uc2UiABKXAQofbmV3TWVyZ2VDb21wYW55",
            "Q29udHJhY3REaXNjb3VudBJALkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3Lm5ld01lcmdlQ29tcGFueUNvbnRyYWN0UmVxdWVzdBowLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm1vZGlmeVJlc3BvbnNlIgAS",
            "iQEKFG5ld0FkZFBlcnNvbkNvbnRyYWN0Ej0uR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcubmV3QWRkUGVyc29uQ29udHJhY3RSZXF1ZXN0GjAu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubW9kaWZ5UmVzcG9u",
            "c2UiABKxAQoobmV3QWRkUGVyc29uQ29udHJhY3RVbmRlckNvbXBhbnlDb250",
            "cmFjdBJRLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0Fk",
            "ZFBlcnNvbkNvbnRyYWN0VW5kZXJDb21wYW55Q29udHJhY3RSZXF1ZXN0GjAu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubW9kaWZ5UmVzcG9u",
            "c2UiABKXAQoUbmV3R2V0Q29uZmVyZW5jZUluZm8SPS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRDb25mZXJlbmNlSW5mb1JlcXVl",
            "c3QaPi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRD",
            "b25mZXJlbmNlSW5mb1Jlc3BvbnNlIgASwQEKIm5ld0dldE93bmVyQnlDb25m",
            "SWRBbmRDb21JZEFuZFllYXISSy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5uZXdHZXRPd25lckJ5Q29uZklkQW5kQ29tSWRBbmRZZWFyUmVx",
            "dWVzdBpMLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dl",
            "dE93bmVyQnlDb25mSWRBbmRDb21JZEFuZFllYXJSZXNwb25zZSIAEq8BChxu",
            "ZXdHZXRDb25mZXJlbmNlQ29udHJhY3RMaXN0EkUuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29uZmVyZW5jZUNvbnRyYWN0TGlz",
            "dFJlcXVlc3QaRi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5u",
            "ZXdHZXRDb25mZXJlbmNlQ29udHJhY3RMaXN0UmVzcG9uc2UiABKmAQoZbmV3",
            "R2V0Q29tcGFueUNvbnRyYWN0TGlzdBJCLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlTmV3Lm5ld0dldENvbXBhbnlDb250cmFjdExpc3RSZXF1ZXN0",
            "GkMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29t",
            "cGFueUNvbnRyYWN0TGlzdFJlc3BvbnNlIgASpAEKKW5ld0dldENvbXBhbnlD",
            "b250cmF0Y0xpc3RCeUlzSGF2ZURpc2NvdW50EjAuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2VOZXcubmV3Qm9vbFJlcXVlc3QaQy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRDb21wYW55Q29udHJhY3RM",
            "aXN0UmVzcG9uc2UiABKlAQoqbmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdEJ5",
            "SXNOb3RGdWxsUGVyc29uEjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2VOZXcubmV3Qm9vbFJlcXVlc3QaQy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdHZXRDb21wYW55Q29udHJhY3RMaXN0UmVzcG9uc2Ui",
            "ABK+AQohbmV3R2V0Q29tcGFueUNvbnRyYWN0TGlzdERpc2NvdW50EkouR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29tcGFueUNv",
            "bnRyYWN0TGlzdERpc2NvdW50UmVxdWVzdBpLLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lm5ld0dldENvbXBhbnlDb250cmFjdExpc3REaXNj",
            "b3VudFJlc3BvbnNlIgASqQEKJG5ld01vZGlmeU93bmVyQnlDb25mZXJlbmNl",
            "Q29udHJhY3RJZBJNLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "Lm5ld01vZGlmeU93bmVyQnlDb25mZXJlbmNlQ29udHJhY3RJZFJlcXVlc3Qa",
            "MC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5tb2RpZnlSZXNw",
            "b25zZSIAEqMBChhuZXdHZXRQZXJzb25Db250cmFjdExpc3QSQS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRQZXJzb25Db250cmFj",
            "dExpc3RSZXF1ZXN0GkIuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcubmV3R2V0UGVyc29uQ29udHJhY3RMaXN0UmVzcG9uc2UiABKXAQoUbmV3",
            "R2V0TXlTcGVha2Vyc0xpc3QSPS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZU5ldy5uZXdHZXRNeVNwZWFrZXJzTGlzdFJlcXVlc3QaPi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRNeVNwZWFrZXJzTGlz",
            "dFJlc3BvbnNlIgASxQEKMm5ld0NyZWF0ZVBlcnNvbkNvbnRyYWN0QnlDb21w",
            "YW55Q29udHJhY3RJbnZpdGVDb2RlElsuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcubmV3Q3JlYXRlUGVyc29uQ29udHJhY3RCeUNvbXBhbnlD",
            "b250cmFjdEludml0ZUNvZGVSZXF1ZXN0GjAuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcubW9kaWZ5UmVzcG9uc2UiABKnAQojbmV3Q3JlYXRl",
            "UGVyc29uQ29udHJhY3RCeUludml0ZUNvZGUSTC5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZU5ldy5uZXdDcmVhdGVQZXJzb25Db250cmFjdEJ5SW52",
            "aXRlQ29kZVJlcXVlc3QaMC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5tb2RpZnlSZXNwb25zZSIAEsEBCiduZXdHZXRQZXJzb25Db250cmFj",
            "dExpc3RCeUNvbUNvbnRyYXRjSWQSUC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdHZXRQZXJzb25Db250cmFjdExpc3RCeUNvbUNvbnRy",
            "YXRjSWRSZXF1ZXN0GkIuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcubmV3R2V0UGVyc29uQ29udHJhY3RMaXN0UmVzcG9uc2UiABKsAQo6bmV3",
            "TW9kaWZ5UGFydGljaXBhbnRCeUFic3RyYWN0UGFydGljaXBhbnRQZXJDb250",
            "cmFjdE51bWJlchI6LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3",
            "LlBlckNvbnRyYWN0TnVtYmVyUmVxdWVzdBowLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lm1vZGlmeVJlc3BvbnNlIgASrwEKHG5ld0dldENv",
            "bWFwbnlTZXJ2aWNlUGFja1R5cGUSRS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdHZXRDb21hcG55U2VydmljZVBhY2tUeXBlUmVxdWVz",
            "dBpGLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dldENv",
            "bWFwbnlTZXJ2aWNlUGFja1R5cGVSZXNwb25zZSIAEpYBChhuZXdHZXRQZXJz",
            "b25SZXBvcnROb3RpY2USOy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZU5ldy5uZXdHZXRSZXBvcnROb3RpY2VSZXF1ZXN0GjsuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2VOZXcubmV3R2V0UmVwb3J0Tm90aWNSZXNwb25z",
            "ZSIAEp8BChpuZXdHZXRDb21wYW55Q29udHJhY3RMaXN0MRI+LkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dldFNlcnZpY2VQYWNrTGlz",
            "dFJlcXVlc3QaPy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5u",
            "ZXdHZXRTZXJ2aWNlUGFja0xpc3RSZXNwb25zZSIAEpIBCh5uZXdHZXRDb21w",
            "YW55SW5mb0J5Q29tcGFueU5hbWUSNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdDb21wYW55TmFtZVJlcXVlc3QaNS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZU5ldy5Db21wYW55SW5mb1Jlc3BvbnNlIgAS",
            "mgEKFW5ld0dldFNlcnZpY2VQYWNrTGlzdBI+LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlTmV3Lm5ld0dldFNlcnZpY2VQYWNrTGlzdFJlcXVlc3Qa",
            "Py5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5uZXdHZXRTZXJ2",
            "aWNlUGFja0xpc3RSZXNwb25zZSIAEtwBCituZXdHZXRDb21wYW55Tm90aWNl",
            "T2ZSZXBvcnRCeUNvbnRyYWN0TnVtYmVyElQuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2VOZXcubmV3R2V0Q29tcGFueU5vdGljZU9mUmVwb3J0QnlD",
            "b250cmFjdE51bWJlclJlcXVlc3QaVS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZU5ldy5uZXdHZXRDb21wYW55Tm90aWNlT2ZSZXBvcnRCeUNvbnRy",
            "YWN0TnVtYmVyUmVzcG9uc2UiABLZAQoqbmV3R2V0UGVyc29uTm90aWNlT2ZS",
            "ZXBvcnRCeUNvbnRyYWN0TnVtYmVyElMuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2VOZXcubmV3R2V0UGVyc29uTm90aWNlT2ZSZXBvcnRCeUNvbnRy",
            "YWN0TnVtYmVyUmVxdWVzdBpULkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlTmV3Lm5ld0dldFBlcnNvbk5vdGljZU9mUmVwb3J0QnlDb250cmFjdE51",
            "bWJlclJlc3BvbnNlIgASkQEKEm5ld0dldFNjaGVkdWxlTGlzdBI7LkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlTmV3Lm5ld0dldFNjaGVkdWxlTGlz",
            "dFJlcXVlc3QaPC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZU5ldy5u",
            "ZXdHZXRTY2hlZHVsZUxpc3RSZXNwb25zZSIAEn0KDm5ld0FkZFNjaGVkdWxl",
            "EjcuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VOZXcubmV3QWRkU2No",
            "ZWR1bGVSZXF1ZXN0GjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VO",
            "ZXcubW9kaWZ5UmVzcG9uc2UiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Empty), global::GrpcConferenceContractServiceNew.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.IdRequest), global::GrpcConferenceContractServiceNew.IdRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.IdIntRequest), global::GrpcConferenceContractServiceNew.IdIntRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.IdsRequest), global::GrpcConferenceContractServiceNew.IdsRequest.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CodeRequest), global::GrpcConferenceContractServiceNew.CodeRequest.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PaginationRequest), global::GrpcConferenceContractServiceNew.PaginationRequest.Parser, new[]{ "Id", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PaginationRequestSearch), global::GrpcConferenceContractServiceNew.PaginationRequestSearch.Parser, new[]{ "Id", "Offset", "Limit", "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.SearchStruct), global::GrpcConferenceContractServiceNew.SearchStruct.Parser, new[]{ "ComNameTranslation", "ComContractNumber", "ContractTypeId", "ConferenceId", "CcIsdelete", "Translation", "PerContractNumber", "MemTranslation", "PcIsdelete", "ContractId", "IsDiscount", "IsCheckIn", "IsVerify", "IsDelete", "ExtraContractNumber", "MemberPK", "ActivityId", "Year", "IsFillPC", "IsConfirm", "Owerid", "CTypeCode", "CompanyServicePackId", "IsContractTypeWithECode", "SessionConferenceId", "CompanyId", "ComPrice", "ContractStatusCode", "IsGive", "IsUse", "Orderings", "TagtypeCode", "IsNowYear", "ContractCode", "IsOwer", "ConferenceName", "ConferenceContractId", "ModifyPermission", "EnterpriseType", "ContractNumber", "CompanyName", "ExTypeCode", "UserName", "WebSite", "IsFullUseInviteCode", "IsNotFullUseInviteCode", "InviteCodeNumber", "InviteCodeId", "IsPrint", "IsVerifyGive", "PerContractId", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ConferenceContractCidList), global::GrpcConferenceContractServiceNew.ConferenceContractCidList.Parser, new[]{ "Cidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractPidList), global::GrpcConferenceContractServiceNew.PersonContractPidList.Parser, new[]{ "Pidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractPCNoRequest), global::GrpcConferenceContractServiceNew.PersonContractPCNoRequest.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct), global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct.Parser, new[]{ "PerContractNumber", "Comfirmed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyContractCidList), global::GrpcConferenceContractServiceNew.CompanyContractCidList.Parser, new[]{ "Cidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ConferenceContractList), global::GrpcConferenceContractServiceNew.ConferenceContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyContractList), global::GrpcConferenceContractServiceNew.CompanyContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractList), global::GrpcConferenceContractServiceNew.PersonContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackList), global::GrpcConferenceContractServiceNew.CompanyServicePackList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ExtraServiceList), global::GrpcConferenceContractServiceNew.ExtraServiceList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ServicePackList), global::GrpcConferenceContractServiceNew.ServicePackList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CCNumberConfigList), global::GrpcConferenceContractServiceNew.CCNumberConfigList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractTypeList), global::GrpcConferenceContractServiceNew.ContractTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountList), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractList), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ConferenceOnsiteList), global::GrpcConferenceContractServiceNew.ConferenceOnsiteList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteCodeList), global::GrpcConferenceContractServiceNew.InviteCodeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteCodeRecordList), global::GrpcConferenceContractServiceNew.InviteCodeRecordList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdList), global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdList.Parser, new[]{ "Listdata", "Total", "AllTotal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractActivityMapList), global::GrpcConferenceContractServiceNew.PersonContractActivityMapList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackMapList), global::GrpcConferenceContractServiceNew.CompanyServicePackMapList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractStatisticsList), global::GrpcConferenceContractServiceNew.ContractStatisticsList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractActivityMapListToUpdate), global::GrpcConferenceContractServiceNew.PersonContractActivityMapListToUpdate.Parser, new[]{ "MemberPK", "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ConferenceContractStruct), global::GrpcConferenceContractServiceNew.ConferenceContractStruct.Parser, new[]{ "ConferenceContractId", "CompanyId", "ComNameTranslation", "ContractNumber", "ContractCode", "IsDelete", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Clistdata", "ContractYear", "Dlistdata", "ConferenceId", "AlternativeContractNumber", "ContractStatusCode", "PaymentStatusCode", "IsSendEmail", "IsModify", "ModifyPermission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyContractStruct), global::GrpcConferenceContractServiceNew.CompanyContractStruct.Parser, new[]{ "ContractId", "CompanyServicePackId", "CompanyId", "ComNameTranslation", "ComContractNumber", "Country", "AddressTranslation", "MaxContractNumber", "CCIsdelete", "EnterpriseType", "IsVerify", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "CompanyServicePack", "Dlistdata", "ContractCode", "ConferenceId", "ConferenceName", "IsCheckIn", "PPTUrl", "ContractStatusCode", "ConferenceContractId", "Plistdata", "ComPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractStruct), global::GrpcConferenceContractServiceNew.PersonContractStruct.Parser, new[]{ "PersonContractId", "ContractId", "PerContractNumber", "MemberPK", "MemTranslation", "PCIsdelete", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Owerid", "Ower", "ConferenceContractId", "CTypeCode", "CompanyContract", "IsCheckIn", "IsSendEmail", "IsModify", "ConferenceId", "IsFianceRecord", "IsInviteCode", "InviteCodeId", "IsCommitAbstract", "IsPrint", "PaidAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackStruct), global::GrpcConferenceContractServiceNew.CompanyServicePackStruct.Parser, new[]{ "CompanyServicePackId", "ContractTypeId", "Sort", "Translation", "PriceRMB", "PriceUSD", "IsShownOnFront", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "RemarkTranslation", "ConferenceId", "ConferenceName", "IsSpeaker", "CTypeCode", "IsGive", "Year", "RemarkCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackVMStruct), global::GrpcConferenceContractServiceNew.CompanyServicePackVMStruct.Parser, new[]{ "CompanyServicePack", "ServicepackListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ExtraServiceVMStruct), global::GrpcConferenceContractServiceNew.ExtraServiceVMStruct.Parser, new[]{ "ExtraService", "ServicepackListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ServicePackVMStruct), global::GrpcConferenceContractServiceNew.ServicePackVMStruct.Parser, new[]{ "ServicePack", "ActivityListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ExtraServiceStruct), global::GrpcConferenceContractServiceNew.ExtraServiceStruct.Parser, new[]{ "ExtraServiceId", "ExtraContractNumber", "MemberPK", "MemTranslation", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ServicePackStruct), global::GrpcConferenceContractServiceNew.ServicePackStruct.Parser, new[]{ "ServicePackId", "Translation", "PriceRMB", "PriceUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "ConferenceId", "ConferenceName", "SessionConferenceId", "SessionConferenceName", "SessionDate", "SessionStartTime", "ThirdSessionConferenceId", "ThirdSessionConferenceName", "SessionAddress", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ActivityStruct), global::GrpcConferenceContractServiceNew.ActivityStruct.Parser, new[]{ "ActivityId", "ActivityName", "SessionConferenceID", "SessionConferenceName", "Sort", "SessionIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CCNumberConfigStruct), global::GrpcConferenceContractServiceNew.CCNumberConfigStruct.Parser, new[]{ "Id", "Prefix", "Year", "CNano", "Count", "Status", "IsDelete", "ConferenceId", "ConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractTypeStruct), global::GrpcConferenceContractServiceNew.ContractTypeStruct.Parser, new[]{ "ContractTypeId", "Sort", "Translation", "CTypeCode", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "IsSpeaker", "IsGive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct.Parser, new[]{ "DiscountId", "CompanyContract", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct.Parser, new[]{ "DiscountId", "ConferenceContract", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct.Parser, new[]{ "DiscountId", "ConferenceContractId", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct), global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct.Parser, new[]{ "DiscountId", "ContractId", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.TranslationStruct), global::GrpcConferenceContractServiceNew.TranslationStruct.Parser, new[]{ "CN", "EN", "JP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ComNameTranslationStruct), global::GrpcConferenceContractServiceNew.ComNameTranslationStruct.Parser, new[]{ "CompanyCN", "CompanyEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.AddressTranslationStruct), global::GrpcConferenceContractServiceNew.AddressTranslationStruct.Parser, new[]{ "AddressCN", "AddressEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.MemTranslationStruct), global::GrpcConferenceContractServiceNew.MemTranslationStruct.Parser, new[]{ "MemberCN", "MemberEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ModifyRequest), global::GrpcConferenceContractServiceNew.ModifyRequest.Parser, new[]{ "Id", "IsCheckIn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ModifyReply), global::GrpcConferenceContractServiceNew.ModifyReply.Parser, new[]{ "Success", "ModifiedCount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ModifyReplyForConferenceOnsite), global::GrpcConferenceContractServiceNew.ModifyReplyForConferenceOnsite.Parser, new[]{ "Success", "ModifiedCount", "Msg", "ConferenceOnsite" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ResultReply), global::GrpcConferenceContractServiceNew.ResultReply.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractStatusDicForDicList), global::GrpcConferenceContractServiceNew.ContractStatusDicForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.RemarkDicForDicList), global::GrpcConferenceContractServiceNew.RemarkDicForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.TagTypeForDicList), global::GrpcConferenceContractServiceNew.TagTypeForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.YearConfigForDicList), global::GrpcConferenceContractServiceNew.YearConfigForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractStatusDicList), global::GrpcConferenceContractServiceNew.ContractStatusDicList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.RemarkDicList), global::GrpcConferenceContractServiceNew.RemarkDicList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractStatusDicStruct), global::GrpcConferenceContractServiceNew.ContractStatusDicStruct.Parser, new[]{ "Id", "StatusName", "StatusCode", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.RemarkDicStruct), global::GrpcConferenceContractServiceNew.RemarkDicStruct.Parser, new[]{ "Id", "ContentCn", "ContentEn", "ContentJp", "ContentCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ModifyReplyForCreateOther), global::GrpcConferenceContractServiceNew.ModifyReplyForCreateOther.Parser, new[]{ "Success", "ModifiedCount", "Msg", "Ext1", "Ext2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct), global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct.Parser, new[]{ "MapId", "MemberPK", "ActivityId", "ActivityName", "Year", "IsConfirm", "IsCheck", "PersonContractId", "SessionConferenceId", "SessionConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackMapStruct), global::GrpcConferenceContractServiceNew.CompanyServicePackMapStruct.Parser, new[]{ "Id", "CompanyServicePackId", "ServicePackId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct), global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct.Parser, new[]{ "MapId", "CompanyServicePackId", "ServicePackId", "ConferenceId", "ConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ApplyConferenceList), global::GrpcConferenceContractServiceNew.ApplyConferenceList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ApplyConferenceStruct), global::GrpcConferenceContractServiceNew.ApplyConferenceStruct.Parser, new[]{ "Id", "PersonContractId", "MemberPK", "SessionConferenceId", "IsConfirm", "CompanyId", "TagTypeCodes", "RemarkTranslation", "Year", "SessionConferenceIds", "IsParticularConf", "Owerid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct), global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct.Parser, new[]{ "Id", "ContractNumber", "CompanyName", "Currency", "PayType", "Credited", "AddDate", "Cost", "Remark", "ContractYear", "CompanyServicePackId", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "UserName", "CompanyServicePackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct), global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct.Parser, new[]{ "CompanyContract", "PersonContract", "SessionConferenceIds", "CompanyServicePackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ApplyConferenceListToCreateOrUpdate), global::GrpcConferenceContractServiceNew.ApplyConferenceListToCreateOrUpdate.Parser, new[]{ "PersonContractId", "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteLetterStruct), global::GrpcConferenceContractServiceNew.InviteLetterStruct.Parser, new[]{ "Id", "Company", "EHall", "ENo", "Profile", "EAcitvity", "Language", "CreatedOn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteCodeStruct), global::GrpcConferenceContractServiceNew.InviteCodeStruct.Parser, new[]{ "Id", "InviteCodeNumber", "CompanyServicePackId", "Count", "Year", "WebSite", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct), global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct.Parser, new[]{ "InviteCode", "CompanyServicePack", "InviteRecordCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct), global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct.Parser, new[]{ "Id", "InviteCodeId", "MemberPK", "MemberName", "UseDate", "PersonContractId", "PersonContractNumber", "IsDelete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.TagTypeStruct), global::GrpcConferenceContractServiceNew.TagTypeStruct.Parser, new[]{ "Id", "NameTranslation", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.YearConfigStruct), global::GrpcConferenceContractServiceNew.YearConfigStruct.Parser, new[]{ "Id", "Year", "IsUse", "Date" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CheckInRequest), global::GrpcConferenceContractServiceNew.CheckInRequest.Parser, new[]{ "Ids", "IsCheckIn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ContractStatisticsStruct), global::GrpcConferenceContractServiceNew.ContractStatisticsStruct.Parser, new[]{ "CompanyServicePackId", "CompanyServicePackName", "PersonCount", "MaxContractNumberSum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.ModifyCCPCOwerInfoStruct), global::GrpcConferenceContractServiceNew.ModifyCCPCOwerInfoStruct.Parser, new[]{ "ContractId", "Owerid", "Ower", "MaxContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.BoolReply), global::GrpcConferenceContractServiceNew.BoolReply.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.modifyResponse), global::GrpcConferenceContractServiceNew.modifyResponse.Parser, new[]{ "IsSuccess", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newServicePackStruct), global::GrpcConferenceContractServiceNew.newServicePackStruct.Parser, new[]{ "ContractId", "ConferenceContractId", "CompanyServicePackId", "ConferenceId", "CompanyId", "ComNameTranslation", "ComContractNumber", "Country", "AddressTranslation", "ComPrice", "MaxContractNumber", "MaxContractNumberSatUse", "CCIsdelete", "EnterpriseType", "IsVerify", "Owerid", "Ower", "ContractCode", "IsCheckIn", "PPTUrl", "ContractStatusCode", "ConferenceName", "OtherOwnerId", "OtherOwner", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "Year", "CompanyServicePackCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newServicePackStructDiscount), global::GrpcConferenceContractServiceNew.newServicePackStructDiscount.Parser, new[]{ "Model", "Discount", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newPersonContractStruct), global::GrpcConferenceContractServiceNew.newPersonContractStruct.Parser, new[]{ "PersonContractId", "ContractId", "ConferenceId", "MemberPK", "MemTranslation", "PCIsdelete", "CTypeCode", "IsCheckIn", "IsSendEmail", "IsModify", "IsFianceRecord", "InviteCodeId", "IsInviteCode", "IsCommitAbstract", "IsPrint", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModifiedOn", "ModefieldBy", "CompanyServicePackId", "ConferenceContractId", "PerPrice", "PaidAmount", "OtherOwnerId", "OtherOwner", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newAddPersonContractRequest), global::GrpcConferenceContractServiceNew.newAddPersonContractRequest.Parser, new[]{ "Person", "CompanyContractModel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newAddPersonContractUnderCompanyContractRequest), global::GrpcConferenceContractServiceNew.newAddPersonContractUnderCompanyContractRequest.Parser, new[]{ "Person", "Year", "CompanyContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newCreatePersonContractByCompanyContractInviteCodeRequest), global::GrpcConferenceContractServiceNew.newCreatePersonContractByCompanyContractInviteCodeRequest.Parser, new[]{ "Person", "CompanyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newCreatePersonContractByInviteCodeRequest), global::GrpcConferenceContractServiceNew.newCreatePersonContractByInviteCodeRequest.Parser, new[]{ "Person", "InviteCode", "WebSite", "CompanyContractModel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyNameRequest), global::GrpcConferenceContractServiceNew.CompanyNameRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.CompanyInfoResponse), global::GrpcConferenceContractServiceNew.CompanyInfoResponse.Parser, new[]{ "CompnyName", "CompanyNameEn", "CompanyNameJp", "Email", "CompanyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackListRequest), global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch), global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch.Parser, new[]{ "Year", "ConferenceId", "ServicePackId", "CompanyName", "ContractNumber", "Owner", "IsDiscount", "IsMaxCount" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackListStruct), global::GrpcConferenceContractServiceNew.newGetServicePackListStruct.Parser, new[]{ "ContractNumber", "CompanyNameCn", "CompanyNameEn", "EnterpriseType", "ServicePack", "Pay", "ContractCount", "FilledContractCount", "Owner", "InviteCode", "ContractStatus", "CreatedBy", "CreatedOn", "ModifiyBy", "ModifyOn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackListResponse), global::GrpcConferenceContractServiceNew.newGetServicePackListResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest), global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch), global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch.Parser, new[]{ "Year", "ConferenceId", "CompanyName", "ContractNumber", "OwnerId", "CompanyServicePackId", "Orderings", "IsGive" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest), global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch), global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch.Parser, new[]{ "Year", "ConferenceId", "CompanyName", "ContractNumber", "Name", "OwnerId", "Orderings" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct), global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct.Parser, new[]{ "ContractNumber", "PerContractName", "PerParticipantTypeTranslation", "Name", "CompanyTranslation", "Position", "Mobile", "Email", "Owner", "OwnerId", "OtherOwner", "OtherOwnerId", "IsAdd", "CreatedBy", "CreatedOn", "ModifiyBy", "ModifyOn", "MemberPK", "EnterpriseType", "ConferenceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetMySpeakersListResponse), global::GrpcConferenceContractServiceNew.newGetMySpeakersListResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newBoolRequest), global::GrpcConferenceContractServiceNew.newBoolRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch), global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch.Parser, new[]{ "Check", "Year", "Orderings", "IsGive", "OwnerId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct), global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct.Parser, new[]{ "ContractNumber", "CompanyNameTranslation", "EnterpriseType", "Pay", "ComServicePackTranslation", "Year", "MaxContractNumber", "Owner", "FilledContractCount", "ContractStatus", "CreatedBy", "CreatedOn", "ModifiyBy", "ModifyOn", "IsGive", "OwnerId", "OtherOwner", "OtherOwnerId", "ComPrice", "ComapnyId", "OriginPrice", "ContractStateName", "DiscountId", "ContractId", "PriceAfterDiscountUSD", "PriceAfterDiscountRMB" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest), global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch), global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch.Parser, new[]{ "ConferenceId", "CompanyTranslation", "Year", "ContractNumber" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct), global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct.Parser, new[]{ "ContractNumber", "CompanyTranslation", "Price", "PriceDiscount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountResponse), global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyContractListResponse), global::GrpcConferenceContractServiceNew.newGetCompanyContractListResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest), global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch), global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch.Parser, new[]{ "Year", "ConferenceId", "ServicePackId", "CompanyName", "ContractNumber", "OwnerId", "Name", "Email", "Orderings", "IsGive" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest), global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch), global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch.Parser, new[]{ "ComContractId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.PerContractNumberRequest), global::GrpcConferenceContractServiceNew.PerContractNumberRequest.Parser, new[]{ "PerContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetComapnyServicePackTypeRequest), global::GrpcConferenceContractServiceNew.newGetComapnyServicePackTypeRequest.Parser, new[]{ "Year", "ConferenceId", "MemberPK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetComapnyServicePackTypeResponse), global::GrpcConferenceContractServiceNew.newGetComapnyServicePackTypeResponse.Parser, new[]{ "IsSpeaker", "Name", "ContractNumer", "ComServicePackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetReportNoticeRequest), global::GrpcConferenceContractServiceNew.newGetReportNoticeRequest.Parser, new[]{ "PerContractNumber", "Year", "ConferenceId", "MemberPK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct), global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct.Parser, new[]{ "TalkTimeRange", "TalkTranslation", "CFTopicName", "ParticipantTypeTranslation", "ParticipantNameTranslation", "AppellationTranslation", "JobTranslation", "CompanyTranslation", "CountryTranslation", "Sort" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct), global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct.Parser, new[]{ "ActivityTranslation", "ActivityTimeRange", "Sort", "ParticipantTypeTranslation", "ParticipantNameTranslation", "AppellationTranslation", "JobTranslation", "CompanyTranslation", "CountryTranslation", "TalkAndParticipateList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewCalendarStruct), global::GrpcConferenceContractServiceNew.NewCalendarStruct.Parser, new[]{ "SessionConferenceId", "SessionConferenceName", "IsConfirm", "TagTypeCodes", "TagTypeName", "RemarkTranslation", "IsParticularConf", "Date", "Time", "Address", "IsInsidePackage", "IsChecked", "ActivityAndParticipateList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct), global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct.Parser, new[]{ "PersonContractId", "PerContractNumber", "MemberPK", "MemTranslation", "MemEmail", "CompanyNameTranslation", "ComServicePackTranslation", "PerPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.OwnerInfo), global::GrpcConferenceContractServiceNew.OwnerInfo.Parser, new[]{ "Name", "Tel", "Email", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetReportNoticResponse), global::GrpcConferenceContractServiceNew.newGetReportNoticResponse.Parser, new[]{ "Person", "Calendar", "Owner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct), global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct.Parser, new[]{ "ContractNumber", "MemNameTranslation", "CompanyNameTranslation", "Position", "Email", "Mobile", "ComServicePackTranslation", "Pay", "Paid", "Owner", "IsSendEmail", "IsPrint", "CreatedBy", "CreatedOn", "ModifiyBy", "ModifyOn", "MemberPK" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonContractListResponse), global::GrpcConferenceContractServiceNew.newGetPersonContractListResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newModifyOwnerByConferenceContractIdRequest), global::GrpcConferenceContractServiceNew.newModifyOwnerByConferenceContractIdRequest.Parser, new[]{ "ConferenceContractId", "OwnerId", "Owner", "OtherOwnerId", "OtherOwner", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetScheduleListRequest), global::GrpcConferenceContractServiceNew.newGetScheduleListRequest.Parser, new[]{ "PersonContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetScheduleListResponse), global::GrpcConferenceContractServiceNew.newGetScheduleListResponse.Parser, new[]{ "PersonContractId", "PersonContractNumber", "ServicePack", "Name", "Title", "Positin", "Mobile", "Email", "CompanyName", "ActivityName", "ActivityVune", "ActivityTime", "Owner", "OwnerEmail", "OwnerMobile", "OwnerAddress", "CrteatedOn", "CreatedBy", "ModifyOn", "ModifyBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newAddScheduleRequest), global::GrpcConferenceContractServiceNew.newAddScheduleRequest.Parser, new[]{ "PersonContractId", "PersonContractNumber", "ServicePack", "Name", "Title", "Positin", "Mobile", "Email", "CompanyName", "ActivityName", "ActivityVune", "ActivityTime", "Owner", "OwnerEmail", "OwnerMobile", "OwnerAddress", "CrteatedOn", "CreatedBy", "ModifyOn", "ModifyBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyNoticeOfReportByContractNumberRequest), global::GrpcConferenceContractServiceNew.newGetCompanyNoticeOfReportByContractNumberRequest.Parser, new[]{ "ContractNumber", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewConferenceStruct), global::GrpcConferenceContractServiceNew.NewConferenceStruct.Parser, new[]{ "ConferenceID", "ParentID", "Translation", "CFAddressPK", "StartDate", "StartDateTime", "Year", "Sort", "Abbreviation", "ConferenceIntroduce", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "Level", "TimeRange", "ShowOnFront", "CFAddress", "ApplySearch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewCFAddressStruct), global::GrpcConferenceContractServiceNew.NewCFAddressStruct.Parser, new[]{ "CFAddressPK", "Translation", "PostCode", "Country", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct), global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct.Parser, new[]{ "Id", "PersonContractId", "MemberPK", "SessionConferenceId", "IsConfirm", "CompanyId", "TagTypeCodes", "RemarkTranslation", "Year", "SessionConferenceIds", "IsParticularConf", "Owerid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewCompanyContractStruct), global::GrpcConferenceContractServiceNew.NewCompanyContractStruct.Parser, new[]{ "ContractId", "CompanyServicePackId", "CompanyId", "ComNameTranslation", "ComContractNumber", "Country", "AddressTranslation", "MaxContractNumber", "CCIsdelete", "EnterpriseType", "IsVerify", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "CompanyServicePack", "Dlistdata", "ContractCode", "ConferenceId", "ConferenceName", "IsCheckIn", "PPTUrl", "ContractStatusCode", "ConferenceContractId", "Plistdata", "ComPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct), global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct.Parser, new[]{ "CompanyServicePackId", "ContractTypeId", "Sort", "Translation", "PriceRMB", "PriceUSD", "IsShownOnFront", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "RemarkTranslation", "ConferenceId", "ConferenceName", "IsSpeaker", "CTypeCode", "IsGive", "Year", "RemarkCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewServicePackStruct), global::GrpcConferenceContractServiceNew.NewServicePackStruct.Parser, new[]{ "ServicePackId", "Translation", "PriceRMB", "PriceUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "ConferenceId", "ConferenceName", "SessionConferenceId", "SessionConferenceName", "SessionDate", "SessionStartTime", "ThirdSessionConferenceId", "ThirdSessionConferenceName", "SessionAddress", "Year", "CompanyServicePackCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewActivityStruct), global::GrpcConferenceContractServiceNew.NewActivityStruct.Parser, new[]{ "ActivityId", "ActivityName", "SessionConferenceID", "SessionConferenceName", "Sort", "SessionIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewCompanyStruct), global::GrpcConferenceContractServiceNew.NewCompanyStruct.Parser, new[]{ "CompanyPK", "CompanyTypePK", "IndustryTypePK", "MemberPK", "ComNameCn", "ComNameEn", "ComAreaDetail", "ComContactEmail", "ComPostCode", "ComFax", "ComTel", "ComWebSite", "ComClient", "ComNature", "ComLang", "ComRemark", "ComIsDelete", "ComIsVerify", "ComIsWebSite", "ComAddress", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewMemberStruct), global::GrpcConferenceContractServiceNew.NewMemberStruct.Parser, new[]{ "MemberPK", "SourcePK", "MemNameCn", "MemNameEn", "MemEmail", "MemPassword", "MemType", "MemGender", "MemDepartment", "MemTitle", "MemPosition", "MemProTitle", "MemQQ", "MemFax", "MemMSN", "MemMobile", "MemTel", "MemPostCode", "MemLastLoginTime", "MemAddress", "MemAddressDetail", "MemIsDelete", "MemIsActivation", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "CompanyPK", "MemCountryNameCn", "MemCountryNameEn", "MemCompany", "AssistantName", "AssistantPosition", "AssistantMobile", "AssistantEmail" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewParticipantStruct), global::GrpcConferenceContractServiceNew.NewParticipantStruct.Parser, new[]{ "ParticipantID", "ParticipantNameTranslation", "IMGSRC", "CompanyTranslation", "JobTranslation", "CountryTranslation", "Email", "Mobile", "IntroduceTranslation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "PersonContractID", "PerContractNumber", "IsDelete", "Sort", "Owerid", "Ower", "AppellationTranslation", "CompanyId", "ConfirmPPT", "MemberPK", "ShowOnFont", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewActivityStruct1), global::GrpcConferenceContractServiceNew.NewActivityStruct1.Parser, new[]{ "ActivityID", "ConferenceID", "ActivityTypeID", "TimeLength", "Sort", "StartDate", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "StartTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewTalkStruct), global::GrpcConferenceContractServiceNew.NewTalkStruct.Parser, new[]{ "TalkID", "ActivityID", "TalkTypeID", "CFTopicPK", "Translation", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "StartDate", "TimeLength", "Sort", "StartTime", "EndTime", "CFTopicName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct), global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct.Parser, new[]{ "ParticipantNameTranslation", "CompanyTranslation", "JobTranslation", "CountryTranslation", "AppellationTranslation", "ParticipantTypeTranslation", "ParticipantID", "ParticipantTypeID", "EMail", "Mobile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.modifyResponseNew), global::GrpcConferenceContractServiceNew.modifyResponseNew.Parser, new[]{ "IsSuccess", "Msg", "Total", "CompanyContractId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetCompanyNoticeOfReportByContractNumberResponse), global::GrpcConferenceContractServiceNew.newGetCompanyNoticeOfReportByContractNumberResponse.Parser, new[]{ "ConferenceStructListdata", "CFAddressStructListdata", "ApplyConferenceStructListdata", "CompanyContractStructListdata", "CompanyServicePackStructListdata", "ServicepackListdata", "ActivityListdata", "CompanyStructListdata", "MemberStructListdata", "ParticipantStructListdata", "ActivityStructList", "ParticipantInfoStructList", "TalkStructList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonNoticeOfReportByContractNumberRequest), global::GrpcConferenceContractServiceNew.newGetPersonNoticeOfReportByContractNumberRequest.Parser, new[]{ "PersonContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetPersonNoticeOfReportByContractNumberResponse), global::GrpcConferenceContractServiceNew.newGetPersonNoticeOfReportByContractNumberResponse.Parser, new[]{ "ContractNumber", "Name", "CompanyName", "ServicePack", "Fee", "Total", "ActivityName", "ActivityVune", "ActivityTime", "Owner", "OwnerMobile", "OwnerEmail", "OwnerAddress", "CreatedBy", "CreatedOn", "ModifiyBy", "ModifyOn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newCompanyNameRequest), global::GrpcConferenceContractServiceNew.newCompanyNameRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Translation), global::GrpcConferenceContractServiceNew.Translation.Parser, new[]{ "CN", "EN", "JP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.NewPersonContractStruct), global::GrpcConferenceContractServiceNew.NewPersonContractStruct.Parser, new[]{ "PersonContractId", "ContractId", "PerContractNumber", "MemberPK", "MemTranslation", "PCIsdelete", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Owerid", "Ower", "ConferenceContractId", "CTypeCode", "CompanyContract", "IsCheckIn", "IsSendEmail", "IsModify", "ConferenceId", "IsFianceRecord", "IsInviteCode", "InviteCodeId", "IsCommitAbstract", "IsPrint", "PaidAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackRequest), global::GrpcConferenceContractServiceNew.newGetServicePackRequest.Parser, new[]{ "ConferenceId", "ContractTypeId", "Year", "IsGive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackStruct), global::GrpcConferenceContractServiceNew.newGetServicePackStruct.Parser, new[]{ "CompanyServicePackId", "Code", "Translation", "PriceRMB", "PriceUSD", "PriceJP", "IsGive", "Year", "ContractTypeId", "CTypeCode", "Sort", "ConferenceId", "ConferenceName", "IsShownOnFront", "RemarkTranslation", "RemarkCode", "IsSpeaker", "IsDelete", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetServicePackResponse), global::GrpcConferenceContractServiceNew.newGetServicePackResponse.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newMergeCompanyContractRequest), global::GrpcConferenceContractServiceNew.newMergeCompanyContractRequest.Parser, new[]{ "CompanyContractId", "MaxContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest), global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Parser, new[]{ "Page", "PageSize", "Search" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch), global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch.Parser, new[]{ "Year", "ConferenceId", "CompanyName", "ContractNumber", "OwnerId", "Orderings" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct), global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct.Parser, new[]{ "ConferenceContractId", "ConferenceId", "CompanyId", "ComNameTranslation", "ContractNumber", "ContractYear", "ContractCode", "ContractStatusCode", "PaymentStatusCode", "ModifyPermission", "IsDelete", "IsSendEmail", "IsModify", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModifiedOn", "ModifiedBy", "OtherOwner", "OtherOwnerId", "TotalPrice", "TotalPaid", "IsOpPayStatudCode", "EnterpriseType", "ContractStatusName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceContractListResponse), global::GrpcConferenceContractServiceNew.newGetConferenceContractListResponse.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceInfoRequest), global::GrpcConferenceContractServiceNew.newGetConferenceInfoRequest.Parser, new[]{ "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct), global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct.Parser, new[]{ "ConferenceId", "ConferenceName", "Prefix", "Year", "CNano", "Count", "Status", "IsDelete", "Abbreviation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetConferenceInfoResponse), global::GrpcConferenceContractServiceNew.newGetConferenceInfoResponse.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearRequest), global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearRequest.Parser, new[]{ "CompanyId", "ConferenceID", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct), global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct.Parser, new[]{ "OwnerId", "Owner", "OtherOwnerId", "OtherOwner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearResponse), global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearResponse.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.InServicePackConferenceVM), global::GrpcConferenceContractServiceNew.InServicePackConferenceVM.Parser, new[]{ "ConferenceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Report_ConferenceVM), global::GrpcConferenceContractServiceNew.Report_ConferenceVM.Parser, new[]{ "ConferneceName", "Date", "TimeRange", "Address", "Sort", "ParticipateType", "Remark", "IsInServicePack", "IsChecked", "StartTime", "ActivityVMList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Report_ActivityVM), global::GrpcConferenceContractServiceNew.Report_ActivityVM.Parser, new[]{ "ActivityName", "StartTime", "TimeLength", "TimeRange", "Sort", "TalkVMList", "ParticipantVMList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Report_ParticipantVM), global::GrpcConferenceContractServiceNew.Report_ParticipantVM.Parser, new[]{ "ParticipantType", "ParticipantName", "ParticipantJob", "ParticipantTitle", "ParticipantCompany", "ParticipantCountry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractServiceNew.Report_TalkVM), global::GrpcConferenceContractServiceNew.Report_TalkVM.Parser, new[]{ "TimeRange", "TalkName", "TopicName", "Sort", "TimeLength", "StartTime", "ParticipantVMList" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IdRequest : pb::IMessage<IdRequest> {
    private static readonly pb::MessageParser<IdRequest> _parser = new pb::MessageParser<IdRequest>(() => new IdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest(IdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest Clone() {
      return new IdRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdIntRequest : pb::IMessage<IdIntRequest> {
    private static readonly pb::MessageParser<IdIntRequest> _parser = new pb::MessageParser<IdIntRequest>(() => new IdIntRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdIntRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest(IdIntRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest Clone() {
      return new IdIntRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdIntRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdIntRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdIntRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdsRequest : pb::IMessage<IdsRequest> {
    private static readonly pb::MessageParser<IdsRequest> _parser = new pb::MessageParser<IdsRequest>(() => new IdsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest(IdsRequest other) : this() {
      ids_ = other.ids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest Clone() {
      return new IdsRequest(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private string ids_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ids.Length != 0) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ids.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ids.Length != 0) {
        Ids = other.Ids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CodeRequest : pb::IMessage<CodeRequest> {
    private static readonly pb::MessageParser<CodeRequest> _parser = new pb::MessageParser<CodeRequest>(() => new CodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest(CodeRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest Clone() {
      return new CodeRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequest : pb::IMessage<PaginationRequest> {
    private static readonly pb::MessageParser<PaginationRequest> _parser = new pb::MessageParser<PaginationRequest>(() => new PaginationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest(PaginationRequest other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest Clone() {
      return new PaginationRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequestSearch : pb::IMessage<PaginationRequestSearch> {
    private static readonly pb::MessageParser<PaginationRequestSearch> _parser = new pb::MessageParser<PaginationRequestSearch>(() => new PaginationRequestSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequestSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch(PaginationRequestSearch other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch Clone() {
      return new PaginationRequestSearch(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequestSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequestSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequestSearch other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchStruct : pb::IMessage<SearchStruct> {
    private static readonly pb::MessageParser<SearchStruct> _parser = new pb::MessageParser<SearchStruct>(() => new SearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct(SearchStruct other) : this() {
      comNameTranslation_ = other.comNameTranslation_;
      comContractNumber_ = other.comContractNumber_;
      contractTypeId_ = other.contractTypeId_;
      conferenceId_ = other.conferenceId_;
      ccIsdelete_ = other.ccIsdelete_;
      translation_ = other.translation_;
      perContractNumber_ = other.perContractNumber_;
      memTranslation_ = other.memTranslation_;
      pcIsdelete_ = other.pcIsdelete_;
      contractId_ = other.contractId_;
      isDiscount_ = other.isDiscount_;
      isCheckIn_ = other.isCheckIn_;
      isVerify_ = other.isVerify_;
      isDelete_ = other.isDelete_;
      extraContractNumber_ = other.extraContractNumber_;
      memberPK_ = other.memberPK_;
      activityId_ = other.activityId_;
      year_ = other.year_;
      isFillPC_ = other.isFillPC_;
      isConfirm_ = other.isConfirm_;
      owerid_ = other.owerid_;
      cTypeCode_ = other.cTypeCode_;
      companyServicePackId_ = other.companyServicePackId_;
      isContractTypeWithECode_ = other.isContractTypeWithECode_;
      sessionConferenceId_ = other.sessionConferenceId_;
      companyId_ = other.companyId_;
      comPrice_ = other.comPrice_;
      contractStatusCode_ = other.contractStatusCode_;
      isGive_ = other.isGive_;
      isUse_ = other.isUse_;
      orderings_ = other.orderings_;
      tagtypeCode_ = other.tagtypeCode_;
      isNowYear_ = other.isNowYear_;
      contractCode_ = other.contractCode_;
      isOwer_ = other.isOwer_;
      conferenceName_ = other.conferenceName_;
      conferenceContractId_ = other.conferenceContractId_;
      modifyPermission_ = other.modifyPermission_;
      enterpriseType_ = other.enterpriseType_;
      contractNumber_ = other.contractNumber_;
      companyName_ = other.companyName_;
      exTypeCode_ = other.exTypeCode_;
      userName_ = other.userName_;
      webSite_ = other.webSite_;
      isFullUseInviteCode_ = other.isFullUseInviteCode_;
      isNotFullUseInviteCode_ = other.isNotFullUseInviteCode_;
      inviteCodeNumber_ = other.inviteCodeNumber_;
      inviteCodeId_ = other.inviteCodeId_;
      isPrint_ = other.isPrint_;
      isVerifyGive_ = other.isVerifyGive_;
      perContractId_ = other.perContractId_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct Clone() {
      return new SearchStruct(this);
    }

    /// <summary>Field number for the "comNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 1;
    private string comNameTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 2;
    private string comContractNumber_ = "";
    /// <summary>
    ///公司合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 3;
    private string contractTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 4;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ccIsdelete" field.</summary>
    public const int CcIsdeleteFieldNumber = 5;
    private bool ccIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CcIsdelete {
      get { return ccIsdelete_; }
      set {
        ccIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 6;
    private string translation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Translation {
      get { return translation_; }
      set {
        translation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "perContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 7;
    private string perContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 8;
    private string memTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pcIsdelete" field.</summary>
    public const int PcIsdeleteFieldNumber = 9;
    private bool pcIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PcIsdelete {
      get { return pcIsdelete_; }
      set {
        pcIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "contractId" field.</summary>
    public const int ContractIdFieldNumber = 10;
    private string contractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isDiscount" field.</summary>
    public const int IsDiscountFieldNumber = 11;
    private bool isDiscount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDiscount {
      get { return isDiscount_; }
      set {
        isDiscount_ = value;
      }
    }

    /// <summary>Field number for the "isCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 12;
    private bool isCheckIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "isVerify" field.</summary>
    public const int IsVerifyFieldNumber = 13;
    private bool isVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "isDelete" field.</summary>
    public const int IsDeleteFieldNumber = 14;
    private bool isDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "extraContractNumber" field.</summary>
    public const int ExtraContractNumberFieldNumber = 15;
    private string extraContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraContractNumber {
      get { return extraContractNumber_; }
      set {
        extraContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberPK" field.</summary>
    public const int MemberPKFieldNumber = 16;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityId" field.</summary>
    public const int ActivityIdFieldNumber = 17;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFillPC" field.</summary>
    public const int IsFillPCFieldNumber = 19;
    private bool isFillPC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFillPC {
      get { return isFillPC_; }
      set {
        isFillPC_ = value;
      }
    }

    /// <summary>Field number for the "isConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 20;
    private bool isConfirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "owerid" field.</summary>
    public const int OweridFieldNumber = 21;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 22;
    private string cTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 23;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isContractTypeWithECode" field.</summary>
    public const int IsContractTypeWithECodeFieldNumber = 24;
    private bool isContractTypeWithECode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsContractTypeWithECode {
      get { return isContractTypeWithECode_; }
      set {
        isContractTypeWithECode_ = value;
      }
    }

    /// <summary>Field number for the "sessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 25;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 26;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comPrice" field.</summary>
    public const int ComPriceFieldNumber = 27;
    private string comPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 28;
    private string contractStatusCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isGive" field.</summary>
    public const int IsGiveFieldNumber = 29;
    private bool isGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "isUse" field.</summary>
    public const int IsUseFieldNumber = 30;
    private bool isUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUse {
      get { return isUse_; }
      set {
        isUse_ = value;
      }
    }

    /// <summary>Field number for the "orderings" field.</summary>
    public const int OrderingsFieldNumber = 31;
    private string orderings_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Orderings {
      get { return orderings_; }
      set {
        orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tagtypeCode" field.</summary>
    public const int TagtypeCodeFieldNumber = 32;
    private string tagtypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagtypeCode {
      get { return tagtypeCode_; }
      set {
        tagtypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isNowYear" field.</summary>
    public const int IsNowYearFieldNumber = 33;
    private bool isNowYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNowYear {
      get { return isNowYear_; }
      set {
        isNowYear_ = value;
      }
    }

    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 34;
    private string contractCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOwer" field.</summary>
    public const int IsOwerFieldNumber = 35;
    private bool isOwer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOwer {
      get { return isOwer_; }
      set {
        isOwer_ = value;
      }
    }

    /// <summary>Field number for the "conferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 36;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 37;
    private string conferenceContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyPermission" field.</summary>
    public const int ModifyPermissionFieldNumber = 38;
    private string modifyPermission_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyPermission {
      get { return modifyPermission_; }
      set {
        modifyPermission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 39;
    private string enterpriseType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 40;
    private string contractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 41;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exTypeCode" field.</summary>
    public const int ExTypeCodeFieldNumber = 42;
    private string exTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExTypeCode {
      get { return exTypeCode_; }
      set {
        exTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 43;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "webSite" field.</summary>
    public const int WebSiteFieldNumber = 44;
    private string webSite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFullUseInviteCode" field.</summary>
    public const int IsFullUseInviteCodeFieldNumber = 45;
    private bool isFullUseInviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullUseInviteCode {
      get { return isFullUseInviteCode_; }
      set {
        isFullUseInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "isNotFullUseInviteCode" field.</summary>
    public const int IsNotFullUseInviteCodeFieldNumber = 46;
    private bool isNotFullUseInviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNotFullUseInviteCode {
      get { return isNotFullUseInviteCode_; }
      set {
        isNotFullUseInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "inviteCodeNumber" field.</summary>
    public const int InviteCodeNumberFieldNumber = 47;
    private string inviteCodeNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeNumber {
      get { return inviteCodeNumber_; }
      set {
        inviteCodeNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 48;
    private string inviteCodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPrint" field.</summary>
    public const int IsPrintFieldNumber = 49;
    private bool isPrint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "isVerifyGive" field.</summary>
    public const int IsVerifyGiveFieldNumber = 50;
    private bool isVerifyGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerifyGive {
      get { return isVerifyGive_; }
      set {
        isVerifyGive_ = value;
      }
    }

    /// <summary>Field number for the "perContractId" field.</summary>
    public const int PerContractIdFieldNumber = 51;
    private string perContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractId {
      get { return perContractId_; }
      set {
        perContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 52;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComNameTranslation != other.ComNameTranslation) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (CcIsdelete != other.CcIsdelete) return false;
      if (Translation != other.Translation) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemTranslation != other.MemTranslation) return false;
      if (PcIsdelete != other.PcIsdelete) return false;
      if (ContractId != other.ContractId) return false;
      if (IsDiscount != other.IsDiscount) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsVerify != other.IsVerify) return false;
      if (IsDelete != other.IsDelete) return false;
      if (ExtraContractNumber != other.ExtraContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Year != other.Year) return false;
      if (IsFillPC != other.IsFillPC) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (Owerid != other.Owerid) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (IsContractTypeWithECode != other.IsContractTypeWithECode) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ComPrice != other.ComPrice) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (IsGive != other.IsGive) return false;
      if (IsUse != other.IsUse) return false;
      if (Orderings != other.Orderings) return false;
      if (TagtypeCode != other.TagtypeCode) return false;
      if (IsNowYear != other.IsNowYear) return false;
      if (ContractCode != other.ContractCode) return false;
      if (IsOwer != other.IsOwer) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (ModifyPermission != other.ModifyPermission) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyName != other.CompanyName) return false;
      if (ExTypeCode != other.ExTypeCode) return false;
      if (UserName != other.UserName) return false;
      if (WebSite != other.WebSite) return false;
      if (IsFullUseInviteCode != other.IsFullUseInviteCode) return false;
      if (IsNotFullUseInviteCode != other.IsNotFullUseInviteCode) return false;
      if (InviteCodeNumber != other.InviteCodeNumber) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsPrint != other.IsPrint) return false;
      if (IsVerifyGive != other.IsVerifyGive) return false;
      if (PerContractId != other.PerContractId) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ComNameTranslation.Length != 0) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (CcIsdelete != false) hash ^= CcIsdelete.GetHashCode();
      if (Translation.Length != 0) hash ^= Translation.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemTranslation.Length != 0) hash ^= MemTranslation.GetHashCode();
      if (PcIsdelete != false) hash ^= PcIsdelete.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (IsDiscount != false) hash ^= IsDiscount.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (ExtraContractNumber.Length != 0) hash ^= ExtraContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsFillPC != false) hash ^= IsFillPC.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (IsContractTypeWithECode != false) hash ^= IsContractTypeWithECode.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (IsUse != false) hash ^= IsUse.GetHashCode();
      if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
      if (TagtypeCode.Length != 0) hash ^= TagtypeCode.GetHashCode();
      if (IsNowYear != false) hash ^= IsNowYear.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (IsOwer != false) hash ^= IsOwer.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (ModifyPermission.Length != 0) hash ^= ModifyPermission.GetHashCode();
      if (EnterpriseType.Length != 0) hash ^= EnterpriseType.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ExTypeCode.Length != 0) hash ^= ExTypeCode.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (IsFullUseInviteCode != false) hash ^= IsFullUseInviteCode.GetHashCode();
      if (IsNotFullUseInviteCode != false) hash ^= IsNotFullUseInviteCode.GetHashCode();
      if (InviteCodeNumber.Length != 0) hash ^= InviteCodeNumber.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (IsVerifyGive != false) hash ^= IsVerifyGive.GetHashCode();
      if (PerContractId.Length != 0) hash ^= PerContractId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ComNameTranslation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ComContractNumber);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContractTypeId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceId);
      }
      if (CcIsdelete != false) {
        output.WriteRawTag(40);
        output.WriteBool(CcIsdelete);
      }
      if (Translation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Translation);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PerContractNumber);
      }
      if (MemTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemTranslation);
      }
      if (PcIsdelete != false) {
        output.WriteRawTag(72);
        output.WriteBool(PcIsdelete);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContractId);
      }
      if (IsDiscount != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsDiscount);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsCheckIn);
      }
      if (IsVerify != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsVerify);
      }
      if (IsDelete != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsDelete);
      }
      if (ExtraContractNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MemberPK);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ActivityId);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (IsFillPC != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsFillPC);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsConfirm);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Owerid);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CTypeCode);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CompanyServicePackId);
      }
      if (IsContractTypeWithECode != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsContractTypeWithECode);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(SessionConferenceId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(CompanyId);
      }
      if (ComPrice.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ComPrice);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ContractStatusCode);
      }
      if (IsGive != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IsGive);
      }
      if (IsUse != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsUse);
      }
      if (Orderings.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Orderings);
      }
      if (TagtypeCode.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(TagtypeCode);
      }
      if (IsNowYear != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsNowYear);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(ContractCode);
      }
      if (IsOwer != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsOwer);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ConferenceName);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(ConferenceContractId);
      }
      if (ModifyPermission.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ModifyPermission);
      }
      if (EnterpriseType.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(EnterpriseType);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(CompanyName);
      }
      if (ExTypeCode.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(ExTypeCode);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(UserName);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(WebSite);
      }
      if (IsFullUseInviteCode != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsFullUseInviteCode);
      }
      if (IsNotFullUseInviteCode != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(IsNotFullUseInviteCode);
      }
      if (InviteCodeNumber.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(InviteCodeNumber);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(InviteCodeId);
      }
      if (IsPrint != false) {
        output.WriteRawTag(136, 3);
        output.WriteBool(IsPrint);
      }
      if (IsVerifyGive != false) {
        output.WriteRawTag(144, 3);
        output.WriteBool(IsVerifyGive);
      }
      if (PerContractId.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(PerContractId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(162, 3);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ComNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (CcIsdelete != false) {
        size += 1 + 1;
      }
      if (Translation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Translation);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTranslation);
      }
      if (PcIsdelete != false) {
        size += 1 + 1;
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (IsDiscount != false) {
        size += 1 + 1;
      }
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (ExtraContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ActivityId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsFillPC != false) {
        size += 2 + 1;
      }
      if (IsConfirm != false) {
        size += 2 + 1;
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (CTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (IsContractTypeWithECode != false) {
        size += 2 + 1;
      }
      if (SessionConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (CompanyId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (IsGive != false) {
        size += 2 + 1;
      }
      if (IsUse != false) {
        size += 2 + 1;
      }
      if (Orderings.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Orderings);
      }
      if (TagtypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TagtypeCode);
      }
      if (IsNowYear != false) {
        size += 2 + 1;
      }
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (IsOwer != false) {
        size += 2 + 1;
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (ModifyPermission.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyPermission);
      }
      if (EnterpriseType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EnterpriseType);
      }
      if (ContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ExTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExTypeCode);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (WebSite.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (IsFullUseInviteCode != false) {
        size += 2 + 1;
      }
      if (IsNotFullUseInviteCode != false) {
        size += 2 + 1;
      }
      if (InviteCodeNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeNumber);
      }
      if (InviteCodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsPrint != false) {
        size += 2 + 1;
      }
      if (IsVerifyGive != false) {
        size += 2 + 1;
      }
      if (PerContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PerContractId);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.ComNameTranslation.Length != 0) {
        ComNameTranslation = other.ComNameTranslation;
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.CcIsdelete != false) {
        CcIsdelete = other.CcIsdelete;
      }
      if (other.Translation.Length != 0) {
        Translation = other.Translation;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemTranslation.Length != 0) {
        MemTranslation = other.MemTranslation;
      }
      if (other.PcIsdelete != false) {
        PcIsdelete = other.PcIsdelete;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.IsDiscount != false) {
        IsDiscount = other.IsDiscount;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.ExtraContractNumber.Length != 0) {
        ExtraContractNumber = other.ExtraContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsFillPC != false) {
        IsFillPC = other.IsFillPC;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.IsContractTypeWithECode != false) {
        IsContractTypeWithECode = other.IsContractTypeWithECode;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.IsUse != false) {
        IsUse = other.IsUse;
      }
      if (other.Orderings.Length != 0) {
        Orderings = other.Orderings;
      }
      if (other.TagtypeCode.Length != 0) {
        TagtypeCode = other.TagtypeCode;
      }
      if (other.IsNowYear != false) {
        IsNowYear = other.IsNowYear;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.IsOwer != false) {
        IsOwer = other.IsOwer;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.ModifyPermission.Length != 0) {
        ModifyPermission = other.ModifyPermission;
      }
      if (other.EnterpriseType.Length != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ExTypeCode.Length != 0) {
        ExTypeCode = other.ExTypeCode;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.IsFullUseInviteCode != false) {
        IsFullUseInviteCode = other.IsFullUseInviteCode;
      }
      if (other.IsNotFullUseInviteCode != false) {
        IsNotFullUseInviteCode = other.IsNotFullUseInviteCode;
      }
      if (other.InviteCodeNumber.Length != 0) {
        InviteCodeNumber = other.InviteCodeNumber;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.IsVerifyGive != false) {
        IsVerifyGive = other.IsVerifyGive;
      }
      if (other.PerContractId.Length != 0) {
        PerContractId = other.PerContractId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ComNameTranslation = input.ReadString();
            break;
          }
          case 18: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 26: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 34: {
            ConferenceId = input.ReadString();
            break;
          }
          case 40: {
            CcIsdelete = input.ReadBool();
            break;
          }
          case 50: {
            Translation = input.ReadString();
            break;
          }
          case 58: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 66: {
            MemTranslation = input.ReadString();
            break;
          }
          case 72: {
            PcIsdelete = input.ReadBool();
            break;
          }
          case 82: {
            ContractId = input.ReadString();
            break;
          }
          case 88: {
            IsDiscount = input.ReadBool();
            break;
          }
          case 96: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 104: {
            IsVerify = input.ReadBool();
            break;
          }
          case 112: {
            IsDelete = input.ReadBool();
            break;
          }
          case 122: {
            ExtraContractNumber = input.ReadString();
            break;
          }
          case 130: {
            MemberPK = input.ReadString();
            break;
          }
          case 138: {
            ActivityId = input.ReadString();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 152: {
            IsFillPC = input.ReadBool();
            break;
          }
          case 160: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 170: {
            Owerid = input.ReadString();
            break;
          }
          case 178: {
            CTypeCode = input.ReadString();
            break;
          }
          case 186: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 192: {
            IsContractTypeWithECode = input.ReadBool();
            break;
          }
          case 202: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 210: {
            CompanyId = input.ReadString();
            break;
          }
          case 218: {
            ComPrice = input.ReadString();
            break;
          }
          case 226: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 232: {
            IsGive = input.ReadBool();
            break;
          }
          case 240: {
            IsUse = input.ReadBool();
            break;
          }
          case 250: {
            Orderings = input.ReadString();
            break;
          }
          case 258: {
            TagtypeCode = input.ReadString();
            break;
          }
          case 264: {
            IsNowYear = input.ReadBool();
            break;
          }
          case 274: {
            ContractCode = input.ReadString();
            break;
          }
          case 280: {
            IsOwer = input.ReadBool();
            break;
          }
          case 290: {
            ConferenceName = input.ReadString();
            break;
          }
          case 298: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 306: {
            ModifyPermission = input.ReadString();
            break;
          }
          case 314: {
            EnterpriseType = input.ReadString();
            break;
          }
          case 322: {
            ContractNumber = input.ReadString();
            break;
          }
          case 330: {
            CompanyName = input.ReadString();
            break;
          }
          case 338: {
            ExTypeCode = input.ReadString();
            break;
          }
          case 346: {
            UserName = input.ReadString();
            break;
          }
          case 354: {
            WebSite = input.ReadString();
            break;
          }
          case 360: {
            IsFullUseInviteCode = input.ReadBool();
            break;
          }
          case 368: {
            IsNotFullUseInviteCode = input.ReadBool();
            break;
          }
          case 378: {
            InviteCodeNumber = input.ReadString();
            break;
          }
          case 386: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 392: {
            IsPrint = input.ReadBool();
            break;
          }
          case 400: {
            IsVerifyGive = input.ReadBool();
            break;
          }
          case 410: {
            PerContractId = input.ReadString();
            break;
          }
          case 418: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractCidList : pb::IMessage<ConferenceContractCidList> {
    private static readonly pb::MessageParser<ConferenceContractCidList> _parser = new pb::MessageParser<ConferenceContractCidList>(() => new ConferenceContractCidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractCidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList(ConferenceContractCidList other) : this() {
      cidlistdata_ = other.cidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList Clone() {
      return new ConferenceContractCidList(this);
    }

    /// <summary>Field number for the "Cidlistdata" field.</summary>
    public const int CidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///ConferenceContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Cidlistdata {
      get { return cidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractCidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractCidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cidlistdata_.Equals(other.cidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cidlistdata_.WriteTo(output, _repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cidlistdata_.CalculateSize(_repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractCidList other) {
      if (other == null) {
        return;
      }
      cidlistdata_.Add(other.cidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cidlistdata_.AddEntriesFrom(input, _repeated_cidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPidList : pb::IMessage<PersonContractPidList> {
    private static readonly pb::MessageParser<PersonContractPidList> _parser = new pb::MessageParser<PersonContractPidList>(() => new PersonContractPidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList(PersonContractPidList other) : this() {
      pidlistdata_ = other.pidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList Clone() {
      return new PersonContractPidList(this);
    }

    /// <summary>Field number for the "Pidlistdata" field.</summary>
    public const int PidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_pidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> pidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///PersonContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pidlistdata {
      get { return pidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pidlistdata_.Equals(other.pidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pidlistdata_.WriteTo(output, _repeated_pidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pidlistdata_.CalculateSize(_repeated_pidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPidList other) {
      if (other == null) {
        return;
      }
      pidlistdata_.Add(other.pidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pidlistdata_.AddEntriesFrom(input, _repeated_pidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPCNoRequest : pb::IMessage<PersonContractPCNoRequest> {
    private static readonly pb::MessageParser<PersonContractPCNoRequest> _parser = new pb::MessageParser<PersonContractPCNoRequest>(() => new PersonContractPCNoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPCNoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest(PersonContractPCNoRequest other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest Clone() {
      return new PersonContractPCNoRequest(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct>();
    /// <summary>
    ///PersonContractNumber的列表对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractPCNoStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPCNoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPCNoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPCNoRequest other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPCNoStruct : pb::IMessage<PersonContractPCNoStruct> {
    private static readonly pb::MessageParser<PersonContractPCNoStruct> _parser = new pb::MessageParser<PersonContractPCNoStruct>(() => new PersonContractPCNoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPCNoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct(PersonContractPCNoStruct other) : this() {
      perContractNumber_ = other.perContractNumber_;
      comfirmed_ = other.comfirmed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct Clone() {
      return new PersonContractPCNoStruct(this);
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 1;
    private string perContractNumber_ = "";
    /// <summary>
    ///PersonContractNumber的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Comfirmed" field.</summary>
    public const int ComfirmedFieldNumber = 2;
    private bool comfirmed_;
    /// <summary>
    ///是否有财务记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Comfirmed {
      get { return comfirmed_; }
      set {
        comfirmed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPCNoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPCNoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerContractNumber != other.PerContractNumber) return false;
      if (Comfirmed != other.Comfirmed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (Comfirmed != false) hash ^= Comfirmed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PerContractNumber);
      }
      if (Comfirmed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Comfirmed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (Comfirmed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPCNoStruct other) {
      if (other == null) {
        return;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.Comfirmed != false) {
        Comfirmed = other.Comfirmed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 16: {
            Comfirmed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractCidList : pb::IMessage<CompanyContractCidList> {
    private static readonly pb::MessageParser<CompanyContractCidList> _parser = new pb::MessageParser<CompanyContractCidList>(() => new CompanyContractCidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractCidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList(CompanyContractCidList other) : this() {
      cidlistdata_ = other.cidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList Clone() {
      return new CompanyContractCidList(this);
    }

    /// <summary>Field number for the "Cidlistdata" field.</summary>
    public const int CidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///CompanyContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Cidlistdata {
      get { return cidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractCidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractCidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cidlistdata_.Equals(other.cidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cidlistdata_.WriteTo(output, _repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cidlistdata_.CalculateSize(_repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractCidList other) {
      if (other == null) {
        return;
      }
      cidlistdata_.Add(other.cidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cidlistdata_.AddEntriesFrom(input, _repeated_cidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractList : pb::IMessage<ConferenceContractList> {
    private static readonly pb::MessageParser<ConferenceContractList> _parser = new pb::MessageParser<ConferenceContractList>(() => new ConferenceContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList(ConferenceContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList Clone() {
      return new ConferenceContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ConferenceContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ConferenceContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractList : pb::IMessage<CompanyContractList> {
    private static readonly pb::MessageParser<CompanyContractList> _parser = new pb::MessageParser<CompanyContractList>(() => new CompanyContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList(CompanyContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList Clone() {
      return new CompanyContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.CompanyContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.CompanyContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractList : pb::IMessage<PersonContractList> {
    private static readonly pb::MessageParser<PersonContractList> _parser = new pb::MessageParser<PersonContractList>(() => new PersonContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList(PersonContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList Clone() {
      return new PersonContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.PersonContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackList : pb::IMessage<CompanyServicePackList> {
    private static readonly pb::MessageParser<CompanyServicePackList> _parser = new pb::MessageParser<CompanyServicePackList>(() => new CompanyServicePackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList(CompanyServicePackList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList Clone() {
      return new CompanyServicePackList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.CompanyServicePackStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.CompanyServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceList : pb::IMessage<ExtraServiceList> {
    private static readonly pb::MessageParser<ExtraServiceList> _parser = new pb::MessageParser<ExtraServiceList>(() => new ExtraServiceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList(ExtraServiceList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList Clone() {
      return new ExtraServiceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ExtraServiceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ExtraServiceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ExtraServiceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ExtraServiceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ExtraServiceStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackList : pb::IMessage<ServicePackList> {
    private static readonly pb::MessageParser<ServicePackList> _parser = new pb::MessageParser<ServicePackList>(() => new ServicePackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList(ServicePackList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList Clone() {
      return new ServicePackList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ServicePackStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CCNumberConfigList : pb::IMessage<CCNumberConfigList> {
    private static readonly pb::MessageParser<CCNumberConfigList> _parser = new pb::MessageParser<CCNumberConfigList>(() => new CCNumberConfigList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CCNumberConfigList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList(CCNumberConfigList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList Clone() {
      return new CCNumberConfigList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.CCNumberConfigStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.CCNumberConfigStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CCNumberConfigStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CCNumberConfigStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CCNumberConfigStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CCNumberConfigList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CCNumberConfigList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CCNumberConfigList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractTypeList : pb::IMessage<ContractTypeList> {
    private static readonly pb::MessageParser<ContractTypeList> _parser = new pb::MessageParser<ContractTypeList>(() => new ContractTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList(ContractTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList Clone() {
      return new ContractTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ContractTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ContractTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountList : pb::IMessage<DelegateServicePackDiscountList> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountList> _parser = new pb::MessageParser<DelegateServicePackDiscountList>(() => new DelegateServicePackDiscountList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList(DelegateServicePackDiscountList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList Clone() {
      return new DelegateServicePackDiscountList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractList : pb::IMessage<DelegateServicePackDiscountForConferenceContractList> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractList> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractList>(() => new DelegateServicePackDiscountForConferenceContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList(DelegateServicePackDiscountForConferenceContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList Clone() {
      return new DelegateServicePackDiscountForConferenceContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceOnsiteList : pb::IMessage<ConferenceOnsiteList> {
    private static readonly pb::MessageParser<ConferenceOnsiteList> _parser = new pb::MessageParser<ConferenceOnsiteList>(() => new ConferenceOnsiteList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceOnsiteList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList(ConferenceOnsiteList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList Clone() {
      return new ConferenceOnsiteList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceOnsiteList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceOnsiteList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceOnsiteList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeList : pb::IMessage<InviteCodeList> {
    private static readonly pb::MessageParser<InviteCodeList> _parser = new pb::MessageParser<InviteCodeList>(() => new InviteCodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList(InviteCodeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList Clone() {
      return new InviteCodeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeCSPVMStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeRecordList : pb::IMessage<InviteCodeRecordList> {
    private static readonly pb::MessageParser<InviteCodeRecordList> _parser = new pb::MessageParser<InviteCodeRecordList>(() => new InviteCodeRecordList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeRecordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList(InviteCodeRecordList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList Clone() {
      return new InviteCodeRecordList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.InviteCodeRecordStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeRecordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeRecordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeRecordList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractAndSessionConferenceIdList : pb::IMessage<PersonContractAndSessionConferenceIdList> {
    private static readonly pb::MessageParser<PersonContractAndSessionConferenceIdList> _parser = new pb::MessageParser<PersonContractAndSessionConferenceIdList>(() => new PersonContractAndSessionConferenceIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractAndSessionConferenceIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList(PersonContractAndSessionConferenceIdList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      allTotal_ = other.allTotal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList Clone() {
      return new PersonContractAndSessionConferenceIdList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractAndSessionConferenceIdsStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "allTotal" field.</summary>
    public const int AllTotalFieldNumber = 3;
    private int allTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AllTotal {
      get { return allTotal_; }
      set {
        allTotal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractAndSessionConferenceIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractAndSessionConferenceIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      if (AllTotal != other.AllTotal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (AllTotal != 0) hash ^= AllTotal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (AllTotal != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AllTotal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (AllTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllTotal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractAndSessionConferenceIdList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.AllTotal != 0) {
        AllTotal = other.AllTotal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 24: {
            AllTotal = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapList : pb::IMessage<PersonContractActivityMapList> {
    private static readonly pb::MessageParser<PersonContractActivityMapList> _parser = new pb::MessageParser<PersonContractActivityMapList>(() => new PersonContractActivityMapList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList(PersonContractActivityMapList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList Clone() {
      return new PersonContractActivityMapList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapList : pb::IMessage<CompanyServicePackMapList> {
    private static readonly pb::MessageParser<CompanyServicePackMapList> _parser = new pb::MessageParser<CompanyServicePackMapList>(() => new CompanyServicePackMapList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList(CompanyServicePackMapList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList Clone() {
      return new CompanyServicePackMapList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyServicePackMapVMStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatisticsList : pb::IMessage<ContractStatisticsList> {
    private static readonly pb::MessageParser<ContractStatisticsList> _parser = new pb::MessageParser<ContractStatisticsList>(() => new ContractStatisticsList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatisticsList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList(ContractStatisticsList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList Clone() {
      return new ContractStatisticsList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ContractStatisticsStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ContractStatisticsStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatisticsStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatisticsStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatisticsStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatisticsList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatisticsList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatisticsList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapListToUpdate : pb::IMessage<PersonContractActivityMapListToUpdate> {
    private static readonly pb::MessageParser<PersonContractActivityMapListToUpdate> _parser = new pb::MessageParser<PersonContractActivityMapListToUpdate>(() => new PersonContractActivityMapListToUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapListToUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate(PersonContractActivityMapListToUpdate other) : this() {
      memberPK_ = other.memberPK_;
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate Clone() {
      return new PersonContractActivityMapListToUpdate(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct>();
    /// <summary>
    ///PersonContractActivityMap列表，如果没有可以为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractActivityMapStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapListToUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapListToUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapListToUpdate other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractStruct : pb::IMessage<ConferenceContractStruct> {
    private static readonly pb::MessageParser<ConferenceContractStruct> _parser = new pb::MessageParser<ConferenceContractStruct>(() => new ConferenceContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct(ConferenceContractStruct other) : this() {
      conferenceContractId_ = other.conferenceContractId_;
      companyId_ = other.companyId_;
      ComNameTranslation = other.comNameTranslation_ != null ? other.ComNameTranslation.Clone() : null;
      contractNumber_ = other.contractNumber_;
      contractCode_ = other.contractCode_;
      isDelete_ = other.isDelete_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      clistdata_ = other.clistdata_.Clone();
      contractYear_ = other.contractYear_;
      dlistdata_ = other.dlistdata_.Clone();
      conferenceId_ = other.conferenceId_;
      alternativeContractNumber_ = other.alternativeContractNumber_;
      contractStatusCode_ = other.contractStatusCode_;
      paymentStatusCode_ = other.paymentStatusCode_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      modifyPermission_ = other.modifyPermission_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct Clone() {
      return new ConferenceContractStruct(this);
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 1;
    private string conferenceContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.ComNameTranslationStruct comNameTranslation_;
    /// <summary>
    ///公司中英文名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ComNameTranslationStruct ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 4;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 5;
    private string contractCode_ = "";
    /// <summary>
    ///CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 6;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 7;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 8;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 9;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 10;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 11;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 12;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Clistdata" field.</summary>
    public const int ClistdataFieldNumber = 13;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.CompanyContractStruct> _repeated_clistdata_codec
        = pb::FieldCodec.ForMessage(106, global::GrpcConferenceContractServiceNew.CompanyContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct> clistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct>();
    /// <summary>
    ///二级合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.CompanyContractStruct> Clistdata {
      get { return clistdata_; }
    }

    /// <summary>Field number for the "ContractYear" field.</summary>
    public const int ContractYearFieldNumber = 14;
    private string contractYear_ = "";
    /// <summary>
    ///合同年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractYear {
      get { return contractYear_; }
      set {
        contractYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dlistdata" field.</summary>
    public const int DlistdataFieldNumber = 15;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct> _repeated_dlistdata_codec
        = pb::FieldCodec.ForMessage(122, global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct> dlistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct>();
    /// <summary>
    ///一级合同折扣列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountForConferenceContractStruct> Dlistdata {
      get { return dlistdata_; }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 16;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AlternativeContractNumber" field.</summary>
    public const int AlternativeContractNumberFieldNumber = 17;
    private string alternativeContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlternativeContractNumber {
      get { return alternativeContractNumber_; }
      set {
        alternativeContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 18;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaymentStatusCode" field.</summary>
    public const int PaymentStatusCodeFieldNumber = 19;
    private string paymentStatusCode_ = "";
    /// <summary>
    ///支付状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentStatusCode {
      get { return paymentStatusCode_; }
      set {
        paymentStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 20;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送Email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 21;
    private bool isModify_;
    /// <summary>
    ///是否修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "ModifyPermission" field.</summary>
    public const int ModifyPermissionFieldNumber = 22;
    private string modifyPermission_ = "";
    /// <summary>
    ///修改许可
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyPermission {
      get { return modifyPermission_; }
      set {
        modifyPermission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (!object.Equals(ComNameTranslation, other.ComNameTranslation)) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (ContractCode != other.ContractCode) return false;
      if (IsDelete != other.IsDelete) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if(!clistdata_.Equals(other.clistdata_)) return false;
      if (ContractYear != other.ContractYear) return false;
      if(!dlistdata_.Equals(other.dlistdata_)) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (AlternativeContractNumber != other.AlternativeContractNumber) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (PaymentStatusCode != other.PaymentStatusCode) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (ModifyPermission != other.ModifyPermission) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (comNameTranslation_ != null) hash ^= ComNameTranslation.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      hash ^= clistdata_.GetHashCode();
      if (ContractYear.Length != 0) hash ^= ContractYear.GetHashCode();
      hash ^= dlistdata_.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (AlternativeContractNumber.Length != 0) hash ^= AlternativeContractNumber.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (PaymentStatusCode.Length != 0) hash ^= PaymentStatusCode.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (ModifyPermission.Length != 0) hash ^= ModifyPermission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceContractId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (comNameTranslation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContractNumber);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContractCode);
      }
      if (IsDelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDelete);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModefieldBy);
      }
      clistdata_.WriteTo(output, _repeated_clistdata_codec);
      if (ContractYear.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ContractYear);
      }
      dlistdata_.WriteTo(output, _repeated_dlistdata_codec);
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ConferenceId);
      }
      if (AlternativeContractNumber.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AlternativeContractNumber);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(PaymentStatusCode);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsModify);
      }
      if (ModifyPermission.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ModifyPermission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (comNameTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (ContractCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      size += clistdata_.CalculateSize(_repeated_clistdata_codec);
      if (ContractYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractYear);
      }
      size += dlistdata_.CalculateSize(_repeated_dlistdata_codec);
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (AlternativeContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AlternativeContractNumber);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaymentStatusCode);
      }
      if (IsSendEmail != false) {
        size += 2 + 1;
      }
      if (IsModify != false) {
        size += 2 + 1;
      }
      if (ModifyPermission.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyPermission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.comNameTranslation_ != null) {
        if (comNameTranslation_ == null) {
          comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
        }
        ComNameTranslation.MergeFrom(other.ComNameTranslation);
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      clistdata_.Add(other.clistdata_);
      if (other.ContractYear.Length != 0) {
        ContractYear = other.ContractYear;
      }
      dlistdata_.Add(other.dlistdata_);
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.AlternativeContractNumber.Length != 0) {
        AlternativeContractNumber = other.AlternativeContractNumber;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.PaymentStatusCode.Length != 0) {
        PaymentStatusCode = other.PaymentStatusCode;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.ModifyPermission.Length != 0) {
        ModifyPermission = other.ModifyPermission;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            if (comNameTranslation_ == null) {
              comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
            }
            input.ReadMessage(comNameTranslation_);
            break;
          }
          case 34: {
            ContractNumber = input.ReadString();
            break;
          }
          case 42: {
            ContractCode = input.ReadString();
            break;
          }
          case 48: {
            IsDelete = input.ReadBool();
            break;
          }
          case 58: {
            Owerid = input.ReadString();
            break;
          }
          case 66: {
            Ower = input.ReadString();
            break;
          }
          case 74: {
            CreatedOn = input.ReadString();
            break;
          }
          case 82: {
            CreatedBy = input.ReadString();
            break;
          }
          case 90: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 98: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 106: {
            clistdata_.AddEntriesFrom(input, _repeated_clistdata_codec);
            break;
          }
          case 114: {
            ContractYear = input.ReadString();
            break;
          }
          case 122: {
            dlistdata_.AddEntriesFrom(input, _repeated_dlistdata_codec);
            break;
          }
          case 130: {
            ConferenceId = input.ReadString();
            break;
          }
          case 138: {
            AlternativeContractNumber = input.ReadString();
            break;
          }
          case 146: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 154: {
            PaymentStatusCode = input.ReadString();
            break;
          }
          case 160: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 168: {
            IsModify = input.ReadBool();
            break;
          }
          case 178: {
            ModifyPermission = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractStruct : pb::IMessage<CompanyContractStruct> {
    private static readonly pb::MessageParser<CompanyContractStruct> _parser = new pb::MessageParser<CompanyContractStruct>(() => new CompanyContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct(CompanyContractStruct other) : this() {
      contractId_ = other.contractId_;
      companyServicePackId_ = other.companyServicePackId_;
      companyId_ = other.companyId_;
      ComNameTranslation = other.comNameTranslation_ != null ? other.ComNameTranslation.Clone() : null;
      comContractNumber_ = other.comContractNumber_;
      country_ = other.country_;
      AddressTranslation = other.addressTranslation_ != null ? other.AddressTranslation.Clone() : null;
      maxContractNumber_ = other.maxContractNumber_;
      cCIsdelete_ = other.cCIsdelete_;
      enterpriseType_ = other.enterpriseType_;
      isVerify_ = other.isVerify_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      dlistdata_ = other.dlistdata_.Clone();
      contractCode_ = other.contractCode_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isCheckIn_ = other.isCheckIn_;
      pPTUrl_ = other.pPTUrl_;
      contractStatusCode_ = other.contractStatusCode_;
      conferenceContractId_ = other.conferenceContractId_;
      plistdata_ = other.plistdata_.Clone();
      comPrice_ = other.comPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct Clone() {
      return new CompanyContractStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    /// <summary>
    ///CompanyServicePackId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 3;
    private string companyId_ = "";
    /// <summary>
    ///CompanyId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.ComNameTranslationStruct comNameTranslation_;
    /// <summary>
    ///string  ComNameTranslation = 4;
    ///公司中英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ComNameTranslationStruct ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ComContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 5;
    private string comContractNumber_ = "";
    /// <summary>
    ///二级合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressTranslation" field.</summary>
    public const int AddressTranslationFieldNumber = 7;
    private global::GrpcConferenceContractServiceNew.AddressTranslationStruct addressTranslation_;
    /// <summary>
    ///string AddressTranslation = 7;
    ///地址中英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.AddressTranslationStruct AddressTranslation {
      get { return addressTranslation_; }
      set {
        addressTranslation_ = value;
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 8;
    private string maxContractNumber_ = "";
    /// <summary>
    ///最大合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CCIsdelete" field.</summary>
    public const int CCIsdeleteFieldNumber = 9;
    private bool cCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CCIsdelete {
      get { return cCIsdelete_; }
      set {
        cCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 10;
    private int enterpriseType_;
    /// <summary>
    ///0代表内资;1代表外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "IsVerify" field.</summary>
    public const int IsVerifyFieldNumber = 11;
    private bool isVerify_;
    /// <summary>
    ///是否审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 13;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 14;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 15;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 16;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 17;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 18;
    private global::GrpcConferenceContractServiceNew.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "dlistdata" field.</summary>
    public const int DlistdataFieldNumber = 19;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> _repeated_dlistdata_codec
        = pb::FieldCodec.ForMessage(154, global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> dlistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct>();
    /// <summary>
    ///二级折扣合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> Dlistdata {
      get { return dlistdata_; }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 20;
    private string contractCode_ = "";
    /// <summary>
    ///CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）C中资 E外资 S后台合同 W前台合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 21;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 22;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 23;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "PPTUrl" field.</summary>
    public const int PPTUrlFieldNumber = 24;
    private string pPTUrl_ = "";
    /// <summary>
    ///PPTUrl
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PPTUrl {
      get { return pPTUrl_; }
      set {
        pPTUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 25;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 26;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plistdata" field.</summary>
    public const int PlistdataFieldNumber = 27;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.PersonContractStruct> _repeated_plistdata_codec
        = pb::FieldCodec.ForMessage(218, global::GrpcConferenceContractServiceNew.PersonContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct> plistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct>();
    /// <summary>
    ///个人合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.PersonContractStruct> Plistdata {
      get { return plistdata_; }
    }

    /// <summary>Field number for the "ComPrice" field.</summary>
    public const int ComPriceFieldNumber = 28;
    private string comPrice_ = "";
    /// <summary>
    ///二级合同价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (!object.Equals(ComNameTranslation, other.ComNameTranslation)) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (Country != other.Country) return false;
      if (!object.Equals(AddressTranslation, other.AddressTranslation)) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      if (CCIsdelete != other.CCIsdelete) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (IsVerify != other.IsVerify) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if(!dlistdata_.Equals(other.dlistdata_)) return false;
      if (ContractCode != other.ContractCode) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (PPTUrl != other.PPTUrl) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if(!plistdata_.Equals(other.plistdata_)) return false;
      if (ComPrice != other.ComPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (comNameTranslation_ != null) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (addressTranslation_ != null) hash ^= AddressTranslation.GetHashCode();
      if (MaxContractNumber.Length != 0) hash ^= MaxContractNumber.GetHashCode();
      if (CCIsdelete != false) hash ^= CCIsdelete.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      hash ^= dlistdata_.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (PPTUrl.Length != 0) hash ^= PPTUrl.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      hash ^= plistdata_.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyId);
      }
      if (comNameTranslation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComContractNumber);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (addressTranslation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        output.WriteRawTag(72);
        output.WriteBool(CCIsdelete);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EnterpriseType);
      }
      if (IsVerify != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsVerify);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CompanyServicePack);
      }
      dlistdata_.WriteTo(output, _repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ConferenceName);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCheckIn);
      }
      if (PPTUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ConferenceContractId);
      }
      plistdata_.WriteTo(output, _repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ComPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (comNameTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (addressTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        size += 1 + 1;
      }
      if (EnterpriseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      size += dlistdata_.CalculateSize(_repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (PPTUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      size += plistdata_.CalculateSize(_repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.comNameTranslation_ != null) {
        if (comNameTranslation_ == null) {
          comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
        }
        ComNameTranslation.MergeFrom(other.ComNameTranslation);
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.addressTranslation_ != null) {
        if (addressTranslation_ == null) {
          addressTranslation_ = new global::GrpcConferenceContractServiceNew.AddressTranslationStruct();
        }
        AddressTranslation.MergeFrom(other.AddressTranslation);
      }
      if (other.MaxContractNumber.Length != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      if (other.CCIsdelete != false) {
        CCIsdelete = other.CCIsdelete;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      dlistdata_.Add(other.dlistdata_);
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.PPTUrl.Length != 0) {
        PPTUrl = other.PPTUrl;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      plistdata_.Add(other.plistdata_);
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            CompanyId = input.ReadString();
            break;
          }
          case 34: {
            if (comNameTranslation_ == null) {
              comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
            }
            input.ReadMessage(comNameTranslation_);
            break;
          }
          case 42: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            if (addressTranslation_ == null) {
              addressTranslation_ = new global::GrpcConferenceContractServiceNew.AddressTranslationStruct();
            }
            input.ReadMessage(addressTranslation_);
            break;
          }
          case 66: {
            MaxContractNumber = input.ReadString();
            break;
          }
          case 72: {
            CCIsdelete = input.ReadBool();
            break;
          }
          case 80: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 88: {
            IsVerify = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
          case 106: {
            Ower = input.ReadString();
            break;
          }
          case 114: {
            CreatedOn = input.ReadString();
            break;
          }
          case 122: {
            CreatedBy = input.ReadString();
            break;
          }
          case 130: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 138: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 146: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 154: {
            dlistdata_.AddEntriesFrom(input, _repeated_dlistdata_codec);
            break;
          }
          case 162: {
            ContractCode = input.ReadString();
            break;
          }
          case 170: {
            ConferenceId = input.ReadString();
            break;
          }
          case 178: {
            ConferenceName = input.ReadString();
            break;
          }
          case 184: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 194: {
            PPTUrl = input.ReadString();
            break;
          }
          case 202: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 210: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 218: {
            plistdata_.AddEntriesFrom(input, _repeated_plistdata_codec);
            break;
          }
          case 226: {
            ComPrice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractStruct : pb::IMessage<PersonContractStruct> {
    private static readonly pb::MessageParser<PersonContractStruct> _parser = new pb::MessageParser<PersonContractStruct>(() => new PersonContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct(PersonContractStruct other) : this() {
      personContractId_ = other.personContractId_;
      contractId_ = other.contractId_;
      perContractNumber_ = other.perContractNumber_;
      memberPK_ = other.memberPK_;
      MemTranslation = other.memTranslation_ != null ? other.MemTranslation.Clone() : null;
      pCIsdelete_ = other.pCIsdelete_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      conferenceContractId_ = other.conferenceContractId_;
      cTypeCode_ = other.cTypeCode_;
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      isCheckIn_ = other.isCheckIn_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      conferenceId_ = other.conferenceId_;
      isFianceRecord_ = other.isFianceRecord_;
      isInviteCode_ = other.isInviteCode_;
      inviteCodeId_ = other.inviteCodeId_;
      isCommitAbstract_ = other.isCommitAbstract_;
      isPrint_ = other.isPrint_;
      paidAmount_ = other.paidAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct Clone() {
      return new PersonContractStruct(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///ContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 3;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 5;
    private global::GrpcConferenceContractServiceNew.MemTranslationStruct memTranslation_;
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.MemTranslationStruct MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = value;
      }
    }

    /// <summary>Field number for the "PCIsdelete" field.</summary>
    public const int PCIsdeleteFieldNumber = 6;
    private bool pCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PCIsdelete {
      get { return pCIsdelete_; }
      set {
        pCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 11;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 12;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 13;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 14;
    private string cTypeCode_ = "";
    /// <summary>
    ///ContractType合同大类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 15;
    private global::GrpcConferenceContractServiceNew.CompanyContractStruct companyContract_;
    /// <summary>
    ///二级合同对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 16;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 17;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送Email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 18;
    private bool isModify_;
    /// <summary>
    ///是否修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 19;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFianceRecord" field.</summary>
    public const int IsFianceRecordFieldNumber = 20;
    private bool isFianceRecord_;
    /// <summary>
    ///是否有财务记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFianceRecord {
      get { return isFianceRecord_; }
      set {
        isFianceRecord_ = value;
      }
    }

    /// <summary>Field number for the "IsInviteCode" field.</summary>
    public const int IsInviteCodeFieldNumber = 21;
    private bool isInviteCode_;
    /// <summary>
    ///是否是邀请码创建合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInviteCode {
      get { return isInviteCode_; }
      set {
        isInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 22;
    private string inviteCodeId_ = "";
    /// <summary>
    ///InviteCodeId邀请码Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCommitAbstract" field.</summary>
    public const int IsCommitAbstractFieldNumber = 23;
    private bool isCommitAbstract_;
    /// <summary>
    ///是否提交摘要
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCommitAbstract {
      get { return isCommitAbstract_; }
      set {
        isCommitAbstract_ = value;
      }
    }

    /// <summary>Field number for the "IsPrint" field.</summary>
    public const int IsPrintFieldNumber = 24;
    private bool isPrint_;
    /// <summary>
    ///是否打印
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "PaidAmount" field.</summary>
    public const int PaidAmountFieldNumber = 25;
    private string paidAmount_ = "";
    /// <summary>
    ///已付金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaidAmount {
      get { return paidAmount_; }
      set {
        paidAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (ContractId != other.ContractId) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (!object.Equals(MemTranslation, other.MemTranslation)) return false;
      if (PCIsdelete != other.PCIsdelete) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (IsFianceRecord != other.IsFianceRecord) return false;
      if (IsInviteCode != other.IsInviteCode) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsCommitAbstract != other.IsCommitAbstract) return false;
      if (IsPrint != other.IsPrint) return false;
      if (PaidAmount != other.PaidAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (memTranslation_ != null) hash ^= MemTranslation.GetHashCode();
      if (PCIsdelete != false) hash ^= PCIsdelete.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (IsFianceRecord != false) hash ^= IsFianceRecord.GetHashCode();
      if (IsInviteCode != false) hash ^= IsInviteCode.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsCommitAbstract != false) hash ^= IsCommitAbstract.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (PaidAmount.Length != 0) hash ^= PaidAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (memTranslation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MemTranslation);
      }
      if (PCIsdelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(PCIsdelete);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CTypeCode);
      }
      if (companyContract_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CompanyContract);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsCheckIn);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsModify);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ConferenceId);
      }
      if (IsFianceRecord != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsFianceRecord);
      }
      if (IsInviteCode != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsInviteCode);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCommitAbstract);
      }
      if (IsPrint != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsPrint);
      }
      if (PaidAmount.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PaidAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (memTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemTranslation);
      }
      if (PCIsdelete != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (IsSendEmail != false) {
        size += 2 + 1;
      }
      if (IsModify != false) {
        size += 2 + 1;
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (IsFianceRecord != false) {
        size += 2 + 1;
      }
      if (IsInviteCode != false) {
        size += 2 + 1;
      }
      if (InviteCodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        size += 2 + 1;
      }
      if (IsPrint != false) {
        size += 2 + 1;
      }
      if (PaidAmount.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaidAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.memTranslation_ != null) {
        if (memTranslation_ == null) {
          memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
        }
        MemTranslation.MergeFrom(other.MemTranslation);
      }
      if (other.PCIsdelete != false) {
        PCIsdelete = other.PCIsdelete;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.IsFianceRecord != false) {
        IsFianceRecord = other.IsFianceRecord;
      }
      if (other.IsInviteCode != false) {
        IsInviteCode = other.IsInviteCode;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsCommitAbstract != false) {
        IsCommitAbstract = other.IsCommitAbstract;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.PaidAmount.Length != 0) {
        PaidAmount = other.PaidAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            if (memTranslation_ == null) {
              memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
            }
            input.ReadMessage(memTranslation_);
            break;
          }
          case 48: {
            PCIsdelete = input.ReadBool();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 90: {
            Owerid = input.ReadString();
            break;
          }
          case 98: {
            Ower = input.ReadString();
            break;
          }
          case 106: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 114: {
            CTypeCode = input.ReadString();
            break;
          }
          case 122: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 128: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 136: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 144: {
            IsModify = input.ReadBool();
            break;
          }
          case 154: {
            ConferenceId = input.ReadString();
            break;
          }
          case 160: {
            IsFianceRecord = input.ReadBool();
            break;
          }
          case 168: {
            IsInviteCode = input.ReadBool();
            break;
          }
          case 178: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 184: {
            IsCommitAbstract = input.ReadBool();
            break;
          }
          case 192: {
            IsPrint = input.ReadBool();
            break;
          }
          case 202: {
            PaidAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackStruct : pb::IMessage<CompanyServicePackStruct> {
    private static readonly pb::MessageParser<CompanyServicePackStruct> _parser = new pb::MessageParser<CompanyServicePackStruct>(() => new CompanyServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct(CompanyServicePackStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      contractTypeId_ = other.contractTypeId_;
      sort_ = other.sort_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      isShownOnFront_ = other.isShownOnFront_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      RemarkTranslation = other.remarkTranslation_ != null ? other.RemarkTranslation.Clone() : null;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isSpeaker_ = other.isSpeaker_;
      cTypeCode_ = other.cTypeCode_;
      isGive_ = other.isGive_;
      year_ = other.year_;
      remarkCode_ = other.remarkCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct Clone() {
      return new CompanyServicePackStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 2;
    private string contractTypeId_ = "";
    /// <summary>
    ///ContractTypeId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 3;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.TranslationStruct translation_;
    /// <summary>
    ///套餐名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 5;
    private string priceRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 6;
    private string priceUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsShownOnFront" field.</summary>
    public const int IsShownOnFrontFieldNumber = 7;
    private bool isShownOnFront_;
    /// <summary>
    ///是否在前端显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShownOnFront {
      get { return isShownOnFront_; }
      set {
        isShownOnFront_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 10;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 11;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 12;
    private global::GrpcConferenceContractServiceNew.TranslationStruct remarkTranslation_;
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 13;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 14;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 15;
    private bool isSpeaker_;
    /// <summary>
    ///是否是演讲人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 16;
    private string cTypeCode_ = "";
    /// <summary>
    ///合同大类Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 17;
    private bool isGive_;
    /// <summary>
    ///是否赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkCode" field.</summary>
    public const int RemarkCodeFieldNumber = 19;
    private string remarkCode_ = "";
    /// <summary>
    ///说明Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkCode {
      get { return remarkCode_; }
      set {
        remarkCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Sort != other.Sort) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (IsShownOnFront != other.IsShownOnFront) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(RemarkTranslation, other.RemarkTranslation)) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (IsGive != other.IsGive) return false;
      if (Year != other.Year) return false;
      if (RemarkCode != other.RemarkCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (IsShownOnFront != false) hash ^= IsShownOnFront.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (remarkTranslation_ != null) hash ^= RemarkTranslation.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (RemarkCode.Length != 0) hash ^= RemarkCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractTypeId);
      }
      if (Sort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sort);
      }
      if (translation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceUSD);
      }
      if (IsShownOnFront != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsShownOnFront);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ConferenceName);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsSpeaker);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CTypeCode);
      }
      if (IsGive != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsGive);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (RemarkCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RemarkCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (IsShownOnFront != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (CTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (IsGive != false) {
        size += 2 + 1;
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (RemarkCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.IsShownOnFront != false) {
        IsShownOnFront = other.IsShownOnFront;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.remarkTranslation_ != null) {
        if (remarkTranslation_ == null) {
          remarkTranslation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        RemarkTranslation.MergeFrom(other.RemarkTranslation);
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.RemarkCode.Length != 0) {
        RemarkCode = other.RemarkCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 24: {
            Sort = input.ReadInt32();
            break;
          }
          case 34: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 42: {
            PriceRMB = input.ReadString();
            break;
          }
          case 50: {
            PriceUSD = input.ReadString();
            break;
          }
          case 56: {
            IsShownOnFront = input.ReadBool();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 90: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 98: {
            if (remarkTranslation_ == null) {
              remarkTranslation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(remarkTranslation_);
            break;
          }
          case 106: {
            ConferenceId = input.ReadString();
            break;
          }
          case 114: {
            ConferenceName = input.ReadString();
            break;
          }
          case 120: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 130: {
            CTypeCode = input.ReadString();
            break;
          }
          case 136: {
            IsGive = input.ReadBool();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 154: {
            RemarkCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackVMStruct : pb::IMessage<CompanyServicePackVMStruct> {
    private static readonly pb::MessageParser<CompanyServicePackVMStruct> _parser = new pb::MessageParser<CompanyServicePackVMStruct>(() => new CompanyServicePackVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct(CompanyServicePackVMStruct other) : this() {
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      servicepackListdata_ = other.servicepackListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct Clone() {
      return new CompanyServicePackVMStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///公司套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "servicepack_listdata" field.</summary>
    public const int ServicepackListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ServicePackStruct> _repeated_servicepackListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> servicepackListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct>();
    /// <summary>
    ///子套餐列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> ServicepackListdata {
      get { return servicepackListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if(!servicepackListdata_.Equals(other.servicepackListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      hash ^= servicepackListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (companyServicePack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CompanyServicePack);
      }
      servicepackListdata_.WriteTo(output, _repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (companyServicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      size += servicepackListdata_.CalculateSize(_repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      servicepackListdata_.Add(other.servicepackListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 18: {
            servicepackListdata_.AddEntriesFrom(input, _repeated_servicepackListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceVMStruct : pb::IMessage<ExtraServiceVMStruct> {
    private static readonly pb::MessageParser<ExtraServiceVMStruct> _parser = new pb::MessageParser<ExtraServiceVMStruct>(() => new ExtraServiceVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct(ExtraServiceVMStruct other) : this() {
      ExtraService = other.extraService_ != null ? other.ExtraService.Clone() : null;
      servicepackListdata_ = other.servicepackListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct Clone() {
      return new ExtraServiceVMStruct(this);
    }

    /// <summary>Field number for the "ExtraService" field.</summary>
    public const int ExtraServiceFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.ExtraServiceStruct extraService_;
    /// <summary>
    ///额外服务对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ExtraServiceStruct ExtraService {
      get { return extraService_; }
      set {
        extraService_ = value;
      }
    }

    /// <summary>Field number for the "servicepack_listdata" field.</summary>
    public const int ServicepackListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ServicePackStruct> _repeated_servicepackListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> servicepackListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct>();
    /// <summary>
    ///子套餐列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ServicePackStruct> ServicepackListdata {
      get { return servicepackListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExtraService, other.ExtraService)) return false;
      if(!servicepackListdata_.Equals(other.servicepackListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (extraService_ != null) hash ^= ExtraService.GetHashCode();
      hash ^= servicepackListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (extraService_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExtraService);
      }
      servicepackListdata_.WriteTo(output, _repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (extraService_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraService);
      }
      size += servicepackListdata_.CalculateSize(_repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.extraService_ != null) {
        if (extraService_ == null) {
          extraService_ = new global::GrpcConferenceContractServiceNew.ExtraServiceStruct();
        }
        ExtraService.MergeFrom(other.ExtraService);
      }
      servicepackListdata_.Add(other.servicepackListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (extraService_ == null) {
              extraService_ = new global::GrpcConferenceContractServiceNew.ExtraServiceStruct();
            }
            input.ReadMessage(extraService_);
            break;
          }
          case 18: {
            servicepackListdata_.AddEntriesFrom(input, _repeated_servicepackListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackVMStruct : pb::IMessage<ServicePackVMStruct> {
    private static readonly pb::MessageParser<ServicePackVMStruct> _parser = new pb::MessageParser<ServicePackVMStruct>(() => new ServicePackVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct(ServicePackVMStruct other) : this() {
      ServicePack = other.servicePack_ != null ? other.ServicePack.Clone() : null;
      activityListdata_ = other.activityListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct Clone() {
      return new ServicePackVMStruct(this);
    }

    /// <summary>Field number for the "ServicePack" field.</summary>
    public const int ServicePackFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.ServicePackStruct servicePack_;
    /// <summary>
    ///ServicePack对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ServicePackStruct ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = value;
      }
    }

    /// <summary>Field number for the "activity_listdata" field.</summary>
    public const int ActivityListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ActivityStruct> _repeated_activityListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.ActivityStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ActivityStruct> activityListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ActivityStruct>();
    /// <summary>
    ///Activity列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ActivityStruct> ActivityListdata {
      get { return activityListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ServicePack, other.ServicePack)) return false;
      if(!activityListdata_.Equals(other.activityListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (servicePack_ != null) hash ^= ServicePack.GetHashCode();
      hash ^= activityListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (servicePack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ServicePack);
      }
      activityListdata_.WriteTo(output, _repeated_activityListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (servicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServicePack);
      }
      size += activityListdata_.CalculateSize(_repeated_activityListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.servicePack_ != null) {
        if (servicePack_ == null) {
          servicePack_ = new global::GrpcConferenceContractServiceNew.ServicePackStruct();
        }
        ServicePack.MergeFrom(other.ServicePack);
      }
      activityListdata_.Add(other.activityListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (servicePack_ == null) {
              servicePack_ = new global::GrpcConferenceContractServiceNew.ServicePackStruct();
            }
            input.ReadMessage(servicePack_);
            break;
          }
          case 18: {
            activityListdata_.AddEntriesFrom(input, _repeated_activityListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceStruct : pb::IMessage<ExtraServiceStruct> {
    private static readonly pb::MessageParser<ExtraServiceStruct> _parser = new pb::MessageParser<ExtraServiceStruct>(() => new ExtraServiceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct(ExtraServiceStruct other) : this() {
      extraServiceId_ = other.extraServiceId_;
      extraContractNumber_ = other.extraContractNumber_;
      memberPK_ = other.memberPK_;
      MemTranslation = other.memTranslation_ != null ? other.MemTranslation.Clone() : null;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct Clone() {
      return new ExtraServiceStruct(this);
    }

    /// <summary>Field number for the "ExtraServiceId" field.</summary>
    public const int ExtraServiceIdFieldNumber = 1;
    private string extraServiceId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraServiceId {
      get { return extraServiceId_; }
      set {
        extraServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExtraContractNumber" field.</summary>
    public const int ExtraContractNumberFieldNumber = 2;
    private string extraContractNumber_ = "";
    /// <summary>
    ///额外服务合同的合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraContractNumber {
      get { return extraContractNumber_; }
      set {
        extraContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.MemTranslationStruct memTranslation_;
    /// <summary>
    ///会员中英文名json格式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.MemTranslationStruct MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 5;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 6;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExtraServiceId != other.ExtraServiceId) return false;
      if (ExtraContractNumber != other.ExtraContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (!object.Equals(MemTranslation, other.MemTranslation)) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExtraServiceId.Length != 0) hash ^= ExtraServiceId.GetHashCode();
      if (ExtraContractNumber.Length != 0) hash ^= ExtraContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (memTranslation_ != null) hash ^= MemTranslation.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExtraServiceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExtraServiceId);
      }
      if (ExtraContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (memTranslation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MemTranslation);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExtraServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraServiceId);
      }
      if (ExtraContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (memTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemTranslation);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceStruct other) {
      if (other == null) {
        return;
      }
      if (other.ExtraServiceId.Length != 0) {
        ExtraServiceId = other.ExtraServiceId;
      }
      if (other.ExtraContractNumber.Length != 0) {
        ExtraContractNumber = other.ExtraContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.memTranslation_ != null) {
        if (memTranslation_ == null) {
          memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
        }
        MemTranslation.MergeFrom(other.MemTranslation);
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExtraServiceId = input.ReadString();
            break;
          }
          case 18: {
            ExtraContractNumber = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            if (memTranslation_ == null) {
              memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
            }
            input.ReadMessage(memTranslation_);
            break;
          }
          case 42: {
            Owerid = input.ReadString();
            break;
          }
          case 50: {
            Ower = input.ReadString();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackStruct : pb::IMessage<ServicePackStruct> {
    private static readonly pb::MessageParser<ServicePackStruct> _parser = new pb::MessageParser<ServicePackStruct>(() => new ServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct(ServicePackStruct other) : this() {
      servicePackId_ = other.servicePackId_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      sessionDate_ = other.sessionDate_;
      sessionStartTime_ = other.sessionStartTime_;
      thirdSessionConferenceId_ = other.thirdSessionConferenceId_;
      thirdSessionConferenceName_ = other.thirdSessionConferenceName_;
      sessionAddress_ = other.sessionAddress_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct Clone() {
      return new ServicePackStruct(this);
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 1;
    private string servicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.TranslationStruct translation_;
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 3;
    private string priceRMB_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 4;
    private string priceUSD_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 9;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 10;
    private string conferenceName_ = "";
    /// <summary>
    ///ConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 11;
    private string sessionConferenceId_ = "";
    /// <summary>
    ///SessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 12;
    private string sessionConferenceName_ = "";
    /// <summary>
    ///SessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionDate" field.</summary>
    public const int SessionDateFieldNumber = 13;
    private string sessionDate_ = "";
    /// <summary>
    ///SessionDate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionDate {
      get { return sessionDate_; }
      set {
        sessionDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionStartTime" field.</summary>
    public const int SessionStartTimeFieldNumber = 14;
    private string sessionStartTime_ = "";
    /// <summary>
    ///SessionStartTime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionStartTime {
      get { return sessionStartTime_; }
      set {
        sessionStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceId" field.</summary>
    public const int ThirdSessionConferenceIdFieldNumber = 15;
    private string thirdSessionConferenceId_ = "";
    /// <summary>
    ///ThirdSessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceId {
      get { return thirdSessionConferenceId_; }
      set {
        thirdSessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceName" field.</summary>
    public const int ThirdSessionConferenceNameFieldNumber = 16;
    private string thirdSessionConferenceName_ = "";
    /// <summary>
    ///ThirdSessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceName {
      get { return thirdSessionConferenceName_; }
      set {
        thirdSessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionAddress" field.</summary>
    public const int SessionAddressFieldNumber = 17;
    private string sessionAddress_ = "";
    /// <summary>
    ///地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionAddress {
      get { return sessionAddress_; }
      set {
        sessionAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServicePackId != other.ServicePackId) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      if (SessionDate != other.SessionDate) return false;
      if (SessionStartTime != other.SessionStartTime) return false;
      if (ThirdSessionConferenceId != other.ThirdSessionConferenceId) return false;
      if (ThirdSessionConferenceName != other.ThirdSessionConferenceName) return false;
      if (SessionAddress != other.SessionAddress) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (SessionDate.Length != 0) hash ^= SessionDate.GetHashCode();
      if (SessionStartTime.Length != 0) hash ^= SessionStartTime.GetHashCode();
      if (ThirdSessionConferenceId.Length != 0) hash ^= ThirdSessionConferenceId.GetHashCode();
      if (ThirdSessionConferenceName.Length != 0) hash ^= ThirdSessionConferenceName.GetHashCode();
      if (SessionAddress.Length != 0) hash ^= SessionAddress.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServicePackId);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SessionAddress);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionAddress);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      if (other.SessionDate.Length != 0) {
        SessionDate = other.SessionDate;
      }
      if (other.SessionStartTime.Length != 0) {
        SessionStartTime = other.SessionStartTime;
      }
      if (other.ThirdSessionConferenceId.Length != 0) {
        ThirdSessionConferenceId = other.ThirdSessionConferenceId;
      }
      if (other.ThirdSessionConferenceName.Length != 0) {
        ThirdSessionConferenceName = other.ThirdSessionConferenceName;
      }
      if (other.SessionAddress.Length != 0) {
        SessionAddress = other.SessionAddress;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServicePackId = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            PriceRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            ConferenceId = input.ReadString();
            break;
          }
          case 82: {
            ConferenceName = input.ReadString();
            break;
          }
          case 90: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 98: {
            SessionConferenceName = input.ReadString();
            break;
          }
          case 106: {
            SessionDate = input.ReadString();
            break;
          }
          case 114: {
            SessionStartTime = input.ReadString();
            break;
          }
          case 122: {
            ThirdSessionConferenceId = input.ReadString();
            break;
          }
          case 130: {
            ThirdSessionConferenceName = input.ReadString();
            break;
          }
          case 138: {
            SessionAddress = input.ReadString();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityStruct : pb::IMessage<ActivityStruct> {
    private static readonly pb::MessageParser<ActivityStruct> _parser = new pb::MessageParser<ActivityStruct>(() => new ActivityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct(ActivityStruct other) : this() {
      activityId_ = other.activityId_;
      ActivityName = other.activityName_ != null ? other.ActivityName.Clone() : null;
      sessionConferenceID_ = other.sessionConferenceID_;
      SessionConferenceName = other.sessionConferenceName_ != null ? other.SessionConferenceName.Clone() : null;
      sort_ = other.sort_;
      sessionIDs_ = other.sessionIDs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct Clone() {
      return new ActivityStruct(this);
    }

    /// <summary>Field number for the "ActivityId" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.TranslationStruct activityName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct ActivityName {
      get { return activityName_; }
      set {
        activityName_ = value;
      }
    }

    /// <summary>Field number for the "SessionConferenceID" field.</summary>
    public const int SessionConferenceIDFieldNumber = 3;
    private string sessionConferenceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceID {
      get { return sessionConferenceID_; }
      set {
        sessionConferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.TranslationStruct sessionConferenceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "SessionIDs" field.</summary>
    public const int SessionIDsFieldNumber = 6;
    private string sessionIDs_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionIDs {
      get { return sessionIDs_; }
      set {
        sessionIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (!object.Equals(ActivityName, other.ActivityName)) return false;
      if (SessionConferenceID != other.SessionConferenceID) return false;
      if (!object.Equals(SessionConferenceName, other.SessionConferenceName)) return false;
      if (Sort != other.Sort) return false;
      if (SessionIDs != other.SessionIDs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (activityName_ != null) hash ^= ActivityName.GetHashCode();
      if (SessionConferenceID.Length != 0) hash ^= SessionConferenceID.GetHashCode();
      if (sessionConferenceName_ != null) hash ^= SessionConferenceName.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (SessionIDs.Length != 0) hash ^= SessionIDs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
      if (activityName_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionConferenceName);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (SessionIDs.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SessionIDs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (activityName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionConferenceName);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (SessionIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionIDs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.activityName_ != null) {
        if (activityName_ == null) {
          activityName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        ActivityName.MergeFrom(other.ActivityName);
      }
      if (other.SessionConferenceID.Length != 0) {
        SessionConferenceID = other.SessionConferenceID;
      }
      if (other.sessionConferenceName_ != null) {
        if (sessionConferenceName_ == null) {
          sessionConferenceName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        SessionConferenceName.MergeFrom(other.SessionConferenceName);
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.SessionIDs.Length != 0) {
        SessionIDs = other.SessionIDs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
          case 18: {
            if (activityName_ == null) {
              activityName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(activityName_);
            break;
          }
          case 26: {
            SessionConferenceID = input.ReadString();
            break;
          }
          case 34: {
            if (sessionConferenceName_ == null) {
              sessionConferenceName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(sessionConferenceName_);
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            SessionIDs = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CCNumberConfigStruct : pb::IMessage<CCNumberConfigStruct> {
    private static readonly pb::MessageParser<CCNumberConfigStruct> _parser = new pb::MessageParser<CCNumberConfigStruct>(() => new CCNumberConfigStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CCNumberConfigStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct(CCNumberConfigStruct other) : this() {
      id_ = other.id_;
      prefix_ = other.prefix_;
      year_ = other.year_;
      cNano_ = other.cNano_;
      count_ = other.count_;
      status_ = other.status_;
      isDelete_ = other.isDelete_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct Clone() {
      return new CCNumberConfigStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Prefix" field.</summary>
    public const int PrefixFieldNumber = 2;
    private string prefix_ = "";
    /// <summary>
    ///前缀
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CNano" field.</summary>
    public const int CNanoFieldNumber = 4;
    private string cNano_ = "";
    /// <summary>
    ///合同规则英文简称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CNano {
      get { return cNano_; }
      set {
        cNano_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    /// <summary>
    ///合同计数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 6;
    private int status_;
    /// <summary>
    ///合同规则使用状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 7;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 8;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 9;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CCNumberConfigStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CCNumberConfigStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Prefix != other.Prefix) return false;
      if (Year != other.Year) return false;
      if (CNano != other.CNano) return false;
      if (Count != other.Count) return false;
      if (Status != other.Status) return false;
      if (IsDelete != other.IsDelete) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CNano.Length != 0) hash ^= CNano.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Prefix);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Year);
      }
      if (CNano.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CNano);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (IsDelete != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDelete);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CNano.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CNano);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CCNumberConfigStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CNano.Length != 0) {
        CNano = other.CNano;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Prefix = input.ReadString();
            break;
          }
          case 26: {
            Year = input.ReadString();
            break;
          }
          case 34: {
            CNano = input.ReadString();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 56: {
            IsDelete = input.ReadBool();
            break;
          }
          case 66: {
            ConferenceId = input.ReadString();
            break;
          }
          case 74: {
            ConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractTypeStruct : pb::IMessage<ContractTypeStruct> {
    private static readonly pb::MessageParser<ContractTypeStruct> _parser = new pb::MessageParser<ContractTypeStruct>(() => new ContractTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct(ContractTypeStruct other) : this() {
      contractTypeId_ = other.contractTypeId_;
      sort_ = other.sort_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      cTypeCode_ = other.cTypeCode_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      isSpeaker_ = other.isSpeaker_;
      isGive_ = other.isGive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct Clone() {
      return new ContractTypeStruct(this);
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 1;
    private string contractTypeId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 2;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.TranslationStruct translation_;
    /// <summary>
    ///合同类别名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 4;
    private string cTypeCode_ = "";
    /// <summary>
    ///合同类别Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 9;
    private bool isSpeaker_;
    /// <summary>
    ///是否是演讲人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 10;
    private bool isGive_;
    /// <summary>
    ///是否赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Sort != other.Sort) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (IsGive != other.IsGive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractTypeId);
      }
      if (Sort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sort);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CTypeCode);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsSpeaker);
      }
      if (IsGive != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsGive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (IsGive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 16: {
            Sort = input.ReadInt32();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 34: {
            CTypeCode = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 72: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 80: {
            IsGive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountListStruct : pb::IMessage<DelegateServicePackDiscountListStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountListStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountListStruct>(() => new DelegateServicePackDiscountListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct(DelegateServicePackDiscountListStruct other) : this() {
      discountId_ = other.discountId_;
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct Clone() {
      return new DelegateServicePackDiscountListStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.CompanyContractStruct companyContract_;
    /// <summary>
    ///CompanyContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (companyContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompanyContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountListStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractListStruct : pb::IMessage<DelegateServicePackDiscountForConferenceContractListStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct>(() => new DelegateServicePackDiscountForConferenceContractListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct(DelegateServicePackDiscountForConferenceContractListStruct other) : this() {
      discountId_ = other.discountId_;
      ConferenceContract = other.conferenceContract_ != null ? other.ConferenceContract.Clone() : null;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct Clone() {
      return new DelegateServicePackDiscountForConferenceContractListStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContract" field.</summary>
    public const int ConferenceContractFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.ConferenceContractStruct conferenceContract_;
    /// <summary>
    ///ConferenceContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ConferenceContractStruct ConferenceContract {
      get { return conferenceContract_; }
      set {
        conferenceContract_ = value;
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (!object.Equals(ConferenceContract, other.ConferenceContract)) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (conferenceContract_ != null) hash ^= ConferenceContract.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (conferenceContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConferenceContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (conferenceContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConferenceContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractListStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.conferenceContract_ != null) {
        if (conferenceContract_ == null) {
          conferenceContract_ = new global::GrpcConferenceContractServiceNew.ConferenceContractStruct();
        }
        ConferenceContract.MergeFrom(other.ConferenceContract);
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            if (conferenceContract_ == null) {
              conferenceContract_ = new global::GrpcConferenceContractServiceNew.ConferenceContractStruct();
            }
            input.ReadMessage(conferenceContract_);
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractStruct : pb::IMessage<DelegateServicePackDiscountForConferenceContractStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct>(() => new DelegateServicePackDiscountForConferenceContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct(DelegateServicePackDiscountForConferenceContractStruct other) : this() {
      discountId_ = other.discountId_;
      conferenceContractId_ = other.conferenceContractId_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct Clone() {
      return new DelegateServicePackDiscountForConferenceContractStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 2;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountStruct : pb::IMessage<DelegateServicePackDiscountStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountStruct>(() => new DelegateServicePackDiscountStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct(DelegateServicePackDiscountStruct other) : this() {
      discountId_ = other.discountId_;
      contractId_ = other.contractId_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct Clone() {
      return new DelegateServicePackDiscountStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///ContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (ContractId != other.ContractId) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TranslationStruct : pb::IMessage<TranslationStruct> {
    private static readonly pb::MessageParser<TranslationStruct> _parser = new pb::MessageParser<TranslationStruct>(() => new TranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct(TranslationStruct other) : this() {
      cN_ = other.cN_;
      eN_ = other.eN_;
      jP_ = other.jP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct Clone() {
      return new TranslationStruct(this);
    }

    /// <summary>Field number for the "CN" field.</summary>
    public const int CNFieldNumber = 1;
    private string cN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CN {
      get { return cN_; }
      set {
        cN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EN" field.</summary>
    public const int ENFieldNumber = 2;
    private string eN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EN {
      get { return eN_; }
      set {
        eN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JP" field.</summary>
    public const int JPFieldNumber = 3;
    private string jP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JP {
      get { return jP_; }
      set {
        jP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CN != other.CN) return false;
      if (EN != other.EN) return false;
      if (JP != other.JP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CN.Length != 0) hash ^= CN.GetHashCode();
      if (EN.Length != 0) hash ^= EN.GetHashCode();
      if (JP.Length != 0) hash ^= JP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CN);
      }
      if (EN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EN);
      }
      if (JP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CN);
      }
      if (EN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EN);
      }
      if (JP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.CN.Length != 0) {
        CN = other.CN;
      }
      if (other.EN.Length != 0) {
        EN = other.EN;
      }
      if (other.JP.Length != 0) {
        JP = other.JP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CN = input.ReadString();
            break;
          }
          case 18: {
            EN = input.ReadString();
            break;
          }
          case 26: {
            JP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComNameTranslationStruct : pb::IMessage<ComNameTranslationStruct> {
    private static readonly pb::MessageParser<ComNameTranslationStruct> _parser = new pb::MessageParser<ComNameTranslationStruct>(() => new ComNameTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComNameTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct(ComNameTranslationStruct other) : this() {
      companyCN_ = other.companyCN_;
      companyEN_ = other.companyEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct Clone() {
      return new ComNameTranslationStruct(this);
    }

    /// <summary>Field number for the "CompanyCN" field.</summary>
    public const int CompanyCNFieldNumber = 1;
    private string companyCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyCN {
      get { return companyCN_; }
      set {
        companyCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyEN" field.</summary>
    public const int CompanyENFieldNumber = 2;
    private string companyEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyEN {
      get { return companyEN_; }
      set {
        companyEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComNameTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComNameTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyCN != other.CompanyCN) return false;
      if (CompanyEN != other.CompanyEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyCN.Length != 0) hash ^= CompanyCN.GetHashCode();
      if (CompanyEN.Length != 0) hash ^= CompanyEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyCN);
      }
      if (CompanyEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyCN);
      }
      if (CompanyEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComNameTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyCN.Length != 0) {
        CompanyCN = other.CompanyCN;
      }
      if (other.CompanyEN.Length != 0) {
        CompanyEN = other.CompanyEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyCN = input.ReadString();
            break;
          }
          case 18: {
            CompanyEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressTranslationStruct : pb::IMessage<AddressTranslationStruct> {
    private static readonly pb::MessageParser<AddressTranslationStruct> _parser = new pb::MessageParser<AddressTranslationStruct>(() => new AddressTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct(AddressTranslationStruct other) : this() {
      addressCN_ = other.addressCN_;
      addressEN_ = other.addressEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct Clone() {
      return new AddressTranslationStruct(this);
    }

    /// <summary>Field number for the "AddressCN" field.</summary>
    public const int AddressCNFieldNumber = 1;
    private string addressCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressCN {
      get { return addressCN_; }
      set {
        addressCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressEN" field.</summary>
    public const int AddressENFieldNumber = 2;
    private string addressEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressEN {
      get { return addressEN_; }
      set {
        addressEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddressCN != other.AddressCN) return false;
      if (AddressEN != other.AddressEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AddressCN.Length != 0) hash ^= AddressCN.GetHashCode();
      if (AddressEN.Length != 0) hash ^= AddressEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AddressCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AddressCN);
      }
      if (AddressEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AddressEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AddressCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressCN);
      }
      if (AddressEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.AddressCN.Length != 0) {
        AddressCN = other.AddressCN;
      }
      if (other.AddressEN.Length != 0) {
        AddressEN = other.AddressEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AddressCN = input.ReadString();
            break;
          }
          case 18: {
            AddressEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemTranslationStruct : pb::IMessage<MemTranslationStruct> {
    private static readonly pb::MessageParser<MemTranslationStruct> _parser = new pb::MessageParser<MemTranslationStruct>(() => new MemTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct(MemTranslationStruct other) : this() {
      memberCN_ = other.memberCN_;
      memberEN_ = other.memberEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct Clone() {
      return new MemTranslationStruct(this);
    }

    /// <summary>Field number for the "MemberCN" field.</summary>
    public const int MemberCNFieldNumber = 1;
    private string memberCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCN {
      get { return memberCN_; }
      set {
        memberCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberEN" field.</summary>
    public const int MemberENFieldNumber = 2;
    private string memberEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberEN {
      get { return memberEN_; }
      set {
        memberEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberCN != other.MemberCN) return false;
      if (MemberEN != other.MemberEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberCN.Length != 0) hash ^= MemberCN.GetHashCode();
      if (MemberEN.Length != 0) hash ^= MemberEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberCN);
      }
      if (MemberEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCN);
      }
      if (MemberEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberCN.Length != 0) {
        MemberCN = other.MemberCN;
      }
      if (other.MemberEN.Length != 0) {
        MemberEN = other.MemberEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberCN = input.ReadString();
            break;
          }
          case 18: {
            MemberEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyRequest : pb::IMessage<ModifyRequest> {
    private static readonly pb::MessageParser<ModifyRequest> _parser = new pb::MessageParser<ModifyRequest>(() => new ModifyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest(ModifyRequest other) : this() {
      id_ = other.id_;
      isCheckIn_ = other.isCheckIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest Clone() {
      return new ModifyRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 2;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            IsCheckIn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReply : pb::IMessage<ModifyReply> {
    private static readonly pb::MessageParser<ModifyReply> _parser = new pb::MessageParser<ModifyReply>(() => new ModifyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply(ModifyReply other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply Clone() {
      return new ModifyReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///是否成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    /// <summary>
    ///成功的条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    /// <summary>
    ///返回的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForConferenceOnsite : pb::IMessage<ModifyReplyForConferenceOnsite> {
    private static readonly pb::MessageParser<ModifyReplyForConferenceOnsite> _parser = new pb::MessageParser<ModifyReplyForConferenceOnsite>(() => new ModifyReplyForConferenceOnsite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForConferenceOnsite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite(ModifyReplyForConferenceOnsite other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ConferenceOnsite = other.conferenceOnsite_ != null ? other.ConferenceOnsite.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite Clone() {
      return new ModifyReplyForConferenceOnsite(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///是否成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    /// <summary>
    ///成功的条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    /// <summary>
    ///返回的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceOnsite" field.</summary>
    public const int ConferenceOnsiteFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct conferenceOnsite_;
    /// <summary>
    ///ConferenceOnsite对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct ConferenceOnsite {
      get { return conferenceOnsite_; }
      set {
        conferenceOnsite_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForConferenceOnsite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForConferenceOnsite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (!object.Equals(ConferenceOnsite, other.ConferenceOnsite)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (conferenceOnsite_ != null) hash ^= ConferenceOnsite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (conferenceOnsite_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ConferenceOnsite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (conferenceOnsite_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConferenceOnsite);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForConferenceOnsite other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.conferenceOnsite_ != null) {
        if (conferenceOnsite_ == null) {
          conferenceOnsite_ = new global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct();
        }
        ConferenceOnsite.MergeFrom(other.ConferenceOnsite);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            if (conferenceOnsite_ == null) {
              conferenceOnsite_ = new global::GrpcConferenceContractServiceNew.ConferenceOnsiteStruct();
            }
            input.ReadMessage(conferenceOnsite_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResultReply : pb::IMessage<ResultReply> {
    private static readonly pb::MessageParser<ResultReply> _parser = new pb::MessageParser<ResultReply>(() => new ResultReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply(ResultReply other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply Clone() {
      return new ResultReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicForDicList : pb::IMessage<ContractStatusDicForDicList> {
    private static readonly pb::MessageParser<ContractStatusDicForDicList> _parser = new pb::MessageParser<ContractStatusDicForDicList>(() => new ContractStatusDicForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList(ContractStatusDicForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList Clone() {
      return new ContractStatusDicForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ContractStatusDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicForDicList : pb::IMessage<RemarkDicForDicList> {
    private static readonly pb::MessageParser<RemarkDicForDicList> _parser = new pb::MessageParser<RemarkDicForDicList>(() => new RemarkDicForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList(RemarkDicForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList Clone() {
      return new RemarkDicForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.RemarkDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.RemarkDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagTypeForDicList : pb::IMessage<TagTypeForDicList> {
    private static readonly pb::MessageParser<TagTypeForDicList> _parser = new pb::MessageParser<TagTypeForDicList>(() => new TagTypeForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagTypeForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList(TagTypeForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList Clone() {
      return new TagTypeForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.TagTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.TagTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.TagTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.TagTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.TagTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagTypeForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagTypeForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagTypeForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearConfigForDicList : pb::IMessage<YearConfigForDicList> {
    private static readonly pb::MessageParser<YearConfigForDicList> _parser = new pb::MessageParser<YearConfigForDicList>(() => new YearConfigForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearConfigForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList(YearConfigForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList Clone() {
      return new YearConfigForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.YearConfigStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.YearConfigStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.YearConfigStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.YearConfigStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.YearConfigStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearConfigForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearConfigForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearConfigForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicList : pb::IMessage<ContractStatusDicList> {
    private static readonly pb::MessageParser<ContractStatusDicList> _parser = new pb::MessageParser<ContractStatusDicList>(() => new ContractStatusDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList(ContractStatusDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList Clone() {
      return new ContractStatusDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ContractStatusDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ContractStatusDicStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicList : pb::IMessage<RemarkDicList> {
    private static readonly pb::MessageParser<RemarkDicList> _parser = new pb::MessageParser<RemarkDicList>(() => new RemarkDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList(RemarkDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList Clone() {
      return new RemarkDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.RemarkDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.RemarkDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.RemarkDicStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicStruct : pb::IMessage<ContractStatusDicStruct> {
    private static readonly pb::MessageParser<ContractStatusDicStruct> _parser = new pb::MessageParser<ContractStatusDicStruct>(() => new ContractStatusDicStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct(ContractStatusDicStruct other) : this() {
      id_ = other.id_;
      statusName_ = other.statusName_;
      statusCode_ = other.statusCode_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct Clone() {
      return new ContractStatusDicStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusName" field.</summary>
    public const int StatusNameFieldNumber = 2;
    private string statusName_ = "";
    /// <summary>
    ///状态名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusName {
      get { return statusName_; }
      set {
        statusName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusCode" field.</summary>
    public const int StatusCodeFieldNumber = 3;
    private string statusCode_ = "";
    /// <summary>
    ///状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 6;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 7;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StatusName != other.StatusName) return false;
      if (StatusCode != other.StatusCode) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StatusName.Length != 0) hash ^= StatusName.GetHashCode();
      if (StatusCode.Length != 0) hash ^= StatusCode.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (StatusName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StatusName);
      }
      if (StatusCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StatusCode);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (StatusName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusName);
      }
      if (StatusCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusCode);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StatusName.Length != 0) {
        StatusName = other.StatusName;
      }
      if (other.StatusCode.Length != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            StatusName = input.ReadString();
            break;
          }
          case 26: {
            StatusCode = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 58: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicStruct : pb::IMessage<RemarkDicStruct> {
    private static readonly pb::MessageParser<RemarkDicStruct> _parser = new pb::MessageParser<RemarkDicStruct>(() => new RemarkDicStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct(RemarkDicStruct other) : this() {
      id_ = other.id_;
      contentCn_ = other.contentCn_;
      contentEn_ = other.contentEn_;
      contentJp_ = other.contentJp_;
      contentCode_ = other.contentCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct Clone() {
      return new RemarkDicStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentCn" field.</summary>
    public const int ContentCnFieldNumber = 2;
    private string contentCn_ = "";
    /// <summary>
    ///说明内容中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentCn {
      get { return contentCn_; }
      set {
        contentCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentEn" field.</summary>
    public const int ContentEnFieldNumber = 3;
    private string contentEn_ = "";
    /// <summary>
    ///说明内容英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentEn {
      get { return contentEn_; }
      set {
        contentEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentJp" field.</summary>
    public const int ContentJpFieldNumber = 4;
    private string contentJp_ = "";
    /// <summary>
    ///说明内容日文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentJp {
      get { return contentJp_; }
      set {
        contentJp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentCode" field.</summary>
    public const int ContentCodeFieldNumber = 5;
    private string contentCode_ = "";
    /// <summary>
    ///说明内容Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentCode {
      get { return contentCode_; }
      set {
        contentCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContentCn != other.ContentCn) return false;
      if (ContentEn != other.ContentEn) return false;
      if (ContentJp != other.ContentJp) return false;
      if (ContentCode != other.ContentCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ContentCn.Length != 0) hash ^= ContentCn.GetHashCode();
      if (ContentEn.Length != 0) hash ^= ContentEn.GetHashCode();
      if (ContentJp.Length != 0) hash ^= ContentJp.GetHashCode();
      if (ContentCode.Length != 0) hash ^= ContentCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ContentCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentCn);
      }
      if (ContentEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentEn);
      }
      if (ContentJp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentJp);
      }
      if (ContentCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ContentCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentCn);
      }
      if (ContentEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentEn);
      }
      if (ContentJp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentJp);
      }
      if (ContentCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ContentCn.Length != 0) {
        ContentCn = other.ContentCn;
      }
      if (other.ContentEn.Length != 0) {
        ContentEn = other.ContentEn;
      }
      if (other.ContentJp.Length != 0) {
        ContentJp = other.ContentJp;
      }
      if (other.ContentCode.Length != 0) {
        ContentCode = other.ContentCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ContentCn = input.ReadString();
            break;
          }
          case 26: {
            ContentEn = input.ReadString();
            break;
          }
          case 34: {
            ContentJp = input.ReadString();
            break;
          }
          case 42: {
            ContentCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForCreateOther : pb::IMessage<ModifyReplyForCreateOther> {
    private static readonly pb::MessageParser<ModifyReplyForCreateOther> _parser = new pb::MessageParser<ModifyReplyForCreateOther>(() => new ModifyReplyForCreateOther());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForCreateOther> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther(ModifyReplyForCreateOther other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ext1_ = other.ext1_;
      ext2_ = other.ext2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther Clone() {
      return new ModifyReplyForCreateOther(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext1" field.</summary>
    public const int Ext1FieldNumber = 4;
    private string ext1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext1 {
      get { return ext1_; }
      set {
        ext1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext2" field.</summary>
    public const int Ext2FieldNumber = 5;
    private string ext2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext2 {
      get { return ext2_; }
      set {
        ext2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForCreateOther);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForCreateOther other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (Ext1 != other.Ext1) return false;
      if (Ext2 != other.Ext2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Ext1.Length != 0) hash ^= Ext1.GetHashCode();
      if (Ext2.Length != 0) hash ^= Ext2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (Ext1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ext1);
      }
      if (Ext2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ext2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Ext1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext1);
      }
      if (Ext2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForCreateOther other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Ext1.Length != 0) {
        Ext1 = other.Ext1;
      }
      if (other.Ext2.Length != 0) {
        Ext2 = other.Ext2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            Ext1 = input.ReadString();
            break;
          }
          case 42: {
            Ext2 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapStruct : pb::IMessage<PersonContractActivityMapStruct> {
    private static readonly pb::MessageParser<PersonContractActivityMapStruct> _parser = new pb::MessageParser<PersonContractActivityMapStruct>(() => new PersonContractActivityMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct(PersonContractActivityMapStruct other) : this() {
      mapId_ = other.mapId_;
      memberPK_ = other.memberPK_;
      activityId_ = other.activityId_;
      activityName_ = other.activityName_;
      year_ = other.year_;
      isConfirm_ = other.isConfirm_;
      isCheck_ = other.isCheck_;
      personContractId_ = other.personContractId_;
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct Clone() {
      return new PersonContractActivityMapStruct(this);
    }

    /// <summary>Field number for the "MapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 2;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityId" field.</summary>
    public const int ActivityIdFieldNumber = 3;
    private string activityId_ = "";
    /// <summary>
    ///ActivityId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 4;
    private string activityName_ = "";
    /// <summary>
    ///ActivityName活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 5;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 6;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "IsCheck" field.</summary>
    public const int IsCheckFieldNumber = 7;
    private bool isCheck_;
    /// <summary>
    ///是否选中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheck {
      get { return isCheck_; }
      set {
        isCheck_ = value;
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 8;
    private string personContractId_ = "";
    /// <summary>
    ///PersonContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 9;
    private string sessionConferenceId_ = "";
    /// <summary>
    ///SessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 10;
    private string sessionConferenceName_ = "";
    /// <summary>
    ///SessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ActivityId != other.ActivityId) return false;
      if (ActivityName != other.ActivityName) return false;
      if (Year != other.Year) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (IsCheck != other.IsCheck) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (IsCheck != false) hash ^= IsCheck.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberPK);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityId);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ActivityName);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Year);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsConfirm);
      }
      if (IsCheck != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCheck);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PersonContractId);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SessionConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (IsCheck != false) {
        size += 1 + 1;
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.IsCheck != false) {
        IsCheck = other.IsCheck;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            MemberPK = input.ReadString();
            break;
          }
          case 26: {
            ActivityId = input.ReadString();
            break;
          }
          case 34: {
            ActivityName = input.ReadString();
            break;
          }
          case 42: {
            Year = input.ReadString();
            break;
          }
          case 48: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 56: {
            IsCheck = input.ReadBool();
            break;
          }
          case 66: {
            PersonContractId = input.ReadString();
            break;
          }
          case 74: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 82: {
            SessionConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapStruct : pb::IMessage<CompanyServicePackMapStruct> {
    private static readonly pb::MessageParser<CompanyServicePackMapStruct> _parser = new pb::MessageParser<CompanyServicePackMapStruct>(() => new CompanyServicePackMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct(CompanyServicePackMapStruct other) : this() {
      id_ = other.id_;
      companyServicePackId_ = other.companyServicePackId_;
      servicePackId_ = other.servicePackId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct Clone() {
      return new CompanyServicePackMapStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 3;
    private string servicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ServicePackId != other.ServicePackId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            ServicePackId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapVMStruct : pb::IMessage<CompanyServicePackMapVMStruct> {
    private static readonly pb::MessageParser<CompanyServicePackMapVMStruct> _parser = new pb::MessageParser<CompanyServicePackMapVMStruct>(() => new CompanyServicePackMapVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct(CompanyServicePackMapVMStruct other) : this() {
      mapId_ = other.mapId_;
      companyServicePackId_ = other.companyServicePackId_;
      servicePackId_ = other.servicePackId_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct Clone() {
      return new CompanyServicePackMapVMStruct(this);
    }

    /// <summary>Field number for the "MapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 3;
    private string servicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 4;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 5;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ServicePackId != other.ServicePackId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePackId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            ServicePackId = input.ReadString();
            break;
          }
          case 34: {
            ConferenceId = input.ReadString();
            break;
          }
          case 42: {
            ConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceList : pb::IMessage<ApplyConferenceList> {
    private static readonly pb::MessageParser<ApplyConferenceList> _parser = new pb::MessageParser<ApplyConferenceList>(() => new ApplyConferenceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList(ApplyConferenceList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList Clone() {
      return new ApplyConferenceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.ApplyConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceStruct : pb::IMessage<ApplyConferenceStruct> {
    private static readonly pb::MessageParser<ApplyConferenceStruct> _parser = new pb::MessageParser<ApplyConferenceStruct>(() => new ApplyConferenceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct(ApplyConferenceStruct other) : this() {
      id_ = other.id_;
      personContractId_ = other.personContractId_;
      memberPK_ = other.memberPK_;
      sessionConferenceId_ = other.sessionConferenceId_;
      isConfirm_ = other.isConfirm_;
      companyId_ = other.companyId_;
      tagTypeCodes_ = other.tagTypeCodes_;
      remarkTranslation_ = other.remarkTranslation_;
      year_ = other.year_;
      sessionConferenceIds_ = other.sessionConferenceIds_.Clone();
      isParticularConf_ = other.isParticularConf_;
      owerid_ = other.owerid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct Clone() {
      return new ApplyConferenceStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 2;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 4;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 5;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 6;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TagTypeCodes" field.</summary>
    public const int TagTypeCodesFieldNumber = 7;
    private string tagTypeCodes_ = "";
    /// <summary>
    ///多个标签Code，用“，”分隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagTypeCodes {
      get { return tagTypeCodes_; }
      set {
        tagTypeCodes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 8;
    private string remarkTranslation_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceIds" field.</summary>
    public const int SessionConferenceIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_sessionConferenceIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> sessionConferenceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///SessionConferenceId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SessionConferenceIds {
      get { return sessionConferenceIds_; }
    }

    /// <summary>Field number for the "IsParticularConf" field.</summary>
    public const int IsParticularConfFieldNumber = 11;
    private bool isParticularConf_;
    /// <summary>
    ///IsParticularConf
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsParticularConf {
      get { return isParticularConf_; }
      set {
        isParticularConf_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (CompanyId != other.CompanyId) return false;
      if (TagTypeCodes != other.TagTypeCodes) return false;
      if (RemarkTranslation != other.RemarkTranslation) return false;
      if (Year != other.Year) return false;
      if(!sessionConferenceIds_.Equals(other.sessionConferenceIds_)) return false;
      if (IsParticularConf != other.IsParticularConf) return false;
      if (Owerid != other.Owerid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (TagTypeCodes.Length != 0) hash ^= TagTypeCodes.GetHashCode();
      if (RemarkTranslation.Length != 0) hash ^= RemarkTranslation.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      hash ^= sessionConferenceIds_.GetHashCode();
      if (IsParticularConf != false) hash ^= IsParticularConf.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionConferenceId);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsConfirm);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RemarkTranslation);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      sessionConferenceIds_.WriteTo(output, _repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsParticularConf);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemarkTranslation);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      size += sessionConferenceIds_.CalculateSize(_repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.TagTypeCodes.Length != 0) {
        TagTypeCodes = other.TagTypeCodes;
      }
      if (other.RemarkTranslation.Length != 0) {
        RemarkTranslation = other.RemarkTranslation;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      sessionConferenceIds_.Add(other.sessionConferenceIds_);
      if (other.IsParticularConf != false) {
        IsParticularConf = other.IsParticularConf;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PersonContractId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 40: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 50: {
            CompanyId = input.ReadString();
            break;
          }
          case 58: {
            TagTypeCodes = input.ReadString();
            break;
          }
          case 66: {
            RemarkTranslation = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
          case 82: {
            sessionConferenceIds_.AddEntriesFrom(input, _repeated_sessionConferenceIds_codec);
            break;
          }
          case 88: {
            IsParticularConf = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceOnsiteStruct : pb::IMessage<ConferenceOnsiteStruct> {
    private static readonly pb::MessageParser<ConferenceOnsiteStruct> _parser = new pb::MessageParser<ConferenceOnsiteStruct>(() => new ConferenceOnsiteStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceOnsiteStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct(ConferenceOnsiteStruct other) : this() {
      id_ = other.id_;
      contractNumber_ = other.contractNumber_;
      companyName_ = other.companyName_;
      currency_ = other.currency_;
      payType_ = other.payType_;
      credited_ = other.credited_;
      addDate_ = other.addDate_;
      cost_ = other.cost_;
      remark_ = other.remark_;
      contractYear_ = other.contractYear_;
      companyServicePackId_ = other.companyServicePackId_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      userName_ = other.userName_;
      companyServicePackName_ = other.companyServicePackName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct Clone() {
      return new ConferenceOnsiteStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 2;
    private string contractNumber_ = "";
    /// <summary>
    ///现场付款生成的合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyName" field.</summary>
    public const int CompanyNameFieldNumber = 3;
    private string companyName_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 4;
    private string currency_ = "";
    /// <summary>
    ///货币类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PayType" field.</summary>
    public const int PayTypeFieldNumber = 5;
    private string payType_ = "";
    /// <summary>
    ///付款方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayType {
      get { return payType_; }
      set {
        payType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Credited" field.</summary>
    public const int CreditedFieldNumber = 6;
    private string credited_ = "";
    /// <summary>
    ///入账单位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Credited {
      get { return credited_; }
      set {
        credited_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddDate" field.</summary>
    public const int AddDateFieldNumber = 7;
    private string addDate_ = "";
    /// <summary>
    ///付款日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddDate {
      get { return addDate_; }
      set {
        addDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cost" field.</summary>
    public const int CostFieldNumber = 8;
    private string cost_ = "";
    /// <summary>
    ///价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cost {
      get { return cost_; }
      set {
        cost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 9;
    private string remark_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractYear" field.</summary>
    public const int ContractYearFieldNumber = 10;
    private string contractYear_ = "";
    /// <summary>
    ///合同年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractYear {
      get { return contractYear_; }
      set {
        contractYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 11;
    private string companyServicePackId_ = "";
    /// <summary>
    ///参会套餐id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 12;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 13;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 14;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 15;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 16;
    private string userName_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 17;
    private string companyServicePackName_ = "";
    /// <summary>
    ///参会套餐类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceOnsiteStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceOnsiteStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyName != other.CompanyName) return false;
      if (Currency != other.Currency) return false;
      if (PayType != other.PayType) return false;
      if (Credited != other.Credited) return false;
      if (AddDate != other.AddDate) return false;
      if (Cost != other.Cost) return false;
      if (Remark != other.Remark) return false;
      if (ContractYear != other.ContractYear) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (UserName != other.UserName) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (PayType.Length != 0) hash ^= PayType.GetHashCode();
      if (Credited.Length != 0) hash ^= Credited.GetHashCode();
      if (AddDate.Length != 0) hash ^= AddDate.GetHashCode();
      if (Cost.Length != 0) hash ^= Cost.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (ContractYear.Length != 0) hash ^= ContractYear.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyName);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Currency);
      }
      if (PayType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PayType);
      }
      if (Credited.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Credited);
      }
      if (AddDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AddDate);
      }
      if (Cost.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Cost);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Remark);
      }
      if (ContractYear.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContractYear);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CompanyServicePackId);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ModefieldBy);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(UserName);
      }
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (PayType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayType);
      }
      if (Credited.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Credited);
      }
      if (AddDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddDate);
      }
      if (Cost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cost);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (ContractYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractYear);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (CompanyServicePackName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceOnsiteStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.PayType.Length != 0) {
        PayType = other.PayType;
      }
      if (other.Credited.Length != 0) {
        Credited = other.Credited;
      }
      if (other.AddDate.Length != 0) {
        AddDate = other.AddDate;
      }
      if (other.Cost.Length != 0) {
        Cost = other.Cost;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.ContractYear.Length != 0) {
        ContractYear = other.ContractYear;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ContractNumber = input.ReadString();
            break;
          }
          case 26: {
            CompanyName = input.ReadString();
            break;
          }
          case 34: {
            Currency = input.ReadString();
            break;
          }
          case 42: {
            PayType = input.ReadString();
            break;
          }
          case 50: {
            Credited = input.ReadString();
            break;
          }
          case 58: {
            AddDate = input.ReadString();
            break;
          }
          case 66: {
            Cost = input.ReadString();
            break;
          }
          case 74: {
            Remark = input.ReadString();
            break;
          }
          case 82: {
            ContractYear = input.ReadString();
            break;
          }
          case 90: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 98: {
            CreatedOn = input.ReadString();
            break;
          }
          case 106: {
            CreatedBy = input.ReadString();
            break;
          }
          case 114: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 122: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 130: {
            UserName = input.ReadString();
            break;
          }
          case 138: {
            CompanyServicePackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractAndSessionConferenceIdsStruct : pb::IMessage<PersonContractAndSessionConferenceIdsStruct> {
    private static readonly pb::MessageParser<PersonContractAndSessionConferenceIdsStruct> _parser = new pb::MessageParser<PersonContractAndSessionConferenceIdsStruct>(() => new PersonContractAndSessionConferenceIdsStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractAndSessionConferenceIdsStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct(PersonContractAndSessionConferenceIdsStruct other) : this() {
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      PersonContract = other.personContract_ != null ? other.PersonContract.Clone() : null;
      sessionConferenceIds_ = other.sessionConferenceIds_.Clone();
      companyServicePackName_ = other.companyServicePackName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct Clone() {
      return new PersonContractAndSessionConferenceIdsStruct(this);
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.CompanyContractStruct companyContract_;
    /// <summary>
    ///CompanyContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "PersonContract" field.</summary>
    public const int PersonContractFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.PersonContractStruct personContract_;
    /// <summary>
    ///PersonContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.PersonContractStruct PersonContract {
      get { return personContract_; }
      set {
        personContract_ = value;
      }
    }

    /// <summary>Field number for the "SessionConferenceIds" field.</summary>
    public const int SessionConferenceIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_sessionConferenceIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> sessionConferenceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///SessionConferenceId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SessionConferenceIds {
      get { return sessionConferenceIds_; }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 4;
    private string companyServicePackName_ = "";
    /// <summary>
    ///参会类型名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractAndSessionConferenceIdsStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractAndSessionConferenceIdsStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (!object.Equals(PersonContract, other.PersonContract)) return false;
      if(!sessionConferenceIds_.Equals(other.sessionConferenceIds_)) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (personContract_ != null) hash ^= PersonContract.GetHashCode();
      hash ^= sessionConferenceIds_.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (companyContract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CompanyContract);
      }
      if (personContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PersonContract);
      }
      sessionConferenceIds_.WriteTo(output, _repeated_sessionConferenceIds_codec);
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (personContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PersonContract);
      }
      size += sessionConferenceIds_.CalculateSize(_repeated_sessionConferenceIds_codec);
      if (CompanyServicePackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractAndSessionConferenceIdsStruct other) {
      if (other == null) {
        return;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.personContract_ != null) {
        if (personContract_ == null) {
          personContract_ = new global::GrpcConferenceContractServiceNew.PersonContractStruct();
        }
        PersonContract.MergeFrom(other.PersonContract);
      }
      sessionConferenceIds_.Add(other.sessionConferenceIds_);
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractServiceNew.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 18: {
            if (personContract_ == null) {
              personContract_ = new global::GrpcConferenceContractServiceNew.PersonContractStruct();
            }
            input.ReadMessage(personContract_);
            break;
          }
          case 26: {
            sessionConferenceIds_.AddEntriesFrom(input, _repeated_sessionConferenceIds_codec);
            break;
          }
          case 34: {
            CompanyServicePackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceListToCreateOrUpdate : pb::IMessage<ApplyConferenceListToCreateOrUpdate> {
    private static readonly pb::MessageParser<ApplyConferenceListToCreateOrUpdate> _parser = new pb::MessageParser<ApplyConferenceListToCreateOrUpdate>(() => new ApplyConferenceListToCreateOrUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceListToCreateOrUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate(ApplyConferenceListToCreateOrUpdate other) : this() {
      personContractId_ = other.personContractId_;
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate Clone() {
      return new ApplyConferenceListToCreateOrUpdate(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.ApplyConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.ApplyConferenceStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceListToCreateOrUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceListToCreateOrUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceListToCreateOrUpdate other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteLetterStruct : pb::IMessage<InviteLetterStruct> {
    private static readonly pb::MessageParser<InviteLetterStruct> _parser = new pb::MessageParser<InviteLetterStruct>(() => new InviteLetterStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteLetterStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct(InviteLetterStruct other) : this() {
      id_ = other.id_;
      company_ = other.company_;
      eHall_ = other.eHall_;
      eNo_ = other.eNo_;
      profile_ = other.profile_;
      eAcitvity_ = other.eAcitvity_;
      language_ = other.language_;
      createdOn_ = other.createdOn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct Clone() {
      return new InviteLetterStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Company" field.</summary>
    public const int CompanyFieldNumber = 2;
    private string company_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EHall" field.</summary>
    public const int EHallFieldNumber = 3;
    private string eHall_ = "";
    /// <summary>
    ///展馆号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EHall {
      get { return eHall_; }
      set {
        eHall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ENo" field.</summary>
    public const int ENoFieldNumber = 4;
    private string eNo_ = "";
    /// <summary>
    ///展位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ENo {
      get { return eNo_; }
      set {
        eNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Profile" field.</summary>
    public const int ProfileFieldNumber = 5;
    private string profile_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Profile {
      get { return profile_; }
      set {
        profile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EAcitvity" field.</summary>
    public const int EAcitvityFieldNumber = 6;
    private string eAcitvity_ = "";
    /// <summary>
    ///活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EAcitvity {
      get { return eAcitvity_; }
      set {
        eAcitvity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Language" field.</summary>
    public const int LanguageFieldNumber = 7;
    private string language_ = "";
    /// <summary>
    ///语言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteLetterStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteLetterStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Company != other.Company) return false;
      if (EHall != other.EHall) return false;
      if (ENo != other.ENo) return false;
      if (Profile != other.Profile) return false;
      if (EAcitvity != other.EAcitvity) return false;
      if (Language != other.Language) return false;
      if (CreatedOn != other.CreatedOn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (EHall.Length != 0) hash ^= EHall.GetHashCode();
      if (ENo.Length != 0) hash ^= ENo.GetHashCode();
      if (Profile.Length != 0) hash ^= Profile.GetHashCode();
      if (EAcitvity.Length != 0) hash ^= EAcitvity.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Company);
      }
      if (EHall.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EHall);
      }
      if (ENo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ENo);
      }
      if (Profile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Profile);
      }
      if (EAcitvity.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EAcitvity);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (EHall.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EHall);
      }
      if (ENo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ENo);
      }
      if (Profile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Profile);
      }
      if (EAcitvity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EAcitvity);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteLetterStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.EHall.Length != 0) {
        EHall = other.EHall;
      }
      if (other.ENo.Length != 0) {
        ENo = other.ENo;
      }
      if (other.Profile.Length != 0) {
        Profile = other.Profile;
      }
      if (other.EAcitvity.Length != 0) {
        EAcitvity = other.EAcitvity;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Company = input.ReadString();
            break;
          }
          case 26: {
            EHall = input.ReadString();
            break;
          }
          case 34: {
            ENo = input.ReadString();
            break;
          }
          case 42: {
            Profile = input.ReadString();
            break;
          }
          case 50: {
            EAcitvity = input.ReadString();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeStruct : pb::IMessage<InviteCodeStruct> {
    private static readonly pb::MessageParser<InviteCodeStruct> _parser = new pb::MessageParser<InviteCodeStruct>(() => new InviteCodeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct(InviteCodeStruct other) : this() {
      id_ = other.id_;
      inviteCodeNumber_ = other.inviteCodeNumber_;
      companyServicePackId_ = other.companyServicePackId_;
      count_ = other.count_;
      year_ = other.year_;
      webSite_ = other.webSite_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct Clone() {
      return new InviteCodeStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InviteCodeNumber" field.</summary>
    public const int InviteCodeNumberFieldNumber = 2;
    private string inviteCodeNumber_ = "";
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeNumber {
      get { return inviteCodeNumber_; }
      set {
        inviteCodeNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 3;
    private string companyServicePackId_ = "";
    /// <summary>
    ///公司套餐id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 5;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebSite" field.</summary>
    public const int WebSiteFieldNumber = 6;
    private string webSite_ = "";
    /// <summary>
    ///网站
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InviteCodeNumber != other.InviteCodeNumber) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (Count != other.Count) return false;
      if (Year != other.Year) return false;
      if (WebSite != other.WebSite) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (InviteCodeNumber.Length != 0) hash ^= InviteCodeNumber.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (InviteCodeNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteCodeNumber);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyServicePackId);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Year);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(WebSite);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (InviteCodeNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCodeNumber);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (WebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.InviteCodeNumber.Length != 0) {
        InviteCodeNumber = other.InviteCodeNumber;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            InviteCodeNumber = input.ReadString();
            break;
          }
          case 26: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 42: {
            Year = input.ReadString();
            break;
          }
          case 50: {
            WebSite = input.ReadString();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeCSPVMStruct : pb::IMessage<InviteCodeCSPVMStruct> {
    private static readonly pb::MessageParser<InviteCodeCSPVMStruct> _parser = new pb::MessageParser<InviteCodeCSPVMStruct>(() => new InviteCodeCSPVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeCSPVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct(InviteCodeCSPVMStruct other) : this() {
      InviteCode = other.inviteCode_ != null ? other.InviteCode.Clone() : null;
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      inviteRecordCount_ = other.inviteRecordCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct Clone() {
      return new InviteCodeCSPVMStruct(this);
    }

    /// <summary>Field number for the "InviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.InviteCodeStruct inviteCode_;
    /// <summary>
    ///邀请码对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.InviteCodeStruct InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = value;
      }
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///公司套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "InviteRecordCount" field.</summary>
    public const int InviteRecordCountFieldNumber = 3;
    private string inviteRecordCount_ = "";
    /// <summary>
    ///已记录使用数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteRecordCount {
      get { return inviteRecordCount_; }
      set {
        inviteRecordCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeCSPVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeCSPVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InviteCode, other.InviteCode)) return false;
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if (InviteRecordCount != other.InviteRecordCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inviteCode_ != null) hash ^= InviteCode.GetHashCode();
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      if (InviteRecordCount.Length != 0) hash ^= InviteRecordCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (inviteCode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InviteCode);
      }
      if (companyServicePack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompanyServicePack);
      }
      if (InviteRecordCount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InviteRecordCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inviteCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviteCode);
      }
      if (companyServicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      if (InviteRecordCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteRecordCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeCSPVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.inviteCode_ != null) {
        if (inviteCode_ == null) {
          inviteCode_ = new global::GrpcConferenceContractServiceNew.InviteCodeStruct();
        }
        InviteCode.MergeFrom(other.InviteCode);
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      if (other.InviteRecordCount.Length != 0) {
        InviteRecordCount = other.InviteRecordCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inviteCode_ == null) {
              inviteCode_ = new global::GrpcConferenceContractServiceNew.InviteCodeStruct();
            }
            input.ReadMessage(inviteCode_);
            break;
          }
          case 18: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractServiceNew.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 26: {
            InviteRecordCount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeRecordStruct : pb::IMessage<InviteCodeRecordStruct> {
    private static readonly pb::MessageParser<InviteCodeRecordStruct> _parser = new pb::MessageParser<InviteCodeRecordStruct>(() => new InviteCodeRecordStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeRecordStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct(InviteCodeRecordStruct other) : this() {
      id_ = other.id_;
      inviteCodeId_ = other.inviteCodeId_;
      memberPK_ = other.memberPK_;
      memberName_ = other.memberName_;
      useDate_ = other.useDate_;
      personContractId_ = other.personContractId_;
      personContractNumber_ = other.personContractNumber_;
      isDelete_ = other.isDelete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct Clone() {
      return new InviteCodeRecordStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 2;
    private string inviteCodeId_ = "";
    /// <summary>
    ///邀请码Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    /// <summary>
    ///会员pk
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberName" field.</summary>
    public const int MemberNameFieldNumber = 4;
    private string memberName_ = "";
    /// <summary>
    ///会员名 存json格式{ "MemberCN": "zzz", "MemberEN": "zzz" }
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseDate" field.</summary>
    public const int UseDateFieldNumber = 5;
    private string useDate_ = "";
    /// <summary>
    ///使用日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UseDate {
      get { return useDate_; }
      set {
        useDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 6;
    private string personContractId_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 7;
    private string personContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 8;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeRecordStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeRecordStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (MemberName != other.MemberName) return false;
      if (UseDate != other.UseDate) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (PersonContractNumber != other.PersonContractNumber) return false;
      if (IsDelete != other.IsDelete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (UseDate.Length != 0) hash ^= UseDate.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteCodeId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberName);
      }
      if (UseDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UseDate);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PersonContractNumber);
      }
      if (IsDelete != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsDelete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (InviteCodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (MemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (UseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UseDate);
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeRecordStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      if (other.UseDate.Length != 0) {
        UseDate = other.UseDate;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            MemberName = input.ReadString();
            break;
          }
          case 42: {
            UseDate = input.ReadString();
            break;
          }
          case 50: {
            PersonContractId = input.ReadString();
            break;
          }
          case 58: {
            PersonContractNumber = input.ReadString();
            break;
          }
          case 64: {
            IsDelete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagTypeStruct : pb::IMessage<TagTypeStruct> {
    private static readonly pb::MessageParser<TagTypeStruct> _parser = new pb::MessageParser<TagTypeStruct>(() => new TagTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct(TagTypeStruct other) : this() {
      id_ = other.id_;
      nameTranslation_ = other.nameTranslation_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct Clone() {
      return new TagTypeStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NameTranslation" field.</summary>
    public const int NameTranslationFieldNumber = 2;
    private string nameTranslation_ = "";
    /// <summary>
    ///标签名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameTranslation {
      get { return nameTranslation_; }
      set {
        nameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    ///标签Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NameTranslation != other.NameTranslation) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (NameTranslation.Length != 0) hash ^= NameTranslation.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (NameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameTranslation);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (NameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTranslation);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.NameTranslation.Length != 0) {
        NameTranslation = other.NameTranslation;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            NameTranslation = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearConfigStruct : pb::IMessage<YearConfigStruct> {
    private static readonly pb::MessageParser<YearConfigStruct> _parser = new pb::MessageParser<YearConfigStruct>(() => new YearConfigStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearConfigStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct(YearConfigStruct other) : this() {
      id_ = other.id_;
      year_ = other.year_;
      isUse_ = other.isUse_;
      date_ = other.date_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct Clone() {
      return new YearConfigStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 2;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsUse" field.</summary>
    public const int IsUseFieldNumber = 3;
    private bool isUse_;
    /// <summary>
    ///是否是当前使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUse {
      get { return isUse_; }
      set {
        isUse_ = value;
      }
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 4;
    private string date_ = "";
    /// <summary>
    ///年月日（格式为：2020-08-27）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearConfigStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearConfigStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Year != other.Year) return false;
      if (IsUse != other.IsUse) return false;
      if (Date != other.Date) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsUse != false) hash ^= IsUse.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Year);
      }
      if (IsUse != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsUse);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsUse != false) {
        size += 1 + 1;
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearConfigStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsUse != false) {
        IsUse = other.IsUse;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Year = input.ReadString();
            break;
          }
          case 24: {
            IsUse = input.ReadBool();
            break;
          }
          case 34: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckInRequest : pb::IMessage<CheckInRequest> {
    private static readonly pb::MessageParser<CheckInRequest> _parser = new pb::MessageParser<CheckInRequest>(() => new CheckInRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckInRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest(CheckInRequest other) : this() {
      ids_ = other.ids_.Clone();
      isCheckIn_ = other.isCheckIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest Clone() {
      return new CheckInRequest(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///personContractId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 2;
    private bool isCheckIn_;
    /// <summary>
    ///是否报到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckInRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckInRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (IsCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckInRequest other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 16: {
            IsCheckIn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatisticsStruct : pb::IMessage<ContractStatisticsStruct> {
    private static readonly pb::MessageParser<ContractStatisticsStruct> _parser = new pb::MessageParser<ContractStatisticsStruct>(() => new ContractStatisticsStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatisticsStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct(ContractStatisticsStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      companyServicePackName_ = other.companyServicePackName_;
      personCount_ = other.personCount_;
      maxContractNumberSum_ = other.maxContractNumberSum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct Clone() {
      return new ContractStatisticsStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 2;
    private string companyServicePackName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonCount" field.</summary>
    public const int PersonCountFieldNumber = 3;
    private string personCount_ = "";
    /// <summary>
    ///个人合同号数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonCount {
      get { return personCount_; }
      set {
        personCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumberSum" field.</summary>
    public const int MaxContractNumberSumFieldNumber = 4;
    private string maxContractNumberSum_ = "";
    /// <summary>
    ///最大合同号数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxContractNumberSum {
      get { return maxContractNumberSum_; }
      set {
        maxContractNumberSum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatisticsStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatisticsStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      if (PersonCount != other.PersonCount) return false;
      if (MaxContractNumberSum != other.MaxContractNumberSum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (PersonCount.Length != 0) hash ^= PersonCount.GetHashCode();
      if (MaxContractNumberSum.Length != 0) hash ^= MaxContractNumberSum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackName);
      }
      if (PersonCount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PersonCount);
      }
      if (MaxContractNumberSum.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MaxContractNumberSum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CompanyServicePackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (PersonCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonCount);
      }
      if (MaxContractNumberSum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxContractNumberSum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatisticsStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      if (other.PersonCount.Length != 0) {
        PersonCount = other.PersonCount;
      }
      if (other.MaxContractNumberSum.Length != 0) {
        MaxContractNumberSum = other.MaxContractNumberSum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackName = input.ReadString();
            break;
          }
          case 26: {
            PersonCount = input.ReadString();
            break;
          }
          case 34: {
            MaxContractNumberSum = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyCCPCOwerInfoStruct : pb::IMessage<ModifyCCPCOwerInfoStruct> {
    private static readonly pb::MessageParser<ModifyCCPCOwerInfoStruct> _parser = new pb::MessageParser<ModifyCCPCOwerInfoStruct>(() => new ModifyCCPCOwerInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyCCPCOwerInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct(ModifyCCPCOwerInfoStruct other) : this() {
      contractId_ = other.contractId_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      maxContractNumber_ = other.maxContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct Clone() {
      return new ModifyCCPCOwerInfoStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///ContractId二级合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 2;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 3;
    private string ower_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 4;
    private int maxContractNumber_;
    /// <summary>
    ///最大合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyCCPCOwerInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyCCPCOwerInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (MaxContractNumber != 0) hash ^= MaxContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ower);
      }
      if (MaxContractNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (MaxContractNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyCCPCOwerInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.MaxContractNumber != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            Owerid = input.ReadString();
            break;
          }
          case 26: {
            Ower = input.ReadString();
            break;
          }
          case 32: {
            MaxContractNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolReply : pb::IMessage<BoolReply> {
    private static readonly pb::MessageParser<BoolReply> _parser = new pb::MessageParser<BoolReply>(() => new BoolReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply(BoolReply other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply Clone() {
      return new BoolReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class modifyResponse : pb::IMessage<modifyResponse> {
    private static readonly pb::MessageParser<modifyResponse> _parser = new pb::MessageParser<modifyResponse>(() => new modifyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<modifyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponse(modifyResponse other) : this() {
      isSuccess_ = other.isSuccess_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponse Clone() {
      return new modifyResponse(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as modifyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(modifyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(modifyResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///付费合同和赠送合同添加二级合同时需要传的参数
  /// </summary>
  public sealed partial class newServicePackStruct : pb::IMessage<newServicePackStruct> {
    private static readonly pb::MessageParser<newServicePackStruct> _parser = new pb::MessageParser<newServicePackStruct>(() => new newServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStruct(newServicePackStruct other) : this() {
      contractId_ = other.contractId_;
      conferenceContractId_ = other.conferenceContractId_;
      companyServicePackId_ = other.companyServicePackId_;
      conferenceId_ = other.conferenceId_;
      companyId_ = other.companyId_;
      comNameTranslation_ = other.comNameTranslation_;
      comContractNumber_ = other.comContractNumber_;
      country_ = other.country_;
      addressTranslation_ = other.addressTranslation_;
      comPrice_ = other.comPrice_;
      maxContractNumber_ = other.maxContractNumber_;
      maxContractNumberSatUse_ = other.maxContractNumberSatUse_;
      cCIsdelete_ = other.cCIsdelete_;
      enterpriseType_ = other.enterpriseType_;
      isVerify_ = other.isVerify_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      contractCode_ = other.contractCode_;
      isCheckIn_ = other.isCheckIn_;
      pPTUrl_ = other.pPTUrl_;
      contractStatusCode_ = other.contractStatusCode_;
      conferenceName_ = other.conferenceName_;
      otherOwnerId_ = other.otherOwnerId_;
      otherOwner_ = other.otherOwner_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      year_ = other.year_;
      companyServicePackCode_ = other.companyServicePackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStruct Clone() {
      return new newServicePackStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///二级合同信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 2;
    private string conferenceContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 3;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 4;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 5;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 6;
    private string comNameTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 7;
    private string comContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 8;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressTranslation" field.</summary>
    public const int AddressTranslationFieldNumber = 9;
    private string addressTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressTranslation {
      get { return addressTranslation_; }
      set {
        addressTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComPrice" field.</summary>
    public const int ComPriceFieldNumber = 10;
    private string comPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 11;
    private int maxContractNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = value;
      }
    }

    /// <summary>Field number for the "MaxContractNumberSatUse" field.</summary>
    public const int MaxContractNumberSatUseFieldNumber = 12;
    private int maxContractNumberSatUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumberSatUse {
      get { return maxContractNumberSatUse_; }
      set {
        maxContractNumberSatUse_ = value;
      }
    }

    /// <summary>Field number for the "CCIsdelete" field.</summary>
    public const int CCIsdeleteFieldNumber = 13;
    private bool cCIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CCIsdelete {
      get { return cCIsdelete_; }
      set {
        cCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 14;
    private int enterpriseType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "IsVerify" field.</summary>
    public const int IsVerifyFieldNumber = 15;
    private bool isVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 16;
    private string owerid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 17;
    private string ower_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 18;
    private string contractCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 19;
    private bool isCheckIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "PPTUrl" field.</summary>
    public const int PPTUrlFieldNumber = 20;
    private string pPTUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PPTUrl {
      get { return pPTUrl_; }
      set {
        pPTUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 21;
    private string contractStatusCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 22;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 23;
    private string otherOwnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 24;
    private string otherOwner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 25;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 26;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 27;
    private string modifiedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 28;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 29;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackCode" field.</summary>
    public const int CompanyServicePackCodeFieldNumber = 30;
    private string companyServicePackCode_ = "";
    /// <summary>
    ///套餐包Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackCode {
      get { return companyServicePackCode_; }
      set {
        companyServicePackCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ComNameTranslation != other.ComNameTranslation) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (Country != other.Country) return false;
      if (AddressTranslation != other.AddressTranslation) return false;
      if (ComPrice != other.ComPrice) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      if (MaxContractNumberSatUse != other.MaxContractNumberSatUse) return false;
      if (CCIsdelete != other.CCIsdelete) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (IsVerify != other.IsVerify) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (ContractCode != other.ContractCode) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (PPTUrl != other.PPTUrl) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Year != other.Year) return false;
      if (CompanyServicePackCode != other.CompanyServicePackCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ComNameTranslation.Length != 0) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (AddressTranslation.Length != 0) hash ^= AddressTranslation.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (MaxContractNumber != 0) hash ^= MaxContractNumber.GetHashCode();
      if (MaxContractNumberSatUse != 0) hash ^= MaxContractNumberSatUse.GetHashCode();
      if (CCIsdelete != false) hash ^= CCIsdelete.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (PPTUrl.Length != 0) hash ^= PPTUrl.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CompanyServicePackCode.Length != 0) hash ^= CompanyServicePackCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyServicePackId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanyId);
      }
      if (ComNameTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ComContractNumber);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Country);
      }
      if (AddressTranslation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AddressTranslation);
      }
      if (ComPrice.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ComPrice);
      }
      if (MaxContractNumber != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxContractNumber);
      }
      if (MaxContractNumberSatUse != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxContractNumberSatUse);
      }
      if (CCIsdelete != false) {
        output.WriteRawTag(104);
        output.WriteBool(CCIsdelete);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(EnterpriseType);
      }
      if (IsVerify != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsVerify);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ower);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ContractCode);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsCheckIn);
      }
      if (PPTUrl.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ContractStatusCode);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ConferenceName);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(OtherOwner);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ModifiedBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(Year);
      }
      if (CompanyServicePackCode.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(CompanyServicePackCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ComNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (AddressTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressTranslation);
      }
      if (ComPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (MaxContractNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumber);
      }
      if (MaxContractNumberSatUse != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumberSatUse);
      }
      if (CCIsdelete != false) {
        size += 1 + 1;
      }
      if (EnterpriseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (PPTUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (OtherOwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CompanyServicePackCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ComNameTranslation.Length != 0) {
        ComNameTranslation = other.ComNameTranslation;
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.AddressTranslation.Length != 0) {
        AddressTranslation = other.AddressTranslation;
      }
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      if (other.MaxContractNumber != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      if (other.MaxContractNumberSatUse != 0) {
        MaxContractNumberSatUse = other.MaxContractNumberSatUse;
      }
      if (other.CCIsdelete != false) {
        CCIsdelete = other.CCIsdelete;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.PPTUrl.Length != 0) {
        PPTUrl = other.PPTUrl;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CompanyServicePackCode.Length != 0) {
        CompanyServicePackCode = other.CompanyServicePackCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 26: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 34: {
            ConferenceId = input.ReadString();
            break;
          }
          case 42: {
            CompanyId = input.ReadString();
            break;
          }
          case 50: {
            ComNameTranslation = input.ReadString();
            break;
          }
          case 58: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 66: {
            Country = input.ReadString();
            break;
          }
          case 74: {
            AddressTranslation = input.ReadString();
            break;
          }
          case 82: {
            ComPrice = input.ReadString();
            break;
          }
          case 88: {
            MaxContractNumber = input.ReadInt32();
            break;
          }
          case 96: {
            MaxContractNumberSatUse = input.ReadInt32();
            break;
          }
          case 104: {
            CCIsdelete = input.ReadBool();
            break;
          }
          case 112: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 120: {
            IsVerify = input.ReadBool();
            break;
          }
          case 130: {
            Owerid = input.ReadString();
            break;
          }
          case 138: {
            Ower = input.ReadString();
            break;
          }
          case 146: {
            ContractCode = input.ReadString();
            break;
          }
          case 152: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 162: {
            PPTUrl = input.ReadString();
            break;
          }
          case 170: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 178: {
            ConferenceName = input.ReadString();
            break;
          }
          case 186: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 194: {
            OtherOwner = input.ReadString();
            break;
          }
          case 202: {
            CreatedOn = input.ReadString();
            break;
          }
          case 210: {
            CreatedBy = input.ReadString();
            break;
          }
          case 218: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 226: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 234: {
            Year = input.ReadString();
            break;
          }
          case 242: {
            CompanyServicePackCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///添加付费合同的折扣信息时需要传入的参数
  /// </summary>
  public sealed partial class newServicePackStructDiscount : pb::IMessage<newServicePackStructDiscount> {
    private static readonly pb::MessageParser<newServicePackStructDiscount> _parser = new pb::MessageParser<newServicePackStructDiscount>(() => new newServicePackStructDiscount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newServicePackStructDiscount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStructDiscount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStructDiscount(newServicePackStructDiscount other) : this() {
      Model = other.model_ != null ? other.Model.Clone() : null;
      discount_ = other.discount_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newServicePackStructDiscount Clone() {
      return new newServicePackStructDiscount(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.newServicePackStruct model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newServicePackStruct Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "Discount" field.</summary>
    public const int DiscountFieldNumber = 2;
    private float discount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Discount {
      get { return discount_; }
      set {
        discount_ = value;
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newServicePackStructDiscount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newServicePackStructDiscount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Model, other.Model)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Discount, other.Discount)) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (model_ != null) hash ^= Model.GetHashCode();
      if (Discount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Discount);
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (model_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Model);
      }
      if (Discount != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Discount);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (Discount != 0F) {
        size += 1 + 4;
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newServicePackStructDiscount other) {
      if (other == null) {
        return;
      }
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
        }
        Model.MergeFrom(other.Model);
      }
      if (other.Discount != 0F) {
        Discount = other.Discount;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (model_ == null) {
              model_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
            }
            input.ReadMessage(model_);
            break;
          }
          case 21: {
            Discount = input.ReadFloat();
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newPersonContractStruct : pb::IMessage<newPersonContractStruct> {
    private static readonly pb::MessageParser<newPersonContractStruct> _parser = new pb::MessageParser<newPersonContractStruct>(() => new newPersonContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newPersonContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newPersonContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newPersonContractStruct(newPersonContractStruct other) : this() {
      personContractId_ = other.personContractId_;
      contractId_ = other.contractId_;
      conferenceId_ = other.conferenceId_;
      memberPK_ = other.memberPK_;
      memTranslation_ = other.memTranslation_;
      pCIsdelete_ = other.pCIsdelete_;
      cTypeCode_ = other.cTypeCode_;
      isCheckIn_ = other.isCheckIn_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      isFianceRecord_ = other.isFianceRecord_;
      inviteCodeId_ = other.inviteCodeId_;
      isInviteCode_ = other.isInviteCode_;
      isCommitAbstract_ = other.isCommitAbstract_;
      isPrint_ = other.isPrint_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modefieldBy_ = other.modefieldBy_;
      companyServicePackId_ = other.companyServicePackId_;
      conferenceContractId_ = other.conferenceContractId_;
      perPrice_ = other.perPrice_;
      paidAmount_ = other.paidAmount_;
      otherOwnerId_ = other.otherOwnerId_;
      otherOwner_ = other.otherOwner_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newPersonContractStruct Clone() {
      return new newPersonContractStruct(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///二级合同的Id，同时也是二级合同的邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 3;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 5;
    private string memTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PCIsdelete" field.</summary>
    public const int PCIsdeleteFieldNumber = 6;
    private bool pCIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PCIsdelete {
      get { return pCIsdelete_; }
      set {
        pCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 7;
    private string cTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 8;
    private bool isCheckIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 9;
    private bool isSendEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 10;
    private bool isModify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "IsFianceRecord" field.</summary>
    public const int IsFianceRecordFieldNumber = 11;
    private bool isFianceRecord_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFianceRecord {
      get { return isFianceRecord_; }
      set {
        isFianceRecord_ = value;
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 12;
    private string inviteCodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsInviteCode" field.</summary>
    public const int IsInviteCodeFieldNumber = 13;
    private bool isInviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInviteCode {
      get { return isInviteCode_; }
      set {
        isInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "IsCommitAbstract" field.</summary>
    public const int IsCommitAbstractFieldNumber = 14;
    private bool isCommitAbstract_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCommitAbstract {
      get { return isCommitAbstract_; }
      set {
        isCommitAbstract_ = value;
      }
    }

    /// <summary>Field number for the "IsPrint" field.</summary>
    public const int IsPrintFieldNumber = 15;
    private bool isPrint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 16;
    private string owerid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 17;
    private string ower_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 18;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 19;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 20;
    private string modifiedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 21;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 22;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 23;
    private string conferenceContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerPrice" field.</summary>
    public const int PerPriceFieldNumber = 24;
    private string perPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerPrice {
      get { return perPrice_; }
      set {
        perPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaidAmount" field.</summary>
    public const int PaidAmountFieldNumber = 25;
    private string paidAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaidAmount {
      get { return paidAmount_; }
      set {
        paidAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 26;
    private string otherOwnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 27;
    private string otherOwner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 28;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newPersonContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newPersonContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (ContractId != other.ContractId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (MemTranslation != other.MemTranslation) return false;
      if (PCIsdelete != other.PCIsdelete) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (IsFianceRecord != other.IsFianceRecord) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsInviteCode != other.IsInviteCode) return false;
      if (IsCommitAbstract != other.IsCommitAbstract) return false;
      if (IsPrint != other.IsPrint) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (PerPrice != other.PerPrice) return false;
      if (PaidAmount != other.PaidAmount) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (MemTranslation.Length != 0) hash ^= MemTranslation.GetHashCode();
      if (PCIsdelete != false) hash ^= PCIsdelete.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (IsFianceRecord != false) hash ^= IsFianceRecord.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsInviteCode != false) hash ^= IsInviteCode.GetHashCode();
      if (IsCommitAbstract != false) hash ^= IsCommitAbstract.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (PerPrice.Length != 0) hash ^= PerPrice.GetHashCode();
      if (PaidAmount.Length != 0) hash ^= PaidAmount.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (MemTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MemTranslation);
      }
      if (PCIsdelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(PCIsdelete);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CTypeCode);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsCheckIn);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsModify);
      }
      if (IsFianceRecord != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsFianceRecord);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(InviteCodeId);
      }
      if (IsInviteCode != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsInviteCode);
      }
      if (IsCommitAbstract != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsCommitAbstract);
      }
      if (IsPrint != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsPrint);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ModifiedOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ModefieldBy);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CompanyServicePackId);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ConferenceContractId);
      }
      if (PerPrice.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(PerPrice);
      }
      if (PaidAmount.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PaidAmount);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(OtherOwner);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (MemTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTranslation);
      }
      if (PCIsdelete != false) {
        size += 1 + 1;
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (IsSendEmail != false) {
        size += 1 + 1;
      }
      if (IsModify != false) {
        size += 1 + 1;
      }
      if (IsFianceRecord != false) {
        size += 1 + 1;
      }
      if (InviteCodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsInviteCode != false) {
        size += 1 + 1;
      }
      if (IsCommitAbstract != false) {
        size += 1 + 1;
      }
      if (IsPrint != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (PerPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PerPrice);
      }
      if (PaidAmount.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaidAmount);
      }
      if (OtherOwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newPersonContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.MemTranslation.Length != 0) {
        MemTranslation = other.MemTranslation;
      }
      if (other.PCIsdelete != false) {
        PCIsdelete = other.PCIsdelete;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.IsFianceRecord != false) {
        IsFianceRecord = other.IsFianceRecord;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsInviteCode != false) {
        IsInviteCode = other.IsInviteCode;
      }
      if (other.IsCommitAbstract != false) {
        IsCommitAbstract = other.IsCommitAbstract;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.PerPrice.Length != 0) {
        PerPrice = other.PerPrice;
      }
      if (other.PaidAmount.Length != 0) {
        PaidAmount = other.PaidAmount;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            ConferenceId = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            MemTranslation = input.ReadString();
            break;
          }
          case 48: {
            PCIsdelete = input.ReadBool();
            break;
          }
          case 58: {
            CTypeCode = input.ReadString();
            break;
          }
          case 64: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 72: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 80: {
            IsModify = input.ReadBool();
            break;
          }
          case 88: {
            IsFianceRecord = input.ReadBool();
            break;
          }
          case 98: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 104: {
            IsInviteCode = input.ReadBool();
            break;
          }
          case 112: {
            IsCommitAbstract = input.ReadBool();
            break;
          }
          case 120: {
            IsPrint = input.ReadBool();
            break;
          }
          case 130: {
            Owerid = input.ReadString();
            break;
          }
          case 138: {
            Ower = input.ReadString();
            break;
          }
          case 146: {
            CreatedOn = input.ReadString();
            break;
          }
          case 154: {
            CreatedBy = input.ReadString();
            break;
          }
          case 162: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 170: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 178: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 186: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 194: {
            PerPrice = input.ReadString();
            break;
          }
          case 202: {
            PaidAmount = input.ReadString();
            break;
          }
          case 210: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 218: {
            OtherOwner = input.ReadString();
            break;
          }
          case 226: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///添加个人合同
  /// </summary>
  public sealed partial class newAddPersonContractRequest : pb::IMessage<newAddPersonContractRequest> {
    private static readonly pb::MessageParser<newAddPersonContractRequest> _parser = new pb::MessageParser<newAddPersonContractRequest>(() => new newAddPersonContractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newAddPersonContractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractRequest(newAddPersonContractRequest other) : this() {
      Person = other.person_ != null ? other.Person.Clone() : null;
      CompanyContractModel = other.companyContractModel_ != null ? other.CompanyContractModel.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractRequest Clone() {
      return new newAddPersonContractRequest(this);
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.newPersonContractStruct person_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newPersonContractStruct Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "companyContractModel" field.</summary>
    public const int CompanyContractModelFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.newServicePackStruct companyContractModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newServicePackStruct CompanyContractModel {
      get { return companyContractModel_; }
      set {
        companyContractModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newAddPersonContractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newAddPersonContractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Person, other.Person)) return false;
      if (!object.Equals(CompanyContractModel, other.CompanyContractModel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (person_ != null) hash ^= Person.GetHashCode();
      if (companyContractModel_ != null) hash ^= CompanyContractModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (person_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Person);
      }
      if (companyContractModel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompanyContractModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      if (companyContractModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContractModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newAddPersonContractRequest other) {
      if (other == null) {
        return;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
        }
        Person.MergeFrom(other.Person);
      }
      if (other.companyContractModel_ != null) {
        if (companyContractModel_ == null) {
          companyContractModel_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
        }
        CompanyContractModel.MergeFrom(other.CompanyContractModel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (person_ == null) {
              person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
            }
            input.ReadMessage(person_);
            break;
          }
          case 18: {
            if (companyContractModel_ == null) {
              companyContractModel_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
            }
            input.ReadMessage(companyContractModel_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class newAddPersonContractUnderCompanyContractRequest : pb::IMessage<newAddPersonContractUnderCompanyContractRequest> {
    private static readonly pb::MessageParser<newAddPersonContractUnderCompanyContractRequest> _parser = new pb::MessageParser<newAddPersonContractUnderCompanyContractRequest>(() => new newAddPersonContractUnderCompanyContractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newAddPersonContractUnderCompanyContractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractUnderCompanyContractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractUnderCompanyContractRequest(newAddPersonContractUnderCompanyContractRequest other) : this() {
      Person = other.person_ != null ? other.Person.Clone() : null;
      year_ = other.year_;
      companyContractNumber_ = other.companyContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddPersonContractUnderCompanyContractRequest Clone() {
      return new newAddPersonContractUnderCompanyContractRequest(this);
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.newPersonContractStruct person_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newPersonContractStruct Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 2;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContractNumber" field.</summary>
    public const int CompanyContractNumberFieldNumber = 3;
    private string companyContractNumber_ = "";
    /// <summary>
    ///二级合同的合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyContractNumber {
      get { return companyContractNumber_; }
      set {
        companyContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newAddPersonContractUnderCompanyContractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newAddPersonContractUnderCompanyContractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Person, other.Person)) return false;
      if (Year != other.Year) return false;
      if (CompanyContractNumber != other.CompanyContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (person_ != null) hash ^= Person.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CompanyContractNumber.Length != 0) hash ^= CompanyContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (person_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Person);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Year);
      }
      if (CompanyContractNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CompanyContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newAddPersonContractUnderCompanyContractRequest other) {
      if (other == null) {
        return;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
        }
        Person.MergeFrom(other.Person);
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CompanyContractNumber.Length != 0) {
        CompanyContractNumber = other.CompanyContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (person_ == null) {
              person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
            }
            input.ReadMessage(person_);
            break;
          }
          case 18: {
            Year = input.ReadString();
            break;
          }
          case 26: {
            CompanyContractNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newCreatePersonContractByCompanyContractInviteCodeRequest : pb::IMessage<newCreatePersonContractByCompanyContractInviteCodeRequest> {
    private static readonly pb::MessageParser<newCreatePersonContractByCompanyContractInviteCodeRequest> _parser = new pb::MessageParser<newCreatePersonContractByCompanyContractInviteCodeRequest>(() => new newCreatePersonContractByCompanyContractInviteCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newCreatePersonContractByCompanyContractInviteCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByCompanyContractInviteCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByCompanyContractInviteCodeRequest(newCreatePersonContractByCompanyContractInviteCodeRequest other) : this() {
      Person = other.person_ != null ? other.Person.Clone() : null;
      companyId_ = other.companyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByCompanyContractInviteCodeRequest Clone() {
      return new newCreatePersonContractByCompanyContractInviteCodeRequest(this);
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.newPersonContractStruct person_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newPersonContractStruct Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newCreatePersonContractByCompanyContractInviteCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newCreatePersonContractByCompanyContractInviteCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Person, other.Person)) return false;
      if (CompanyId != other.CompanyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (person_ != null) hash ^= Person.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (person_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Person);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newCreatePersonContractByCompanyContractInviteCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
        }
        Person.MergeFrom(other.Person);
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (person_ == null) {
              person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
            }
            input.ReadMessage(person_);
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newCreatePersonContractByInviteCodeRequest : pb::IMessage<newCreatePersonContractByInviteCodeRequest> {
    private static readonly pb::MessageParser<newCreatePersonContractByInviteCodeRequest> _parser = new pb::MessageParser<newCreatePersonContractByInviteCodeRequest>(() => new newCreatePersonContractByInviteCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newCreatePersonContractByInviteCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByInviteCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByInviteCodeRequest(newCreatePersonContractByInviteCodeRequest other) : this() {
      Person = other.person_ != null ? other.Person.Clone() : null;
      inviteCode_ = other.inviteCode_;
      webSite_ = other.webSite_;
      CompanyContractModel = other.companyContractModel_ != null ? other.CompanyContractModel.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCreatePersonContractByInviteCodeRequest Clone() {
      return new newCreatePersonContractByInviteCodeRequest(this);
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.newPersonContractStruct person_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newPersonContractStruct Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "InviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 2;
    private string inviteCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebSite" field.</summary>
    public const int WebSiteFieldNumber = 3;
    private string webSite_ = "";
    /// <summary>
    ///值分别为：SNEC、ESH
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyContractModel" field.</summary>
    public const int CompanyContractModelFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.newServicePackStruct companyContractModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newServicePackStruct CompanyContractModel {
      get { return companyContractModel_; }
      set {
        companyContractModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newCreatePersonContractByInviteCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newCreatePersonContractByInviteCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Person, other.Person)) return false;
      if (InviteCode != other.InviteCode) return false;
      if (WebSite != other.WebSite) return false;
      if (!object.Equals(CompanyContractModel, other.CompanyContractModel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (person_ != null) hash ^= Person.GetHashCode();
      if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (companyContractModel_ != null) hash ^= CompanyContractModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (person_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Person);
      }
      if (InviteCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteCode);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WebSite);
      }
      if (companyContractModel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CompanyContractModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      if (InviteCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
      }
      if (WebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (companyContractModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContractModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newCreatePersonContractByInviteCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
        }
        Person.MergeFrom(other.Person);
      }
      if (other.InviteCode.Length != 0) {
        InviteCode = other.InviteCode;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.companyContractModel_ != null) {
        if (companyContractModel_ == null) {
          companyContractModel_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
        }
        CompanyContractModel.MergeFrom(other.CompanyContractModel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (person_ == null) {
              person_ = new global::GrpcConferenceContractServiceNew.newPersonContractStruct();
            }
            input.ReadMessage(person_);
            break;
          }
          case 18: {
            InviteCode = input.ReadString();
            break;
          }
          case 26: {
            WebSite = input.ReadString();
            break;
          }
          case 34: {
            if (companyContractModel_ == null) {
              companyContractModel_ = new global::GrpcConferenceContractServiceNew.newServicePackStruct();
            }
            input.ReadMessage(companyContractModel_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyNameRequest : pb::IMessage<CompanyNameRequest> {
    private static readonly pb::MessageParser<CompanyNameRequest> _parser = new pb::MessageParser<CompanyNameRequest>(() => new CompanyNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyNameRequest(CompanyNameRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyNameRequest Clone() {
      return new CompanyNameRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///公司信息
  /// </summary>
  public sealed partial class CompanyInfoResponse : pb::IMessage<CompanyInfoResponse> {
    private static readonly pb::MessageParser<CompanyInfoResponse> _parser = new pb::MessageParser<CompanyInfoResponse>(() => new CompanyInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyInfoResponse(CompanyInfoResponse other) : this() {
      compnyName_ = other.compnyName_;
      companyNameEn_ = other.companyNameEn_;
      companyNameJp_ = other.companyNameJp_;
      email_ = other.email_;
      companyId_ = other.companyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyInfoResponse Clone() {
      return new CompanyInfoResponse(this);
    }

    /// <summary>Field number for the "compnyName" field.</summary>
    public const int CompnyNameFieldNumber = 1;
    private string compnyName_ = "";
    /// <summary>
    ///公司中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompnyName {
      get { return compnyName_; }
      set {
        compnyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameEn" field.</summary>
    public const int CompanyNameEnFieldNumber = 2;
    private string companyNameEn_ = "";
    /// <summary>
    ///公司英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameEn {
      get { return companyNameEn_; }
      set {
        companyNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameJp" field.</summary>
    public const int CompanyNameJpFieldNumber = 3;
    private string companyNameJp_ = "";
    /// <summary>
    ///公司日文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameJp {
      get { return companyNameJp_; }
      set {
        companyNameJp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 5;
    private string companyId_ = "";
    /// <summary>
    ///公司Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompnyName != other.CompnyName) return false;
      if (CompanyNameEn != other.CompanyNameEn) return false;
      if (CompanyNameJp != other.CompanyNameJp) return false;
      if (Email != other.Email) return false;
      if (CompanyId != other.CompanyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompnyName.Length != 0) hash ^= CompnyName.GetHashCode();
      if (CompanyNameEn.Length != 0) hash ^= CompanyNameEn.GetHashCode();
      if (CompanyNameJp.Length != 0) hash ^= CompanyNameJp.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompnyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompnyName);
      }
      if (CompanyNameEn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyNameEn);
      }
      if (CompanyNameJp.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyNameJp);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompnyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompnyName);
      }
      if (CompanyNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameEn);
      }
      if (CompanyNameJp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameJp);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.CompnyName.Length != 0) {
        CompnyName = other.CompnyName;
      }
      if (other.CompanyNameEn.Length != 0) {
        CompanyNameEn = other.CompanyNameEn;
      }
      if (other.CompanyNameJp.Length != 0) {
        CompanyNameJp = other.CompanyNameJp;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompnyName = input.ReadString();
            break;
          }
          case 18: {
            CompanyNameEn = input.ReadString();
            break;
          }
          case 26: {
            CompanyNameJp = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            CompanyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///付费合同列表页码的搜索与请求条件
  /// </summary>
  public sealed partial class newGetServicePackListRequest : pb::IMessage<newGetServicePackListRequest> {
    private static readonly pb::MessageParser<newGetServicePackListRequest> _parser = new pb::MessageParser<newGetServicePackListRequest>(() => new newGetServicePackListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListRequest(newGetServicePackListRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListRequest Clone() {
      return new newGetServicePackListRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Types.newGetServicePackListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetServicePackListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetServicePackListSearch : pb::IMessage<newGetServicePackListSearch> {
        private static readonly pb::MessageParser<newGetServicePackListSearch> _parser = new pb::MessageParser<newGetServicePackListSearch>(() => new newGetServicePackListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetServicePackListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetServicePackListRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetServicePackListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetServicePackListSearch(newGetServicePackListSearch other) : this() {
          year_ = other.year_;
          conferenceId_ = other.conferenceId_;
          servicePackId_ = other.servicePackId_;
          companyName_ = other.companyName_;
          contractNumber_ = other.contractNumber_;
          owner_ = other.owner_;
          isDiscount_ = other.isDiscount_;
          isMaxCount_ = other.isMaxCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetServicePackListSearch Clone() {
          return new newGetServicePackListSearch(this);
        }

        /// <summary>Field number for the "year" field.</summary>
        public const int YearFieldNumber = 1;
        private string year_ = "";
        /// <summary>
        ///年份
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "conferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 2;
        private string conferenceId_ = "";
        /// <summary>
        ///会议Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "servicePackId" field.</summary>
        public const int ServicePackIdFieldNumber = 3;
        private string servicePackId_ = "";
        /// <summary>
        ///套餐Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ServicePackId {
          get { return servicePackId_; }
          set {
            servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "companyName" field.</summary>
        public const int CompanyNameFieldNumber = 4;
        private string companyName_ = "";
        /// <summary>
        ///公司名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyName {
          get { return companyName_; }
          set {
            companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 5;
        private string contractNumber_ = "";
        /// <summary>
        ///合同号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "owner" field.</summary>
        public const int OwnerFieldNumber = 6;
        private string owner_ = "";
        /// <summary>
        ///业务员
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Owner {
          get { return owner_; }
          set {
            owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isDiscount" field.</summary>
        public const int IsDiscountFieldNumber = 7;
        private bool isDiscount_;
        /// <summary>
        ///是否为无折扣合同
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsDiscount {
          get { return isDiscount_; }
          set {
            isDiscount_ = value;
          }
        }

        /// <summary>Field number for the "isMaxCount" field.</summary>
        public const int IsMaxCountFieldNumber = 8;
        private bool isMaxCount_;
        /// <summary>
        ///参会人员是否达到上限
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsMaxCount {
          get { return isMaxCount_; }
          set {
            isMaxCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetServicePackListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetServicePackListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Year != other.Year) return false;
          if (ConferenceId != other.ConferenceId) return false;
          if (ServicePackId != other.ServicePackId) return false;
          if (CompanyName != other.CompanyName) return false;
          if (ContractNumber != other.ContractNumber) return false;
          if (Owner != other.Owner) return false;
          if (IsDiscount != other.IsDiscount) return false;
          if (IsMaxCount != other.IsMaxCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
          if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (Owner.Length != 0) hash ^= Owner.GetHashCode();
          if (IsDiscount != false) hash ^= IsDiscount.GetHashCode();
          if (IsMaxCount != false) hash ^= IsMaxCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Year.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Year);
          }
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ConferenceId);
          }
          if (ServicePackId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ServicePackId);
          }
          if (CompanyName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ContractNumber);
          }
          if (Owner.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Owner);
          }
          if (IsDiscount != false) {
            output.WriteRawTag(56);
            output.WriteBool(IsDiscount);
          }
          if (IsMaxCount != false) {
            output.WriteRawTag(64);
            output.WriteBool(IsMaxCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (ServicePackId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
          }
          if (CompanyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (Owner.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
          }
          if (IsDiscount != false) {
            size += 1 + 1;
          }
          if (IsMaxCount != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetServicePackListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.ServicePackId.Length != 0) {
            ServicePackId = other.ServicePackId;
          }
          if (other.CompanyName.Length != 0) {
            CompanyName = other.CompanyName;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          if (other.Owner.Length != 0) {
            Owner = other.Owner;
          }
          if (other.IsDiscount != false) {
            IsDiscount = other.IsDiscount;
          }
          if (other.IsMaxCount != false) {
            IsMaxCount = other.IsMaxCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Year = input.ReadString();
                break;
              }
              case 18: {
                ConferenceId = input.ReadString();
                break;
              }
              case 26: {
                ServicePackId = input.ReadString();
                break;
              }
              case 34: {
                CompanyName = input.ReadString();
                break;
              }
              case 42: {
                ContractNumber = input.ReadString();
                break;
              }
              case 50: {
                Owner = input.ReadString();
                break;
              }
              case 56: {
                IsDiscount = input.ReadBool();
                break;
              }
              case 64: {
                IsMaxCount = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///得到付费合同和赠送合同列表
  /// </summary>
  public sealed partial class newGetServicePackListStruct : pb::IMessage<newGetServicePackListStruct> {
    private static readonly pb::MessageParser<newGetServicePackListStruct> _parser = new pb::MessageParser<newGetServicePackListStruct>(() => new newGetServicePackListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListStruct(newGetServicePackListStruct other) : this() {
      contractNumber_ = other.contractNumber_;
      companyNameCn_ = other.companyNameCn_;
      companyNameEn_ = other.companyNameEn_;
      enterpriseType_ = other.enterpriseType_;
      servicePack_ = other.servicePack_;
      pay_ = other.pay_;
      contractCount_ = other.contractCount_;
      filledContractCount_ = other.filledContractCount_;
      owner_ = other.owner_;
      inviteCode_ = other.inviteCode_;
      contractStatus_ = other.contractStatus_;
      createdBy_ = other.createdBy_;
      createdOn_ = other.createdOn_;
      modifiyBy_ = other.modifiyBy_;
      modifyOn_ = other.modifyOn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListStruct Clone() {
      return new newGetServicePackListStruct(this);
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameCn" field.</summary>
    public const int CompanyNameCnFieldNumber = 2;
    private string companyNameCn_ = "";
    /// <summary>
    ///公司中文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameCn {
      get { return companyNameCn_; }
      set {
        companyNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyNameEn" field.</summary>
    public const int CompanyNameEnFieldNumber = 3;
    private string companyNameEn_ = "";
    /// <summary>
    ///公司英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameEn {
      get { return companyNameEn_; }
      set {
        companyNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 4;
    private string enterpriseType_ = "";
    /// <summary>
    ///内资还是外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "servicePack" field.</summary>
    public const int ServicePackFieldNumber = 5;
    private string servicePack_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pay" field.</summary>
    public const int PayFieldNumber = 6;
    private string pay_ = "";
    /// <summary>
    ///应付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pay {
      get { return pay_; }
      set {
        pay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractCount" field.</summary>
    public const int ContractCountFieldNumber = 7;
    private string contractCount_ = "";
    /// <summary>
    ///子合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCount {
      get { return contractCount_; }
      set {
        contractCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filledContractCount" field.</summary>
    public const int FilledContractCountFieldNumber = 8;
    private int filledContractCount_;
    /// <summary>
    ///已填子合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FilledContractCount {
      get { return filledContractCount_; }
      set {
        filledContractCount_ = value;
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 9;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 10;
    private string inviteCode_ = "";
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractStatus" field.</summary>
    public const int ContractStatusFieldNumber = 11;
    private string contractStatus_ = "";
    /// <summary>
    ///合同状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatus {
      get { return contractStatus_; }
      set {
        contractStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 12;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdOn" field.</summary>
    public const int CreatedOnFieldNumber = 13;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifiyBy" field.</summary>
    public const int ModifiyByFieldNumber = 14;
    private string modifiyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiyBy {
      get { return modifiyBy_; }
      set {
        modifiyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 15;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyNameCn != other.CompanyNameCn) return false;
      if (CompanyNameEn != other.CompanyNameEn) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (ServicePack != other.ServicePack) return false;
      if (Pay != other.Pay) return false;
      if (ContractCount != other.ContractCount) return false;
      if (FilledContractCount != other.FilledContractCount) return false;
      if (Owner != other.Owner) return false;
      if (InviteCode != other.InviteCode) return false;
      if (ContractStatus != other.ContractStatus) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (ModifiyBy != other.ModifiyBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyNameCn.Length != 0) hash ^= CompanyNameCn.GetHashCode();
      if (CompanyNameEn.Length != 0) hash ^= CompanyNameEn.GetHashCode();
      if (EnterpriseType.Length != 0) hash ^= EnterpriseType.GetHashCode();
      if (ServicePack.Length != 0) hash ^= ServicePack.GetHashCode();
      if (Pay.Length != 0) hash ^= Pay.GetHashCode();
      if (ContractCount.Length != 0) hash ^= ContractCount.GetHashCode();
      if (FilledContractCount != 0) hash ^= FilledContractCount.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (InviteCode.Length != 0) hash ^= InviteCode.GetHashCode();
      if (ContractStatus.Length != 0) hash ^= ContractStatus.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (ModifiyBy.Length != 0) hash ^= ModifiyBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (CompanyNameCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyNameCn);
      }
      if (CompanyNameEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyNameEn);
      }
      if (EnterpriseType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EnterpriseType);
      }
      if (ServicePack.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServicePack);
      }
      if (Pay.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Pay);
      }
      if (ContractCount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContractCount);
      }
      if (FilledContractCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(FilledContractCount);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Owner);
      }
      if (InviteCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InviteCode);
      }
      if (ContractStatus.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ContractStatus);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ModifyOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameCn);
      }
      if (CompanyNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameEn);
      }
      if (EnterpriseType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnterpriseType);
      }
      if (ServicePack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePack);
      }
      if (Pay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pay);
      }
      if (ContractCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractCount);
      }
      if (FilledContractCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FilledContractCount);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (InviteCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCode);
      }
      if (ContractStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractStatus);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackListStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyNameCn.Length != 0) {
        CompanyNameCn = other.CompanyNameCn;
      }
      if (other.CompanyNameEn.Length != 0) {
        CompanyNameEn = other.CompanyNameEn;
      }
      if (other.EnterpriseType.Length != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.ServicePack.Length != 0) {
        ServicePack = other.ServicePack;
      }
      if (other.Pay.Length != 0) {
        Pay = other.Pay;
      }
      if (other.ContractCount.Length != 0) {
        ContractCount = other.ContractCount;
      }
      if (other.FilledContractCount != 0) {
        FilledContractCount = other.FilledContractCount;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.InviteCode.Length != 0) {
        InviteCode = other.InviteCode;
      }
      if (other.ContractStatus.Length != 0) {
        ContractStatus = other.ContractStatus;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.ModifiyBy.Length != 0) {
        ModifiyBy = other.ModifiyBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            CompanyNameCn = input.ReadString();
            break;
          }
          case 26: {
            CompanyNameEn = input.ReadString();
            break;
          }
          case 34: {
            EnterpriseType = input.ReadString();
            break;
          }
          case 42: {
            ServicePack = input.ReadString();
            break;
          }
          case 50: {
            Pay = input.ReadString();
            break;
          }
          case 58: {
            ContractCount = input.ReadString();
            break;
          }
          case 64: {
            FilledContractCount = input.ReadInt32();
            break;
          }
          case 74: {
            Owner = input.ReadString();
            break;
          }
          case 82: {
            InviteCode = input.ReadString();
            break;
          }
          case 90: {
            ContractStatus = input.ReadString();
            break;
          }
          case 98: {
            CreatedBy = input.ReadString();
            break;
          }
          case 106: {
            CreatedOn = input.ReadString();
            break;
          }
          case 114: {
            ModifiyBy = input.ReadString();
            break;
          }
          case 122: {
            ModifyOn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取付费合同和赠送合同的列表
  /// </summary>
  public sealed partial class newGetServicePackListResponse : pb::IMessage<newGetServicePackListResponse> {
    private static readonly pb::MessageParser<newGetServicePackListResponse> _parser = new pb::MessageParser<newGetServicePackListResponse>(() => new newGetServicePackListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListResponse(newGetServicePackListResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackListResponse Clone() {
      return new newGetServicePackListResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetServicePackListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetServicePackListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackListResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取公司合同（二级合同）时传入的参数
  /// </summary>
  public sealed partial class newGetCompanyContractListRequest : pb::IMessage<newGetCompanyContractListRequest> {
    private static readonly pb::MessageParser<newGetCompanyContractListRequest> _parser = new pb::MessageParser<newGetCompanyContractListRequest>(() => new newGetCompanyContractListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListRequest(newGetCompanyContractListRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListRequest Clone() {
      return new newGetCompanyContractListRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Types.newGetCompanyContractListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetCompanyContractListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetCompanyContractListSearch : pb::IMessage<newGetCompanyContractListSearch> {
        private static readonly pb::MessageParser<newGetCompanyContractListSearch> _parser = new pb::MessageParser<newGetCompanyContractListSearch>(() => new newGetCompanyContractListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetCompanyContractListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetCompanyContractListRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch(newGetCompanyContractListSearch other) : this() {
          year_ = other.year_;
          conferenceId_ = other.conferenceId_;
          companyName_ = other.companyName_;
          contractNumber_ = other.contractNumber_;
          ownerId_ = other.ownerId_;
          companyServicePackId_ = other.companyServicePackId_;
          orderings_ = other.orderings_;
          isGive_ = other.isGive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch Clone() {
          return new newGetCompanyContractListSearch(this);
        }

        /// <summary>Field number for the "Year" field.</summary>
        public const int YearFieldNumber = 1;
        private string year_ = "";
        /// <summary>
        ///年份
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ConferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 2;
        private string conferenceId_ = "";
        /// <summary>
        ///会议Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CompanyName" field.</summary>
        public const int CompanyNameFieldNumber = 3;
        private string companyName_ = "";
        /// <summary>
        ///公司名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyName {
          get { return companyName_; }
          set {
            companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ContractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 4;
        private string contractNumber_ = "";
        /// <summary>
        ///合同号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OwnerId" field.</summary>
        public const int OwnerIdFieldNumber = 5;
        private string ownerId_ = "";
        /// <summary>
        ///业务员
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CompanyServicePackId" field.</summary>
        public const int CompanyServicePackIdFieldNumber = 6;
        private string companyServicePackId_ = "";
        /// <summary>
        ///套餐Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyServicePackId {
          get { return companyServicePackId_; }
          set {
            companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Orderings" field.</summary>
        public const int OrderingsFieldNumber = 7;
        private string orderings_ = "";
        /// <summary>
        ///排序
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Orderings {
          get { return orderings_; }
          set {
            orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsGive" field.</summary>
        public const int IsGiveFieldNumber = 8;
        private bool isGive_;
        /// <summary>
        ///是否为赠送合同：true：赠送合同 false：付费合同
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsGive {
          get { return isGive_; }
          set {
            isGive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetCompanyContractListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetCompanyContractListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Year != other.Year) return false;
          if (ConferenceId != other.ConferenceId) return false;
          if (CompanyName != other.CompanyName) return false;
          if (ContractNumber != other.ContractNumber) return false;
          if (OwnerId != other.OwnerId) return false;
          if (CompanyServicePackId != other.CompanyServicePackId) return false;
          if (Orderings != other.Orderings) return false;
          if (IsGive != other.IsGive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
          if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
          if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
          if (IsGive != false) hash ^= IsGive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Year.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Year);
          }
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(OwnerId);
          }
          if (CompanyServicePackId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(CompanyServicePackId);
          }
          if (Orderings.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Orderings);
          }
          if (IsGive != false) {
            output.WriteRawTag(64);
            output.WriteBool(IsGive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
          }
          if (CompanyServicePackId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
          }
          if (Orderings.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderings);
          }
          if (IsGive != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetCompanyContractListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.CompanyName.Length != 0) {
            CompanyName = other.CompanyName;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          if (other.OwnerId.Length != 0) {
            OwnerId = other.OwnerId;
          }
          if (other.CompanyServicePackId.Length != 0) {
            CompanyServicePackId = other.CompanyServicePackId;
          }
          if (other.Orderings.Length != 0) {
            Orderings = other.Orderings;
          }
          if (other.IsGive != false) {
            IsGive = other.IsGive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Year = input.ReadString();
                break;
              }
              case 18: {
                ConferenceId = input.ReadString();
                break;
              }
              case 26: {
                CompanyName = input.ReadString();
                break;
              }
              case 34: {
                ContractNumber = input.ReadString();
                break;
              }
              case 42: {
                OwnerId = input.ReadString();
                break;
              }
              case 50: {
                CompanyServicePackId = input.ReadString();
                break;
              }
              case 58: {
                Orderings = input.ReadString();
                break;
              }
              case 64: {
                IsGive = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetMySpeakersListRequest : pb::IMessage<newGetMySpeakersListRequest> {
    private static readonly pb::MessageParser<newGetMySpeakersListRequest> _parser = new pb::MessageParser<newGetMySpeakersListRequest>(() => new newGetMySpeakersListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetMySpeakersListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListRequest(newGetMySpeakersListRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListRequest Clone() {
      return new newGetMySpeakersListRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetMySpeakersListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetMySpeakersListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetMySpeakersListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Types.newGetMySpeakersListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetMySpeakersListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetMySpeakersListSearch : pb::IMessage<newGetMySpeakersListSearch> {
        private static readonly pb::MessageParser<newGetMySpeakersListSearch> _parser = new pb::MessageParser<newGetMySpeakersListSearch>(() => new newGetMySpeakersListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetMySpeakersListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetMySpeakersListRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetMySpeakersListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetMySpeakersListSearch(newGetMySpeakersListSearch other) : this() {
          year_ = other.year_;
          conferenceId_ = other.conferenceId_;
          companyName_ = other.companyName_;
          contractNumber_ = other.contractNumber_;
          name_ = other.name_;
          ownerId_ = other.ownerId_;
          orderings_ = other.orderings_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetMySpeakersListSearch Clone() {
          return new newGetMySpeakersListSearch(this);
        }

        /// <summary>Field number for the "Year" field.</summary>
        public const int YearFieldNumber = 1;
        private string year_ = "";
        /// <summary>
        ///年份
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ConferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 2;
        private string conferenceId_ = "";
        /// <summary>
        ///会议Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CompanyName" field.</summary>
        public const int CompanyNameFieldNumber = 3;
        private string companyName_ = "";
        /// <summary>
        ///公司名：个人合同中的公司名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyName {
          get { return companyName_; }
          set {
            companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ContractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 4;
        private string contractNumber_ = "";
        /// <summary>
        ///合同号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 5;
        private string name_ = "";
        /// <summary>
        ///姓名：个人合同中的姓名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OwnerId" field.</summary>
        public const int OwnerIdFieldNumber = 6;
        private string ownerId_ = "";
        /// <summary>
        ///业务员
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Orderings" field.</summary>
        public const int OrderingsFieldNumber = 7;
        private string orderings_ = "";
        /// <summary>
        ///排序
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Orderings {
          get { return orderings_; }
          set {
            orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetMySpeakersListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetMySpeakersListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Year != other.Year) return false;
          if (ConferenceId != other.ConferenceId) return false;
          if (CompanyName != other.CompanyName) return false;
          if (ContractNumber != other.ContractNumber) return false;
          if (Name != other.Name) return false;
          if (OwnerId != other.OwnerId) return false;
          if (Orderings != other.Orderings) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
          if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Year.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Year);
          }
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ContractNumber);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Name);
          }
          if (OwnerId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(OwnerId);
          }
          if (Orderings.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Orderings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (OwnerId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
          }
          if (Orderings.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderings);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetMySpeakersListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.CompanyName.Length != 0) {
            CompanyName = other.CompanyName;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.OwnerId.Length != 0) {
            OwnerId = other.OwnerId;
          }
          if (other.Orderings.Length != 0) {
            Orderings = other.Orderings;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Year = input.ReadString();
                break;
              }
              case 18: {
                ConferenceId = input.ReadString();
                break;
              }
              case 26: {
                CompanyName = input.ReadString();
                break;
              }
              case 34: {
                ContractNumber = input.ReadString();
                break;
              }
              case 42: {
                Name = input.ReadString();
                break;
              }
              case 50: {
                OwnerId = input.ReadString();
                break;
              }
              case 58: {
                Orderings = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetMySpeakersListStruct : pb::IMessage<newGetMySpeakersListStruct> {
    private static readonly pb::MessageParser<newGetMySpeakersListStruct> _parser = new pb::MessageParser<newGetMySpeakersListStruct>(() => new newGetMySpeakersListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetMySpeakersListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListStruct(newGetMySpeakersListStruct other) : this() {
      contractNumber_ = other.contractNumber_;
      perContractName_ = other.perContractName_;
      perParticipantTypeTranslation_ = other.perParticipantTypeTranslation_;
      name_ = other.name_;
      companyTranslation_ = other.companyTranslation_;
      position_ = other.position_;
      mobile_ = other.mobile_;
      email_ = other.email_;
      owner_ = other.owner_;
      ownerId_ = other.ownerId_;
      otherOwner_ = other.otherOwner_;
      otherOwnerId_ = other.otherOwnerId_;
      isAdd_ = other.isAdd_;
      createdBy_ = other.createdBy_;
      createdOn_ = other.createdOn_;
      modifiyBy_ = other.modifiyBy_;
      modifyOn_ = other.modifyOn_;
      memberPK_ = other.memberPK_;
      enterpriseType_ = other.enterpriseType_;
      conferenceId_ = other.conferenceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListStruct Clone() {
      return new newGetMySpeakersListStruct(this);
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractName" field.</summary>
    public const int PerContractNameFieldNumber = 2;
    private string perContractName_ = "";
    /// <summary>
    ///姓名（合同）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractName {
      get { return perContractName_; }
      set {
        perContractName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerParticipantTypeTranslation" field.</summary>
    public const int PerParticipantTypeTranslationFieldNumber = 3;
    private string perParticipantTypeTranslation_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerParticipantTypeTranslation {
      get { return perParticipantTypeTranslation_; }
      set {
        perParticipantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 5;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 6;
    private string position_ = "";
    /// <summary>
    ///职务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Position {
      get { return position_; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 7;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 8;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 9;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerId" field.</summary>
    public const int OwnerIdFieldNumber = 10;
    private string ownerId_ = "";
    /// <summary>
    ///业务员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 11;
    private string otherOwner_ = "";
    /// <summary>
    ///副业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 12;
    private string otherOwnerId_ = "";
    /// <summary>
    ///副业务员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsAdd" field.</summary>
    public const int IsAddFieldNumber = 13;
    private bool isAdd_;
    /// <summary>
    ///是否已添加：true---已添加  false--未添加
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdd {
      get { return isAdd_; }
      set {
        isAdd_ = value;
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 14;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 15;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiyBy" field.</summary>
    public const int ModifiyByFieldNumber = 16;
    private string modifiyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiyBy {
      get { return modifiyBy_; }
      set {
        modifiyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 17;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 18;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 19;
    private int enterpriseType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 20;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetMySpeakersListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetMySpeakersListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (PerContractName != other.PerContractName) return false;
      if (PerParticipantTypeTranslation != other.PerParticipantTypeTranslation) return false;
      if (Name != other.Name) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (Position != other.Position) return false;
      if (Mobile != other.Mobile) return false;
      if (Email != other.Email) return false;
      if (Owner != other.Owner) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (IsAdd != other.IsAdd) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (ModifiyBy != other.ModifiyBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      if (MemberPK != other.MemberPK) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (ConferenceId != other.ConferenceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (PerContractName.Length != 0) hash ^= PerContractName.GetHashCode();
      if (PerParticipantTypeTranslation.Length != 0) hash ^= PerParticipantTypeTranslation.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (Position.Length != 0) hash ^= Position.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (IsAdd != false) hash ^= IsAdd.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (ModifiyBy.Length != 0) hash ^= ModifiyBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (PerContractName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PerContractName);
      }
      if (PerParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PerParticipantTypeTranslation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanyTranslation);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Position);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Mobile);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Email);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Owner);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OtherOwnerId);
      }
      if (IsAdd != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsAdd);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ModifyOn);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemberPK);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(EnterpriseType);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ConferenceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (PerContractName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractName);
      }
      if (PerParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerParticipantTypeTranslation);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (Position.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (IsAdd != false) {
        size += 1 + 1;
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (EnterpriseType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetMySpeakersListStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.PerContractName.Length != 0) {
        PerContractName = other.PerContractName;
      }
      if (other.PerParticipantTypeTranslation.Length != 0) {
        PerParticipantTypeTranslation = other.PerParticipantTypeTranslation;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.Position.Length != 0) {
        Position = other.Position;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.IsAdd != false) {
        IsAdd = other.IsAdd;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.ModifiyBy.Length != 0) {
        ModifiyBy = other.ModifiyBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            PerContractName = input.ReadString();
            break;
          }
          case 26: {
            PerParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 50: {
            Position = input.ReadString();
            break;
          }
          case 58: {
            Mobile = input.ReadString();
            break;
          }
          case 66: {
            Email = input.ReadString();
            break;
          }
          case 74: {
            Owner = input.ReadString();
            break;
          }
          case 82: {
            OwnerId = input.ReadString();
            break;
          }
          case 90: {
            OtherOwner = input.ReadString();
            break;
          }
          case 98: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 104: {
            IsAdd = input.ReadBool();
            break;
          }
          case 114: {
            CreatedBy = input.ReadString();
            break;
          }
          case 122: {
            CreatedOn = input.ReadString();
            break;
          }
          case 130: {
            ModifiyBy = input.ReadString();
            break;
          }
          case 138: {
            ModifyOn = input.ReadString();
            break;
          }
          case 146: {
            MemberPK = input.ReadString();
            break;
          }
          case 152: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 162: {
            ConferenceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetMySpeakersListResponse : pb::IMessage<newGetMySpeakersListResponse> {
    private static readonly pb::MessageParser<newGetMySpeakersListResponse> _parser = new pb::MessageParser<newGetMySpeakersListResponse>(() => new newGetMySpeakersListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetMySpeakersListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListResponse(newGetMySpeakersListResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetMySpeakersListResponse Clone() {
      return new newGetMySpeakersListResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetMySpeakersListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetMySpeakersListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetMySpeakersListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetMySpeakersListResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newBoolRequest : pb::IMessage<newBoolRequest> {
    private static readonly pb::MessageParser<newBoolRequest> _parser = new pb::MessageParser<newBoolRequest>(() => new newBoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newBoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newBoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newBoolRequest(newBoolRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newBoolRequest Clone() {
      return new newBoolRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newBoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newBoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newBoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newBoolRequest.Types.newGetCompanyContractListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newBoolRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetCompanyContractListSearch : pb::IMessage<newGetCompanyContractListSearch> {
        private static readonly pb::MessageParser<newGetCompanyContractListSearch> _parser = new pb::MessageParser<newGetCompanyContractListSearch>(() => new newGetCompanyContractListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetCompanyContractListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newBoolRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch(newGetCompanyContractListSearch other) : this() {
          check_ = other.check_;
          year_ = other.year_;
          orderings_ = other.orderings_;
          isGive_ = other.isGive_;
          ownerId_ = other.ownerId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListSearch Clone() {
          return new newGetCompanyContractListSearch(this);
        }

        /// <summary>Field number for the "Check" field.</summary>
        public const int CheckFieldNumber = 1;
        private bool check_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Check {
          get { return check_; }
          set {
            check_ = value;
          }
        }

        /// <summary>Field number for the "Year" field.</summary>
        public const int YearFieldNumber = 2;
        private string year_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Orderings" field.</summary>
        public const int OrderingsFieldNumber = 3;
        private string orderings_ = "";
        /// <summary>
        ///排序
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Orderings {
          get { return orderings_; }
          set {
            orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "IsGive" field.</summary>
        public const int IsGiveFieldNumber = 4;
        private bool isGive_;
        /// <summary>
        ///是否为赠送 true:是 false：否
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsGive {
          get { return isGive_; }
          set {
            isGive_ = value;
          }
        }

        /// <summary>Field number for the "OwnerId" field.</summary>
        public const int OwnerIdFieldNumber = 5;
        private string ownerId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetCompanyContractListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetCompanyContractListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Check != other.Check) return false;
          if (Year != other.Year) return false;
          if (Orderings != other.Orderings) return false;
          if (IsGive != other.IsGive) return false;
          if (OwnerId != other.OwnerId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Check != false) hash ^= Check.GetHashCode();
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
          if (IsGive != false) hash ^= IsGive.GetHashCode();
          if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Check != false) {
            output.WriteRawTag(8);
            output.WriteBool(Check);
          }
          if (Year.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Year);
          }
          if (Orderings.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Orderings);
          }
          if (IsGive != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsGive);
          }
          if (OwnerId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(OwnerId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Check != false) {
            size += 1 + 1;
          }
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (Orderings.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderings);
          }
          if (IsGive != false) {
            size += 1 + 1;
          }
          if (OwnerId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetCompanyContractListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Check != false) {
            Check = other.Check;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.Orderings.Length != 0) {
            Orderings = other.Orderings;
          }
          if (other.IsGive != false) {
            IsGive = other.IsGive;
          }
          if (other.OwnerId.Length != 0) {
            OwnerId = other.OwnerId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Check = input.ReadBool();
                break;
              }
              case 18: {
                Year = input.ReadString();
                break;
              }
              case 26: {
                Orderings = input.ReadString();
                break;
              }
              case 32: {
                IsGive = input.ReadBool();
                break;
              }
              case 42: {
                OwnerId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetCompanyContractListStruct : pb::IMessage<newGetCompanyContractListStruct> {
    private static readonly pb::MessageParser<newGetCompanyContractListStruct> _parser = new pb::MessageParser<newGetCompanyContractListStruct>(() => new newGetCompanyContractListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListStruct(newGetCompanyContractListStruct other) : this() {
      contractNumber_ = other.contractNumber_;
      companyNameTranslation_ = other.companyNameTranslation_;
      enterpriseType_ = other.enterpriseType_;
      pay_ = other.pay_;
      comServicePackTranslation_ = other.comServicePackTranslation_;
      year_ = other.year_;
      maxContractNumber_ = other.maxContractNumber_;
      owner_ = other.owner_;
      filledContractCount_ = other.filledContractCount_;
      contractStatus_ = other.contractStatus_;
      createdBy_ = other.createdBy_;
      createdOn_ = other.createdOn_;
      modifiyBy_ = other.modifiyBy_;
      modifyOn_ = other.modifyOn_;
      isGive_ = other.isGive_;
      ownerId_ = other.ownerId_;
      otherOwner_ = other.otherOwner_;
      otherOwnerId_ = other.otherOwnerId_;
      comPrice_ = other.comPrice_;
      comapnyId_ = other.comapnyId_;
      originPrice_ = other.originPrice_;
      contractStateName_ = other.contractStateName_;
      discountId_ = other.discountId_;
      contractId_ = other.contractId_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListStruct Clone() {
      return new newGetCompanyContractListStruct(this);
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyNameTranslation" field.</summary>
    public const int CompanyNameTranslationFieldNumber = 2;
    private string companyNameTranslation_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameTranslation {
      get { return companyNameTranslation_; }
      set {
        companyNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 3;
    private string enterpriseType_ = "";
    /// <summary>
    ///内资还是外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pay" field.</summary>
    public const int PayFieldNumber = 4;
    private string pay_ = "";
    /// <summary>
    ///应付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pay {
      get { return pay_; }
      set {
        pay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComServicePackTranslation" field.</summary>
    public const int ComServicePackTranslationFieldNumber = 5;
    private string comServicePackTranslation_ = "";
    /// <summary>
    ///参会类型（套餐名）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComServicePackTranslation {
      get { return comServicePackTranslation_; }
      set {
        comServicePackTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 6;
    private string year_ = "";
    /// <summary>
    ///参会年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 7;
    private int maxContractNumber_;
    /// <summary>
    ///子合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = value;
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FilledContractCount" field.</summary>
    public const int FilledContractCountFieldNumber = 9;
    private string filledContractCount_ = "";
    /// <summary>
    ///已填子合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilledContractCount {
      get { return filledContractCount_; }
      set {
        filledContractCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatus" field.</summary>
    public const int ContractStatusFieldNumber = 10;
    private string contractStatus_ = "";
    /// <summary>
    ///合同状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatus {
      get { return contractStatus_; }
      set {
        contractStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 11;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 12;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiyBy" field.</summary>
    public const int ModifiyByFieldNumber = 13;
    private string modifiyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiyBy {
      get { return modifiyBy_; }
      set {
        modifiyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 14;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 15;
    private bool isGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "OwnerId" field.</summary>
    public const int OwnerIdFieldNumber = 16;
    private string ownerId_ = "";
    /// <summary>
    ///业务员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 17;
    private string otherOwner_ = "";
    /// <summary>
    ///副业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 18;
    private string otherOwnerId_ = "";
    /// <summary>
    ///副业务员Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComPrice" field.</summary>
    public const int ComPriceFieldNumber = 19;
    private string comPrice_ = "";
    /// <summary>
    ///套餐价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComapnyId" field.</summary>
    public const int ComapnyIdFieldNumber = 20;
    private string comapnyId_ = "";
    /// <summary>
    ///公司Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComapnyId {
      get { return comapnyId_; }
      set {
        comapnyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginPrice" field.</summary>
    public const int OriginPriceFieldNumber = 21;
    private string originPrice_ = "";
    /// <summary>
    ///套餐原价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginPrice {
      get { return originPrice_; }
      set {
        originPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStateName" field.</summary>
    public const int ContractStateNameFieldNumber = 22;
    private string contractStateName_ = "";
    /// <summary>
    ///合同状态名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStateName {
      get { return contractStateName_; }
      set {
        contractStateName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 23;
    private string discountId_ = "";
    /// <summary>
    ///折扣情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 24;
    private string contractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 25;
    private string priceAfterDiscountUSD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 26;
    private string priceAfterDiscountRMB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyNameTranslation != other.CompanyNameTranslation) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (Pay != other.Pay) return false;
      if (ComServicePackTranslation != other.ComServicePackTranslation) return false;
      if (Year != other.Year) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      if (Owner != other.Owner) return false;
      if (FilledContractCount != other.FilledContractCount) return false;
      if (ContractStatus != other.ContractStatus) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (ModifiyBy != other.ModifiyBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      if (IsGive != other.IsGive) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (ComPrice != other.ComPrice) return false;
      if (ComapnyId != other.ComapnyId) return false;
      if (OriginPrice != other.OriginPrice) return false;
      if (ContractStateName != other.ContractStateName) return false;
      if (DiscountId != other.DiscountId) return false;
      if (ContractId != other.ContractId) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyNameTranslation.Length != 0) hash ^= CompanyNameTranslation.GetHashCode();
      if (EnterpriseType.Length != 0) hash ^= EnterpriseType.GetHashCode();
      if (Pay.Length != 0) hash ^= Pay.GetHashCode();
      if (ComServicePackTranslation.Length != 0) hash ^= ComServicePackTranslation.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (MaxContractNumber != 0) hash ^= MaxContractNumber.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (FilledContractCount.Length != 0) hash ^= FilledContractCount.GetHashCode();
      if (ContractStatus.Length != 0) hash ^= ContractStatus.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (ModifiyBy.Length != 0) hash ^= ModifiyBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (ComapnyId.Length != 0) hash ^= ComapnyId.GetHashCode();
      if (OriginPrice.Length != 0) hash ^= OriginPrice.GetHashCode();
      if (ContractStateName.Length != 0) hash ^= ContractStateName.GetHashCode();
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (CompanyNameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyNameTranslation);
      }
      if (EnterpriseType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnterpriseType);
      }
      if (Pay.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Pay);
      }
      if (ComServicePackTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComServicePackTranslation);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Year);
      }
      if (MaxContractNumber != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxContractNumber);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (FilledContractCount.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FilledContractCount);
      }
      if (ContractStatus.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContractStatus);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModifyOn);
      }
      if (IsGive != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsGive);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(OwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(OtherOwnerId);
      }
      if (ComPrice.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ComPrice);
      }
      if (ComapnyId.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ComapnyId);
      }
      if (OriginPrice.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(OriginPrice);
      }
      if (ContractStateName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ContractStateName);
      }
      if (DiscountId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(DiscountId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ContractId);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameTranslation);
      }
      if (EnterpriseType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnterpriseType);
      }
      if (Pay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pay);
      }
      if (ComServicePackTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComServicePackTranslation);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (MaxContractNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumber);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (FilledContractCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilledContractCount);
      }
      if (ContractStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractStatus);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (IsGive != false) {
        size += 1 + 1;
      }
      if (OwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (ComapnyId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComapnyId);
      }
      if (OriginPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OriginPrice);
      }
      if (ContractStateName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStateName);
      }
      if (DiscountId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (ContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyNameTranslation.Length != 0) {
        CompanyNameTranslation = other.CompanyNameTranslation;
      }
      if (other.EnterpriseType.Length != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.Pay.Length != 0) {
        Pay = other.Pay;
      }
      if (other.ComServicePackTranslation.Length != 0) {
        ComServicePackTranslation = other.ComServicePackTranslation;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.MaxContractNumber != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.FilledContractCount.Length != 0) {
        FilledContractCount = other.FilledContractCount;
      }
      if (other.ContractStatus.Length != 0) {
        ContractStatus = other.ContractStatus;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.ModifiyBy.Length != 0) {
        ModifiyBy = other.ModifiyBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      if (other.ComapnyId.Length != 0) {
        ComapnyId = other.ComapnyId;
      }
      if (other.OriginPrice.Length != 0) {
        OriginPrice = other.OriginPrice;
      }
      if (other.ContractStateName.Length != 0) {
        ContractStateName = other.ContractStateName;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            CompanyNameTranslation = input.ReadString();
            break;
          }
          case 26: {
            EnterpriseType = input.ReadString();
            break;
          }
          case 34: {
            Pay = input.ReadString();
            break;
          }
          case 42: {
            ComServicePackTranslation = input.ReadString();
            break;
          }
          case 50: {
            Year = input.ReadString();
            break;
          }
          case 56: {
            MaxContractNumber = input.ReadInt32();
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
          case 74: {
            FilledContractCount = input.ReadString();
            break;
          }
          case 82: {
            ContractStatus = input.ReadString();
            break;
          }
          case 90: {
            CreatedBy = input.ReadString();
            break;
          }
          case 98: {
            CreatedOn = input.ReadString();
            break;
          }
          case 106: {
            ModifiyBy = input.ReadString();
            break;
          }
          case 114: {
            ModifyOn = input.ReadString();
            break;
          }
          case 120: {
            IsGive = input.ReadBool();
            break;
          }
          case 130: {
            OwnerId = input.ReadString();
            break;
          }
          case 138: {
            OtherOwner = input.ReadString();
            break;
          }
          case 146: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 154: {
            ComPrice = input.ReadString();
            break;
          }
          case 162: {
            ComapnyId = input.ReadString();
            break;
          }
          case 170: {
            OriginPrice = input.ReadString();
            break;
          }
          case 178: {
            ContractStateName = input.ReadString();
            break;
          }
          case 186: {
            DiscountId = input.ReadString();
            break;
          }
          case 194: {
            ContractId = input.ReadString();
            break;
          }
          case 202: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 210: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetCompanyContractListDiscountRequest : pb::IMessage<newGetCompanyContractListDiscountRequest> {
    private static readonly pb::MessageParser<newGetCompanyContractListDiscountRequest> _parser = new pb::MessageParser<newGetCompanyContractListDiscountRequest>(() => new newGetCompanyContractListDiscountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListDiscountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountRequest(newGetCompanyContractListDiscountRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountRequest Clone() {
      return new newGetCompanyContractListDiscountRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListDiscountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListDiscountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListDiscountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Types.newGetCompanyContractListDiscountSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetCompanyContractListDiscountRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetCompanyContractListDiscountSearch : pb::IMessage<newGetCompanyContractListDiscountSearch> {
        private static readonly pb::MessageParser<newGetCompanyContractListDiscountSearch> _parser = new pb::MessageParser<newGetCompanyContractListDiscountSearch>(() => new newGetCompanyContractListDiscountSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetCompanyContractListDiscountSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListDiscountSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListDiscountSearch(newGetCompanyContractListDiscountSearch other) : this() {
          conferenceId_ = other.conferenceId_;
          companyTranslation_ = other.companyTranslation_;
          year_ = other.year_;
          contractNumber_ = other.contractNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetCompanyContractListDiscountSearch Clone() {
          return new newGetCompanyContractListDiscountSearch(this);
        }

        /// <summary>Field number for the "ConferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 1;
        private string conferenceId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CompanyTranslation" field.</summary>
        public const int CompanyTranslationFieldNumber = 2;
        private string companyTranslation_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyTranslation {
          get { return companyTranslation_; }
          set {
            companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Year" field.</summary>
        public const int YearFieldNumber = 3;
        private string year_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ContractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 4;
        private string contractNumber_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetCompanyContractListDiscountSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetCompanyContractListDiscountSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ConferenceId != other.ConferenceId) return false;
          if (CompanyTranslation != other.CompanyTranslation) return false;
          if (Year != other.Year) return false;
          if (ContractNumber != other.ContractNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ConferenceId);
          }
          if (CompanyTranslation.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CompanyTranslation);
          }
          if (Year.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Year);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ContractNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (CompanyTranslation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
          }
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetCompanyContractListDiscountSearch other) {
          if (other == null) {
            return;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.CompanyTranslation.Length != 0) {
            CompanyTranslation = other.CompanyTranslation;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ConferenceId = input.ReadString();
                break;
              }
              case 18: {
                CompanyTranslation = input.ReadString();
                break;
              }
              case 26: {
                Year = input.ReadString();
                break;
              }
              case 34: {
                ContractNumber = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetCompanyContractListDiscountStruct : pb::IMessage<newGetCompanyContractListDiscountStruct> {
    private static readonly pb::MessageParser<newGetCompanyContractListDiscountStruct> _parser = new pb::MessageParser<newGetCompanyContractListDiscountStruct>(() => new newGetCompanyContractListDiscountStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListDiscountStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountStruct(newGetCompanyContractListDiscountStruct other) : this() {
      contractNumber_ = other.contractNumber_;
      companyTranslation_ = other.companyTranslation_;
      price_ = other.price_;
      priceDiscount_ = other.priceDiscount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountStruct Clone() {
      return new newGetCompanyContractListDiscountStruct(this);
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 2;
    private string companyTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 3;
    private string price_ = "";
    /// <summary>
    ///套餐价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceDiscount" field.</summary>
    public const int PriceDiscountFieldNumber = 4;
    private string priceDiscount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceDiscount {
      get { return priceDiscount_; }
      set {
        priceDiscount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListDiscountStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListDiscountStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (Price != other.Price) return false;
      if (PriceDiscount != other.PriceDiscount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (PriceDiscount.Length != 0) hash ^= PriceDiscount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTranslation);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Price);
      }
      if (PriceDiscount.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceDiscount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (PriceDiscount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceDiscount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListDiscountStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.PriceDiscount.Length != 0) {
        PriceDiscount = other.PriceDiscount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 26: {
            Price = input.ReadString();
            break;
          }
          case 34: {
            PriceDiscount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetCompanyContractListDiscountResponse : pb::IMessage<newGetCompanyContractListDiscountResponse> {
    private static readonly pb::MessageParser<newGetCompanyContractListDiscountResponse> _parser = new pb::MessageParser<newGetCompanyContractListDiscountResponse>(() => new newGetCompanyContractListDiscountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListDiscountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountResponse(newGetCompanyContractListDiscountResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListDiscountResponse Clone() {
      return new newGetCompanyContractListDiscountResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListDiscountStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListDiscountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListDiscountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListDiscountResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///得到公司合同列表（二级合同）
  /// </summary>
  public sealed partial class newGetCompanyContractListResponse : pb::IMessage<newGetCompanyContractListResponse> {
    private static readonly pb::MessageParser<newGetCompanyContractListResponse> _parser = new pb::MessageParser<newGetCompanyContractListResponse>(() => new newGetCompanyContractListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyContractListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListResponse(newGetCompanyContractListResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyContractListResponse Clone() {
      return new newGetCompanyContractListResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetCompanyContractListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyContractListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyContractListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyContractListResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取个人合同（三级合同）时传入的参数
  /// </summary>
  public sealed partial class newGetPersonContractListRequest : pb::IMessage<newGetPersonContractListRequest> {
    private static readonly pb::MessageParser<newGetPersonContractListRequest> _parser = new pb::MessageParser<newGetPersonContractListRequest>(() => new newGetPersonContractListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonContractListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListRequest(newGetPersonContractListRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListRequest Clone() {
      return new newGetPersonContractListRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    /// 请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonContractListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonContractListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonContractListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Types.newGetPersonContractListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetPersonContractListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetPersonContractListSearch : pb::IMessage<newGetPersonContractListSearch> {
        private static readonly pb::MessageParser<newGetPersonContractListSearch> _parser = new pb::MessageParser<newGetPersonContractListSearch>(() => new newGetPersonContractListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetPersonContractListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetPersonContractListRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch(newGetPersonContractListSearch other) : this() {
          year_ = other.year_;
          conferenceId_ = other.conferenceId_;
          servicePackId_ = other.servicePackId_;
          companyName_ = other.companyName_;
          contractNumber_ = other.contractNumber_;
          ownerId_ = other.ownerId_;
          name_ = other.name_;
          email_ = other.email_;
          orderings_ = other.orderings_;
          isGive_ = other.isGive_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch Clone() {
          return new newGetPersonContractListSearch(this);
        }

        /// <summary>Field number for the "Year" field.</summary>
        public const int YearFieldNumber = 1;
        private string year_ = "";
        /// <summary>
        ///年份
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ConferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 2;
        private string conferenceId_ = "";
        /// <summary>
        ///会议Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ServicePackId" field.</summary>
        public const int ServicePackIdFieldNumber = 3;
        private string servicePackId_ = "";
        /// <summary>
        ///套餐Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ServicePackId {
          get { return servicePackId_; }
          set {
            servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CompanyName" field.</summary>
        public const int CompanyNameFieldNumber = 4;
        private string companyName_ = "";
        /// <summary>
        ///公司名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyName {
          get { return companyName_; }
          set {
            companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ContractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 5;
        private string contractNumber_ = "";
        /// <summary>
        ///合同号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "OwnerId" field.</summary>
        public const int OwnerIdFieldNumber = 6;
        private string ownerId_ = "";
        /// <summary>
        ///业务员
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 7;
        private string name_ = "";
        /// <summary>
        ///姓名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Email" field.</summary>
        public const int EmailFieldNumber = 8;
        private string email_ = "";
        /// <summary>
        ///邮箱
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Email {
          get { return email_; }
          set {
            email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Orderings" field.</summary>
        public const int OrderingsFieldNumber = 9;
        private string orderings_ = "";
        /// <summary>
        ///排序规则：属性前面带-号表示反序排序，exp:"name,-createtime"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Orderings {
          get { return orderings_; }
          set {
            orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "isGive" field.</summary>
        public const int IsGiveFieldNumber = 10;
        private int isGive_;
        /// <summary>
        ///是否为赠送 0---筛选非赠送的个人合同 1----筛选赠送的个人合同  2---查询全部的个人合同
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int IsGive {
          get { return isGive_; }
          set {
            isGive_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetPersonContractListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetPersonContractListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Year != other.Year) return false;
          if (ConferenceId != other.ConferenceId) return false;
          if (ServicePackId != other.ServicePackId) return false;
          if (CompanyName != other.CompanyName) return false;
          if (ContractNumber != other.ContractNumber) return false;
          if (OwnerId != other.OwnerId) return false;
          if (Name != other.Name) return false;
          if (Email != other.Email) return false;
          if (Orderings != other.Orderings) return false;
          if (IsGive != other.IsGive) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
          if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Email.Length != 0) hash ^= Email.GetHashCode();
          if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
          if (IsGive != 0) hash ^= IsGive.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Year.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Year);
          }
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ConferenceId);
          }
          if (ServicePackId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ServicePackId);
          }
          if (CompanyName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(OwnerId);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Name);
          }
          if (Email.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Email);
          }
          if (Orderings.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Orderings);
          }
          if (IsGive != 0) {
            output.WriteRawTag(80);
            output.WriteInt32(IsGive);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (ServicePackId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
          }
          if (CompanyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Email.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
          }
          if (Orderings.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderings);
          }
          if (IsGive != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(IsGive);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetPersonContractListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.ServicePackId.Length != 0) {
            ServicePackId = other.ServicePackId;
          }
          if (other.CompanyName.Length != 0) {
            CompanyName = other.CompanyName;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          if (other.OwnerId.Length != 0) {
            OwnerId = other.OwnerId;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Email.Length != 0) {
            Email = other.Email;
          }
          if (other.Orderings.Length != 0) {
            Orderings = other.Orderings;
          }
          if (other.IsGive != 0) {
            IsGive = other.IsGive;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Year = input.ReadString();
                break;
              }
              case 18: {
                ConferenceId = input.ReadString();
                break;
              }
              case 26: {
                ServicePackId = input.ReadString();
                break;
              }
              case 34: {
                CompanyName = input.ReadString();
                break;
              }
              case 42: {
                ContractNumber = input.ReadString();
                break;
              }
              case 50: {
                OwnerId = input.ReadString();
                break;
              }
              case 58: {
                Name = input.ReadString();
                break;
              }
              case 66: {
                Email = input.ReadString();
                break;
              }
              case 74: {
                Orderings = input.ReadString();
                break;
              }
              case 80: {
                IsGive = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetPersonContractListByComContratcIdRequest : pb::IMessage<newGetPersonContractListByComContratcIdRequest> {
    private static readonly pb::MessageParser<newGetPersonContractListByComContratcIdRequest> _parser = new pb::MessageParser<newGetPersonContractListByComContratcIdRequest>(() => new newGetPersonContractListByComContratcIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonContractListByComContratcIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListByComContratcIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListByComContratcIdRequest(newGetPersonContractListByComContratcIdRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListByComContratcIdRequest Clone() {
      return new newGetPersonContractListByComContratcIdRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonContractListByComContratcIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonContractListByComContratcIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonContractListByComContratcIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Types.newGetPersonContractListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetPersonContractListByComContratcIdRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetPersonContractListSearch : pb::IMessage<newGetPersonContractListSearch> {
        private static readonly pb::MessageParser<newGetPersonContractListSearch> _parser = new pb::MessageParser<newGetPersonContractListSearch>(() => new newGetPersonContractListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetPersonContractListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetPersonContractListByComContratcIdRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch(newGetPersonContractListSearch other) : this() {
          comContractId_ = other.comContractId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetPersonContractListSearch Clone() {
          return new newGetPersonContractListSearch(this);
        }

        /// <summary>Field number for the "ComContractId" field.</summary>
        public const int ComContractIdFieldNumber = 1;
        private string comContractId_ = "";
        /// <summary>
        ///二级合同Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ComContractId {
          get { return comContractId_; }
          set {
            comContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetPersonContractListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetPersonContractListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ComContractId != other.ComContractId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ComContractId.Length != 0) hash ^= ComContractId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ComContractId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ComContractId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ComContractId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetPersonContractListSearch other) {
          if (other == null) {
            return;
          }
          if (other.ComContractId.Length != 0) {
            ComContractId = other.ComContractId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ComContractId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PerContractNumberRequest : pb::IMessage<PerContractNumberRequest> {
    private static readonly pb::MessageParser<PerContractNumberRequest> _parser = new pb::MessageParser<PerContractNumberRequest>(() => new PerContractNumberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerContractNumberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberRequest(PerContractNumberRequest other) : this() {
      perContractNumber_ = other.perContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerContractNumberRequest Clone() {
      return new PerContractNumberRequest(this);
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 1;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerContractNumberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerContractNumberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerContractNumber != other.PerContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PerContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerContractNumberRequest other) {
      if (other == null) {
        return;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PerContractNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetComapnyServicePackTypeRequest : pb::IMessage<newGetComapnyServicePackTypeRequest> {
    private static readonly pb::MessageParser<newGetComapnyServicePackTypeRequest> _parser = new pb::MessageParser<newGetComapnyServicePackTypeRequest>(() => new newGetComapnyServicePackTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetComapnyServicePackTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeRequest(newGetComapnyServicePackTypeRequest other) : this() {
      year_ = other.year_;
      conferenceId_ = other.conferenceId_;
      memberPK_ = other.memberPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeRequest Clone() {
      return new newGetComapnyServicePackTypeRequest(this);
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 1;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 2;
    private string conferenceId_ = "";
    /// <summary>
    ///会议Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetComapnyServicePackTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetComapnyServicePackTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (MemberPK != other.MemberPK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Year.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Year);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetComapnyServicePackTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Year = input.ReadString();
            break;
          }
          case 18: {
            ConferenceId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetComapnyServicePackTypeResponse : pb::IMessage<newGetComapnyServicePackTypeResponse> {
    private static readonly pb::MessageParser<newGetComapnyServicePackTypeResponse> _parser = new pb::MessageParser<newGetComapnyServicePackTypeResponse>(() => new newGetComapnyServicePackTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetComapnyServicePackTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeResponse(newGetComapnyServicePackTypeResponse other) : this() {
      isSpeaker_ = other.isSpeaker_;
      name_ = other.name_;
      contractNumer_ = other.contractNumer_;
      comServicePackName_ = other.comServicePackName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetComapnyServicePackTypeResponse Clone() {
      return new newGetComapnyServicePackTypeResponse(this);
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 1;
    private bool isSpeaker_;
    /// <summary>
    ///true：演讲类型 false：非演讲类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractNumer" field.</summary>
    public const int ContractNumerFieldNumber = 3;
    private string contractNumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumer {
      get { return contractNumer_; }
      set {
        contractNumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComServicePackName" field.</summary>
    public const int ComServicePackNameFieldNumber = 4;
    private string comServicePackName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComServicePackName {
      get { return comServicePackName_; }
      set {
        comServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetComapnyServicePackTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetComapnyServicePackTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSpeaker != other.IsSpeaker) return false;
      if (Name != other.Name) return false;
      if (ContractNumer != other.ContractNumer) return false;
      if (ComServicePackName != other.ComServicePackName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ContractNumer.Length != 0) hash ^= ContractNumer.GetHashCode();
      if (ComServicePackName.Length != 0) hash ^= ComServicePackName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSpeaker != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSpeaker);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (ContractNumer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContractNumer);
      }
      if (ComServicePackName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComServicePackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ContractNumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumer);
      }
      if (ComServicePackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComServicePackName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetComapnyServicePackTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ContractNumer.Length != 0) {
        ContractNumer = other.ContractNumer;
      }
      if (other.ComServicePackName.Length != 0) {
        ComServicePackName = other.ComServicePackName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ContractNumer = input.ReadString();
            break;
          }
          case 34: {
            ComServicePackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///个人参会报道通知书传参
  /// </summary>
  public sealed partial class newGetReportNoticeRequest : pb::IMessage<newGetReportNoticeRequest> {
    private static readonly pb::MessageParser<newGetReportNoticeRequest> _parser = new pb::MessageParser<newGetReportNoticeRequest>(() => new newGetReportNoticeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetReportNoticeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticeRequest(newGetReportNoticeRequest other) : this() {
      perContractNumber_ = other.perContractNumber_;
      year_ = other.year_;
      conferenceId_ = other.conferenceId_;
      memberPK_ = other.memberPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticeRequest Clone() {
      return new newGetReportNoticeRequest(this);
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 1;
    private string perContractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 2;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 3;
    private string conferenceId_ = "";
    /// <summary>
    ///会议Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetReportNoticeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetReportNoticeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerContractNumber != other.PerContractNumber) return false;
      if (Year != other.Year) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (MemberPK != other.MemberPK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PerContractNumber);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Year);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetReportNoticeRequest other) {
      if (other == null) {
        return;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 18: {
            Year = input.ReadString();
            break;
          }
          case 26: {
            ConferenceId = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewTalkAndParticipateStruct : pb::IMessage<NewTalkAndParticipateStruct> {
    private static readonly pb::MessageParser<NewTalkAndParticipateStruct> _parser = new pb::MessageParser<NewTalkAndParticipateStruct>(() => new NewTalkAndParticipateStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewTalkAndParticipateStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkAndParticipateStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkAndParticipateStruct(NewTalkAndParticipateStruct other) : this() {
      talkTimeRange_ = other.talkTimeRange_;
      talkTranslation_ = other.talkTranslation_;
      cFTopicName_ = other.cFTopicName_;
      participantTypeTranslation_ = other.participantTypeTranslation_;
      participantNameTranslation_ = other.participantNameTranslation_;
      appellationTranslation_ = other.appellationTranslation_;
      jobTranslation_ = other.jobTranslation_;
      companyTranslation_ = other.companyTranslation_;
      countryTranslation_ = other.countryTranslation_;
      sort_ = other.sort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkAndParticipateStruct Clone() {
      return new NewTalkAndParticipateStruct(this);
    }

    /// <summary>Field number for the "TalkTimeRange" field.</summary>
    public const int TalkTimeRangeFieldNumber = 1;
    private string talkTimeRange_ = "";
    /// <summary>
    ///Talk时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTimeRange {
      get { return talkTimeRange_; }
      set {
        talkTimeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkTranslation" field.</summary>
    public const int TalkTranslationFieldNumber = 2;
    private string talkTranslation_ = "";
    /// <summary>
    ///Talk名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTranslation {
      get { return talkTranslation_; }
      set {
        talkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicName" field.</summary>
    public const int CFTopicNameFieldNumber = 3;
    private string cFTopicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicName {
      get { return cFTopicName_; }
      set {
        cFTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeTranslation" field.</summary>
    public const int ParticipantTypeTranslationFieldNumber = 4;
    private string participantTypeTranslation_ = "";
    /// <summary>
    ///会员在这场Talk中的身份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeTranslation {
      get { return participantTypeTranslation_; }
      set {
        participantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 5;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 6;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 7;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 8;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 9;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 10;
    private string sort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewTalkAndParticipateStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewTalkAndParticipateStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkTimeRange != other.TalkTimeRange) return false;
      if (TalkTranslation != other.TalkTranslation) return false;
      if (CFTopicName != other.CFTopicName) return false;
      if (ParticipantTypeTranslation != other.ParticipantTypeTranslation) return false;
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (Sort != other.Sort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkTimeRange.Length != 0) hash ^= TalkTimeRange.GetHashCode();
      if (TalkTranslation.Length != 0) hash ^= TalkTranslation.GetHashCode();
      if (CFTopicName.Length != 0) hash ^= CFTopicName.GetHashCode();
      if (ParticipantTypeTranslation.Length != 0) hash ^= ParticipantTypeTranslation.GetHashCode();
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkTimeRange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkTimeRange);
      }
      if (TalkTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TalkTranslation);
      }
      if (CFTopicName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CFTopicName);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ParticipantTypeTranslation);
      }
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantNameTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AppellationTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(JobTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CompanyTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CountryTranslation);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Sort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkTimeRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTimeRange);
      }
      if (TalkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTranslation);
      }
      if (CFTopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicName);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeTranslation);
      }
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewTalkAndParticipateStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkTimeRange.Length != 0) {
        TalkTimeRange = other.TalkTimeRange;
      }
      if (other.TalkTranslation.Length != 0) {
        TalkTranslation = other.TalkTranslation;
      }
      if (other.CFTopicName.Length != 0) {
        CFTopicName = other.CFTopicName;
      }
      if (other.ParticipantTypeTranslation.Length != 0) {
        ParticipantTypeTranslation = other.ParticipantTypeTranslation;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkTimeRange = input.ReadString();
            break;
          }
          case 18: {
            TalkTranslation = input.ReadString();
            break;
          }
          case 26: {
            CFTopicName = input.ReadString();
            break;
          }
          case 34: {
            ParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 42: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 50: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 58: {
            JobTranslation = input.ReadString();
            break;
          }
          case 66: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 74: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 82: {
            Sort = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewActivityAndParticipateStruct : pb::IMessage<NewActivityAndParticipateStruct> {
    private static readonly pb::MessageParser<NewActivityAndParticipateStruct> _parser = new pb::MessageParser<NewActivityAndParticipateStruct>(() => new NewActivityAndParticipateStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewActivityAndParticipateStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityAndParticipateStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityAndParticipateStruct(NewActivityAndParticipateStruct other) : this() {
      activityTranslation_ = other.activityTranslation_;
      activityTimeRange_ = other.activityTimeRange_;
      sort_ = other.sort_;
      participantTypeTranslation_ = other.participantTypeTranslation_;
      participantNameTranslation_ = other.participantNameTranslation_;
      appellationTranslation_ = other.appellationTranslation_;
      jobTranslation_ = other.jobTranslation_;
      companyTranslation_ = other.companyTranslation_;
      countryTranslation_ = other.countryTranslation_;
      talkAndParticipateList_ = other.talkAndParticipateList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityAndParticipateStruct Clone() {
      return new NewActivityAndParticipateStruct(this);
    }

    /// <summary>Field number for the "ActivityTranslation" field.</summary>
    public const int ActivityTranslationFieldNumber = 1;
    private string activityTranslation_ = "";
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTranslation {
      get { return activityTranslation_; }
      set {
        activityTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityTimeRange" field.</summary>
    public const int ActivityTimeRangeFieldNumber = 2;
    private string activityTimeRange_ = "";
    /// <summary>
    ///活动时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTimeRange {
      get { return activityTimeRange_; }
      set {
        activityTimeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 3;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "ParticipantTypeTranslation" field.</summary>
    public const int ParticipantTypeTranslationFieldNumber = 4;
    private string participantTypeTranslation_ = "";
    /// <summary>
    ///会员在这场活动中的身份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeTranslation {
      get { return participantTypeTranslation_; }
      set {
        participantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 5;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 6;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 7;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 8;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 9;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "talkAndParticipateList" field.</summary>
    public const int TalkAndParticipateListFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct> _repeated_talkAndParticipateList_codec
        = pb::FieldCodec.ForMessage(82, global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct> talkAndParticipateList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkAndParticipateStruct> TalkAndParticipateList {
      get { return talkAndParticipateList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewActivityAndParticipateStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewActivityAndParticipateStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityTranslation != other.ActivityTranslation) return false;
      if (ActivityTimeRange != other.ActivityTimeRange) return false;
      if (Sort != other.Sort) return false;
      if (ParticipantTypeTranslation != other.ParticipantTypeTranslation) return false;
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if(!talkAndParticipateList_.Equals(other.talkAndParticipateList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityTranslation.Length != 0) hash ^= ActivityTranslation.GetHashCode();
      if (ActivityTimeRange.Length != 0) hash ^= ActivityTimeRange.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (ParticipantTypeTranslation.Length != 0) hash ^= ParticipantTypeTranslation.GetHashCode();
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      hash ^= talkAndParticipateList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityTranslation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityTranslation);
      }
      if (ActivityTimeRange.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityTimeRange);
      }
      if (Sort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sort);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ParticipantTypeTranslation);
      }
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantNameTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AppellationTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(JobTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CompanyTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CountryTranslation);
      }
      talkAndParticipateList_.WriteTo(output, _repeated_talkAndParticipateList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTranslation);
      }
      if (ActivityTimeRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTimeRange);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeTranslation);
      }
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      size += talkAndParticipateList_.CalculateSize(_repeated_talkAndParticipateList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewActivityAndParticipateStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityTranslation.Length != 0) {
        ActivityTranslation = other.ActivityTranslation;
      }
      if (other.ActivityTimeRange.Length != 0) {
        ActivityTimeRange = other.ActivityTimeRange;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.ParticipantTypeTranslation.Length != 0) {
        ParticipantTypeTranslation = other.ParticipantTypeTranslation;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      talkAndParticipateList_.Add(other.talkAndParticipateList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityTranslation = input.ReadString();
            break;
          }
          case 18: {
            ActivityTimeRange = input.ReadString();
            break;
          }
          case 24: {
            Sort = input.ReadInt32();
            break;
          }
          case 34: {
            ParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 42: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 50: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 58: {
            JobTranslation = input.ReadString();
            break;
          }
          case 66: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 74: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 82: {
            talkAndParticipateList_.AddEntriesFrom(input, _repeated_talkAndParticipateList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewCalendarStruct : pb::IMessage<NewCalendarStruct> {
    private static readonly pb::MessageParser<NewCalendarStruct> _parser = new pb::MessageParser<NewCalendarStruct>(() => new NewCalendarStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCalendarStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalendarStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalendarStruct(NewCalendarStruct other) : this() {
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      isConfirm_ = other.isConfirm_;
      tagTypeCodes_ = other.tagTypeCodes_;
      tagTypeName_ = other.tagTypeName_;
      remarkTranslation_ = other.remarkTranslation_;
      isParticularConf_ = other.isParticularConf_;
      date_ = other.date_;
      time_ = other.time_;
      address_ = other.address_;
      isInsidePackage_ = other.isInsidePackage_;
      isChecked_ = other.isChecked_;
      activityAndParticipateList_ = other.activityAndParticipateList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCalendarStruct Clone() {
      return new NewCalendarStruct(this);
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 1;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 2;
    private string sessionConferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 3;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "TagTypeCodes" field.</summary>
    public const int TagTypeCodesFieldNumber = 4;
    private string tagTypeCodes_ = "";
    /// <summary>
    ///标签Code（多个标签Code，用“，”分隔）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagTypeCodes {
      get { return tagTypeCodes_; }
      set {
        tagTypeCodes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TagTypeName" field.</summary>
    public const int TagTypeNameFieldNumber = 5;
    private string tagTypeName_ = "";
    /// <summary>
    ///标签名称（多个标签，用“，”分隔）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagTypeName {
      get { return tagTypeName_; }
      set {
        tagTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 6;
    private string remarkTranslation_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsParticularConf" field.</summary>
    public const int IsParticularConfFieldNumber = 7;
    private bool isParticularConf_;
    /// <summary>
    ///是否是会务额外勾选的
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsParticularConf {
      get { return isParticularConf_; }
      set {
        isParticularConf_ = value;
      }
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 8;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Time" field.</summary>
    public const int TimeFieldNumber = 9;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 10;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isInsidePackage" field.</summary>
    public const int IsInsidePackageFieldNumber = 12;
    private bool isInsidePackage_;
    /// <summary>
    ///是否包含在套餐内（true-标黄底  false--白底）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInsidePackage {
      get { return isInsidePackage_; }
      set {
        isInsidePackage_ = value;
      }
    }

    /// <summary>Field number for the "isChecked" field.</summary>
    public const int IsCheckedFieldNumber = 13;
    private bool isChecked_;
    /// <summary>
    ///是否勾选（true--打勾日程 false--未打钩）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChecked {
      get { return isChecked_; }
      set {
        isChecked_ = value;
      }
    }

    /// <summary>Field number for the "activityAndParticipateList" field.</summary>
    public const int ActivityAndParticipateListFieldNumber = 14;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct> _repeated_activityAndParticipateList_codec
        = pb::FieldCodec.ForMessage(114, global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct> activityAndParticipateList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityAndParticipateStruct> ActivityAndParticipateList {
      get { return activityAndParticipateList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCalendarStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCalendarStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (TagTypeCodes != other.TagTypeCodes) return false;
      if (TagTypeName != other.TagTypeName) return false;
      if (RemarkTranslation != other.RemarkTranslation) return false;
      if (IsParticularConf != other.IsParticularConf) return false;
      if (Date != other.Date) return false;
      if (Time != other.Time) return false;
      if (Address != other.Address) return false;
      if (IsInsidePackage != other.IsInsidePackage) return false;
      if (IsChecked != other.IsChecked) return false;
      if(!activityAndParticipateList_.Equals(other.activityAndParticipateList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (TagTypeCodes.Length != 0) hash ^= TagTypeCodes.GetHashCode();
      if (TagTypeName.Length != 0) hash ^= TagTypeName.GetHashCode();
      if (RemarkTranslation.Length != 0) hash ^= RemarkTranslation.GetHashCode();
      if (IsParticularConf != false) hash ^= IsParticularConf.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (IsInsidePackage != false) hash ^= IsInsidePackage.GetHashCode();
      if (IsChecked != false) hash ^= IsChecked.GetHashCode();
      hash ^= activityAndParticipateList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionConferenceName);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsConfirm);
      }
      if (TagTypeCodes.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TagTypeCodes);
      }
      if (TagTypeName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TagTypeName);
      }
      if (RemarkTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RemarkTranslation);
      }
      if (IsParticularConf != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsParticularConf);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Date);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Time);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Address);
      }
      if (IsInsidePackage != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsInsidePackage);
      }
      if (IsChecked != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsChecked);
      }
      activityAndParticipateList_.WriteTo(output, _repeated_activityAndParticipateList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (TagTypeCodes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagTypeCodes);
      }
      if (TagTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagTypeName);
      }
      if (RemarkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemarkTranslation);
      }
      if (IsParticularConf != false) {
        size += 1 + 1;
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (IsInsidePackage != false) {
        size += 1 + 1;
      }
      if (IsChecked != false) {
        size += 1 + 1;
      }
      size += activityAndParticipateList_.CalculateSize(_repeated_activityAndParticipateList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCalendarStruct other) {
      if (other == null) {
        return;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.TagTypeCodes.Length != 0) {
        TagTypeCodes = other.TagTypeCodes;
      }
      if (other.TagTypeName.Length != 0) {
        TagTypeName = other.TagTypeName;
      }
      if (other.RemarkTranslation.Length != 0) {
        RemarkTranslation = other.RemarkTranslation;
      }
      if (other.IsParticularConf != false) {
        IsParticularConf = other.IsParticularConf;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.IsInsidePackage != false) {
        IsInsidePackage = other.IsInsidePackage;
      }
      if (other.IsChecked != false) {
        IsChecked = other.IsChecked;
      }
      activityAndParticipateList_.Add(other.activityAndParticipateList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 18: {
            SessionConferenceName = input.ReadString();
            break;
          }
          case 24: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 34: {
            TagTypeCodes = input.ReadString();
            break;
          }
          case 42: {
            TagTypeName = input.ReadString();
            break;
          }
          case 50: {
            RemarkTranslation = input.ReadString();
            break;
          }
          case 56: {
            IsParticularConf = input.ReadBool();
            break;
          }
          case 66: {
            Date = input.ReadString();
            break;
          }
          case 74: {
            Time = input.ReadString();
            break;
          }
          case 82: {
            Address = input.ReadString();
            break;
          }
          case 96: {
            IsInsidePackage = input.ReadBool();
            break;
          }
          case 104: {
            IsChecked = input.ReadBool();
            break;
          }
          case 114: {
            activityAndParticipateList_.AddEntriesFrom(input, _repeated_activityAndParticipateList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewPersonContractInfoStruct : pb::IMessage<NewPersonContractInfoStruct> {
    private static readonly pb::MessageParser<NewPersonContractInfoStruct> _parser = new pb::MessageParser<NewPersonContractInfoStruct>(() => new NewPersonContractInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPersonContractInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractInfoStruct(NewPersonContractInfoStruct other) : this() {
      personContractId_ = other.personContractId_;
      perContractNumber_ = other.perContractNumber_;
      memberPK_ = other.memberPK_;
      memTranslation_ = other.memTranslation_;
      memEmail_ = other.memEmail_;
      companyNameTranslation_ = other.companyNameTranslation_;
      comServicePackTranslation_ = other.comServicePackTranslation_;
      perPrice_ = other.perPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractInfoStruct Clone() {
      return new NewPersonContractInfoStruct(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 3;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 5;
    private string memTranslation_ = "";
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemEmail" field.</summary>
    public const int MemEmailFieldNumber = 6;
    private string memEmail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyNameTranslation" field.</summary>
    public const int CompanyNameTranslationFieldNumber = 7;
    private string companyNameTranslation_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameTranslation {
      get { return companyNameTranslation_; }
      set {
        companyNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComServicePackTranslation" field.</summary>
    public const int ComServicePackTranslationFieldNumber = 8;
    private string comServicePackTranslation_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComServicePackTranslation {
      get { return comServicePackTranslation_; }
      set {
        comServicePackTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "perPrice" field.</summary>
    public const int PerPriceFieldNumber = 9;
    private string perPrice_ = "";
    /// <summary>
    ///费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerPrice {
      get { return perPrice_; }
      set {
        perPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewPersonContractInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPersonContractInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (MemTranslation != other.MemTranslation) return false;
      if (MemEmail != other.MemEmail) return false;
      if (CompanyNameTranslation != other.CompanyNameTranslation) return false;
      if (ComServicePackTranslation != other.ComServicePackTranslation) return false;
      if (PerPrice != other.PerPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (MemTranslation.Length != 0) hash ^= MemTranslation.GetHashCode();
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (CompanyNameTranslation.Length != 0) hash ^= CompanyNameTranslation.GetHashCode();
      if (ComServicePackTranslation.Length != 0) hash ^= ComServicePackTranslation.GetHashCode();
      if (PerPrice.Length != 0) hash ^= PerPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (MemTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MemTranslation);
      }
      if (MemEmail.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MemEmail);
      }
      if (CompanyNameTranslation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CompanyNameTranslation);
      }
      if (ComServicePackTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ComServicePackTranslation);
      }
      if (PerPrice.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PerPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (MemTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTranslation);
      }
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (CompanyNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameTranslation);
      }
      if (ComServicePackTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComServicePackTranslation);
      }
      if (PerPrice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPersonContractInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.MemTranslation.Length != 0) {
        MemTranslation = other.MemTranslation;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.CompanyNameTranslation.Length != 0) {
        CompanyNameTranslation = other.CompanyNameTranslation;
      }
      if (other.ComServicePackTranslation.Length != 0) {
        ComServicePackTranslation = other.ComServicePackTranslation;
      }
      if (other.PerPrice.Length != 0) {
        PerPrice = other.PerPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 26: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            MemTranslation = input.ReadString();
            break;
          }
          case 50: {
            MemEmail = input.ReadString();
            break;
          }
          case 58: {
            CompanyNameTranslation = input.ReadString();
            break;
          }
          case 66: {
            ComServicePackTranslation = input.ReadString();
            break;
          }
          case 74: {
            PerPrice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///业务员信息
  /// </summary>
  public sealed partial class OwnerInfo : pb::IMessage<OwnerInfo> {
    private static readonly pb::MessageParser<OwnerInfo> _parser = new pb::MessageParser<OwnerInfo>(() => new OwnerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OwnerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnerInfo(OwnerInfo other) : this() {
      name_ = other.name_;
      tel_ = other.tel_;
      email_ = other.email_;
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OwnerInfo Clone() {
      return new OwnerInfo(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tel" field.</summary>
    public const int TelFieldNumber = 2;
    private string tel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tel {
      get { return tel_; }
      set {
        tel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OwnerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OwnerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Tel != other.Tel) return false;
      if (Email != other.Email) return false;
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Tel.Length != 0) hash ^= Tel.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Tel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tel);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Tel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tel);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OwnerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Tel.Length != 0) {
        Tel = other.Tel;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Tel = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///个人参会报道通知书返回信息
  /// </summary>
  public sealed partial class newGetReportNoticResponse : pb::IMessage<newGetReportNoticResponse> {
    private static readonly pb::MessageParser<newGetReportNoticResponse> _parser = new pb::MessageParser<newGetReportNoticResponse>(() => new newGetReportNoticResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetReportNoticResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticResponse(newGetReportNoticResponse other) : this() {
      Person = other.person_ != null ? other.Person.Clone() : null;
      calendar_ = other.calendar_.Clone();
      Owner = other.owner_ != null ? other.Owner.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetReportNoticResponse Clone() {
      return new newGetReportNoticResponse(this);
    }

    /// <summary>Field number for the "person" field.</summary>
    public const int PersonFieldNumber = 1;
    private global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct person_;
    /// <summary>
    ///合同信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct Person {
      get { return person_; }
      set {
        person_ = value;
      }
    }

    /// <summary>Field number for the "calendar" field.</summary>
    public const int CalendarFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.Report_ConferenceVM> _repeated_calendar_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.Report_ConferenceVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ConferenceVM> calendar_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ConferenceVM>();
    /// <summary>
    ///日程信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ConferenceVM> Calendar {
      get { return calendar_; }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.OwnerInfo owner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.OwnerInfo Owner {
      get { return owner_; }
      set {
        owner_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetReportNoticResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetReportNoticResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Person, other.Person)) return false;
      if(!calendar_.Equals(other.calendar_)) return false;
      if (!object.Equals(Owner, other.Owner)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (person_ != null) hash ^= Person.GetHashCode();
      hash ^= calendar_.GetHashCode();
      if (owner_ != null) hash ^= Owner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (person_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Person);
      }
      calendar_.WriteTo(output, _repeated_calendar_codec);
      if (owner_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Owner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (person_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Person);
      }
      size += calendar_.CalculateSize(_repeated_calendar_codec);
      if (owner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Owner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetReportNoticResponse other) {
      if (other == null) {
        return;
      }
      if (other.person_ != null) {
        if (person_ == null) {
          person_ = new global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct();
        }
        Person.MergeFrom(other.Person);
      }
      calendar_.Add(other.calendar_);
      if (other.owner_ != null) {
        if (owner_ == null) {
          owner_ = new global::GrpcConferenceContractServiceNew.OwnerInfo();
        }
        Owner.MergeFrom(other.Owner);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (person_ == null) {
              person_ = new global::GrpcConferenceContractServiceNew.NewPersonContractInfoStruct();
            }
            input.ReadMessage(person_);
            break;
          }
          case 18: {
            calendar_.AddEntriesFrom(input, _repeated_calendar_codec);
            break;
          }
          case 26: {
            if (owner_ == null) {
              owner_ = new global::GrpcConferenceContractServiceNew.OwnerInfo();
            }
            input.ReadMessage(owner_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetPersonContractListStruct : pb::IMessage<newGetPersonContractListStruct> {
    private static readonly pb::MessageParser<newGetPersonContractListStruct> _parser = new pb::MessageParser<newGetPersonContractListStruct>(() => new newGetPersonContractListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonContractListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListStruct(newGetPersonContractListStruct other) : this() {
      contractNumber_ = other.contractNumber_;
      memNameTranslation_ = other.memNameTranslation_;
      companyNameTranslation_ = other.companyNameTranslation_;
      position_ = other.position_;
      email_ = other.email_;
      mobile_ = other.mobile_;
      comServicePackTranslation_ = other.comServicePackTranslation_;
      pay_ = other.pay_;
      paid_ = other.paid_;
      owner_ = other.owner_;
      isSendEmail_ = other.isSendEmail_;
      isPrint_ = other.isPrint_;
      createdBy_ = other.createdBy_;
      createdOn_ = other.createdOn_;
      modifiyBy_ = other.modifiyBy_;
      modifyOn_ = other.modifyOn_;
      memberPK_ = other.memberPK_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListStruct Clone() {
      return new newGetPersonContractListStruct(this);
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameTranslation" field.</summary>
    public const int MemNameTranslationFieldNumber = 2;
    private string memNameTranslation_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameTranslation {
      get { return memNameTranslation_; }
      set {
        memNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyNameTranslation" field.</summary>
    public const int CompanyNameTranslationFieldNumber = 3;
    private string companyNameTranslation_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyNameTranslation {
      get { return companyNameTranslation_; }
      set {
        companyNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 4;
    private string position_ = "";
    /// <summary>
    ///职务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Position {
      get { return position_; }
      set {
        position_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 6;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComServicePackTranslation" field.</summary>
    public const int ComServicePackTranslationFieldNumber = 7;
    private string comServicePackTranslation_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComServicePackTranslation {
      get { return comServicePackTranslation_; }
      set {
        comServicePackTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pay" field.</summary>
    public const int PayFieldNumber = 8;
    private string pay_ = "";
    /// <summary>
    ///应付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pay {
      get { return pay_; }
      set {
        pay_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Paid" field.</summary>
    public const int PaidFieldNumber = 9;
    private string paid_ = "";
    /// <summary>
    ///已付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Paid {
      get { return paid_; }
      set {
        paid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 10;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 11;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送邮件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsPrint" field.</summary>
    public const int IsPrintFieldNumber = 12;
    private bool isPrint_;
    /// <summary>
    ///是否打印
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 13;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 14;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiyBy" field.</summary>
    public const int ModifiyByFieldNumber = 15;
    private string modifiyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiyBy {
      get { return modifiyBy_; }
      set {
        modifiyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 16;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 17;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonContractListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonContractListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (MemNameTranslation != other.MemNameTranslation) return false;
      if (CompanyNameTranslation != other.CompanyNameTranslation) return false;
      if (Position != other.Position) return false;
      if (Email != other.Email) return false;
      if (Mobile != other.Mobile) return false;
      if (ComServicePackTranslation != other.ComServicePackTranslation) return false;
      if (Pay != other.Pay) return false;
      if (Paid != other.Paid) return false;
      if (Owner != other.Owner) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsPrint != other.IsPrint) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (ModifiyBy != other.ModifiyBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      if (MemberPK != other.MemberPK) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (MemNameTranslation.Length != 0) hash ^= MemNameTranslation.GetHashCode();
      if (CompanyNameTranslation.Length != 0) hash ^= CompanyNameTranslation.GetHashCode();
      if (Position.Length != 0) hash ^= Position.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (ComServicePackTranslation.Length != 0) hash ^= ComServicePackTranslation.GetHashCode();
      if (Pay.Length != 0) hash ^= Pay.GetHashCode();
      if (Paid.Length != 0) hash ^= Paid.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (ModifiyBy.Length != 0) hash ^= ModifiyBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (MemNameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemNameTranslation);
      }
      if (CompanyNameTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyNameTranslation);
      }
      if (Position.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Position);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Mobile);
      }
      if (ComServicePackTranslation.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ComServicePackTranslation);
      }
      if (Pay.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Pay);
      }
      if (Paid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Paid);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Owner);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsSendEmail);
      }
      if (IsPrint != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsPrint);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModifyOn);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(MemberPK);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (MemNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameTranslation);
      }
      if (CompanyNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyNameTranslation);
      }
      if (Position.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Position);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (ComServicePackTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComServicePackTranslation);
      }
      if (Pay.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pay);
      }
      if (Paid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Paid);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (IsSendEmail != false) {
        size += 1 + 1;
      }
      if (IsPrint != false) {
        size += 1 + 1;
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonContractListStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.MemNameTranslation.Length != 0) {
        MemNameTranslation = other.MemNameTranslation;
      }
      if (other.CompanyNameTranslation.Length != 0) {
        CompanyNameTranslation = other.CompanyNameTranslation;
      }
      if (other.Position.Length != 0) {
        Position = other.Position;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.ComServicePackTranslation.Length != 0) {
        ComServicePackTranslation = other.ComServicePackTranslation;
      }
      if (other.Pay.Length != 0) {
        Pay = other.Pay;
      }
      if (other.Paid.Length != 0) {
        Paid = other.Paid;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.ModifiyBy.Length != 0) {
        ModifiyBy = other.ModifiyBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            MemNameTranslation = input.ReadString();
            break;
          }
          case 26: {
            CompanyNameTranslation = input.ReadString();
            break;
          }
          case 34: {
            Position = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Mobile = input.ReadString();
            break;
          }
          case 58: {
            ComServicePackTranslation = input.ReadString();
            break;
          }
          case 66: {
            Pay = input.ReadString();
            break;
          }
          case 74: {
            Paid = input.ReadString();
            break;
          }
          case 82: {
            Owner = input.ReadString();
            break;
          }
          case 88: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 96: {
            IsPrint = input.ReadBool();
            break;
          }
          case 106: {
            CreatedBy = input.ReadString();
            break;
          }
          case 114: {
            CreatedOn = input.ReadString();
            break;
          }
          case 122: {
            ModifiyBy = input.ReadString();
            break;
          }
          case 130: {
            ModifyOn = input.ReadString();
            break;
          }
          case 138: {
            MemberPK = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取个人合同信息（三级）
  /// </summary>
  public sealed partial class newGetPersonContractListResponse : pb::IMessage<newGetPersonContractListResponse> {
    private static readonly pb::MessageParser<newGetPersonContractListResponse> _parser = new pb::MessageParser<newGetPersonContractListResponse>(() => new newGetPersonContractListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonContractListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListResponse(newGetPersonContractListResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonContractListResponse Clone() {
      return new newGetPersonContractListResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetPersonContractListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonContractListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonContractListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonContractListResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newModifyOwnerByConferenceContractIdRequest : pb::IMessage<newModifyOwnerByConferenceContractIdRequest> {
    private static readonly pb::MessageParser<newModifyOwnerByConferenceContractIdRequest> _parser = new pb::MessageParser<newModifyOwnerByConferenceContractIdRequest>(() => new newModifyOwnerByConferenceContractIdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newModifyOwnerByConferenceContractIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newModifyOwnerByConferenceContractIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newModifyOwnerByConferenceContractIdRequest(newModifyOwnerByConferenceContractIdRequest other) : this() {
      conferenceContractId_ = other.conferenceContractId_;
      ownerId_ = other.ownerId_;
      owner_ = other.owner_;
      otherOwnerId_ = other.otherOwnerId_;
      otherOwner_ = other.otherOwner_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newModifyOwnerByConferenceContractIdRequest Clone() {
      return new newModifyOwnerByConferenceContractIdRequest(this);
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 1;
    private string conferenceContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerId" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 4;
    private string otherOwnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 5;
    private string otherOwner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 6;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newModifyOwnerByConferenceContractIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newModifyOwnerByConferenceContractIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Owner != other.Owner) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceContractId);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OwnerId);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OtherOwner);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OtherOwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newModifyOwnerByConferenceContractIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 18: {
            OwnerId = input.ReadString();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
          case 34: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 42: {
            OtherOwner = input.ReadString();
            break;
          }
          case 50: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取行程一览表传入的参数
  /// </summary>
  public sealed partial class newGetScheduleListRequest : pb::IMessage<newGetScheduleListRequest> {
    private static readonly pb::MessageParser<newGetScheduleListRequest> _parser = new pb::MessageParser<newGetScheduleListRequest>(() => new newGetScheduleListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetScheduleListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListRequest(newGetScheduleListRequest other) : this() {
      personContractNumber_ = other.personContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListRequest Clone() {
      return new newGetScheduleListRequest(this);
    }

    /// <summary>Field number for the "personContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 1;
    private string personContractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetScheduleListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetScheduleListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractNumber != other.PersonContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetScheduleListRequest other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetScheduleListResponse : pb::IMessage<newGetScheduleListResponse> {
    private static readonly pb::MessageParser<newGetScheduleListResponse> _parser = new pb::MessageParser<newGetScheduleListResponse>(() => new newGetScheduleListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetScheduleListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListResponse(newGetScheduleListResponse other) : this() {
      personContractId_ = other.personContractId_;
      personContractNumber_ = other.personContractNumber_;
      servicePack_ = other.servicePack_;
      name_ = other.name_;
      title_ = other.title_;
      positin_ = other.positin_;
      mobile_ = other.mobile_;
      email_ = other.email_;
      companyName_ = other.companyName_;
      activityName_ = other.activityName_;
      activityVune_ = other.activityVune_;
      activityTime_ = other.activityTime_;
      owner_ = other.owner_;
      ownerEmail_ = other.ownerEmail_;
      ownerMobile_ = other.ownerMobile_;
      ownerAddress_ = other.ownerAddress_;
      crteatedOn_ = other.crteatedOn_;
      createdBy_ = other.createdBy_;
      modifyOn_ = other.modifyOn_;
      modifyBy_ = other.modifyBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetScheduleListResponse Clone() {
      return new newGetScheduleListResponse(this);
    }

    /// <summary>Field number for the "personContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 2;
    private string personContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "servicePack" field.</summary>
    public const int ServicePackFieldNumber = 3;
    private string servicePack_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positin" field.</summary>
    public const int PositinFieldNumber = 6;
    private string positin_ = "";
    /// <summary>
    ///职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Positin {
      get { return positin_; }
      set {
        positin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 7;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 8;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 9;
    private string companyName_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityName" field.</summary>
    public const int ActivityNameFieldNumber = 10;
    private string activityName_ = "";
    /// <summary>
    ///参加活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityVune" field.</summary>
    public const int ActivityVuneFieldNumber = 11;
    private string activityVune_ = "";
    /// <summary>
    ///参加活动的地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityVune {
      get { return activityVune_; }
      set {
        activityVune_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityTime" field.</summary>
    public const int ActivityTimeFieldNumber = 12;
    private string activityTime_ = "";
    /// <summary>
    ///参加活动的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTime {
      get { return activityTime_; }
      set {
        activityTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 13;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerEmail" field.</summary>
    public const int OwnerEmailFieldNumber = 14;
    private string ownerEmail_ = "";
    /// <summary>
    ///业务员邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerEmail {
      get { return ownerEmail_; }
      set {
        ownerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerMobile" field.</summary>
    public const int OwnerMobileFieldNumber = 15;
    private string ownerMobile_ = "";
    /// <summary>
    ///业务员手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerMobile {
      get { return ownerMobile_; }
      set {
        ownerMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerAddress" field.</summary>
    public const int OwnerAddressFieldNumber = 16;
    private string ownerAddress_ = "";
    /// <summary>
    ///业务员地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crteatedOn" field.</summary>
    public const int CrteatedOnFieldNumber = 17;
    private string crteatedOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrteatedOn {
      get { return crteatedOn_; }
      set {
        crteatedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 18;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 19;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyBy" field.</summary>
    public const int ModifyByFieldNumber = 20;
    private string modifyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyBy {
      get { return modifyBy_; }
      set {
        modifyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetScheduleListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetScheduleListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (PersonContractNumber != other.PersonContractNumber) return false;
      if (ServicePack != other.ServicePack) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (Positin != other.Positin) return false;
      if (Mobile != other.Mobile) return false;
      if (Email != other.Email) return false;
      if (CompanyName != other.CompanyName) return false;
      if (ActivityName != other.ActivityName) return false;
      if (ActivityVune != other.ActivityVune) return false;
      if (ActivityTime != other.ActivityTime) return false;
      if (Owner != other.Owner) return false;
      if (OwnerEmail != other.OwnerEmail) return false;
      if (OwnerMobile != other.OwnerMobile) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      if (CrteatedOn != other.CrteatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      if (ModifyBy != other.ModifyBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (ServicePack.Length != 0) hash ^= ServicePack.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Positin.Length != 0) hash ^= Positin.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (ActivityVune.Length != 0) hash ^= ActivityVune.GetHashCode();
      if (ActivityTime.Length != 0) hash ^= ActivityTime.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OwnerEmail.Length != 0) hash ^= OwnerEmail.GetHashCode();
      if (OwnerMobile.Length != 0) hash ^= OwnerMobile.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (CrteatedOn.Length != 0) hash ^= CrteatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (ModifyBy.Length != 0) hash ^= ModifyBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonContractNumber);
      }
      if (ServicePack.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePack);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (Positin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Positin);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Mobile);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Email);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CompanyName);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ActivityTime);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Owner);
      }
      if (OwnerEmail.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OwnerEmail);
      }
      if (OwnerMobile.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(OwnerMobile);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(OwnerAddress);
      }
      if (CrteatedOn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CrteatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ModifyOn);
      }
      if (ModifyBy.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ModifyBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (ServicePack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePack);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Positin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Positin);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTime);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OwnerEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerEmail);
      }
      if (OwnerMobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerMobile);
      }
      if (OwnerAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerAddress);
      }
      if (CrteatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CrteatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifyOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (ModifyBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetScheduleListResponse other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      if (other.ServicePack.Length != 0) {
        ServicePack = other.ServicePack;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Positin.Length != 0) {
        Positin = other.Positin;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.ActivityVune.Length != 0) {
        ActivityVune = other.ActivityVune;
      }
      if (other.ActivityTime.Length != 0) {
        ActivityTime = other.ActivityTime;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OwnerEmail.Length != 0) {
        OwnerEmail = other.OwnerEmail;
      }
      if (other.OwnerMobile.Length != 0) {
        OwnerMobile = other.OwnerMobile;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.CrteatedOn.Length != 0) {
        CrteatedOn = other.CrteatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      if (other.ModifyBy.Length != 0) {
        ModifyBy = other.ModifyBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            PersonContractNumber = input.ReadString();
            break;
          }
          case 26: {
            ServicePack = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Positin = input.ReadString();
            break;
          }
          case 58: {
            Mobile = input.ReadString();
            break;
          }
          case 66: {
            Email = input.ReadString();
            break;
          }
          case 74: {
            CompanyName = input.ReadString();
            break;
          }
          case 82: {
            ActivityName = input.ReadString();
            break;
          }
          case 90: {
            ActivityVune = input.ReadString();
            break;
          }
          case 98: {
            ActivityTime = input.ReadString();
            break;
          }
          case 106: {
            Owner = input.ReadString();
            break;
          }
          case 114: {
            OwnerEmail = input.ReadString();
            break;
          }
          case 122: {
            OwnerMobile = input.ReadString();
            break;
          }
          case 130: {
            OwnerAddress = input.ReadString();
            break;
          }
          case 138: {
            CrteatedOn = input.ReadString();
            break;
          }
          case 146: {
            CreatedBy = input.ReadString();
            break;
          }
          case 154: {
            ModifyOn = input.ReadString();
            break;
          }
          case 162: {
            ModifyBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newAddScheduleRequest : pb::IMessage<newAddScheduleRequest> {
    private static readonly pb::MessageParser<newAddScheduleRequest> _parser = new pb::MessageParser<newAddScheduleRequest>(() => new newAddScheduleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newAddScheduleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddScheduleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddScheduleRequest(newAddScheduleRequest other) : this() {
      personContractId_ = other.personContractId_;
      personContractNumber_ = other.personContractNumber_;
      servicePack_ = other.servicePack_;
      name_ = other.name_;
      title_ = other.title_;
      positin_ = other.positin_;
      mobile_ = other.mobile_;
      email_ = other.email_;
      companyName_ = other.companyName_;
      activityName_ = other.activityName_;
      activityVune_ = other.activityVune_;
      activityTime_ = other.activityTime_;
      owner_ = other.owner_;
      ownerEmail_ = other.ownerEmail_;
      ownerMobile_ = other.ownerMobile_;
      ownerAddress_ = other.ownerAddress_;
      crteatedOn_ = other.crteatedOn_;
      createdBy_ = other.createdBy_;
      modifyOn_ = other.modifyOn_;
      modifyBy_ = other.modifyBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newAddScheduleRequest Clone() {
      return new newAddScheduleRequest(this);
    }

    /// <summary>Field number for the "personContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 2;
    private string personContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "servicePack" field.</summary>
    public const int ServicePackFieldNumber = 3;
    private string servicePack_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positin" field.</summary>
    public const int PositinFieldNumber = 6;
    private string positin_ = "";
    /// <summary>
    ///职位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Positin {
      get { return positin_; }
      set {
        positin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 7;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 8;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 9;
    private string companyName_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityName" field.</summary>
    public const int ActivityNameFieldNumber = 10;
    private string activityName_ = "";
    /// <summary>
    ///参加活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityVune" field.</summary>
    public const int ActivityVuneFieldNumber = 11;
    private string activityVune_ = "";
    /// <summary>
    ///参加活动的地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityVune {
      get { return activityVune_; }
      set {
        activityVune_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityTime" field.</summary>
    public const int ActivityTimeFieldNumber = 12;
    private string activityTime_ = "";
    /// <summary>
    ///参加活动的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTime {
      get { return activityTime_; }
      set {
        activityTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 13;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerEmail" field.</summary>
    public const int OwnerEmailFieldNumber = 14;
    private string ownerEmail_ = "";
    /// <summary>
    ///业务员邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerEmail {
      get { return ownerEmail_; }
      set {
        ownerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerMobile" field.</summary>
    public const int OwnerMobileFieldNumber = 15;
    private string ownerMobile_ = "";
    /// <summary>
    ///业务员手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerMobile {
      get { return ownerMobile_; }
      set {
        ownerMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerAddress" field.</summary>
    public const int OwnerAddressFieldNumber = 16;
    private string ownerAddress_ = "";
    /// <summary>
    ///业务员地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crteatedOn" field.</summary>
    public const int CrteatedOnFieldNumber = 17;
    private string crteatedOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CrteatedOn {
      get { return crteatedOn_; }
      set {
        crteatedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 18;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 19;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyBy" field.</summary>
    public const int ModifyByFieldNumber = 20;
    private string modifyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyBy {
      get { return modifyBy_; }
      set {
        modifyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newAddScheduleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newAddScheduleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (PersonContractNumber != other.PersonContractNumber) return false;
      if (ServicePack != other.ServicePack) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (Positin != other.Positin) return false;
      if (Mobile != other.Mobile) return false;
      if (Email != other.Email) return false;
      if (CompanyName != other.CompanyName) return false;
      if (ActivityName != other.ActivityName) return false;
      if (ActivityVune != other.ActivityVune) return false;
      if (ActivityTime != other.ActivityTime) return false;
      if (Owner != other.Owner) return false;
      if (OwnerEmail != other.OwnerEmail) return false;
      if (OwnerMobile != other.OwnerMobile) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      if (CrteatedOn != other.CrteatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      if (ModifyBy != other.ModifyBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (ServicePack.Length != 0) hash ^= ServicePack.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Positin.Length != 0) hash ^= Positin.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (ActivityVune.Length != 0) hash ^= ActivityVune.GetHashCode();
      if (ActivityTime.Length != 0) hash ^= ActivityTime.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OwnerEmail.Length != 0) hash ^= OwnerEmail.GetHashCode();
      if (OwnerMobile.Length != 0) hash ^= OwnerMobile.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (CrteatedOn.Length != 0) hash ^= CrteatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (ModifyBy.Length != 0) hash ^= ModifyBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonContractNumber);
      }
      if (ServicePack.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePack);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (Positin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Positin);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Mobile);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Email);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CompanyName);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ActivityTime);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Owner);
      }
      if (OwnerEmail.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OwnerEmail);
      }
      if (OwnerMobile.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(OwnerMobile);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(OwnerAddress);
      }
      if (CrteatedOn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CrteatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ModifyOn);
      }
      if (ModifyBy.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ModifyBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (ServicePack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePack);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Positin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Positin);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTime);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OwnerEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerEmail);
      }
      if (OwnerMobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerMobile);
      }
      if (OwnerAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OwnerAddress);
      }
      if (CrteatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CrteatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifyOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (ModifyBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newAddScheduleRequest other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      if (other.ServicePack.Length != 0) {
        ServicePack = other.ServicePack;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Positin.Length != 0) {
        Positin = other.Positin;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.ActivityVune.Length != 0) {
        ActivityVune = other.ActivityVune;
      }
      if (other.ActivityTime.Length != 0) {
        ActivityTime = other.ActivityTime;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OwnerEmail.Length != 0) {
        OwnerEmail = other.OwnerEmail;
      }
      if (other.OwnerMobile.Length != 0) {
        OwnerMobile = other.OwnerMobile;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.CrteatedOn.Length != 0) {
        CrteatedOn = other.CrteatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      if (other.ModifyBy.Length != 0) {
        ModifyBy = other.ModifyBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            PersonContractNumber = input.ReadString();
            break;
          }
          case 26: {
            ServicePack = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Positin = input.ReadString();
            break;
          }
          case 58: {
            Mobile = input.ReadString();
            break;
          }
          case 66: {
            Email = input.ReadString();
            break;
          }
          case 74: {
            CompanyName = input.ReadString();
            break;
          }
          case 82: {
            ActivityName = input.ReadString();
            break;
          }
          case 90: {
            ActivityVune = input.ReadString();
            break;
          }
          case 98: {
            ActivityTime = input.ReadString();
            break;
          }
          case 106: {
            Owner = input.ReadString();
            break;
          }
          case 114: {
            OwnerEmail = input.ReadString();
            break;
          }
          case 122: {
            OwnerMobile = input.ReadString();
            break;
          }
          case 130: {
            OwnerAddress = input.ReadString();
            break;
          }
          case 138: {
            CrteatedOn = input.ReadString();
            break;
          }
          case 146: {
            CreatedBy = input.ReadString();
            break;
          }
          case 154: {
            ModifyOn = input.ReadString();
            break;
          }
          case 162: {
            ModifyBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetCompanyNoticeOfReportByContractNumberRequest : pb::IMessage<newGetCompanyNoticeOfReportByContractNumberRequest> {
    private static readonly pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberRequest> _parser = new pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberRequest>(() => new newGetCompanyNoticeOfReportByContractNumberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberRequest(newGetCompanyNoticeOfReportByContractNumberRequest other) : this() {
      contractNumber_ = other.contractNumber_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberRequest Clone() {
      return new newGetCompanyNoticeOfReportByContractNumberRequest(this);
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 2;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyNoticeOfReportByContractNumberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyNoticeOfReportByContractNumberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyNoticeOfReportByContractNumberRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewConferenceStruct : pb::IMessage<NewConferenceStruct> {
    private static readonly pb::MessageParser<NewConferenceStruct> _parser = new pb::MessageParser<NewConferenceStruct>(() => new NewConferenceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewConferenceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewConferenceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewConferenceStruct(NewConferenceStruct other) : this() {
      conferenceID_ = other.conferenceID_;
      parentID_ = other.parentID_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      cFAddressPK_ = other.cFAddressPK_;
      startDate_ = other.startDate_;
      startDateTime_ = other.startDateTime_;
      year_ = other.year_;
      sort_ = other.sort_;
      abbreviation_ = other.abbreviation_;
      conferenceIntroduce_ = other.conferenceIntroduce_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      level_ = other.level_;
      timeRange_ = other.timeRange_;
      showOnFront_ = other.showOnFront_;
      CFAddress = other.cFAddress_ != null ? other.CFAddress.Clone() : null;
      applySearch_ = other.applySearch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewConferenceStruct Clone() {
      return new NewConferenceStruct(this);
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 1;
    private string conferenceID_ = "";
    /// <summary>
    ///会议主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParentID" field.</summary>
    public const int ParentIDFieldNumber = 2;
    private string parentID_ = "";
    /// <summary>
    ///父级id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentID {
      get { return parentID_; }
      set {
        parentID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.Translation translation_;
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CFAddressPK" field.</summary>
    public const int CFAddressPKFieldNumber = 4;
    private string cFAddressPK_ = "";
    /// <summary>
    ///会议地点id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFAddressPK {
      get { return cFAddressPK_; }
      set {
        cFAddressPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 5;
    private string startDate_ = "";
    /// <summary>
    ///会议时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDateTime" field.</summary>
    public const int StartDateTimeFieldNumber = 6;
    private string startDateTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDateTime {
      get { return startDateTime_; }
      set {
        startDateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 7;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 8;
    private string sort_ = "";
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Abbreviation" field.</summary>
    public const int AbbreviationFieldNumber = 9;
    private string abbreviation_ = "";
    /// <summary>
    ///英文缩写
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Abbreviation {
      get { return abbreviation_; }
      set {
        abbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceIntroduce" field.</summary>
    public const int ConferenceIntroduceFieldNumber = 10;
    private string conferenceIntroduce_ = "";
    /// <summary>
    ///会议简介  格式{"CN":"123","EN":"123"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceIntroduce {
      get { return conferenceIntroduce_; }
      set {
        conferenceIntroduce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 11;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 12;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 13;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 14;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 15;
    private int level_;
    /// <summary>
    ///层级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "TimeRange" field.</summary>
    public const int TimeRangeFieldNumber = 16;
    private string timeRange_ = "";
    /// <summary>
    ///时间段
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowOnFront" field.</summary>
    public const int ShowOnFrontFieldNumber = 17;
    private bool showOnFront_;
    /// <summary>
    ///是否前台显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ShowOnFront {
      get { return showOnFront_; }
      set {
        showOnFront_ = value;
      }
    }

    /// <summary>Field number for the "CFAddress" field.</summary>
    public const int CFAddressFieldNumber = 18;
    private global::GrpcConferenceContractServiceNew.NewCFAddressStruct cFAddress_;
    /// <summary>
    ///会议室对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.NewCFAddressStruct CFAddress {
      get { return cFAddress_; }
      set {
        cFAddress_ = value;
      }
    }

    /// <summary>Field number for the "ApplySearch" field.</summary>
    public const int ApplySearchFieldNumber = 19;
    private bool applySearch_;
    /// <summary>
    ///作为会议申请的筛选
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ApplySearch {
      get { return applySearch_; }
      set {
        applySearch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewConferenceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewConferenceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceID != other.ConferenceID) return false;
      if (ParentID != other.ParentID) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CFAddressPK != other.CFAddressPK) return false;
      if (StartDate != other.StartDate) return false;
      if (StartDateTime != other.StartDateTime) return false;
      if (Year != other.Year) return false;
      if (Sort != other.Sort) return false;
      if (Abbreviation != other.Abbreviation) return false;
      if (ConferenceIntroduce != other.ConferenceIntroduce) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Level != other.Level) return false;
      if (TimeRange != other.TimeRange) return false;
      if (ShowOnFront != other.ShowOnFront) return false;
      if (!object.Equals(CFAddress, other.CFAddress)) return false;
      if (ApplySearch != other.ApplySearch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (ParentID.Length != 0) hash ^= ParentID.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CFAddressPK.Length != 0) hash ^= CFAddressPK.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (StartDateTime.Length != 0) hash ^= StartDateTime.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Abbreviation.Length != 0) hash ^= Abbreviation.GetHashCode();
      if (ConferenceIntroduce.Length != 0) hash ^= ConferenceIntroduce.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (TimeRange.Length != 0) hash ^= TimeRange.GetHashCode();
      if (ShowOnFront != false) hash ^= ShowOnFront.GetHashCode();
      if (cFAddress_ != null) hash ^= CFAddress.GetHashCode();
      if (ApplySearch != false) hash ^= ApplySearch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceID);
      }
      if (ParentID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParentID);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (CFAddressPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CFAddressPK);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StartDate);
      }
      if (StartDateTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartDateTime);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Year);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Sort);
      }
      if (Abbreviation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Abbreviation);
      }
      if (ConferenceIntroduce.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ConferenceIntroduce);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModifiedBy);
      }
      if (Level != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Level);
      }
      if (TimeRange.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(TimeRange);
      }
      if (ShowOnFront != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ShowOnFront);
      }
      if (cFAddress_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CFAddress);
      }
      if (ApplySearch != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ApplySearch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (ParentID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentID);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CFAddressPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFAddressPK);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (StartDateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDateTime);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Abbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Abbreviation);
      }
      if (ConferenceIntroduce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceIntroduce);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (TimeRange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TimeRange);
      }
      if (ShowOnFront != false) {
        size += 2 + 1;
      }
      if (cFAddress_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CFAddress);
      }
      if (ApplySearch != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewConferenceStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.ParentID.Length != 0) {
        ParentID = other.ParentID;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CFAddressPK.Length != 0) {
        CFAddressPK = other.CFAddressPK;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.StartDateTime.Length != 0) {
        StartDateTime = other.StartDateTime;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Abbreviation.Length != 0) {
        Abbreviation = other.Abbreviation;
      }
      if (other.ConferenceIntroduce.Length != 0) {
        ConferenceIntroduce = other.ConferenceIntroduce;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.TimeRange.Length != 0) {
        TimeRange = other.TimeRange;
      }
      if (other.ShowOnFront != false) {
        ShowOnFront = other.ShowOnFront;
      }
      if (other.cFAddress_ != null) {
        if (cFAddress_ == null) {
          cFAddress_ = new global::GrpcConferenceContractServiceNew.NewCFAddressStruct();
        }
        CFAddress.MergeFrom(other.CFAddress);
      }
      if (other.ApplySearch != false) {
        ApplySearch = other.ApplySearch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceID = input.ReadString();
            break;
          }
          case 18: {
            ParentID = input.ReadString();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 34: {
            CFAddressPK = input.ReadString();
            break;
          }
          case 42: {
            StartDate = input.ReadString();
            break;
          }
          case 50: {
            StartDateTime = input.ReadString();
            break;
          }
          case 58: {
            Year = input.ReadString();
            break;
          }
          case 66: {
            Sort = input.ReadString();
            break;
          }
          case 74: {
            Abbreviation = input.ReadString();
            break;
          }
          case 82: {
            ConferenceIntroduce = input.ReadString();
            break;
          }
          case 90: {
            CreatedOn = input.ReadString();
            break;
          }
          case 98: {
            CreatedBy = input.ReadString();
            break;
          }
          case 106: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 114: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 120: {
            Level = input.ReadInt32();
            break;
          }
          case 130: {
            TimeRange = input.ReadString();
            break;
          }
          case 136: {
            ShowOnFront = input.ReadBool();
            break;
          }
          case 146: {
            if (cFAddress_ == null) {
              cFAddress_ = new global::GrpcConferenceContractServiceNew.NewCFAddressStruct();
            }
            input.ReadMessage(cFAddress_);
            break;
          }
          case 152: {
            ApplySearch = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewCFAddressStruct : pb::IMessage<NewCFAddressStruct> {
    private static readonly pb::MessageParser<NewCFAddressStruct> _parser = new pb::MessageParser<NewCFAddressStruct>(() => new NewCFAddressStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCFAddressStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCFAddressStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCFAddressStruct(NewCFAddressStruct other) : this() {
      cFAddressPK_ = other.cFAddressPK_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      postCode_ = other.postCode_;
      country_ = other.country_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCFAddressStruct Clone() {
      return new NewCFAddressStruct(this);
    }

    /// <summary>Field number for the "CFAddressPK" field.</summary>
    public const int CFAddressPKFieldNumber = 1;
    private string cFAddressPK_ = "";
    /// <summary>
    ///会议地点主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFAddressPK {
      get { return cFAddressPK_; }
      set {
        cFAddressPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.Translation translation_;
    /// <summary>
    ///会议地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PostCode" field.</summary>
    public const int PostCodeFieldNumber = 3;
    private string postCode_ = "";
    /// <summary>
    ///邮编
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostCode {
      get { return postCode_; }
      set {
        postCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 4;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 7;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 8;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCFAddressStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCFAddressStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CFAddressPK != other.CFAddressPK) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PostCode != other.PostCode) return false;
      if (Country != other.Country) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CFAddressPK.Length != 0) hash ^= CFAddressPK.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PostCode.Length != 0) hash ^= PostCode.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CFAddressPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CFAddressPK);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (PostCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PostCode);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Country);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModifiedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CFAddressPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFAddressPK);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostCode);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCFAddressStruct other) {
      if (other == null) {
        return;
      }
      if (other.CFAddressPK.Length != 0) {
        CFAddressPK = other.CFAddressPK;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PostCode.Length != 0) {
        PostCode = other.PostCode;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CFAddressPK = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            PostCode = input.ReadString();
            break;
          }
          case 34: {
            Country = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 66: {
            ModifiedBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewApplyConferenceStruct : pb::IMessage<NewApplyConferenceStruct> {
    private static readonly pb::MessageParser<NewApplyConferenceStruct> _parser = new pb::MessageParser<NewApplyConferenceStruct>(() => new NewApplyConferenceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewApplyConferenceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewApplyConferenceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewApplyConferenceStruct(NewApplyConferenceStruct other) : this() {
      id_ = other.id_;
      personContractId_ = other.personContractId_;
      memberPK_ = other.memberPK_;
      sessionConferenceId_ = other.sessionConferenceId_;
      isConfirm_ = other.isConfirm_;
      companyId_ = other.companyId_;
      tagTypeCodes_ = other.tagTypeCodes_;
      remarkTranslation_ = other.remarkTranslation_;
      year_ = other.year_;
      sessionConferenceIds_ = other.sessionConferenceIds_.Clone();
      isParticularConf_ = other.isParticularConf_;
      owerid_ = other.owerid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewApplyConferenceStruct Clone() {
      return new NewApplyConferenceStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 2;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 4;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 5;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 6;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TagTypeCodes" field.</summary>
    public const int TagTypeCodesFieldNumber = 7;
    private string tagTypeCodes_ = "";
    /// <summary>
    ///多个标签Code，用“，”分隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagTypeCodes {
      get { return tagTypeCodes_; }
      set {
        tagTypeCodes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 8;
    private string remarkTranslation_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceIds" field.</summary>
    public const int SessionConferenceIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_sessionConferenceIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> sessionConferenceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///SessionConferenceId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SessionConferenceIds {
      get { return sessionConferenceIds_; }
    }

    /// <summary>Field number for the "IsParticularConf" field.</summary>
    public const int IsParticularConfFieldNumber = 11;
    private bool isParticularConf_;
    /// <summary>
    ///IsParticularConf
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsParticularConf {
      get { return isParticularConf_; }
      set {
        isParticularConf_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewApplyConferenceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewApplyConferenceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (CompanyId != other.CompanyId) return false;
      if (TagTypeCodes != other.TagTypeCodes) return false;
      if (RemarkTranslation != other.RemarkTranslation) return false;
      if (Year != other.Year) return false;
      if(!sessionConferenceIds_.Equals(other.sessionConferenceIds_)) return false;
      if (IsParticularConf != other.IsParticularConf) return false;
      if (Owerid != other.Owerid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (TagTypeCodes.Length != 0) hash ^= TagTypeCodes.GetHashCode();
      if (RemarkTranslation.Length != 0) hash ^= RemarkTranslation.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      hash ^= sessionConferenceIds_.GetHashCode();
      if (IsParticularConf != false) hash ^= IsParticularConf.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionConferenceId);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsConfirm);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RemarkTranslation);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      sessionConferenceIds_.WriteTo(output, _repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsParticularConf);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemarkTranslation);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      size += sessionConferenceIds_.CalculateSize(_repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewApplyConferenceStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.TagTypeCodes.Length != 0) {
        TagTypeCodes = other.TagTypeCodes;
      }
      if (other.RemarkTranslation.Length != 0) {
        RemarkTranslation = other.RemarkTranslation;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      sessionConferenceIds_.Add(other.sessionConferenceIds_);
      if (other.IsParticularConf != false) {
        IsParticularConf = other.IsParticularConf;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PersonContractId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 40: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 50: {
            CompanyId = input.ReadString();
            break;
          }
          case 58: {
            TagTypeCodes = input.ReadString();
            break;
          }
          case 66: {
            RemarkTranslation = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
          case 82: {
            sessionConferenceIds_.AddEntriesFrom(input, _repeated_sessionConferenceIds_codec);
            break;
          }
          case 88: {
            IsParticularConf = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewCompanyContractStruct : pb::IMessage<NewCompanyContractStruct> {
    private static readonly pb::MessageParser<NewCompanyContractStruct> _parser = new pb::MessageParser<NewCompanyContractStruct>(() => new NewCompanyContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCompanyContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyContractStruct(NewCompanyContractStruct other) : this() {
      contractId_ = other.contractId_;
      companyServicePackId_ = other.companyServicePackId_;
      companyId_ = other.companyId_;
      ComNameTranslation = other.comNameTranslation_ != null ? other.ComNameTranslation.Clone() : null;
      comContractNumber_ = other.comContractNumber_;
      country_ = other.country_;
      AddressTranslation = other.addressTranslation_ != null ? other.AddressTranslation.Clone() : null;
      maxContractNumber_ = other.maxContractNumber_;
      cCIsdelete_ = other.cCIsdelete_;
      enterpriseType_ = other.enterpriseType_;
      isVerify_ = other.isVerify_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      dlistdata_ = other.dlistdata_.Clone();
      contractCode_ = other.contractCode_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isCheckIn_ = other.isCheckIn_;
      pPTUrl_ = other.pPTUrl_;
      contractStatusCode_ = other.contractStatusCode_;
      conferenceContractId_ = other.conferenceContractId_;
      plistdata_ = other.plistdata_.Clone();
      comPrice_ = other.comPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyContractStruct Clone() {
      return new NewCompanyContractStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    /// <summary>
    ///CompanyServicePackId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 3;
    private string companyId_ = "";
    /// <summary>
    ///CompanyId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.ComNameTranslationStruct comNameTranslation_;
    /// <summary>
    ///string  ComNameTranslation = 4;
    ///公司中英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.ComNameTranslationStruct ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ComContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 5;
    private string comContractNumber_ = "";
    /// <summary>
    ///二级合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressTranslation" field.</summary>
    public const int AddressTranslationFieldNumber = 7;
    private global::GrpcConferenceContractServiceNew.AddressTranslationStruct addressTranslation_;
    /// <summary>
    ///string AddressTranslation = 7;
    ///地址中英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.AddressTranslationStruct AddressTranslation {
      get { return addressTranslation_; }
      set {
        addressTranslation_ = value;
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 8;
    private string maxContractNumber_ = "";
    /// <summary>
    ///最大合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CCIsdelete" field.</summary>
    public const int CCIsdeleteFieldNumber = 9;
    private bool cCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CCIsdelete {
      get { return cCIsdelete_; }
      set {
        cCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 10;
    private int enterpriseType_;
    /// <summary>
    ///0代表内资;1代表外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "IsVerify" field.</summary>
    public const int IsVerifyFieldNumber = 11;
    private bool isVerify_;
    /// <summary>
    ///是否审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 13;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 14;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 15;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 16;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 17;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 18;
    private global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "dlistdata" field.</summary>
    public const int DlistdataFieldNumber = 19;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> _repeated_dlistdata_codec
        = pb::FieldCodec.ForMessage(154, global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> dlistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct>();
    /// <summary>
    ///二级折扣合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.DelegateServicePackDiscountStruct> Dlistdata {
      get { return dlistdata_; }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 20;
    private string contractCode_ = "";
    /// <summary>
    ///CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）C中资 E外资 S后台合同 W前台合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 21;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 22;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 23;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "PPTUrl" field.</summary>
    public const int PPTUrlFieldNumber = 24;
    private string pPTUrl_ = "";
    /// <summary>
    ///PPTUrl
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PPTUrl {
      get { return pPTUrl_; }
      set {
        pPTUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 25;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 26;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plistdata" field.</summary>
    public const int PlistdataFieldNumber = 27;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewPersonContractStruct> _repeated_plistdata_codec
        = pb::FieldCodec.ForMessage(218, global::GrpcConferenceContractServiceNew.NewPersonContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewPersonContractStruct> plistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewPersonContractStruct>();
    /// <summary>
    ///个人合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewPersonContractStruct> Plistdata {
      get { return plistdata_; }
    }

    /// <summary>Field number for the "ComPrice" field.</summary>
    public const int ComPriceFieldNumber = 28;
    private string comPrice_ = "";
    /// <summary>
    ///二级合同价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCompanyContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCompanyContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (!object.Equals(ComNameTranslation, other.ComNameTranslation)) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (Country != other.Country) return false;
      if (!object.Equals(AddressTranslation, other.AddressTranslation)) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      if (CCIsdelete != other.CCIsdelete) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (IsVerify != other.IsVerify) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if(!dlistdata_.Equals(other.dlistdata_)) return false;
      if (ContractCode != other.ContractCode) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (PPTUrl != other.PPTUrl) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if(!plistdata_.Equals(other.plistdata_)) return false;
      if (ComPrice != other.ComPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (comNameTranslation_ != null) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (addressTranslation_ != null) hash ^= AddressTranslation.GetHashCode();
      if (MaxContractNumber.Length != 0) hash ^= MaxContractNumber.GetHashCode();
      if (CCIsdelete != false) hash ^= CCIsdelete.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      hash ^= dlistdata_.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (PPTUrl.Length != 0) hash ^= PPTUrl.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      hash ^= plistdata_.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyId);
      }
      if (comNameTranslation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComContractNumber);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (addressTranslation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        output.WriteRawTag(72);
        output.WriteBool(CCIsdelete);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EnterpriseType);
      }
      if (IsVerify != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsVerify);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CompanyServicePack);
      }
      dlistdata_.WriteTo(output, _repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ConferenceName);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCheckIn);
      }
      if (PPTUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ConferenceContractId);
      }
      plistdata_.WriteTo(output, _repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ComPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (comNameTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (addressTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        size += 1 + 1;
      }
      if (EnterpriseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      size += dlistdata_.CalculateSize(_repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (PPTUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      size += plistdata_.CalculateSize(_repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCompanyContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.comNameTranslation_ != null) {
        if (comNameTranslation_ == null) {
          comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
        }
        ComNameTranslation.MergeFrom(other.ComNameTranslation);
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.addressTranslation_ != null) {
        if (addressTranslation_ == null) {
          addressTranslation_ = new global::GrpcConferenceContractServiceNew.AddressTranslationStruct();
        }
        AddressTranslation.MergeFrom(other.AddressTranslation);
      }
      if (other.MaxContractNumber.Length != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      if (other.CCIsdelete != false) {
        CCIsdelete = other.CCIsdelete;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      dlistdata_.Add(other.dlistdata_);
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.PPTUrl.Length != 0) {
        PPTUrl = other.PPTUrl;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      plistdata_.Add(other.plistdata_);
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            CompanyId = input.ReadString();
            break;
          }
          case 34: {
            if (comNameTranslation_ == null) {
              comNameTranslation_ = new global::GrpcConferenceContractServiceNew.ComNameTranslationStruct();
            }
            input.ReadMessage(comNameTranslation_);
            break;
          }
          case 42: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            if (addressTranslation_ == null) {
              addressTranslation_ = new global::GrpcConferenceContractServiceNew.AddressTranslationStruct();
            }
            input.ReadMessage(addressTranslation_);
            break;
          }
          case 66: {
            MaxContractNumber = input.ReadString();
            break;
          }
          case 72: {
            CCIsdelete = input.ReadBool();
            break;
          }
          case 80: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 88: {
            IsVerify = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
          case 106: {
            Ower = input.ReadString();
            break;
          }
          case 114: {
            CreatedOn = input.ReadString();
            break;
          }
          case 122: {
            CreatedBy = input.ReadString();
            break;
          }
          case 130: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 138: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 146: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 154: {
            dlistdata_.AddEntriesFrom(input, _repeated_dlistdata_codec);
            break;
          }
          case 162: {
            ContractCode = input.ReadString();
            break;
          }
          case 170: {
            ConferenceId = input.ReadString();
            break;
          }
          case 178: {
            ConferenceName = input.ReadString();
            break;
          }
          case 184: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 194: {
            PPTUrl = input.ReadString();
            break;
          }
          case 202: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 210: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 218: {
            plistdata_.AddEntriesFrom(input, _repeated_plistdata_codec);
            break;
          }
          case 226: {
            ComPrice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewCompanyServicePackStruct : pb::IMessage<NewCompanyServicePackStruct> {
    private static readonly pb::MessageParser<NewCompanyServicePackStruct> _parser = new pb::MessageParser<NewCompanyServicePackStruct>(() => new NewCompanyServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCompanyServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyServicePackStruct(NewCompanyServicePackStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      contractTypeId_ = other.contractTypeId_;
      sort_ = other.sort_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      isShownOnFront_ = other.isShownOnFront_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      RemarkTranslation = other.remarkTranslation_ != null ? other.RemarkTranslation.Clone() : null;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isSpeaker_ = other.isSpeaker_;
      cTypeCode_ = other.cTypeCode_;
      isGive_ = other.isGive_;
      year_ = other.year_;
      remarkCode_ = other.remarkCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyServicePackStruct Clone() {
      return new NewCompanyServicePackStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 2;
    private string contractTypeId_ = "";
    /// <summary>
    ///ContractTypeId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 3;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.TranslationStruct translation_;
    /// <summary>
    ///套餐名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 5;
    private string priceRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 6;
    private string priceUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsShownOnFront" field.</summary>
    public const int IsShownOnFrontFieldNumber = 7;
    private bool isShownOnFront_;
    /// <summary>
    ///是否在前端显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShownOnFront {
      get { return isShownOnFront_; }
      set {
        isShownOnFront_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 10;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 11;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 12;
    private global::GrpcConferenceContractServiceNew.TranslationStruct remarkTranslation_;
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 13;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 14;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 15;
    private bool isSpeaker_;
    /// <summary>
    ///是否是演讲人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 16;
    private string cTypeCode_ = "";
    /// <summary>
    ///合同大类Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 17;
    private bool isGive_;
    /// <summary>
    ///是否赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkCode" field.</summary>
    public const int RemarkCodeFieldNumber = 19;
    private string remarkCode_ = "";
    /// <summary>
    ///说明Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkCode {
      get { return remarkCode_; }
      set {
        remarkCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCompanyServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCompanyServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Sort != other.Sort) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (IsShownOnFront != other.IsShownOnFront) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(RemarkTranslation, other.RemarkTranslation)) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (IsGive != other.IsGive) return false;
      if (Year != other.Year) return false;
      if (RemarkCode != other.RemarkCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (IsShownOnFront != false) hash ^= IsShownOnFront.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (remarkTranslation_ != null) hash ^= RemarkTranslation.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (RemarkCode.Length != 0) hash ^= RemarkCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractTypeId);
      }
      if (Sort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sort);
      }
      if (translation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceUSD);
      }
      if (IsShownOnFront != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsShownOnFront);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ConferenceName);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsSpeaker);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CTypeCode);
      }
      if (IsGive != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsGive);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (RemarkCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RemarkCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (IsShownOnFront != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (CTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (IsGive != false) {
        size += 2 + 1;
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (RemarkCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCompanyServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.IsShownOnFront != false) {
        IsShownOnFront = other.IsShownOnFront;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.remarkTranslation_ != null) {
        if (remarkTranslation_ == null) {
          remarkTranslation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        RemarkTranslation.MergeFrom(other.RemarkTranslation);
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.RemarkCode.Length != 0) {
        RemarkCode = other.RemarkCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 24: {
            Sort = input.ReadInt32();
            break;
          }
          case 34: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 42: {
            PriceRMB = input.ReadString();
            break;
          }
          case 50: {
            PriceUSD = input.ReadString();
            break;
          }
          case 56: {
            IsShownOnFront = input.ReadBool();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 90: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 98: {
            if (remarkTranslation_ == null) {
              remarkTranslation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(remarkTranslation_);
            break;
          }
          case 106: {
            ConferenceId = input.ReadString();
            break;
          }
          case 114: {
            ConferenceName = input.ReadString();
            break;
          }
          case 120: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 130: {
            CTypeCode = input.ReadString();
            break;
          }
          case 136: {
            IsGive = input.ReadBool();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 154: {
            RemarkCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewServicePackStruct : pb::IMessage<NewServicePackStruct> {
    private static readonly pb::MessageParser<NewServicePackStruct> _parser = new pb::MessageParser<NewServicePackStruct>(() => new NewServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewServicePackStruct(NewServicePackStruct other) : this() {
      servicePackId_ = other.servicePackId_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      sessionDate_ = other.sessionDate_;
      sessionStartTime_ = other.sessionStartTime_;
      thirdSessionConferenceId_ = other.thirdSessionConferenceId_;
      thirdSessionConferenceName_ = other.thirdSessionConferenceName_;
      sessionAddress_ = other.sessionAddress_;
      year_ = other.year_;
      companyServicePackCode_ = other.companyServicePackCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewServicePackStruct Clone() {
      return new NewServicePackStruct(this);
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 1;
    private string servicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.TranslationStruct translation_;
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 3;
    private string priceRMB_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 4;
    private string priceUSD_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 9;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 10;
    private string conferenceName_ = "";
    /// <summary>
    ///ConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 11;
    private string sessionConferenceId_ = "";
    /// <summary>
    ///SessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 12;
    private string sessionConferenceName_ = "";
    /// <summary>
    ///SessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionDate" field.</summary>
    public const int SessionDateFieldNumber = 13;
    private string sessionDate_ = "";
    /// <summary>
    ///SessionDate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionDate {
      get { return sessionDate_; }
      set {
        sessionDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionStartTime" field.</summary>
    public const int SessionStartTimeFieldNumber = 14;
    private string sessionStartTime_ = "";
    /// <summary>
    ///SessionStartTime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionStartTime {
      get { return sessionStartTime_; }
      set {
        sessionStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceId" field.</summary>
    public const int ThirdSessionConferenceIdFieldNumber = 15;
    private string thirdSessionConferenceId_ = "";
    /// <summary>
    ///ThirdSessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceId {
      get { return thirdSessionConferenceId_; }
      set {
        thirdSessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceName" field.</summary>
    public const int ThirdSessionConferenceNameFieldNumber = 16;
    private string thirdSessionConferenceName_ = "";
    /// <summary>
    ///ThirdSessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceName {
      get { return thirdSessionConferenceName_; }
      set {
        thirdSessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionAddress" field.</summary>
    public const int SessionAddressFieldNumber = 17;
    private string sessionAddress_ = "";
    /// <summary>
    ///地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionAddress {
      get { return sessionAddress_; }
      set {
        sessionAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyServicePackCode" field.</summary>
    public const int CompanyServicePackCodeFieldNumber = 19;
    private string companyServicePackCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackCode {
      get { return companyServicePackCode_; }
      set {
        companyServicePackCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServicePackId != other.ServicePackId) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      if (SessionDate != other.SessionDate) return false;
      if (SessionStartTime != other.SessionStartTime) return false;
      if (ThirdSessionConferenceId != other.ThirdSessionConferenceId) return false;
      if (ThirdSessionConferenceName != other.ThirdSessionConferenceName) return false;
      if (SessionAddress != other.SessionAddress) return false;
      if (Year != other.Year) return false;
      if (CompanyServicePackCode != other.CompanyServicePackCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (SessionDate.Length != 0) hash ^= SessionDate.GetHashCode();
      if (SessionStartTime.Length != 0) hash ^= SessionStartTime.GetHashCode();
      if (ThirdSessionConferenceId.Length != 0) hash ^= ThirdSessionConferenceId.GetHashCode();
      if (ThirdSessionConferenceName.Length != 0) hash ^= ThirdSessionConferenceName.GetHashCode();
      if (SessionAddress.Length != 0) hash ^= SessionAddress.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CompanyServicePackCode.Length != 0) hash ^= CompanyServicePackCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServicePackId);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SessionAddress);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (CompanyServicePackCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CompanyServicePackCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionAddress);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CompanyServicePackCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      if (other.SessionDate.Length != 0) {
        SessionDate = other.SessionDate;
      }
      if (other.SessionStartTime.Length != 0) {
        SessionStartTime = other.SessionStartTime;
      }
      if (other.ThirdSessionConferenceId.Length != 0) {
        ThirdSessionConferenceId = other.ThirdSessionConferenceId;
      }
      if (other.ThirdSessionConferenceName.Length != 0) {
        ThirdSessionConferenceName = other.ThirdSessionConferenceName;
      }
      if (other.SessionAddress.Length != 0) {
        SessionAddress = other.SessionAddress;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CompanyServicePackCode.Length != 0) {
        CompanyServicePackCode = other.CompanyServicePackCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServicePackId = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            PriceRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            ConferenceId = input.ReadString();
            break;
          }
          case 82: {
            ConferenceName = input.ReadString();
            break;
          }
          case 90: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 98: {
            SessionConferenceName = input.ReadString();
            break;
          }
          case 106: {
            SessionDate = input.ReadString();
            break;
          }
          case 114: {
            SessionStartTime = input.ReadString();
            break;
          }
          case 122: {
            ThirdSessionConferenceId = input.ReadString();
            break;
          }
          case 130: {
            ThirdSessionConferenceName = input.ReadString();
            break;
          }
          case 138: {
            SessionAddress = input.ReadString();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 154: {
            CompanyServicePackCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewActivityStruct : pb::IMessage<NewActivityStruct> {
    private static readonly pb::MessageParser<NewActivityStruct> _parser = new pb::MessageParser<NewActivityStruct>(() => new NewActivityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewActivityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct(NewActivityStruct other) : this() {
      activityId_ = other.activityId_;
      ActivityName = other.activityName_ != null ? other.ActivityName.Clone() : null;
      sessionConferenceID_ = other.sessionConferenceID_;
      SessionConferenceName = other.sessionConferenceName_ != null ? other.SessionConferenceName.Clone() : null;
      sort_ = other.sort_;
      sessionIDs_ = other.sessionIDs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct Clone() {
      return new NewActivityStruct(this);
    }

    /// <summary>Field number for the "ActivityId" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 2;
    private global::GrpcConferenceContractServiceNew.TranslationStruct activityName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct ActivityName {
      get { return activityName_; }
      set {
        activityName_ = value;
      }
    }

    /// <summary>Field number for the "SessionConferenceID" field.</summary>
    public const int SessionConferenceIDFieldNumber = 3;
    private string sessionConferenceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceID {
      get { return sessionConferenceID_; }
      set {
        sessionConferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 4;
    private global::GrpcConferenceContractServiceNew.TranslationStruct sessionConferenceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.TranslationStruct SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "SessionIDs" field.</summary>
    public const int SessionIDsFieldNumber = 6;
    private string sessionIDs_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionIDs {
      get { return sessionIDs_; }
      set {
        sessionIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewActivityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewActivityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (!object.Equals(ActivityName, other.ActivityName)) return false;
      if (SessionConferenceID != other.SessionConferenceID) return false;
      if (!object.Equals(SessionConferenceName, other.SessionConferenceName)) return false;
      if (Sort != other.Sort) return false;
      if (SessionIDs != other.SessionIDs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (activityName_ != null) hash ^= ActivityName.GetHashCode();
      if (SessionConferenceID.Length != 0) hash ^= SessionConferenceID.GetHashCode();
      if (sessionConferenceName_ != null) hash ^= SessionConferenceName.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (SessionIDs.Length != 0) hash ^= SessionIDs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
      if (activityName_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionConferenceName);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (SessionIDs.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SessionIDs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (activityName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionConferenceName);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (SessionIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionIDs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewActivityStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.activityName_ != null) {
        if (activityName_ == null) {
          activityName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        ActivityName.MergeFrom(other.ActivityName);
      }
      if (other.SessionConferenceID.Length != 0) {
        SessionConferenceID = other.SessionConferenceID;
      }
      if (other.sessionConferenceName_ != null) {
        if (sessionConferenceName_ == null) {
          sessionConferenceName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
        }
        SessionConferenceName.MergeFrom(other.SessionConferenceName);
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.SessionIDs.Length != 0) {
        SessionIDs = other.SessionIDs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
          case 18: {
            if (activityName_ == null) {
              activityName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(activityName_);
            break;
          }
          case 26: {
            SessionConferenceID = input.ReadString();
            break;
          }
          case 34: {
            if (sessionConferenceName_ == null) {
              sessionConferenceName_ = new global::GrpcConferenceContractServiceNew.TranslationStruct();
            }
            input.ReadMessage(sessionConferenceName_);
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            SessionIDs = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewCompanyStruct : pb::IMessage<NewCompanyStruct> {
    private static readonly pb::MessageParser<NewCompanyStruct> _parser = new pb::MessageParser<NewCompanyStruct>(() => new NewCompanyStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewCompanyStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyStruct(NewCompanyStruct other) : this() {
      companyPK_ = other.companyPK_;
      companyTypePK_ = other.companyTypePK_;
      industryTypePK_ = other.industryTypePK_;
      memberPK_ = other.memberPK_;
      comNameCn_ = other.comNameCn_;
      comNameEn_ = other.comNameEn_;
      comAreaDetail_ = other.comAreaDetail_;
      comContactEmail_ = other.comContactEmail_;
      comPostCode_ = other.comPostCode_;
      comFax_ = other.comFax_;
      comTel_ = other.comTel_;
      comWebSite_ = other.comWebSite_;
      comClient_ = other.comClient_;
      comNature_ = other.comNature_;
      comLang_ = other.comLang_;
      comRemark_ = other.comRemark_;
      comIsDelete_ = other.comIsDelete_;
      comIsVerify_ = other.comIsVerify_;
      comIsWebSite_ = other.comIsWebSite_;
      comAddress_ = other.comAddress_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewCompanyStruct Clone() {
      return new NewCompanyStruct(this);
    }

    /// <summary>Field number for the "CompanyPK" field.</summary>
    public const int CompanyPKFieldNumber = 1;
    private string companyPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPK {
      get { return companyPK_; }
      set {
        companyPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTypePK" field.</summary>
    public const int CompanyTypePKFieldNumber = 2;
    private string companyTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTypePK {
      get { return companyTypePK_; }
      set {
        companyTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IndustryTypePK" field.</summary>
    public const int IndustryTypePKFieldNumber = 3;
    private string industryTypePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndustryTypePK {
      get { return industryTypePK_; }
      set {
        industryTypePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameCn" field.</summary>
    public const int ComNameCnFieldNumber = 5;
    private string comNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameCn {
      get { return comNameCn_; }
      set {
        comNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameEn" field.</summary>
    public const int ComNameEnFieldNumber = 6;
    private string comNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameEn {
      get { return comNameEn_; }
      set {
        comNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComAreaDetail" field.</summary>
    public const int ComAreaDetailFieldNumber = 7;
    private string comAreaDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComAreaDetail {
      get { return comAreaDetail_; }
      set {
        comAreaDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComContactEmail" field.</summary>
    public const int ComContactEmailFieldNumber = 8;
    private string comContactEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContactEmail {
      get { return comContactEmail_; }
      set {
        comContactEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComPostCode" field.</summary>
    public const int ComPostCodeFieldNumber = 9;
    private string comPostCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPostCode {
      get { return comPostCode_; }
      set {
        comPostCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComFax" field.</summary>
    public const int ComFaxFieldNumber = 10;
    private string comFax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComFax {
      get { return comFax_; }
      set {
        comFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComTel" field.</summary>
    public const int ComTelFieldNumber = 11;
    private string comTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComTel {
      get { return comTel_; }
      set {
        comTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComWebSite" field.</summary>
    public const int ComWebSiteFieldNumber = 12;
    private string comWebSite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComWebSite {
      get { return comWebSite_; }
      set {
        comWebSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComClient" field.</summary>
    public const int ComClientFieldNumber = 13;
    private string comClient_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComClient {
      get { return comClient_; }
      set {
        comClient_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNature" field.</summary>
    public const int ComNatureFieldNumber = 14;
    private string comNature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNature {
      get { return comNature_; }
      set {
        comNature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComLang" field.</summary>
    public const int ComLangFieldNumber = 15;
    private string comLang_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComLang {
      get { return comLang_; }
      set {
        comLang_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComRemark" field.</summary>
    public const int ComRemarkFieldNumber = 16;
    private string comRemark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComRemark {
      get { return comRemark_; }
      set {
        comRemark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComIsDelete" field.</summary>
    public const int ComIsDeleteFieldNumber = 17;
    private bool comIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsDelete {
      get { return comIsDelete_; }
      set {
        comIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "ComIsVerify" field.</summary>
    public const int ComIsVerifyFieldNumber = 18;
    private bool comIsVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsVerify {
      get { return comIsVerify_; }
      set {
        comIsVerify_ = value;
      }
    }

    /// <summary>Field number for the "ComIsWebSite" field.</summary>
    public const int ComIsWebSiteFieldNumber = 19;
    private bool comIsWebSite_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ComIsWebSite {
      get { return comIsWebSite_; }
      set {
        comIsWebSite_ = value;
      }
    }

    /// <summary>Field number for the "ComAddress" field.</summary>
    public const int ComAddressFieldNumber = 20;
    private string comAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComAddress {
      get { return comAddress_; }
      set {
        comAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 21;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 22;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 23;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 24;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewCompanyStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewCompanyStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyPK != other.CompanyPK) return false;
      if (CompanyTypePK != other.CompanyTypePK) return false;
      if (IndustryTypePK != other.IndustryTypePK) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ComNameCn != other.ComNameCn) return false;
      if (ComNameEn != other.ComNameEn) return false;
      if (ComAreaDetail != other.ComAreaDetail) return false;
      if (ComContactEmail != other.ComContactEmail) return false;
      if (ComPostCode != other.ComPostCode) return false;
      if (ComFax != other.ComFax) return false;
      if (ComTel != other.ComTel) return false;
      if (ComWebSite != other.ComWebSite) return false;
      if (ComClient != other.ComClient) return false;
      if (ComNature != other.ComNature) return false;
      if (ComLang != other.ComLang) return false;
      if (ComRemark != other.ComRemark) return false;
      if (ComIsDelete != other.ComIsDelete) return false;
      if (ComIsVerify != other.ComIsVerify) return false;
      if (ComIsWebSite != other.ComIsWebSite) return false;
      if (ComAddress != other.ComAddress) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyPK.Length != 0) hash ^= CompanyPK.GetHashCode();
      if (CompanyTypePK.Length != 0) hash ^= CompanyTypePK.GetHashCode();
      if (IndustryTypePK.Length != 0) hash ^= IndustryTypePK.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ComNameCn.Length != 0) hash ^= ComNameCn.GetHashCode();
      if (ComNameEn.Length != 0) hash ^= ComNameEn.GetHashCode();
      if (ComAreaDetail.Length != 0) hash ^= ComAreaDetail.GetHashCode();
      if (ComContactEmail.Length != 0) hash ^= ComContactEmail.GetHashCode();
      if (ComPostCode.Length != 0) hash ^= ComPostCode.GetHashCode();
      if (ComFax.Length != 0) hash ^= ComFax.GetHashCode();
      if (ComTel.Length != 0) hash ^= ComTel.GetHashCode();
      if (ComWebSite.Length != 0) hash ^= ComWebSite.GetHashCode();
      if (ComClient.Length != 0) hash ^= ComClient.GetHashCode();
      if (ComNature.Length != 0) hash ^= ComNature.GetHashCode();
      if (ComLang.Length != 0) hash ^= ComLang.GetHashCode();
      if (ComRemark.Length != 0) hash ^= ComRemark.GetHashCode();
      if (ComIsDelete != false) hash ^= ComIsDelete.GetHashCode();
      if (ComIsVerify != false) hash ^= ComIsVerify.GetHashCode();
      if (ComIsWebSite != false) hash ^= ComIsWebSite.GetHashCode();
      if (ComAddress.Length != 0) hash ^= ComAddress.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyPK);
      }
      if (CompanyTypePK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTypePK);
      }
      if (IndustryTypePK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IndustryTypePK);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (ComNameCn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ComNameEn);
      }
      if (ComAreaDetail.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ComAreaDetail);
      }
      if (ComContactEmail.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ComContactEmail);
      }
      if (ComPostCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ComPostCode);
      }
      if (ComFax.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ComFax);
      }
      if (ComTel.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ComTel);
      }
      if (ComWebSite.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ComWebSite);
      }
      if (ComClient.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ComClient);
      }
      if (ComNature.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ComNature);
      }
      if (ComLang.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ComLang);
      }
      if (ComRemark.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ComRemark);
      }
      if (ComIsDelete != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(ComIsDelete);
      }
      if (ComIsVerify != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(ComIsVerify);
      }
      if (ComIsWebSite != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ComIsWebSite);
      }
      if (ComAddress.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ComAddress);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyPK);
      }
      if (CompanyTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTypePK);
      }
      if (IndustryTypePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndustryTypePK);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ComNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameCn);
      }
      if (ComNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameEn);
      }
      if (ComAreaDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComAreaDetail);
      }
      if (ComContactEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContactEmail);
      }
      if (ComPostCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComPostCode);
      }
      if (ComFax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComFax);
      }
      if (ComTel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComTel);
      }
      if (ComWebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComWebSite);
      }
      if (ComClient.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComClient);
      }
      if (ComNature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNature);
      }
      if (ComLang.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComLang);
      }
      if (ComRemark.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComRemark);
      }
      if (ComIsDelete != false) {
        size += 2 + 1;
      }
      if (ComIsVerify != false) {
        size += 2 + 1;
      }
      if (ComIsWebSite != false) {
        size += 2 + 1;
      }
      if (ComAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComAddress);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewCompanyStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyPK.Length != 0) {
        CompanyPK = other.CompanyPK;
      }
      if (other.CompanyTypePK.Length != 0) {
        CompanyTypePK = other.CompanyTypePK;
      }
      if (other.IndustryTypePK.Length != 0) {
        IndustryTypePK = other.IndustryTypePK;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ComNameCn.Length != 0) {
        ComNameCn = other.ComNameCn;
      }
      if (other.ComNameEn.Length != 0) {
        ComNameEn = other.ComNameEn;
      }
      if (other.ComAreaDetail.Length != 0) {
        ComAreaDetail = other.ComAreaDetail;
      }
      if (other.ComContactEmail.Length != 0) {
        ComContactEmail = other.ComContactEmail;
      }
      if (other.ComPostCode.Length != 0) {
        ComPostCode = other.ComPostCode;
      }
      if (other.ComFax.Length != 0) {
        ComFax = other.ComFax;
      }
      if (other.ComTel.Length != 0) {
        ComTel = other.ComTel;
      }
      if (other.ComWebSite.Length != 0) {
        ComWebSite = other.ComWebSite;
      }
      if (other.ComClient.Length != 0) {
        ComClient = other.ComClient;
      }
      if (other.ComNature.Length != 0) {
        ComNature = other.ComNature;
      }
      if (other.ComLang.Length != 0) {
        ComLang = other.ComLang;
      }
      if (other.ComRemark.Length != 0) {
        ComRemark = other.ComRemark;
      }
      if (other.ComIsDelete != false) {
        ComIsDelete = other.ComIsDelete;
      }
      if (other.ComIsVerify != false) {
        ComIsVerify = other.ComIsVerify;
      }
      if (other.ComIsWebSite != false) {
        ComIsWebSite = other.ComIsWebSite;
      }
      if (other.ComAddress.Length != 0) {
        ComAddress = other.ComAddress;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyPK = input.ReadString();
            break;
          }
          case 18: {
            CompanyTypePK = input.ReadString();
            break;
          }
          case 26: {
            IndustryTypePK = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            ComNameCn = input.ReadString();
            break;
          }
          case 50: {
            ComNameEn = input.ReadString();
            break;
          }
          case 58: {
            ComAreaDetail = input.ReadString();
            break;
          }
          case 66: {
            ComContactEmail = input.ReadString();
            break;
          }
          case 74: {
            ComPostCode = input.ReadString();
            break;
          }
          case 82: {
            ComFax = input.ReadString();
            break;
          }
          case 90: {
            ComTel = input.ReadString();
            break;
          }
          case 98: {
            ComWebSite = input.ReadString();
            break;
          }
          case 106: {
            ComClient = input.ReadString();
            break;
          }
          case 114: {
            ComNature = input.ReadString();
            break;
          }
          case 122: {
            ComLang = input.ReadString();
            break;
          }
          case 130: {
            ComRemark = input.ReadString();
            break;
          }
          case 136: {
            ComIsDelete = input.ReadBool();
            break;
          }
          case 144: {
            ComIsVerify = input.ReadBool();
            break;
          }
          case 152: {
            ComIsWebSite = input.ReadBool();
            break;
          }
          case 162: {
            ComAddress = input.ReadString();
            break;
          }
          case 170: {
            CreatedOn = input.ReadString();
            break;
          }
          case 178: {
            CreatedBy = input.ReadString();
            break;
          }
          case 186: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 194: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewMemberStruct : pb::IMessage<NewMemberStruct> {
    private static readonly pb::MessageParser<NewMemberStruct> _parser = new pb::MessageParser<NewMemberStruct>(() => new NewMemberStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewMemberStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberStruct(NewMemberStruct other) : this() {
      memberPK_ = other.memberPK_;
      sourcePK_ = other.sourcePK_;
      memNameCn_ = other.memNameCn_;
      memNameEn_ = other.memNameEn_;
      memEmail_ = other.memEmail_;
      memPassword_ = other.memPassword_;
      memType_ = other.memType_;
      memGender_ = other.memGender_;
      memDepartment_ = other.memDepartment_;
      memTitle_ = other.memTitle_;
      memPosition_ = other.memPosition_;
      memProTitle_ = other.memProTitle_;
      memQQ_ = other.memQQ_;
      memFax_ = other.memFax_;
      memMSN_ = other.memMSN_;
      memMobile_ = other.memMobile_;
      memTel_ = other.memTel_;
      memPostCode_ = other.memPostCode_;
      memLastLoginTime_ = other.memLastLoginTime_;
      memAddress_ = other.memAddress_;
      memAddressDetail_ = other.memAddressDetail_;
      memIsDelete_ = other.memIsDelete_;
      memIsActivation_ = other.memIsActivation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      companyPK_ = other.companyPK_;
      memCountryNameCn_ = other.memCountryNameCn_;
      memCountryNameEn_ = other.memCountryNameEn_;
      memCompany_ = other.memCompany_;
      assistantName_ = other.assistantName_;
      assistantPosition_ = other.assistantPosition_;
      assistantMobile_ = other.assistantMobile_;
      assistantEmail_ = other.assistantEmail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMemberStruct Clone() {
      return new NewMemberStruct(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SourcePK" field.</summary>
    public const int SourcePKFieldNumber = 2;
    private string sourcePK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourcePK {
      get { return sourcePK_; }
      set {
        sourcePK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameCn" field.</summary>
    public const int MemNameCnFieldNumber = 3;
    private string memNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameCn {
      get { return memNameCn_; }
      set {
        memNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemNameEn" field.</summary>
    public const int MemNameEnFieldNumber = 4;
    private string memNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemNameEn {
      get { return memNameEn_; }
      set {
        memNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemEmail" field.</summary>
    public const int MemEmailFieldNumber = 5;
    private string memEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemEmail {
      get { return memEmail_; }
      set {
        memEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPassword" field.</summary>
    public const int MemPasswordFieldNumber = 6;
    private string memPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPassword {
      get { return memPassword_; }
      set {
        memPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemType" field.</summary>
    public const int MemTypeFieldNumber = 7;
    private string memType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemType {
      get { return memType_; }
      set {
        memType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemGender" field.</summary>
    public const int MemGenderFieldNumber = 8;
    private string memGender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemGender {
      get { return memGender_; }
      set {
        memGender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemDepartment" field.</summary>
    public const int MemDepartmentFieldNumber = 9;
    private string memDepartment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemDepartment {
      get { return memDepartment_; }
      set {
        memDepartment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTitle" field.</summary>
    public const int MemTitleFieldNumber = 10;
    private string memTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTitle {
      get { return memTitle_; }
      set {
        memTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPosition" field.</summary>
    public const int MemPositionFieldNumber = 11;
    private string memPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPosition {
      get { return memPosition_; }
      set {
        memPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemProTitle" field.</summary>
    public const int MemProTitleFieldNumber = 12;
    private string memProTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemProTitle {
      get { return memProTitle_; }
      set {
        memProTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemQQ" field.</summary>
    public const int MemQQFieldNumber = 13;
    private string memQQ_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemQQ {
      get { return memQQ_; }
      set {
        memQQ_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemFax" field.</summary>
    public const int MemFaxFieldNumber = 14;
    private string memFax_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemFax {
      get { return memFax_; }
      set {
        memFax_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMSN" field.</summary>
    public const int MemMSNFieldNumber = 15;
    private string memMSN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMSN {
      get { return memMSN_; }
      set {
        memMSN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemMobile" field.</summary>
    public const int MemMobileFieldNumber = 16;
    private string memMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemMobile {
      get { return memMobile_; }
      set {
        memMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTel" field.</summary>
    public const int MemTelFieldNumber = 17;
    private string memTel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTel {
      get { return memTel_; }
      set {
        memTel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemPostCode" field.</summary>
    public const int MemPostCodeFieldNumber = 18;
    private string memPostCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemPostCode {
      get { return memPostCode_; }
      set {
        memPostCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemLastLoginTime" field.</summary>
    public const int MemLastLoginTimeFieldNumber = 19;
    private string memLastLoginTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemLastLoginTime {
      get { return memLastLoginTime_; }
      set {
        memLastLoginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddress" field.</summary>
    public const int MemAddressFieldNumber = 20;
    private string memAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddress {
      get { return memAddress_; }
      set {
        memAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemAddressDetail" field.</summary>
    public const int MemAddressDetailFieldNumber = 21;
    private string memAddressDetail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemAddressDetail {
      get { return memAddressDetail_; }
      set {
        memAddressDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemIsDelete" field.</summary>
    public const int MemIsDeleteFieldNumber = 22;
    private bool memIsDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsDelete {
      get { return memIsDelete_; }
      set {
        memIsDelete_ = value;
      }
    }

    /// <summary>Field number for the "MemIsActivation" field.</summary>
    public const int MemIsActivationFieldNumber = 23;
    private bool memIsActivation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MemIsActivation {
      get { return memIsActivation_; }
      set {
        memIsActivation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 24;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 25;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 26;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 27;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyPK" field.</summary>
    public const int CompanyPKFieldNumber = 28;
    private string companyPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyPK {
      get { return companyPK_; }
      set {
        companyPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameCn" field.</summary>
    public const int MemCountryNameCnFieldNumber = 29;
    private string memCountryNameCn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameCn {
      get { return memCountryNameCn_; }
      set {
        memCountryNameCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCountryNameEn" field.</summary>
    public const int MemCountryNameEnFieldNumber = 30;
    private string memCountryNameEn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCountryNameEn {
      get { return memCountryNameEn_; }
      set {
        memCountryNameEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemCompany" field.</summary>
    public const int MemCompanyFieldNumber = 31;
    private string memCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemCompany {
      get { return memCompany_; }
      set {
        memCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantName" field.</summary>
    public const int AssistantNameFieldNumber = 32;
    private string assistantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantName {
      get { return assistantName_; }
      set {
        assistantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantPosition" field.</summary>
    public const int AssistantPositionFieldNumber = 33;
    private string assistantPosition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantPosition {
      get { return assistantPosition_; }
      set {
        assistantPosition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantMobile" field.</summary>
    public const int AssistantMobileFieldNumber = 34;
    private string assistantMobile_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantMobile {
      get { return assistantMobile_; }
      set {
        assistantMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssistantEmail" field.</summary>
    public const int AssistantEmailFieldNumber = 35;
    private string assistantEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssistantEmail {
      get { return assistantEmail_; }
      set {
        assistantEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewMemberStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewMemberStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if (SourcePK != other.SourcePK) return false;
      if (MemNameCn != other.MemNameCn) return false;
      if (MemNameEn != other.MemNameEn) return false;
      if (MemEmail != other.MemEmail) return false;
      if (MemPassword != other.MemPassword) return false;
      if (MemType != other.MemType) return false;
      if (MemGender != other.MemGender) return false;
      if (MemDepartment != other.MemDepartment) return false;
      if (MemTitle != other.MemTitle) return false;
      if (MemPosition != other.MemPosition) return false;
      if (MemProTitle != other.MemProTitle) return false;
      if (MemQQ != other.MemQQ) return false;
      if (MemFax != other.MemFax) return false;
      if (MemMSN != other.MemMSN) return false;
      if (MemMobile != other.MemMobile) return false;
      if (MemTel != other.MemTel) return false;
      if (MemPostCode != other.MemPostCode) return false;
      if (MemLastLoginTime != other.MemLastLoginTime) return false;
      if (MemAddress != other.MemAddress) return false;
      if (MemAddressDetail != other.MemAddressDetail) return false;
      if (MemIsDelete != other.MemIsDelete) return false;
      if (MemIsActivation != other.MemIsActivation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (CompanyPK != other.CompanyPK) return false;
      if (MemCountryNameCn != other.MemCountryNameCn) return false;
      if (MemCountryNameEn != other.MemCountryNameEn) return false;
      if (MemCompany != other.MemCompany) return false;
      if (AssistantName != other.AssistantName) return false;
      if (AssistantPosition != other.AssistantPosition) return false;
      if (AssistantMobile != other.AssistantMobile) return false;
      if (AssistantEmail != other.AssistantEmail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SourcePK.Length != 0) hash ^= SourcePK.GetHashCode();
      if (MemNameCn.Length != 0) hash ^= MemNameCn.GetHashCode();
      if (MemNameEn.Length != 0) hash ^= MemNameEn.GetHashCode();
      if (MemEmail.Length != 0) hash ^= MemEmail.GetHashCode();
      if (MemPassword.Length != 0) hash ^= MemPassword.GetHashCode();
      if (MemType.Length != 0) hash ^= MemType.GetHashCode();
      if (MemGender.Length != 0) hash ^= MemGender.GetHashCode();
      if (MemDepartment.Length != 0) hash ^= MemDepartment.GetHashCode();
      if (MemTitle.Length != 0) hash ^= MemTitle.GetHashCode();
      if (MemPosition.Length != 0) hash ^= MemPosition.GetHashCode();
      if (MemProTitle.Length != 0) hash ^= MemProTitle.GetHashCode();
      if (MemQQ.Length != 0) hash ^= MemQQ.GetHashCode();
      if (MemFax.Length != 0) hash ^= MemFax.GetHashCode();
      if (MemMSN.Length != 0) hash ^= MemMSN.GetHashCode();
      if (MemMobile.Length != 0) hash ^= MemMobile.GetHashCode();
      if (MemTel.Length != 0) hash ^= MemTel.GetHashCode();
      if (MemPostCode.Length != 0) hash ^= MemPostCode.GetHashCode();
      if (MemLastLoginTime.Length != 0) hash ^= MemLastLoginTime.GetHashCode();
      if (MemAddress.Length != 0) hash ^= MemAddress.GetHashCode();
      if (MemAddressDetail.Length != 0) hash ^= MemAddressDetail.GetHashCode();
      if (MemIsDelete != false) hash ^= MemIsDelete.GetHashCode();
      if (MemIsActivation != false) hash ^= MemIsActivation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (CompanyPK.Length != 0) hash ^= CompanyPK.GetHashCode();
      if (MemCountryNameCn.Length != 0) hash ^= MemCountryNameCn.GetHashCode();
      if (MemCountryNameEn.Length != 0) hash ^= MemCountryNameEn.GetHashCode();
      if (MemCompany.Length != 0) hash ^= MemCompany.GetHashCode();
      if (AssistantName.Length != 0) hash ^= AssistantName.GetHashCode();
      if (AssistantPosition.Length != 0) hash ^= AssistantPosition.GetHashCode();
      if (AssistantMobile.Length != 0) hash ^= AssistantMobile.GetHashCode();
      if (AssistantEmail.Length != 0) hash ^= AssistantEmail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      if (SourcePK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MemEmail);
      }
      if (MemPassword.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MemPassword);
      }
      if (MemType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MemType);
      }
      if (MemGender.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemGender);
      }
      if (MemDepartment.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(MemTitle);
      }
      if (MemPosition.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MemQQ);
      }
      if (MemFax.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MemFax);
      }
      if (MemMSN.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(MemMSN);
      }
      if (MemMobile.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MemMobile);
      }
      if (MemTel.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(MemTel);
      }
      if (MemPostCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(MemAddressDetail);
      }
      if (MemIsDelete != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(MemIsDelete);
      }
      if (MemIsActivation != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(MemIsActivation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ModefieldBy);
      }
      if (CompanyPK.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(CompanyPK);
      }
      if (MemCountryNameCn.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(MemCompany);
      }
      if (AssistantName.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        output.WriteRawTag(138, 2);
        output.WriteString(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        output.WriteRawTag(154, 2);
        output.WriteString(AssistantEmail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SourcePK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourcePK);
      }
      if (MemNameCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameCn);
      }
      if (MemNameEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemNameEn);
      }
      if (MemEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemEmail);
      }
      if (MemPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPassword);
      }
      if (MemType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemType);
      }
      if (MemGender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemGender);
      }
      if (MemDepartment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemDepartment);
      }
      if (MemTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTitle);
      }
      if (MemPosition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemPosition);
      }
      if (MemProTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemProTitle);
      }
      if (MemQQ.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemQQ);
      }
      if (MemFax.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemFax);
      }
      if (MemMSN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemMSN);
      }
      if (MemMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemMobile);
      }
      if (MemTel.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemTel);
      }
      if (MemPostCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemPostCode);
      }
      if (MemLastLoginTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemLastLoginTime);
      }
      if (MemAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddress);
      }
      if (MemAddressDetail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemAddressDetail);
      }
      if (MemIsDelete != false) {
        size += 2 + 1;
      }
      if (MemIsActivation != false) {
        size += 2 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (CompanyPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyPK);
      }
      if (MemCountryNameCn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameCn);
      }
      if (MemCountryNameEn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCountryNameEn);
      }
      if (MemCompany.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemCompany);
      }
      if (AssistantName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantName);
      }
      if (AssistantPosition.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantPosition);
      }
      if (AssistantMobile.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantMobile);
      }
      if (AssistantEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AssistantEmail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewMemberStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SourcePK.Length != 0) {
        SourcePK = other.SourcePK;
      }
      if (other.MemNameCn.Length != 0) {
        MemNameCn = other.MemNameCn;
      }
      if (other.MemNameEn.Length != 0) {
        MemNameEn = other.MemNameEn;
      }
      if (other.MemEmail.Length != 0) {
        MemEmail = other.MemEmail;
      }
      if (other.MemPassword.Length != 0) {
        MemPassword = other.MemPassword;
      }
      if (other.MemType.Length != 0) {
        MemType = other.MemType;
      }
      if (other.MemGender.Length != 0) {
        MemGender = other.MemGender;
      }
      if (other.MemDepartment.Length != 0) {
        MemDepartment = other.MemDepartment;
      }
      if (other.MemTitle.Length != 0) {
        MemTitle = other.MemTitle;
      }
      if (other.MemPosition.Length != 0) {
        MemPosition = other.MemPosition;
      }
      if (other.MemProTitle.Length != 0) {
        MemProTitle = other.MemProTitle;
      }
      if (other.MemQQ.Length != 0) {
        MemQQ = other.MemQQ;
      }
      if (other.MemFax.Length != 0) {
        MemFax = other.MemFax;
      }
      if (other.MemMSN.Length != 0) {
        MemMSN = other.MemMSN;
      }
      if (other.MemMobile.Length != 0) {
        MemMobile = other.MemMobile;
      }
      if (other.MemTel.Length != 0) {
        MemTel = other.MemTel;
      }
      if (other.MemPostCode.Length != 0) {
        MemPostCode = other.MemPostCode;
      }
      if (other.MemLastLoginTime.Length != 0) {
        MemLastLoginTime = other.MemLastLoginTime;
      }
      if (other.MemAddress.Length != 0) {
        MemAddress = other.MemAddress;
      }
      if (other.MemAddressDetail.Length != 0) {
        MemAddressDetail = other.MemAddressDetail;
      }
      if (other.MemIsDelete != false) {
        MemIsDelete = other.MemIsDelete;
      }
      if (other.MemIsActivation != false) {
        MemIsActivation = other.MemIsActivation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.CompanyPK.Length != 0) {
        CompanyPK = other.CompanyPK;
      }
      if (other.MemCountryNameCn.Length != 0) {
        MemCountryNameCn = other.MemCountryNameCn;
      }
      if (other.MemCountryNameEn.Length != 0) {
        MemCountryNameEn = other.MemCountryNameEn;
      }
      if (other.MemCompany.Length != 0) {
        MemCompany = other.MemCompany;
      }
      if (other.AssistantName.Length != 0) {
        AssistantName = other.AssistantName;
      }
      if (other.AssistantPosition.Length != 0) {
        AssistantPosition = other.AssistantPosition;
      }
      if (other.AssistantMobile.Length != 0) {
        AssistantMobile = other.AssistantMobile;
      }
      if (other.AssistantEmail.Length != 0) {
        AssistantEmail = other.AssistantEmail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            SourcePK = input.ReadString();
            break;
          }
          case 26: {
            MemNameCn = input.ReadString();
            break;
          }
          case 34: {
            MemNameEn = input.ReadString();
            break;
          }
          case 42: {
            MemEmail = input.ReadString();
            break;
          }
          case 50: {
            MemPassword = input.ReadString();
            break;
          }
          case 58: {
            MemType = input.ReadString();
            break;
          }
          case 66: {
            MemGender = input.ReadString();
            break;
          }
          case 74: {
            MemDepartment = input.ReadString();
            break;
          }
          case 82: {
            MemTitle = input.ReadString();
            break;
          }
          case 90: {
            MemPosition = input.ReadString();
            break;
          }
          case 98: {
            MemProTitle = input.ReadString();
            break;
          }
          case 106: {
            MemQQ = input.ReadString();
            break;
          }
          case 114: {
            MemFax = input.ReadString();
            break;
          }
          case 122: {
            MemMSN = input.ReadString();
            break;
          }
          case 130: {
            MemMobile = input.ReadString();
            break;
          }
          case 138: {
            MemTel = input.ReadString();
            break;
          }
          case 146: {
            MemPostCode = input.ReadString();
            break;
          }
          case 154: {
            MemLastLoginTime = input.ReadString();
            break;
          }
          case 162: {
            MemAddress = input.ReadString();
            break;
          }
          case 170: {
            MemAddressDetail = input.ReadString();
            break;
          }
          case 176: {
            MemIsDelete = input.ReadBool();
            break;
          }
          case 184: {
            MemIsActivation = input.ReadBool();
            break;
          }
          case 194: {
            CreatedOn = input.ReadString();
            break;
          }
          case 202: {
            CreatedBy = input.ReadString();
            break;
          }
          case 210: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 218: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 226: {
            CompanyPK = input.ReadString();
            break;
          }
          case 234: {
            MemCountryNameCn = input.ReadString();
            break;
          }
          case 242: {
            MemCountryNameEn = input.ReadString();
            break;
          }
          case 250: {
            MemCompany = input.ReadString();
            break;
          }
          case 258: {
            AssistantName = input.ReadString();
            break;
          }
          case 266: {
            AssistantPosition = input.ReadString();
            break;
          }
          case 274: {
            AssistantMobile = input.ReadString();
            break;
          }
          case 282: {
            AssistantEmail = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewParticipantStruct : pb::IMessage<NewParticipantStruct> {
    private static readonly pb::MessageParser<NewParticipantStruct> _parser = new pb::MessageParser<NewParticipantStruct>(() => new NewParticipantStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewParticipantStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantStruct(NewParticipantStruct other) : this() {
      participantID_ = other.participantID_;
      participantNameTranslation_ = other.participantNameTranslation_;
      iMGSRC_ = other.iMGSRC_;
      companyTranslation_ = other.companyTranslation_;
      jobTranslation_ = other.jobTranslation_;
      countryTranslation_ = other.countryTranslation_;
      email_ = other.email_;
      mobile_ = other.mobile_;
      introduceTranslation_ = other.introduceTranslation_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      personContractID_ = other.personContractID_;
      perContractNumber_ = other.perContractNumber_;
      isDelete_ = other.isDelete_;
      sort_ = other.sort_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      appellationTranslation_ = other.appellationTranslation_;
      companyId_ = other.companyId_;
      confirmPPT_ = other.confirmPPT_;
      memberPK_ = other.memberPK_;
      showOnFont_ = other.showOnFont_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantStruct Clone() {
      return new NewParticipantStruct(this);
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 1;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 2;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IMGSRC" field.</summary>
    public const int IMGSRCFieldNumber = 3;
    private string iMGSRC_ = "";
    /// <summary>
    ///头像路劲
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IMGSRC {
      get { return iMGSRC_; }
      set {
        iMGSRC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 4;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 5;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 6;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 7;
    private string email_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 8;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IntroduceTranslation" field.</summary>
    public const int IntroduceTranslationFieldNumber = 9;
    private string introduceTranslation_ = "";
    /// <summary>
    ///简介
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IntroduceTranslation {
      get { return introduceTranslation_; }
      set {
        introduceTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 10;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 11;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 12;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 13;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractID" field.</summary>
    public const int PersonContractIDFieldNumber = 14;
    private string personContractID_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractID {
      get { return personContractID_; }
      set {
        personContractID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 15;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 16;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 17;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 18;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 19;
    private string ower_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 20;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 21;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfirmPPT" field.</summary>
    public const int ConfirmPPTFieldNumber = 22;
    private bool confirmPPT_;
    /// <summary>
    ///是否提交ppt
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ConfirmPPT {
      get { return confirmPPT_; }
      set {
        confirmPPT_ = value;
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 23;
    private string memberPK_ = "";
    /// <summary>
    ///人员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ShowOnFont" field.</summary>
    public const int ShowOnFontFieldNumber = 24;
    private int showOnFont_;
    /// <summary>
    ///受否前台显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowOnFont {
      get { return showOnFont_; }
      set {
        showOnFont_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 25;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewParticipantStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewParticipantStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantID != other.ParticipantID) return false;
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (IMGSRC != other.IMGSRC) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (Email != other.Email) return false;
      if (Mobile != other.Mobile) return false;
      if (IntroduceTranslation != other.IntroduceTranslation) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (PersonContractID != other.PersonContractID) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (IsDelete != other.IsDelete) return false;
      if (Sort != other.Sort) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ConfirmPPT != other.ConfirmPPT) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ShowOnFont != other.ShowOnFont) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (IMGSRC.Length != 0) hash ^= IMGSRC.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (IntroduceTranslation.Length != 0) hash ^= IntroduceTranslation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (PersonContractID.Length != 0) hash ^= PersonContractID.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ConfirmPPT != false) hash ^= ConfirmPPT.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ShowOnFont != 0) hash ^= ShowOnFont.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantID);
      }
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantNameTranslation);
      }
      if (IMGSRC.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IMGSRC);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CountryTranslation);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Email);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Mobile);
      }
      if (IntroduceTranslation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(IntroduceTranslation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedBy);
      }
      if (PersonContractID.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PersonContractID);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(PerContractNumber);
      }
      if (IsDelete != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsDelete);
      }
      if (Sort != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Sort);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Ower);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(AppellationTranslation);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CompanyId);
      }
      if (ConfirmPPT != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(ConfirmPPT);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(MemberPK);
      }
      if (ShowOnFont != 0) {
        output.WriteRawTag(192, 1);
        output.WriteInt32(ShowOnFont);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (IMGSRC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IMGSRC);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (IntroduceTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntroduceTranslation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (PersonContractID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractID);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (IsDelete != false) {
        size += 2 + 1;
      }
      if (Sort != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (AppellationTranslation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (CompanyId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ConfirmPPT != false) {
        size += 2 + 1;
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ShowOnFont != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ShowOnFont);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewParticipantStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.IMGSRC.Length != 0) {
        IMGSRC = other.IMGSRC;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      if (other.IntroduceTranslation.Length != 0) {
        IntroduceTranslation = other.IntroduceTranslation;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.PersonContractID.Length != 0) {
        PersonContractID = other.PersonContractID;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ConfirmPPT != false) {
        ConfirmPPT = other.ConfirmPPT;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ShowOnFont != 0) {
        ShowOnFont = other.ShowOnFont;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantID = input.ReadString();
            break;
          }
          case 18: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 26: {
            IMGSRC = input.ReadString();
            break;
          }
          case 34: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 42: {
            JobTranslation = input.ReadString();
            break;
          }
          case 50: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 58: {
            Email = input.ReadString();
            break;
          }
          case 66: {
            Mobile = input.ReadString();
            break;
          }
          case 74: {
            IntroduceTranslation = input.ReadString();
            break;
          }
          case 82: {
            CreatedOn = input.ReadString();
            break;
          }
          case 90: {
            CreatedBy = input.ReadString();
            break;
          }
          case 98: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 106: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 114: {
            PersonContractID = input.ReadString();
            break;
          }
          case 122: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 128: {
            IsDelete = input.ReadBool();
            break;
          }
          case 136: {
            Sort = input.ReadInt32();
            break;
          }
          case 146: {
            Owerid = input.ReadString();
            break;
          }
          case 154: {
            Ower = input.ReadString();
            break;
          }
          case 162: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 170: {
            CompanyId = input.ReadString();
            break;
          }
          case 176: {
            ConfirmPPT = input.ReadBool();
            break;
          }
          case 186: {
            MemberPK = input.ReadString();
            break;
          }
          case 192: {
            ShowOnFont = input.ReadInt32();
            break;
          }
          case 202: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewActivityStruct1 : pb::IMessage<NewActivityStruct1> {
    private static readonly pb::MessageParser<NewActivityStruct1> _parser = new pb::MessageParser<NewActivityStruct1>(() => new NewActivityStruct1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewActivityStruct1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct1(NewActivityStruct1 other) : this() {
      activityID_ = other.activityID_;
      conferenceID_ = other.conferenceID_;
      activityTypeID_ = other.activityTypeID_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startDate_ = other.startDate_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewActivityStruct1 Clone() {
      return new NewActivityStruct1(this);
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 1;
    private string activityID_ = "";
    /// <summary>
    ///活动主键id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    /// <summary>
    ///会议id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityTypeID" field.</summary>
    public const int ActivityTypeIDFieldNumber = 3;
    private string activityTypeID_ = "";
    /// <summary>
    ///活动类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTypeID {
      get { return activityTypeID_; }
      set {
        activityTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 4;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 6;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 7;
    private global::GrpcConferenceContractServiceNew.Translation translation_;
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 10;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 11;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 12;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 13;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewActivityStruct1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewActivityStruct1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityID != other.ActivityID) return false;
      if (ConferenceID != other.ConferenceID) return false;
      if (ActivityTypeID != other.ActivityTypeID) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartDate != other.StartDate) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (ActivityTypeID.Length != 0) hash ^= ActivityTypeID.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityID);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (ActivityTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartDate);
      }
      if (translation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModifiedBy);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (ActivityTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTypeID);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewActivityStruct1 other) {
      if (other == null) {
        return;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.ActivityTypeID.Length != 0) {
        ActivityTypeID = other.ActivityTypeID;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityID = input.ReadString();
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
          case 26: {
            ActivityTypeID = input.ReadString();
            break;
          }
          case 34: {
            TimeLength = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            StartDate = input.ReadString();
            break;
          }
          case 58: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 90: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 98: {
            StartTime = input.ReadString();
            break;
          }
          case 106: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewTalkStruct : pb::IMessage<NewTalkStruct> {
    private static readonly pb::MessageParser<NewTalkStruct> _parser = new pb::MessageParser<NewTalkStruct>(() => new NewTalkStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewTalkStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkStruct(NewTalkStruct other) : this() {
      talkID_ = other.talkID_;
      activityID_ = other.activityID_;
      talkTypeID_ = other.talkTypeID_;
      cFTopicPK_ = other.cFTopicPK_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      startDate_ = other.startDate_;
      timeLength_ = other.timeLength_;
      sort_ = other.sort_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      cFTopicName_ = other.cFTopicName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewTalkStruct Clone() {
      return new NewTalkStruct(this);
    }

    /// <summary>Field number for the "TalkID" field.</summary>
    public const int TalkIDFieldNumber = 1;
    private string talkID_ = "";
    /// <summary>
    ///板块id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkID {
      get { return talkID_; }
      set {
        talkID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityID" field.</summary>
    public const int ActivityIDFieldNumber = 2;
    private string activityID_ = "";
    /// <summary>
    ///活动id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityID {
      get { return activityID_; }
      set {
        activityID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkTypeID" field.</summary>
    public const int TalkTypeIDFieldNumber = 3;
    private string talkTypeID_ = "";
    /// <summary>
    ///板块类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkTypeID {
      get { return talkTypeID_; }
      set {
        talkTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicPK" field.</summary>
    public const int CFTopicPKFieldNumber = 4;
    private string cFTopicPK_ = "";
    /// <summary>
    ///议题id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicPK {
      get { return cFTopicPK_; }
      set {
        cFTopicPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 6;
    private global::GrpcConferenceContractServiceNew.Translation translation_;
    /// <summary>
    ///板块名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.Translation Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 9;
    private string modifiedOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartDate" field.</summary>
    public const int StartDateFieldNumber = 11;
    private string startDate_ = "";
    /// <summary>
    ///开始日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 12;
    private string timeLength_ = "";
    /// <summary>
    ///时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 13;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 14;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 15;
    private string endTime_ = "";
    /// <summary>
    ///结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CFTopicName" field.</summary>
    public const int CFTopicNameFieldNumber = 16;
    private string cFTopicName_ = "";
    /// <summary>
    ///议题名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CFTopicName {
      get { return cFTopicName_; }
      set {
        cFTopicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewTalkStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewTalkStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TalkID != other.TalkID) return false;
      if (ActivityID != other.ActivityID) return false;
      if (TalkTypeID != other.TalkTypeID) return false;
      if (CFTopicPK != other.CFTopicPK) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (StartDate != other.StartDate) return false;
      if (TimeLength != other.TimeLength) return false;
      if (Sort != other.Sort) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (CFTopicName != other.CFTopicName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TalkID.Length != 0) hash ^= TalkID.GetHashCode();
      if (ActivityID.Length != 0) hash ^= ActivityID.GetHashCode();
      if (TalkTypeID.Length != 0) hash ^= TalkTypeID.GetHashCode();
      if (CFTopicPK.Length != 0) hash ^= CFTopicPK.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (TimeLength.Length != 0) hash ^= TimeLength.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (CFTopicName.Length != 0) hash ^= CFTopicName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TalkID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TalkID);
      }
      if (ActivityID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ActivityID);
      }
      if (TalkTypeID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CFTopicPK);
      }
      if (translation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Translation);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (StartDate.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StartDate);
      }
      if (TimeLength.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(TimeLength);
      }
      if (Sort != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Sort);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(EndTime);
      }
      if (CFTopicName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CFTopicName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TalkID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkID);
      }
      if (ActivityID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityID);
      }
      if (TalkTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkTypeID);
      }
      if (CFTopicPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CFTopicPK);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (TimeLength.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeLength);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (CFTopicName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CFTopicName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewTalkStruct other) {
      if (other == null) {
        return;
      }
      if (other.TalkID.Length != 0) {
        TalkID = other.TalkID;
      }
      if (other.ActivityID.Length != 0) {
        ActivityID = other.ActivityID;
      }
      if (other.TalkTypeID.Length != 0) {
        TalkTypeID = other.TalkTypeID;
      }
      if (other.CFTopicPK.Length != 0) {
        CFTopicPK = other.CFTopicPK;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractServiceNew.Translation();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.TimeLength.Length != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.CFTopicName.Length != 0) {
        CFTopicName = other.CFTopicName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TalkID = input.ReadString();
            break;
          }
          case 18: {
            ActivityID = input.ReadString();
            break;
          }
          case 26: {
            TalkTypeID = input.ReadString();
            break;
          }
          case 34: {
            CFTopicPK = input.ReadString();
            break;
          }
          case 50: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractServiceNew.Translation();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            StartDate = input.ReadString();
            break;
          }
          case 98: {
            TimeLength = input.ReadString();
            break;
          }
          case 104: {
            Sort = input.ReadInt32();
            break;
          }
          case 114: {
            StartTime = input.ReadString();
            break;
          }
          case 122: {
            EndTime = input.ReadString();
            break;
          }
          case 130: {
            CFTopicName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewParticipantInfoStruct : pb::IMessage<NewParticipantInfoStruct> {
    private static readonly pb::MessageParser<NewParticipantInfoStruct> _parser = new pb::MessageParser<NewParticipantInfoStruct>(() => new NewParticipantInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewParticipantInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantInfoStruct(NewParticipantInfoStruct other) : this() {
      participantNameTranslation_ = other.participantNameTranslation_;
      companyTranslation_ = other.companyTranslation_;
      jobTranslation_ = other.jobTranslation_;
      countryTranslation_ = other.countryTranslation_;
      appellationTranslation_ = other.appellationTranslation_;
      participantTypeTranslation_ = other.participantTypeTranslation_;
      participantID_ = other.participantID_;
      participantTypeID_ = other.participantTypeID_;
      eMail_ = other.eMail_;
      mobile_ = other.mobile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewParticipantInfoStruct Clone() {
      return new NewParticipantInfoStruct(this);
    }

    /// <summary>Field number for the "ParticipantNameTranslation" field.</summary>
    public const int ParticipantNameTranslationFieldNumber = 1;
    private string participantNameTranslation_ = "";
    /// <summary>
    ///嘉宾名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantNameTranslation {
      get { return participantNameTranslation_; }
      set {
        participantNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyTranslation" field.</summary>
    public const int CompanyTranslationFieldNumber = 2;
    private string companyTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyTranslation {
      get { return companyTranslation_; }
      set {
        companyTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JobTranslation" field.</summary>
    public const int JobTranslationFieldNumber = 3;
    private string jobTranslation_ = "";
    /// <summary>
    ///职称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTranslation {
      get { return jobTranslation_; }
      set {
        jobTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CountryTranslation" field.</summary>
    public const int CountryTranslationFieldNumber = 4;
    private string countryTranslation_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryTranslation {
      get { return countryTranslation_; }
      set {
        countryTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AppellationTranslation" field.</summary>
    public const int AppellationTranslationFieldNumber = 5;
    private string appellationTranslation_ = "";
    /// <summary>
    ///称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppellationTranslation {
      get { return appellationTranslation_; }
      set {
        appellationTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeTranslation" field.</summary>
    public const int ParticipantTypeTranslationFieldNumber = 6;
    private string participantTypeTranslation_ = "";
    /// <summary>
    ///嘉宾类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeTranslation {
      get { return participantTypeTranslation_; }
      set {
        participantTypeTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantID" field.</summary>
    public const int ParticipantIDFieldNumber = 7;
    private string participantID_ = "";
    /// <summary>
    ///嘉宾id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantID {
      get { return participantID_; }
      set {
        participantID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTypeID" field.</summary>
    public const int ParticipantTypeIDFieldNumber = 8;
    private string participantTypeID_ = "";
    /// <summary>
    ///嘉宾类型id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTypeID {
      get { return participantTypeID_; }
      set {
        participantTypeID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EMail" field.</summary>
    public const int EMailFieldNumber = 9;
    private string eMail_ = "";
    /// <summary>
    ///邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EMail {
      get { return eMail_; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Mobile" field.</summary>
    public const int MobileFieldNumber = 10;
    private string mobile_ = "";
    /// <summary>
    ///手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mobile {
      get { return mobile_; }
      set {
        mobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewParticipantInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewParticipantInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantNameTranslation != other.ParticipantNameTranslation) return false;
      if (CompanyTranslation != other.CompanyTranslation) return false;
      if (JobTranslation != other.JobTranslation) return false;
      if (CountryTranslation != other.CountryTranslation) return false;
      if (AppellationTranslation != other.AppellationTranslation) return false;
      if (ParticipantTypeTranslation != other.ParticipantTypeTranslation) return false;
      if (ParticipantID != other.ParticipantID) return false;
      if (ParticipantTypeID != other.ParticipantTypeID) return false;
      if (EMail != other.EMail) return false;
      if (Mobile != other.Mobile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantNameTranslation.Length != 0) hash ^= ParticipantNameTranslation.GetHashCode();
      if (CompanyTranslation.Length != 0) hash ^= CompanyTranslation.GetHashCode();
      if (JobTranslation.Length != 0) hash ^= JobTranslation.GetHashCode();
      if (CountryTranslation.Length != 0) hash ^= CountryTranslation.GetHashCode();
      if (AppellationTranslation.Length != 0) hash ^= AppellationTranslation.GetHashCode();
      if (ParticipantTypeTranslation.Length != 0) hash ^= ParticipantTypeTranslation.GetHashCode();
      if (ParticipantID.Length != 0) hash ^= ParticipantID.GetHashCode();
      if (ParticipantTypeID.Length != 0) hash ^= ParticipantTypeID.GetHashCode();
      if (EMail.Length != 0) hash ^= EMail.GetHashCode();
      if (Mobile.Length != 0) hash ^= Mobile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantNameTranslation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantNameTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CountryTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AppellationTranslation);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantTypeTranslation);
      }
      if (ParticipantID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParticipantID);
      }
      if (ParticipantTypeID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ParticipantTypeID);
      }
      if (EMail.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(EMail);
      }
      if (Mobile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Mobile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantNameTranslation);
      }
      if (CompanyTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyTranslation);
      }
      if (JobTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTranslation);
      }
      if (CountryTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryTranslation);
      }
      if (AppellationTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppellationTranslation);
      }
      if (ParticipantTypeTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeTranslation);
      }
      if (ParticipantID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantID);
      }
      if (ParticipantTypeID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTypeID);
      }
      if (EMail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (Mobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mobile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewParticipantInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantNameTranslation.Length != 0) {
        ParticipantNameTranslation = other.ParticipantNameTranslation;
      }
      if (other.CompanyTranslation.Length != 0) {
        CompanyTranslation = other.CompanyTranslation;
      }
      if (other.JobTranslation.Length != 0) {
        JobTranslation = other.JobTranslation;
      }
      if (other.CountryTranslation.Length != 0) {
        CountryTranslation = other.CountryTranslation;
      }
      if (other.AppellationTranslation.Length != 0) {
        AppellationTranslation = other.AppellationTranslation;
      }
      if (other.ParticipantTypeTranslation.Length != 0) {
        ParticipantTypeTranslation = other.ParticipantTypeTranslation;
      }
      if (other.ParticipantID.Length != 0) {
        ParticipantID = other.ParticipantID;
      }
      if (other.ParticipantTypeID.Length != 0) {
        ParticipantTypeID = other.ParticipantTypeID;
      }
      if (other.EMail.Length != 0) {
        EMail = other.EMail;
      }
      if (other.Mobile.Length != 0) {
        Mobile = other.Mobile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantNameTranslation = input.ReadString();
            break;
          }
          case 18: {
            CompanyTranslation = input.ReadString();
            break;
          }
          case 26: {
            JobTranslation = input.ReadString();
            break;
          }
          case 34: {
            CountryTranslation = input.ReadString();
            break;
          }
          case 42: {
            AppellationTranslation = input.ReadString();
            break;
          }
          case 50: {
            ParticipantTypeTranslation = input.ReadString();
            break;
          }
          case 58: {
            ParticipantID = input.ReadString();
            break;
          }
          case 66: {
            ParticipantTypeID = input.ReadString();
            break;
          }
          case 74: {
            EMail = input.ReadString();
            break;
          }
          case 82: {
            Mobile = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class modifyResponseNew : pb::IMessage<modifyResponseNew> {
    private static readonly pb::MessageParser<modifyResponseNew> _parser = new pb::MessageParser<modifyResponseNew>(() => new modifyResponseNew());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<modifyResponseNew> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponseNew() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponseNew(modifyResponseNew other) : this() {
      isSuccess_ = other.isSuccess_;
      msg_ = other.msg_;
      total_ = other.total_;
      companyContractId_ = other.companyContractId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public modifyResponseNew Clone() {
      return new modifyResponseNew(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 3;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "companyContractId" field.</summary>
    public const int CompanyContractIdFieldNumber = 4;
    private string companyContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyContractId {
      get { return companyContractId_; }
      set {
        companyContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as modifyResponseNew);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(modifyResponseNew other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Msg != other.Msg) return false;
      if (Total != other.Total) return false;
      if (CompanyContractId != other.CompanyContractId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (CompanyContractId.Length != 0) hash ^= CompanyContractId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (Total != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Total);
      }
      if (CompanyContractId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyContractId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (CompanyContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyContractId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(modifyResponseNew other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.CompanyContractId.Length != 0) {
        CompanyContractId = other.CompanyContractId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
          case 24: {
            Total = input.ReadInt32();
            break;
          }
          case 34: {
            CompanyContractId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetCompanyNoticeOfReportByContractNumberResponse : pb::IMessage<newGetCompanyNoticeOfReportByContractNumberResponse> {
    private static readonly pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberResponse> _parser = new pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberResponse>(() => new newGetCompanyNoticeOfReportByContractNumberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetCompanyNoticeOfReportByContractNumberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberResponse(newGetCompanyNoticeOfReportByContractNumberResponse other) : this() {
      conferenceStructListdata_ = other.conferenceStructListdata_.Clone();
      cFAddressStructListdata_ = other.cFAddressStructListdata_.Clone();
      applyConferenceStructListdata_ = other.applyConferenceStructListdata_.Clone();
      companyContractStructListdata_ = other.companyContractStructListdata_.Clone();
      companyServicePackStructListdata_ = other.companyServicePackStructListdata_.Clone();
      servicepackListdata_ = other.servicepackListdata_.Clone();
      activityListdata_ = other.activityListdata_.Clone();
      companyStructListdata_ = other.companyStructListdata_.Clone();
      memberStructListdata_ = other.memberStructListdata_.Clone();
      participantStructListdata_ = other.participantStructListdata_.Clone();
      activityStructList_ = other.activityStructList_.Clone();
      participantInfoStructList_ = other.participantInfoStructList_.Clone();
      talkStructList_ = other.talkStructList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetCompanyNoticeOfReportByContractNumberResponse Clone() {
      return new newGetCompanyNoticeOfReportByContractNumberResponse(this);
    }

    /// <summary>Field number for the "ConferenceStructListdata" field.</summary>
    public const int ConferenceStructListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewConferenceStruct> _repeated_conferenceStructListdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.NewConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewConferenceStruct> conferenceStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewConferenceStruct>();
    /// <summary>
    ///会议集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewConferenceStruct> ConferenceStructListdata {
      get { return conferenceStructListdata_; }
    }

    /// <summary>Field number for the "CFAddressStructListdata" field.</summary>
    public const int CFAddressStructListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewCFAddressStruct> _repeated_cFAddressStructListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractServiceNew.NewCFAddressStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCFAddressStruct> cFAddressStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCFAddressStruct>();
    /// <summary>
    ///会议地点集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCFAddressStruct> CFAddressStructListdata {
      get { return cFAddressStructListdata_; }
    }

    /// <summary>Field number for the "ApplyConferenceStructListdata" field.</summary>
    public const int ApplyConferenceStructListdataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct> _repeated_applyConferenceStructListdata_codec
        = pb::FieldCodec.ForMessage(26, global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct> applyConferenceStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewApplyConferenceStruct> ApplyConferenceStructListdata {
      get { return applyConferenceStructListdata_; }
    }

    /// <summary>Field number for the "CompanyContractStructListdata" field.</summary>
    public const int CompanyContractStructListdataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewCompanyContractStruct> _repeated_companyContractStructListdata_codec
        = pb::FieldCodec.ForMessage(34, global::GrpcConferenceContractServiceNew.NewCompanyContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyContractStruct> companyContractStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyContractStruct> CompanyContractStructListdata {
      get { return companyContractStructListdata_; }
    }

    /// <summary>Field number for the "CompanyServicePackStructListdata" field.</summary>
    public const int CompanyServicePackStructListdataFieldNumber = 5;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct> _repeated_companyServicePackStructListdata_codec
        = pb::FieldCodec.ForMessage(42, global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct> companyServicePackStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct>();
    /// <summary>
    ///公司套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyServicePackStruct> CompanyServicePackStructListdata {
      get { return companyServicePackStructListdata_; }
    }

    /// <summary>Field number for the "servicepack_listdata" field.</summary>
    public const int ServicepackListdataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewServicePackStruct> _repeated_servicepackListdata_codec
        = pb::FieldCodec.ForMessage(50, global::GrpcConferenceContractServiceNew.NewServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewServicePackStruct> servicepackListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewServicePackStruct>();
    /// <summary>
    ///子套餐列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewServicePackStruct> ServicepackListdata {
      get { return servicepackListdata_; }
    }

    /// <summary>Field number for the "activity_listdata" field.</summary>
    public const int ActivityListdataFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewActivityStruct1> _repeated_activityListdata_codec
        = pb::FieldCodec.ForMessage(58, global::GrpcConferenceContractServiceNew.NewActivityStruct1.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct1> activityListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct1>();
    /// <summary>
    ///Activity列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct1> ActivityListdata {
      get { return activityListdata_; }
    }

    /// <summary>Field number for the "CompanyStructListdata" field.</summary>
    public const int CompanyStructListdataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewCompanyStruct> _repeated_companyStructListdata_codec
        = pb::FieldCodec.ForMessage(66, global::GrpcConferenceContractServiceNew.NewCompanyStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyStruct> companyStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewCompanyStruct> CompanyStructListdata {
      get { return companyStructListdata_; }
    }

    /// <summary>Field number for the "MemberStructListdata" field.</summary>
    public const int MemberStructListdataFieldNumber = 9;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewMemberStruct> _repeated_memberStructListdata_codec
        = pb::FieldCodec.ForMessage(74, global::GrpcConferenceContractServiceNew.NewMemberStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewMemberStruct> memberStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewMemberStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewMemberStruct> MemberStructListdata {
      get { return memberStructListdata_; }
    }

    /// <summary>Field number for the "ParticipantStructListdata" field.</summary>
    public const int ParticipantStructListdataFieldNumber = 10;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewParticipantStruct> _repeated_participantStructListdata_codec
        = pb::FieldCodec.ForMessage(82, global::GrpcConferenceContractServiceNew.NewParticipantStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantStruct> participantStructListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantStruct> ParticipantStructListdata {
      get { return participantStructListdata_; }
    }

    /// <summary>Field number for the "ActivityStructList" field.</summary>
    public const int ActivityStructListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewActivityStruct> _repeated_activityStructList_codec
        = pb::FieldCodec.ForMessage(90, global::GrpcConferenceContractServiceNew.NewActivityStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct> activityStructList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewActivityStruct> ActivityStructList {
      get { return activityStructList_; }
    }

    /// <summary>Field number for the "ParticipantInfoStructList" field.</summary>
    public const int ParticipantInfoStructListFieldNumber = 12;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct> _repeated_participantInfoStructList_codec
        = pb::FieldCodec.ForMessage(98, global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct> participantInfoStructList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewParticipantInfoStruct> ParticipantInfoStructList {
      get { return participantInfoStructList_; }
    }

    /// <summary>Field number for the "TalkStructList" field.</summary>
    public const int TalkStructListFieldNumber = 13;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.NewTalkStruct> _repeated_talkStructList_codec
        = pb::FieldCodec.ForMessage(106, global::GrpcConferenceContractServiceNew.NewTalkStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkStruct> talkStructList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.NewTalkStruct> TalkStructList {
      get { return talkStructList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetCompanyNoticeOfReportByContractNumberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetCompanyNoticeOfReportByContractNumberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!conferenceStructListdata_.Equals(other.conferenceStructListdata_)) return false;
      if(!cFAddressStructListdata_.Equals(other.cFAddressStructListdata_)) return false;
      if(!applyConferenceStructListdata_.Equals(other.applyConferenceStructListdata_)) return false;
      if(!companyContractStructListdata_.Equals(other.companyContractStructListdata_)) return false;
      if(!companyServicePackStructListdata_.Equals(other.companyServicePackStructListdata_)) return false;
      if(!servicepackListdata_.Equals(other.servicepackListdata_)) return false;
      if(!activityListdata_.Equals(other.activityListdata_)) return false;
      if(!companyStructListdata_.Equals(other.companyStructListdata_)) return false;
      if(!memberStructListdata_.Equals(other.memberStructListdata_)) return false;
      if(!participantStructListdata_.Equals(other.participantStructListdata_)) return false;
      if(!activityStructList_.Equals(other.activityStructList_)) return false;
      if(!participantInfoStructList_.Equals(other.participantInfoStructList_)) return false;
      if(!talkStructList_.Equals(other.talkStructList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= conferenceStructListdata_.GetHashCode();
      hash ^= cFAddressStructListdata_.GetHashCode();
      hash ^= applyConferenceStructListdata_.GetHashCode();
      hash ^= companyContractStructListdata_.GetHashCode();
      hash ^= companyServicePackStructListdata_.GetHashCode();
      hash ^= servicepackListdata_.GetHashCode();
      hash ^= activityListdata_.GetHashCode();
      hash ^= companyStructListdata_.GetHashCode();
      hash ^= memberStructListdata_.GetHashCode();
      hash ^= participantStructListdata_.GetHashCode();
      hash ^= activityStructList_.GetHashCode();
      hash ^= participantInfoStructList_.GetHashCode();
      hash ^= talkStructList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      conferenceStructListdata_.WriteTo(output, _repeated_conferenceStructListdata_codec);
      cFAddressStructListdata_.WriteTo(output, _repeated_cFAddressStructListdata_codec);
      applyConferenceStructListdata_.WriteTo(output, _repeated_applyConferenceStructListdata_codec);
      companyContractStructListdata_.WriteTo(output, _repeated_companyContractStructListdata_codec);
      companyServicePackStructListdata_.WriteTo(output, _repeated_companyServicePackStructListdata_codec);
      servicepackListdata_.WriteTo(output, _repeated_servicepackListdata_codec);
      activityListdata_.WriteTo(output, _repeated_activityListdata_codec);
      companyStructListdata_.WriteTo(output, _repeated_companyStructListdata_codec);
      memberStructListdata_.WriteTo(output, _repeated_memberStructListdata_codec);
      participantStructListdata_.WriteTo(output, _repeated_participantStructListdata_codec);
      activityStructList_.WriteTo(output, _repeated_activityStructList_codec);
      participantInfoStructList_.WriteTo(output, _repeated_participantInfoStructList_codec);
      talkStructList_.WriteTo(output, _repeated_talkStructList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += conferenceStructListdata_.CalculateSize(_repeated_conferenceStructListdata_codec);
      size += cFAddressStructListdata_.CalculateSize(_repeated_cFAddressStructListdata_codec);
      size += applyConferenceStructListdata_.CalculateSize(_repeated_applyConferenceStructListdata_codec);
      size += companyContractStructListdata_.CalculateSize(_repeated_companyContractStructListdata_codec);
      size += companyServicePackStructListdata_.CalculateSize(_repeated_companyServicePackStructListdata_codec);
      size += servicepackListdata_.CalculateSize(_repeated_servicepackListdata_codec);
      size += activityListdata_.CalculateSize(_repeated_activityListdata_codec);
      size += companyStructListdata_.CalculateSize(_repeated_companyStructListdata_codec);
      size += memberStructListdata_.CalculateSize(_repeated_memberStructListdata_codec);
      size += participantStructListdata_.CalculateSize(_repeated_participantStructListdata_codec);
      size += activityStructList_.CalculateSize(_repeated_activityStructList_codec);
      size += participantInfoStructList_.CalculateSize(_repeated_participantInfoStructList_codec);
      size += talkStructList_.CalculateSize(_repeated_talkStructList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetCompanyNoticeOfReportByContractNumberResponse other) {
      if (other == null) {
        return;
      }
      conferenceStructListdata_.Add(other.conferenceStructListdata_);
      cFAddressStructListdata_.Add(other.cFAddressStructListdata_);
      applyConferenceStructListdata_.Add(other.applyConferenceStructListdata_);
      companyContractStructListdata_.Add(other.companyContractStructListdata_);
      companyServicePackStructListdata_.Add(other.companyServicePackStructListdata_);
      servicepackListdata_.Add(other.servicepackListdata_);
      activityListdata_.Add(other.activityListdata_);
      companyStructListdata_.Add(other.companyStructListdata_);
      memberStructListdata_.Add(other.memberStructListdata_);
      participantStructListdata_.Add(other.participantStructListdata_);
      activityStructList_.Add(other.activityStructList_);
      participantInfoStructList_.Add(other.participantInfoStructList_);
      talkStructList_.Add(other.talkStructList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            conferenceStructListdata_.AddEntriesFrom(input, _repeated_conferenceStructListdata_codec);
            break;
          }
          case 18: {
            cFAddressStructListdata_.AddEntriesFrom(input, _repeated_cFAddressStructListdata_codec);
            break;
          }
          case 26: {
            applyConferenceStructListdata_.AddEntriesFrom(input, _repeated_applyConferenceStructListdata_codec);
            break;
          }
          case 34: {
            companyContractStructListdata_.AddEntriesFrom(input, _repeated_companyContractStructListdata_codec);
            break;
          }
          case 42: {
            companyServicePackStructListdata_.AddEntriesFrom(input, _repeated_companyServicePackStructListdata_codec);
            break;
          }
          case 50: {
            servicepackListdata_.AddEntriesFrom(input, _repeated_servicepackListdata_codec);
            break;
          }
          case 58: {
            activityListdata_.AddEntriesFrom(input, _repeated_activityListdata_codec);
            break;
          }
          case 66: {
            companyStructListdata_.AddEntriesFrom(input, _repeated_companyStructListdata_codec);
            break;
          }
          case 74: {
            memberStructListdata_.AddEntriesFrom(input, _repeated_memberStructListdata_codec);
            break;
          }
          case 82: {
            participantStructListdata_.AddEntriesFrom(input, _repeated_participantStructListdata_codec);
            break;
          }
          case 90: {
            activityStructList_.AddEntriesFrom(input, _repeated_activityStructList_codec);
            break;
          }
          case 98: {
            participantInfoStructList_.AddEntriesFrom(input, _repeated_participantInfoStructList_codec);
            break;
          }
          case 106: {
            talkStructList_.AddEntriesFrom(input, _repeated_talkStructList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetPersonNoticeOfReportByContractNumberRequest : pb::IMessage<newGetPersonNoticeOfReportByContractNumberRequest> {
    private static readonly pb::MessageParser<newGetPersonNoticeOfReportByContractNumberRequest> _parser = new pb::MessageParser<newGetPersonNoticeOfReportByContractNumberRequest>(() => new newGetPersonNoticeOfReportByContractNumberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonNoticeOfReportByContractNumberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberRequest(newGetPersonNoticeOfReportByContractNumberRequest other) : this() {
      personContractNumber_ = other.personContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberRequest Clone() {
      return new newGetPersonNoticeOfReportByContractNumberRequest(this);
    }

    /// <summary>Field number for the "personContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 1;
    private string personContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonNoticeOfReportByContractNumberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonNoticeOfReportByContractNumberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractNumber != other.PersonContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonNoticeOfReportByContractNumberRequest other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetPersonNoticeOfReportByContractNumberResponse : pb::IMessage<newGetPersonNoticeOfReportByContractNumberResponse> {
    private static readonly pb::MessageParser<newGetPersonNoticeOfReportByContractNumberResponse> _parser = new pb::MessageParser<newGetPersonNoticeOfReportByContractNumberResponse>(() => new newGetPersonNoticeOfReportByContractNumberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetPersonNoticeOfReportByContractNumberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberResponse(newGetPersonNoticeOfReportByContractNumberResponse other) : this() {
      contractNumber_ = other.contractNumber_;
      name_ = other.name_;
      companyName_ = other.companyName_;
      servicePack_ = other.servicePack_;
      fee_ = other.fee_;
      total_ = other.total_;
      activityName_ = other.activityName_;
      activityVune_ = other.activityVune_;
      activityTime_ = other.activityTime_;
      owner_ = other.owner_;
      ownerMobile_ = other.ownerMobile_;
      ownerEmail_ = other.ownerEmail_;
      ownerAddress_ = other.ownerAddress_;
      createdBy_ = other.createdBy_;
      createdOn_ = other.createdOn_;
      modifiyBy_ = other.modifiyBy_;
      modifyOn_ = other.modifyOn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetPersonNoticeOfReportByContractNumberResponse Clone() {
      return new newGetPersonNoticeOfReportByContractNumberResponse(this);
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 1;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 3;
    private string companyName_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "servicePack" field.</summary>
    public const int ServicePackFieldNumber = 4;
    private string servicePack_ = "";
    /// <summary>
    ///参会类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 5;
    private float fee_;
    /// <summary>
    ///费用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 6;
    private float total_;
    /// <summary>
    ///总金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "activityName" field.</summary>
    public const int ActivityNameFieldNumber = 7;
    private string activityName_ = "";
    /// <summary>
    ///活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityVune" field.</summary>
    public const int ActivityVuneFieldNumber = 8;
    private string activityVune_ = "";
    /// <summary>
    ///活动地点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityVune {
      get { return activityVune_; }
      set {
        activityVune_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityTime" field.</summary>
    public const int ActivityTimeFieldNumber = 9;
    private string activityTime_ = "";
    /// <summary>
    ///活动时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityTime {
      get { return activityTime_; }
      set {
        activityTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 10;
    private string owner_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerMobile" field.</summary>
    public const int OwnerMobileFieldNumber = 11;
    private string ownerMobile_ = "";
    /// <summary>
    ///业务员电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerMobile {
      get { return ownerMobile_; }
      set {
        ownerMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerEmail" field.</summary>
    public const int OwnerEmailFieldNumber = 12;
    private string ownerEmail_ = "";
    /// <summary>
    ///业务员邮箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerEmail {
      get { return ownerEmail_; }
      set {
        ownerEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerAddress" field.</summary>
    public const int OwnerAddressFieldNumber = 13;
    private string ownerAddress_ = "";
    /// <summary>
    ///业务员地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 14;
    private string createdBy_ = "";
    /// <summary>
    ///创建人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdOn" field.</summary>
    public const int CreatedOnFieldNumber = 15;
    private string createdOn_ = "";
    /// <summary>
    ///创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifiyBy" field.</summary>
    public const int ModifiyByFieldNumber = 16;
    private string modifiyBy_ = "";
    /// <summary>
    ///修改人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiyBy {
      get { return modifiyBy_; }
      set {
        modifiyBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyOn" field.</summary>
    public const int ModifyOnFieldNumber = 17;
    private string modifyOn_ = "";
    /// <summary>
    ///修改时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyOn {
      get { return modifyOn_; }
      set {
        modifyOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetPersonNoticeOfReportByContractNumberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetPersonNoticeOfReportByContractNumberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNumber != other.ContractNumber) return false;
      if (Name != other.Name) return false;
      if (CompanyName != other.CompanyName) return false;
      if (ServicePack != other.ServicePack) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fee, other.Fee)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Total, other.Total)) return false;
      if (ActivityName != other.ActivityName) return false;
      if (ActivityVune != other.ActivityVune) return false;
      if (ActivityTime != other.ActivityTime) return false;
      if (Owner != other.Owner) return false;
      if (OwnerMobile != other.OwnerMobile) return false;
      if (OwnerEmail != other.OwnerEmail) return false;
      if (OwnerAddress != other.OwnerAddress) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (ModifiyBy != other.ModifiyBy) return false;
      if (ModifyOn != other.ModifyOn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ServicePack.Length != 0) hash ^= ServicePack.GetHashCode();
      if (Fee != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fee);
      if (Total != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Total);
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (ActivityVune.Length != 0) hash ^= ActivityVune.GetHashCode();
      if (ActivityTime.Length != 0) hash ^= ActivityTime.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OwnerMobile.Length != 0) hash ^= OwnerMobile.GetHashCode();
      if (OwnerEmail.Length != 0) hash ^= OwnerEmail.GetHashCode();
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (ModifiyBy.Length != 0) hash ^= ModifiyBy.GetHashCode();
      if (ModifyOn.Length != 0) hash ^= ModifyOn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNumber);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyName);
      }
      if (ServicePack.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServicePack);
      }
      if (Fee != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Fee);
      }
      if (Total != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Total);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ActivityTime);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Owner);
      }
      if (OwnerMobile.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OwnerMobile);
      }
      if (OwnerEmail.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OwnerEmail);
      }
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OwnerAddress);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ModifyOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ServicePack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePack);
      }
      if (Fee != 0F) {
        size += 1 + 4;
      }
      if (Total != 0F) {
        size += 1 + 4;
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (ActivityVune.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityVune);
      }
      if (ActivityTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityTime);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OwnerMobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerMobile);
      }
      if (OwnerEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerEmail);
      }
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerAddress);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (ModifiyBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiyBy);
      }
      if (ModifyOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyOn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetPersonNoticeOfReportByContractNumberResponse other) {
      if (other == null) {
        return;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ServicePack.Length != 0) {
        ServicePack = other.ServicePack;
      }
      if (other.Fee != 0F) {
        Fee = other.Fee;
      }
      if (other.Total != 0F) {
        Total = other.Total;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.ActivityVune.Length != 0) {
        ActivityVune = other.ActivityVune;
      }
      if (other.ActivityTime.Length != 0) {
        ActivityTime = other.ActivityTime;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OwnerMobile.Length != 0) {
        OwnerMobile = other.OwnerMobile;
      }
      if (other.OwnerEmail.Length != 0) {
        OwnerEmail = other.OwnerEmail;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.ModifiyBy.Length != 0) {
        ModifiyBy = other.ModifiyBy;
      }
      if (other.ModifyOn.Length != 0) {
        ModifyOn = other.ModifyOn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNumber = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            CompanyName = input.ReadString();
            break;
          }
          case 34: {
            ServicePack = input.ReadString();
            break;
          }
          case 45: {
            Fee = input.ReadFloat();
            break;
          }
          case 53: {
            Total = input.ReadFloat();
            break;
          }
          case 58: {
            ActivityName = input.ReadString();
            break;
          }
          case 66: {
            ActivityVune = input.ReadString();
            break;
          }
          case 74: {
            ActivityTime = input.ReadString();
            break;
          }
          case 82: {
            Owner = input.ReadString();
            break;
          }
          case 90: {
            OwnerMobile = input.ReadString();
            break;
          }
          case 98: {
            OwnerEmail = input.ReadString();
            break;
          }
          case 106: {
            OwnerAddress = input.ReadString();
            break;
          }
          case 114: {
            CreatedBy = input.ReadString();
            break;
          }
          case 122: {
            CreatedOn = input.ReadString();
            break;
          }
          case 130: {
            ModifiyBy = input.ReadString();
            break;
          }
          case 138: {
            ModifyOn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///需要完善
  /// </summary>
  public sealed partial class newCompanyNameRequest : pb::IMessage<newCompanyNameRequest> {
    private static readonly pb::MessageParser<newCompanyNameRequest> _parser = new pb::MessageParser<newCompanyNameRequest>(() => new newCompanyNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newCompanyNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCompanyNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCompanyNameRequest(newCompanyNameRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newCompanyNameRequest Clone() {
      return new newCompanyNameRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newCompanyNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newCompanyNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newCompanyNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Translation : pb::IMessage<Translation> {
    private static readonly pb::MessageParser<Translation> _parser = new pb::MessageParser<Translation>(() => new Translation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Translation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation(Translation other) : this() {
      cN_ = other.cN_;
      eN_ = other.eN_;
      jP_ = other.jP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Translation Clone() {
      return new Translation(this);
    }

    /// <summary>Field number for the "CN" field.</summary>
    public const int CNFieldNumber = 1;
    private string cN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CN {
      get { return cN_; }
      set {
        cN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EN" field.</summary>
    public const int ENFieldNumber = 2;
    private string eN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EN {
      get { return eN_; }
      set {
        eN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JP" field.</summary>
    public const int JPFieldNumber = 3;
    private string jP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JP {
      get { return jP_; }
      set {
        jP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Translation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Translation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CN != other.CN) return false;
      if (EN != other.EN) return false;
      if (JP != other.JP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CN.Length != 0) hash ^= CN.GetHashCode();
      if (EN.Length != 0) hash ^= EN.GetHashCode();
      if (JP.Length != 0) hash ^= JP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CN);
      }
      if (EN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EN);
      }
      if (JP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CN);
      }
      if (EN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EN);
      }
      if (JP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Translation other) {
      if (other == null) {
        return;
      }
      if (other.CN.Length != 0) {
        CN = other.CN;
      }
      if (other.EN.Length != 0) {
        EN = other.EN;
      }
      if (other.JP.Length != 0) {
        JP = other.JP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CN = input.ReadString();
            break;
          }
          case 18: {
            EN = input.ReadString();
            break;
          }
          case 26: {
            JP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewPersonContractStruct : pb::IMessage<NewPersonContractStruct> {
    private static readonly pb::MessageParser<NewPersonContractStruct> _parser = new pb::MessageParser<NewPersonContractStruct>(() => new NewPersonContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewPersonContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractStruct(NewPersonContractStruct other) : this() {
      personContractId_ = other.personContractId_;
      contractId_ = other.contractId_;
      perContractNumber_ = other.perContractNumber_;
      memberPK_ = other.memberPK_;
      MemTranslation = other.memTranslation_ != null ? other.MemTranslation.Clone() : null;
      pCIsdelete_ = other.pCIsdelete_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      conferenceContractId_ = other.conferenceContractId_;
      cTypeCode_ = other.cTypeCode_;
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      isCheckIn_ = other.isCheckIn_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      conferenceId_ = other.conferenceId_;
      isFianceRecord_ = other.isFianceRecord_;
      isInviteCode_ = other.isInviteCode_;
      inviteCodeId_ = other.inviteCodeId_;
      isCommitAbstract_ = other.isCommitAbstract_;
      isPrint_ = other.isPrint_;
      paidAmount_ = other.paidAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewPersonContractStruct Clone() {
      return new NewPersonContractStruct(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///ContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 3;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 5;
    private global::GrpcConferenceContractServiceNew.MemTranslationStruct memTranslation_;
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.MemTranslationStruct MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = value;
      }
    }

    /// <summary>Field number for the "PCIsdelete" field.</summary>
    public const int PCIsdeleteFieldNumber = 6;
    private bool pCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PCIsdelete {
      get { return pCIsdelete_; }
      set {
        pCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 11;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 12;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 13;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 14;
    private string cTypeCode_ = "";
    /// <summary>
    ///ContractType合同大类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 15;
    private global::GrpcConferenceContractServiceNew.NewCompanyContractStruct companyContract_;
    /// <summary>
    ///二级合同对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.NewCompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 16;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 17;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送Email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 18;
    private bool isModify_;
    /// <summary>
    ///是否修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 19;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFianceRecord" field.</summary>
    public const int IsFianceRecordFieldNumber = 20;
    private bool isFianceRecord_;
    /// <summary>
    ///是否有财务记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFianceRecord {
      get { return isFianceRecord_; }
      set {
        isFianceRecord_ = value;
      }
    }

    /// <summary>Field number for the "IsInviteCode" field.</summary>
    public const int IsInviteCodeFieldNumber = 21;
    private bool isInviteCode_;
    /// <summary>
    ///是否是邀请码创建合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInviteCode {
      get { return isInviteCode_; }
      set {
        isInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 22;
    private string inviteCodeId_ = "";
    /// <summary>
    ///InviteCodeId邀请码Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCommitAbstract" field.</summary>
    public const int IsCommitAbstractFieldNumber = 23;
    private bool isCommitAbstract_;
    /// <summary>
    ///是否提交摘要
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCommitAbstract {
      get { return isCommitAbstract_; }
      set {
        isCommitAbstract_ = value;
      }
    }

    /// <summary>Field number for the "IsPrint" field.</summary>
    public const int IsPrintFieldNumber = 24;
    private bool isPrint_;
    /// <summary>
    ///是否打印
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "PaidAmount" field.</summary>
    public const int PaidAmountFieldNumber = 25;
    private string paidAmount_ = "";
    /// <summary>
    ///已付金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaidAmount {
      get { return paidAmount_; }
      set {
        paidAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewPersonContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewPersonContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (ContractId != other.ContractId) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (!object.Equals(MemTranslation, other.MemTranslation)) return false;
      if (PCIsdelete != other.PCIsdelete) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (IsFianceRecord != other.IsFianceRecord) return false;
      if (IsInviteCode != other.IsInviteCode) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsCommitAbstract != other.IsCommitAbstract) return false;
      if (IsPrint != other.IsPrint) return false;
      if (PaidAmount != other.PaidAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (memTranslation_ != null) hash ^= MemTranslation.GetHashCode();
      if (PCIsdelete != false) hash ^= PCIsdelete.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (IsFianceRecord != false) hash ^= IsFianceRecord.GetHashCode();
      if (IsInviteCode != false) hash ^= IsInviteCode.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsCommitAbstract != false) hash ^= IsCommitAbstract.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (PaidAmount.Length != 0) hash ^= PaidAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (memTranslation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MemTranslation);
      }
      if (PCIsdelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(PCIsdelete);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CTypeCode);
      }
      if (companyContract_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CompanyContract);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsCheckIn);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsModify);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ConferenceId);
      }
      if (IsFianceRecord != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsFianceRecord);
      }
      if (IsInviteCode != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsInviteCode);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCommitAbstract);
      }
      if (IsPrint != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsPrint);
      }
      if (PaidAmount.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PaidAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (memTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemTranslation);
      }
      if (PCIsdelete != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (IsSendEmail != false) {
        size += 2 + 1;
      }
      if (IsModify != false) {
        size += 2 + 1;
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (IsFianceRecord != false) {
        size += 2 + 1;
      }
      if (IsInviteCode != false) {
        size += 2 + 1;
      }
      if (InviteCodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        size += 2 + 1;
      }
      if (IsPrint != false) {
        size += 2 + 1;
      }
      if (PaidAmount.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaidAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewPersonContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.memTranslation_ != null) {
        if (memTranslation_ == null) {
          memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
        }
        MemTranslation.MergeFrom(other.MemTranslation);
      }
      if (other.PCIsdelete != false) {
        PCIsdelete = other.PCIsdelete;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractServiceNew.NewCompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.IsFianceRecord != false) {
        IsFianceRecord = other.IsFianceRecord;
      }
      if (other.IsInviteCode != false) {
        IsInviteCode = other.IsInviteCode;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsCommitAbstract != false) {
        IsCommitAbstract = other.IsCommitAbstract;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.PaidAmount.Length != 0) {
        PaidAmount = other.PaidAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            if (memTranslation_ == null) {
              memTranslation_ = new global::GrpcConferenceContractServiceNew.MemTranslationStruct();
            }
            input.ReadMessage(memTranslation_);
            break;
          }
          case 48: {
            PCIsdelete = input.ReadBool();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 90: {
            Owerid = input.ReadString();
            break;
          }
          case 98: {
            Ower = input.ReadString();
            break;
          }
          case 106: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 114: {
            CTypeCode = input.ReadString();
            break;
          }
          case 122: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractServiceNew.NewCompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 128: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 136: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 144: {
            IsModify = input.ReadBool();
            break;
          }
          case 154: {
            ConferenceId = input.ReadString();
            break;
          }
          case 160: {
            IsFianceRecord = input.ReadBool();
            break;
          }
          case 168: {
            IsInviteCode = input.ReadBool();
            break;
          }
          case 178: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 184: {
            IsCommitAbstract = input.ReadBool();
            break;
          }
          case 192: {
            IsPrint = input.ReadBool();
            break;
          }
          case 202: {
            PaidAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///勾选套餐时要传的参数
  /// </summary>
  public sealed partial class newGetServicePackRequest : pb::IMessage<newGetServicePackRequest> {
    private static readonly pb::MessageParser<newGetServicePackRequest> _parser = new pb::MessageParser<newGetServicePackRequest>(() => new newGetServicePackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackRequest(newGetServicePackRequest other) : this() {
      conferenceId_ = other.conferenceId_;
      contractTypeId_ = other.contractTypeId_;
      year_ = other.year_;
      isGive_ = other.isGive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackRequest Clone() {
      return new newGetServicePackRequest(this);
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 1;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 2;
    private string contractTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 4;
    private string isGive_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsGive {
      get { return isGive_; }
      set {
        isGive_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceId != other.ConferenceId) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Year != other.Year) return false;
      if (IsGive != other.IsGive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsGive.Length != 0) hash ^= IsGive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceId);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractTypeId);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Year);
      }
      if (IsGive.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IsGive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsGive.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsGive);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackRequest other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsGive.Length != 0) {
        IsGive = other.IsGive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceId = input.ReadString();
            break;
          }
          case 18: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 26: {
            Year = input.ReadString();
            break;
          }
          case 34: {
            IsGive = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///勾选套餐时返回的对象
  /// </summary>
  public sealed partial class newGetServicePackStruct : pb::IMessage<newGetServicePackStruct> {
    private static readonly pb::MessageParser<newGetServicePackStruct> _parser = new pb::MessageParser<newGetServicePackStruct>(() => new newGetServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackStruct(newGetServicePackStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      code_ = other.code_;
      translation_ = other.translation_;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      priceJP_ = other.priceJP_;
      isGive_ = other.isGive_;
      year_ = other.year_;
      contractTypeId_ = other.contractTypeId_;
      cTypeCode_ = other.cTypeCode_;
      sort_ = other.sort_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isShownOnFront_ = other.isShownOnFront_;
      remarkTranslation_ = other.remarkTranslation_;
      remarkCode_ = other.remarkCode_;
      isSpeaker_ = other.isSpeaker_;
      isDelete_ = other.isDelete_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackStruct Clone() {
      return new newGetServicePackStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private string translation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Translation {
      get { return translation_; }
      set {
        translation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 4;
    private string priceRMB_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 5;
    private string priceUSD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceJP" field.</summary>
    public const int PriceJPFieldNumber = 6;
    private string priceJP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceJP {
      get { return priceJP_; }
      set {
        priceJP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 7;
    private bool isGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 8;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 9;
    private string contractTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 10;
    private string cTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 11;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 12;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 13;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsShownOnFront" field.</summary>
    public const int IsShownOnFrontFieldNumber = 14;
    private bool isShownOnFront_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShownOnFront {
      get { return isShownOnFront_; }
      set {
        isShownOnFront_ = value;
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 15;
    private string remarkTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkCode" field.</summary>
    public const int RemarkCodeFieldNumber = 16;
    private string remarkCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkCode {
      get { return remarkCode_; }
      set {
        remarkCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 17;
    private bool isSpeaker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 18;
    private bool isDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 19;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 20;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 21;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 22;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (Code != other.Code) return false;
      if (Translation != other.Translation) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (PriceJP != other.PriceJP) return false;
      if (IsGive != other.IsGive) return false;
      if (Year != other.Year) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (Sort != other.Sort) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsShownOnFront != other.IsShownOnFront) return false;
      if (RemarkTranslation != other.RemarkTranslation) return false;
      if (RemarkCode != other.RemarkCode) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (IsDelete != other.IsDelete) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Translation.Length != 0) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (PriceJP.Length != 0) hash ^= PriceJP.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsShownOnFront != false) hash ^= IsShownOnFront.GetHashCode();
      if (RemarkTranslation.Length != 0) hash ^= RemarkTranslation.GetHashCode();
      if (RemarkCode.Length != 0) hash ^= RemarkCode.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Translation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PriceUSD);
      }
      if (PriceJP.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceJP);
      }
      if (IsGive != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsGive);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Year);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ContractTypeId);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CTypeCode);
      }
      if (Sort != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Sort);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceName);
      }
      if (IsShownOnFront != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsShownOnFront);
      }
      if (RemarkTranslation.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RemarkTranslation);
      }
      if (RemarkCode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(RemarkCode);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSpeaker);
      }
      if (IsDelete != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsDelete);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Translation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (PriceJP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceJP);
      }
      if (IsGive != false) {
        size += 1 + 1;
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsShownOnFront != false) {
        size += 1 + 1;
      }
      if (RemarkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemarkTranslation);
      }
      if (RemarkCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkCode);
      }
      if (IsSpeaker != false) {
        size += 2 + 1;
      }
      if (IsDelete != false) {
        size += 2 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Translation.Length != 0) {
        Translation = other.Translation;
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.PriceJP.Length != 0) {
        PriceJP = other.PriceJP;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsShownOnFront != false) {
        IsShownOnFront = other.IsShownOnFront;
      }
      if (other.RemarkTranslation.Length != 0) {
        RemarkTranslation = other.RemarkTranslation;
      }
      if (other.RemarkCode.Length != 0) {
        RemarkCode = other.RemarkCode;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Translation = input.ReadString();
            break;
          }
          case 34: {
            PriceRMB = input.ReadString();
            break;
          }
          case 42: {
            PriceUSD = input.ReadString();
            break;
          }
          case 50: {
            PriceJP = input.ReadString();
            break;
          }
          case 56: {
            IsGive = input.ReadBool();
            break;
          }
          case 66: {
            Year = input.ReadString();
            break;
          }
          case 74: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 82: {
            CTypeCode = input.ReadString();
            break;
          }
          case 88: {
            Sort = input.ReadInt32();
            break;
          }
          case 98: {
            ConferenceId = input.ReadString();
            break;
          }
          case 106: {
            ConferenceName = input.ReadString();
            break;
          }
          case 112: {
            IsShownOnFront = input.ReadBool();
            break;
          }
          case 122: {
            RemarkTranslation = input.ReadString();
            break;
          }
          case 130: {
            RemarkCode = input.ReadString();
            break;
          }
          case 136: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 144: {
            IsDelete = input.ReadBool();
            break;
          }
          case 154: {
            CreatedOn = input.ReadString();
            break;
          }
          case 162: {
            CreatedBy = input.ReadString();
            break;
          }
          case 170: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 178: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetServicePackResponse : pb::IMessage<newGetServicePackResponse> {
    private static readonly pb::MessageParser<newGetServicePackResponse> _parser = new pb::MessageParser<newGetServicePackResponse>(() => new newGetServicePackResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetServicePackResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackResponse(newGetServicePackResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetServicePackResponse Clone() {
      return new newGetServicePackResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetServicePackStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetServicePackStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetServicePackResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetServicePackResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetServicePackResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class newMergeCompanyContractRequest : pb::IMessage<newMergeCompanyContractRequest> {
    private static readonly pb::MessageParser<newMergeCompanyContractRequest> _parser = new pb::MessageParser<newMergeCompanyContractRequest>(() => new newMergeCompanyContractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newMergeCompanyContractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newMergeCompanyContractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newMergeCompanyContractRequest(newMergeCompanyContractRequest other) : this() {
      companyContractId_ = other.companyContractId_;
      maxContractNumber_ = other.maxContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newMergeCompanyContractRequest Clone() {
      return new newMergeCompanyContractRequest(this);
    }

    /// <summary>Field number for the "companyContractId" field.</summary>
    public const int CompanyContractIdFieldNumber = 1;
    private string companyContractId_ = "";
    /// <summary>
    ///二级合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyContractId {
      get { return companyContractId_; }
      set {
        companyContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 2;
    private int maxContractNumber_;
    /// <summary>
    ///子合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newMergeCompanyContractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newMergeCompanyContractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyContractId != other.CompanyContractId) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyContractId.Length != 0) hash ^= CompanyContractId.GetHashCode();
      if (MaxContractNumber != 0) hash ^= MaxContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyContractId);
      }
      if (MaxContractNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyContractId);
      }
      if (MaxContractNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newMergeCompanyContractRequest other) {
      if (other == null) {
        return;
      }
      if (other.CompanyContractId.Length != 0) {
        CompanyContractId = other.CompanyContractId;
      }
      if (other.MaxContractNumber != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyContractId = input.ReadString();
            break;
          }
          case 16: {
            MaxContractNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///获取一级合同列表页码的搜索与请求条件
  /// </summary>
  public sealed partial class newGetConferenceContractListRequest : pb::IMessage<newGetConferenceContractListRequest> {
    private static readonly pb::MessageParser<newGetConferenceContractListRequest> _parser = new pb::MessageParser<newGetConferenceContractListRequest>(() => new newGetConferenceContractListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceContractListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListRequest(newGetConferenceContractListRequest other) : this() {
      page_ = other.page_;
      pageSize_ = other.pageSize_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListRequest Clone() {
      return new newGetConferenceContractListRequest(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private int page_;
    /// <summary>
    ///请求页码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    ///每页数据条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 3;
    private global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch search_;
    /// <summary>
    ///查询条件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceContractListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceContractListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PageSize != other.PageSize) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Page);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (search_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceContractListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadInt32();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Types.newGetConferenceContractListSearch();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the newGetConferenceContractListRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class newGetConferenceContractListSearch : pb::IMessage<newGetConferenceContractListSearch> {
        private static readonly pb::MessageParser<newGetConferenceContractListSearch> _parser = new pb::MessageParser<newGetConferenceContractListSearch>(() => new newGetConferenceContractListSearch());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<newGetConferenceContractListSearch> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GrpcConferenceContractServiceNew.newGetConferenceContractListRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetConferenceContractListSearch() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetConferenceContractListSearch(newGetConferenceContractListSearch other) : this() {
          year_ = other.year_;
          conferenceId_ = other.conferenceId_;
          companyName_ = other.companyName_;
          contractNumber_ = other.contractNumber_;
          ownerId_ = other.ownerId_;
          orderings_ = other.orderings_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public newGetConferenceContractListSearch Clone() {
          return new newGetConferenceContractListSearch(this);
        }

        /// <summary>Field number for the "year" field.</summary>
        public const int YearFieldNumber = 1;
        private string year_ = "";
        /// <summary>
        ///年份
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Year {
          get { return year_; }
          set {
            year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "conferenceId" field.</summary>
        public const int ConferenceIdFieldNumber = 2;
        private string conferenceId_ = "";
        /// <summary>
        ///会议Id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ConferenceId {
          get { return conferenceId_; }
          set {
            conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "companyName" field.</summary>
        public const int CompanyNameFieldNumber = 3;
        private string companyName_ = "";
        /// <summary>
        ///公司名
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CompanyName {
          get { return companyName_; }
          set {
            companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contractNumber" field.</summary>
        public const int ContractNumberFieldNumber = 4;
        private string contractNumber_ = "";
        /// <summary>
        ///合同号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ContractNumber {
          get { return contractNumber_; }
          set {
            contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ownerId" field.</summary>
        public const int OwnerIdFieldNumber = 5;
        private string ownerId_ = "";
        /// <summary>
        ///业务员
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OwnerId {
          get { return ownerId_; }
          set {
            ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "orderings" field.</summary>
        public const int OrderingsFieldNumber = 6;
        private string orderings_ = "";
        /// <summary>
        ///排序规则：属性前面带-号表示反序排序，exp:"name,-createtime"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Orderings {
          get { return orderings_; }
          set {
            orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as newGetConferenceContractListSearch);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(newGetConferenceContractListSearch other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Year != other.Year) return false;
          if (ConferenceId != other.ConferenceId) return false;
          if (CompanyName != other.CompanyName) return false;
          if (ContractNumber != other.ContractNumber) return false;
          if (OwnerId != other.OwnerId) return false;
          if (Orderings != other.Orderings) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Year.Length != 0) hash ^= Year.GetHashCode();
          if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
          if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
          if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
          if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
          if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Year.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Year);
          }
          if (ConferenceId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(OwnerId);
          }
          if (Orderings.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Orderings);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Year.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
          }
          if (ConferenceId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
          }
          if (CompanyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
          }
          if (ContractNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
          }
          if (OwnerId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
          }
          if (Orderings.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderings);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(newGetConferenceContractListSearch other) {
          if (other == null) {
            return;
          }
          if (other.Year.Length != 0) {
            Year = other.Year;
          }
          if (other.ConferenceId.Length != 0) {
            ConferenceId = other.ConferenceId;
          }
          if (other.CompanyName.Length != 0) {
            CompanyName = other.CompanyName;
          }
          if (other.ContractNumber.Length != 0) {
            ContractNumber = other.ContractNumber;
          }
          if (other.OwnerId.Length != 0) {
            OwnerId = other.OwnerId;
          }
          if (other.Orderings.Length != 0) {
            Orderings = other.Orderings;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Year = input.ReadString();
                break;
              }
              case 18: {
                ConferenceId = input.ReadString();
                break;
              }
              case 26: {
                CompanyName = input.ReadString();
                break;
              }
              case 34: {
                ContractNumber = input.ReadString();
                break;
              }
              case 42: {
                OwnerId = input.ReadString();
                break;
              }
              case 50: {
                Orderings = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class newGetConferenceContractStruct : pb::IMessage<newGetConferenceContractStruct> {
    private static readonly pb::MessageParser<newGetConferenceContractStruct> _parser = new pb::MessageParser<newGetConferenceContractStruct>(() => new newGetConferenceContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractStruct(newGetConferenceContractStruct other) : this() {
      conferenceContractId_ = other.conferenceContractId_;
      conferenceId_ = other.conferenceId_;
      companyId_ = other.companyId_;
      comNameTranslation_ = other.comNameTranslation_;
      contractNumber_ = other.contractNumber_;
      contractYear_ = other.contractYear_;
      contractCode_ = other.contractCode_;
      contractStatusCode_ = other.contractStatusCode_;
      paymentStatusCode_ = other.paymentStatusCode_;
      modifyPermission_ = other.modifyPermission_;
      isDelete_ = other.isDelete_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modifiedOn_ = other.modifiedOn_;
      modifiedBy_ = other.modifiedBy_;
      otherOwner_ = other.otherOwner_;
      otherOwnerId_ = other.otherOwnerId_;
      totalPrice_ = other.totalPrice_;
      totalPaid_ = other.totalPaid_;
      isOpPayStatudCode_ = other.isOpPayStatudCode_;
      enterpriseType_ = other.enterpriseType_;
      contractStatusName_ = other.contractStatusName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractStruct Clone() {
      return new newGetConferenceContractStruct(this);
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 1;
    private string conferenceContractId_ = "";
    /// <summary>
    ///一级合同Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 2;
    private string conferenceId_ = "";
    /// <summary>
    ///会议Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 3;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 4;
    private string comNameTranslation_ = "";
    /// <summary>
    ///公司名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 5;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractYear" field.</summary>
    public const int ContractYearFieldNumber = 6;
    private string contractYear_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractYear {
      get { return contractYear_; }
      set {
        contractYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 7;
    private string contractCode_ = "";
    /// <summary>
    ///合同编号最后二位Code CF2019SNEC0010CW（CW/CS,EW/ES）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 8;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaymentStatusCode" field.</summary>
    public const int PaymentStatusCodeFieldNumber = 9;
    private string paymentStatusCode_ = "";
    /// <summary>
    ///付款状态:未付款---N 部分付款(0&lt;x&lt;0.5)---P 付一半款(0.5&lt;x&lt;1)---H 全款---F
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentStatusCode {
      get { return paymentStatusCode_; }
      set {
        paymentStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifyPermission" field.</summary>
    public const int ModifyPermissionFieldNumber = 10;
    private string modifyPermission_ = "";
    /// <summary>
    ///修改许可
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyPermission {
      get { return modifyPermission_; }
      set {
        modifyPermission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 11;
    private bool isDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 12;
    private bool isSendEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 13;
    private bool isModify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 14;
    private string owerid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 15;
    private string ower_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 16;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 17;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedOn" field.</summary>
    public const int ModifiedOnFieldNumber = 18;
    private string modifiedOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedOn {
      get { return modifiedOn_; }
      set {
        modifiedOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 19;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 20;
    private string otherOwner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 21;
    private string otherOwnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalPrice" field.</summary>
    public const int TotalPriceFieldNumber = 22;
    private string totalPrice_ = "";
    /// <summary>
    ///总应付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TotalPrice {
      get { return totalPrice_; }
      set {
        totalPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TotalPaid" field.</summary>
    public const int TotalPaidFieldNumber = 23;
    private string totalPaid_ = "";
    /// <summary>
    ///已付费
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TotalPaid {
      get { return totalPaid_; }
      set {
        totalPaid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsOpPayStatudCode" field.</summary>
    public const int IsOpPayStatudCodeFieldNumber = 24;
    private bool isOpPayStatudCode_;
    /// <summary>
    ///是否手动操作付款状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpPayStatudCode {
      get { return isOpPayStatudCode_; }
      set {
        isOpPayStatudCode_ = value;
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 25;
    private int enterpriseType_;
    /// <summary>
    ///内外资：0--内资 1--外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "ContractStatusName" field.</summary>
    public const int ContractStatusNameFieldNumber = 26;
    private string contractStatusName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusName {
      get { return contractStatusName_; }
      set {
        contractStatusName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ComNameTranslation != other.ComNameTranslation) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (ContractYear != other.ContractYear) return false;
      if (ContractCode != other.ContractCode) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (PaymentStatusCode != other.PaymentStatusCode) return false;
      if (ModifyPermission != other.ModifyPermission) return false;
      if (IsDelete != other.IsDelete) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModifiedOn != other.ModifiedOn) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (OtherOwner != other.OtherOwner) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (TotalPrice != other.TotalPrice) return false;
      if (TotalPaid != other.TotalPaid) return false;
      if (IsOpPayStatudCode != other.IsOpPayStatudCode) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (ContractStatusName != other.ContractStatusName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ComNameTranslation.Length != 0) hash ^= ComNameTranslation.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (ContractYear.Length != 0) hash ^= ContractYear.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (PaymentStatusCode.Length != 0) hash ^= PaymentStatusCode.GetHashCode();
      if (ModifyPermission.Length != 0) hash ^= ModifyPermission.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModifiedOn.Length != 0) hash ^= ModifiedOn.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (TotalPrice.Length != 0) hash ^= TotalPrice.GetHashCode();
      if (TotalPaid.Length != 0) hash ^= TotalPaid.GetHashCode();
      if (IsOpPayStatudCode != false) hash ^= IsOpPayStatudCode.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (ContractStatusName.Length != 0) hash ^= ContractStatusName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceContractId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyId);
      }
      if (ComNameTranslation.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContractNumber);
      }
      if (ContractYear.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ContractYear);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ContractCode);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PaymentStatusCode);
      }
      if (ModifyPermission.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifyPermission);
      }
      if (IsDelete != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsDelete);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsModify);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ModifiedBy);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(OtherOwnerId);
      }
      if (TotalPrice.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(TotalPrice);
      }
      if (TotalPaid.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(TotalPaid);
      }
      if (IsOpPayStatudCode != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsOpPayStatudCode);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(200, 1);
        output.WriteInt32(EnterpriseType);
      }
      if (ContractStatusName.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ContractStatusName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ComNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (ContractYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractYear);
      }
      if (ContractCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (ContractStatusCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentStatusCode);
      }
      if (ModifyPermission.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifyPermission);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (IsSendEmail != false) {
        size += 1 + 1;
      }
      if (IsModify != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModifiedOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedOn);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (OtherOwner.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (OtherOwnerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (TotalPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TotalPrice);
      }
      if (TotalPaid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TotalPaid);
      }
      if (IsOpPayStatudCode != false) {
        size += 2 + 1;
      }
      if (EnterpriseType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (ContractStatusName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ComNameTranslation.Length != 0) {
        ComNameTranslation = other.ComNameTranslation;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.ContractYear.Length != 0) {
        ContractYear = other.ContractYear;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.PaymentStatusCode.Length != 0) {
        PaymentStatusCode = other.PaymentStatusCode;
      }
      if (other.ModifyPermission.Length != 0) {
        ModifyPermission = other.ModifyPermission;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModifiedOn.Length != 0) {
        ModifiedOn = other.ModifiedOn;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.TotalPrice.Length != 0) {
        TotalPrice = other.TotalPrice;
      }
      if (other.TotalPaid.Length != 0) {
        TotalPaid = other.TotalPaid;
      }
      if (other.IsOpPayStatudCode != false) {
        IsOpPayStatudCode = other.IsOpPayStatudCode;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.ContractStatusName.Length != 0) {
        ContractStatusName = other.ContractStatusName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceId = input.ReadString();
            break;
          }
          case 26: {
            CompanyId = input.ReadString();
            break;
          }
          case 34: {
            ComNameTranslation = input.ReadString();
            break;
          }
          case 42: {
            ContractNumber = input.ReadString();
            break;
          }
          case 50: {
            ContractYear = input.ReadString();
            break;
          }
          case 58: {
            ContractCode = input.ReadString();
            break;
          }
          case 66: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 74: {
            PaymentStatusCode = input.ReadString();
            break;
          }
          case 82: {
            ModifyPermission = input.ReadString();
            break;
          }
          case 88: {
            IsDelete = input.ReadBool();
            break;
          }
          case 96: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 104: {
            IsModify = input.ReadBool();
            break;
          }
          case 114: {
            Owerid = input.ReadString();
            break;
          }
          case 122: {
            Ower = input.ReadString();
            break;
          }
          case 130: {
            CreatedOn = input.ReadString();
            break;
          }
          case 138: {
            CreatedBy = input.ReadString();
            break;
          }
          case 146: {
            ModifiedOn = input.ReadString();
            break;
          }
          case 154: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 162: {
            OtherOwner = input.ReadString();
            break;
          }
          case 170: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 178: {
            TotalPrice = input.ReadString();
            break;
          }
          case 186: {
            TotalPaid = input.ReadString();
            break;
          }
          case 192: {
            IsOpPayStatudCode = input.ReadBool();
            break;
          }
          case 200: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 210: {
            ContractStatusName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetConferenceContractListResponse : pb::IMessage<newGetConferenceContractListResponse> {
    private static readonly pb::MessageParser<newGetConferenceContractListResponse> _parser = new pb::MessageParser<newGetConferenceContractListResponse>(() => new newGetConferenceContractListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceContractListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListResponse(newGetConferenceContractListResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceContractListResponse Clone() {
      return new newGetConferenceContractListResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceContractListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceContractListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceContractListResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetConferenceInfoRequest : pb::IMessage<newGetConferenceInfoRequest> {
    private static readonly pb::MessageParser<newGetConferenceInfoRequest> _parser = new pb::MessageParser<newGetConferenceInfoRequest>(() => new newGetConferenceInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoRequest(newGetConferenceInfoRequest other) : this() {
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoRequest Clone() {
      return new newGetConferenceInfoRequest(this);
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 1;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Year.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetConferenceInfoStruct : pb::IMessage<newGetConferenceInfoStruct> {
    private static readonly pb::MessageParser<newGetConferenceInfoStruct> _parser = new pb::MessageParser<newGetConferenceInfoStruct>(() => new newGetConferenceInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoStruct(newGetConferenceInfoStruct other) : this() {
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      prefix_ = other.prefix_;
      year_ = other.year_;
      cNano_ = other.cNano_;
      count_ = other.count_;
      status_ = other.status_;
      isDelete_ = other.isDelete_;
      abbreviation_ = other.abbreviation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoStruct Clone() {
      return new newGetConferenceInfoStruct(this);
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 1;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 2;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Prefix" field.</summary>
    public const int PrefixFieldNumber = 3;
    private string prefix_ = "";
    /// <summary>
    ///前缀
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 4;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CNano" field.</summary>
    public const int CNanoFieldNumber = 5;
    private string cNano_ = "";
    /// <summary>
    ///合同类型代码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CNano {
      get { return cNano_; }
      set {
        cNano_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 6;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 7;
    private int status_;
    /// <summary>
    ///采用状态 0---未采用  1---采用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 8;
    private bool isDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "Abbreviation" field.</summary>
    public const int AbbreviationFieldNumber = 9;
    private string abbreviation_ = "";
    /// <summary>
    ///大会简称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Abbreviation {
      get { return abbreviation_; }
      set {
        abbreviation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (Prefix != other.Prefix) return false;
      if (Year != other.Year) return false;
      if (CNano != other.CNano) return false;
      if (Count != other.Count) return false;
      if (Status != other.Status) return false;
      if (IsDelete != other.IsDelete) return false;
      if (Abbreviation != other.Abbreviation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CNano.Length != 0) hash ^= CNano.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (Abbreviation.Length != 0) hash ^= Abbreviation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceName);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Year);
      }
      if (CNano.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CNano);
      }
      if (Count != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Count);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Status);
      }
      if (IsDelete != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsDelete);
      }
      if (Abbreviation.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Abbreviation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CNano.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CNano);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (Abbreviation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Abbreviation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CNano.Length != 0) {
        CNano = other.CNano;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.Abbreviation.Length != 0) {
        Abbreviation = other.Abbreviation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceName = input.ReadString();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
          case 34: {
            Year = input.ReadString();
            break;
          }
          case 42: {
            CNano = input.ReadString();
            break;
          }
          case 48: {
            Count = input.ReadInt32();
            break;
          }
          case 56: {
            Status = input.ReadInt32();
            break;
          }
          case 64: {
            IsDelete = input.ReadBool();
            break;
          }
          case 74: {
            Abbreviation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetConferenceInfoResponse : pb::IMessage<newGetConferenceInfoResponse> {
    private static readonly pb::MessageParser<newGetConferenceInfoResponse> _parser = new pb::MessageParser<newGetConferenceInfoResponse>(() => new newGetConferenceInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetConferenceInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoResponse(newGetConferenceInfoResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetConferenceInfoResponse Clone() {
      return new newGetConferenceInfoResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetConferenceInfoStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetConferenceInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetConferenceInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetConferenceInfoResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetOwnerByConfIdAndComIdAndYearRequest : pb::IMessage<newGetOwnerByConfIdAndComIdAndYearRequest> {
    private static readonly pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearRequest> _parser = new pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearRequest>(() => new newGetOwnerByConfIdAndComIdAndYearRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearRequest(newGetOwnerByConfIdAndComIdAndYearRequest other) : this() {
      companyId_ = other.companyId_;
      conferenceID_ = other.conferenceID_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearRequest Clone() {
      return new newGetOwnerByConfIdAndComIdAndYearRequest(this);
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 1;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceID" field.</summary>
    public const int ConferenceIDFieldNumber = 2;
    private string conferenceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceID {
      get { return conferenceID_; }
      set {
        conferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetOwnerByConfIdAndComIdAndYearRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetOwnerByConfIdAndComIdAndYearRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyId != other.CompanyId) return false;
      if (ConferenceID != other.ConferenceID) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ConferenceID.Length != 0) hash ^= ConferenceID.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyId);
      }
      if (ConferenceID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceID);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceID);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetOwnerByConfIdAndComIdAndYearRequest other) {
      if (other == null) {
        return;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ConferenceID.Length != 0) {
        ConferenceID = other.ConferenceID;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceID = input.ReadString();
            break;
          }
          case 26: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetOwnerByConfIdAndComIdAndYearStruct : pb::IMessage<newGetOwnerByConfIdAndComIdAndYearStruct> {
    private static readonly pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearStruct> _parser = new pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearStruct>(() => new newGetOwnerByConfIdAndComIdAndYearStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearStruct(newGetOwnerByConfIdAndComIdAndYearStruct other) : this() {
      ownerId_ = other.ownerId_;
      owner_ = other.owner_;
      otherOwnerId_ = other.otherOwnerId_;
      otherOwner_ = other.otherOwner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearStruct Clone() {
      return new newGetOwnerByConfIdAndComIdAndYearStruct(this);
    }

    /// <summary>Field number for the "OwnerId" field.</summary>
    public const int OwnerIdFieldNumber = 1;
    private string ownerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwnerId" field.</summary>
    public const int OtherOwnerIdFieldNumber = 3;
    private string otherOwnerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwnerId {
      get { return otherOwnerId_; }
      set {
        otherOwnerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OtherOwner" field.</summary>
    public const int OtherOwnerFieldNumber = 4;
    private string otherOwner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OtherOwner {
      get { return otherOwner_; }
      set {
        otherOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetOwnerByConfIdAndComIdAndYearStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetOwnerByConfIdAndComIdAndYearStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerId != other.OwnerId) return false;
      if (Owner != other.Owner) return false;
      if (OtherOwnerId != other.OtherOwnerId) return false;
      if (OtherOwner != other.OtherOwner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (OtherOwnerId.Length != 0) hash ^= OtherOwnerId.GetHashCode();
      if (OtherOwner.Length != 0) hash ^= OtherOwner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnerId);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Owner);
      }
      if (OtherOwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OtherOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (OtherOwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwnerId);
      }
      if (OtherOwner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OtherOwner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetOwnerByConfIdAndComIdAndYearStruct other) {
      if (other == null) {
        return;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.OtherOwnerId.Length != 0) {
        OtherOwnerId = other.OtherOwnerId;
      }
      if (other.OtherOwner.Length != 0) {
        OtherOwner = other.OtherOwner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerId = input.ReadString();
            break;
          }
          case 18: {
            Owner = input.ReadString();
            break;
          }
          case 26: {
            OtherOwnerId = input.ReadString();
            break;
          }
          case 34: {
            OtherOwner = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class newGetOwnerByConfIdAndComIdAndYearResponse : pb::IMessage<newGetOwnerByConfIdAndComIdAndYearResponse> {
    private static readonly pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearResponse> _parser = new pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearResponse>(() => new newGetOwnerByConfIdAndComIdAndYearResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<newGetOwnerByConfIdAndComIdAndYearResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearResponse(newGetOwnerByConfIdAndComIdAndYearResponse other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public newGetOwnerByConfIdAndComIdAndYearResponse Clone() {
      return new newGetOwnerByConfIdAndComIdAndYearResponse(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.newGetOwnerByConfIdAndComIdAndYearStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as newGetOwnerByConfIdAndComIdAndYearResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(newGetOwnerByConfIdAndComIdAndYearResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(newGetOwnerByConfIdAndComIdAndYearResponse other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InServicePackConferenceVM : pb::IMessage<InServicePackConferenceVM> {
    private static readonly pb::MessageParser<InServicePackConferenceVM> _parser = new pb::MessageParser<InServicePackConferenceVM>(() => new InServicePackConferenceVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InServicePackConferenceVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InServicePackConferenceVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InServicePackConferenceVM(InServicePackConferenceVM other) : this() {
      conferenceId_ = other.conferenceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InServicePackConferenceVM Clone() {
      return new InServicePackConferenceVM(this);
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 1;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InServicePackConferenceVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InServicePackConferenceVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceId != other.ConferenceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InServicePackConferenceVM other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Report_ConferenceVM : pb::IMessage<Report_ConferenceVM> {
    private static readonly pb::MessageParser<Report_ConferenceVM> _parser = new pb::MessageParser<Report_ConferenceVM>(() => new Report_ConferenceVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report_ConferenceVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ConferenceVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ConferenceVM(Report_ConferenceVM other) : this() {
      conferneceName_ = other.conferneceName_;
      date_ = other.date_;
      timeRange_ = other.timeRange_;
      address_ = other.address_;
      sort_ = other.sort_;
      participateType_ = other.participateType_;
      remark_ = other.remark_;
      isInServicePack_ = other.isInServicePack_;
      isChecked_ = other.isChecked_;
      startTime_ = other.startTime_;
      activityVMList_ = other.activityVMList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ConferenceVM Clone() {
      return new Report_ConferenceVM(this);
    }

    /// <summary>Field number for the "ConferneceName" field.</summary>
    public const int ConferneceNameFieldNumber = 1;
    private string conferneceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferneceName {
      get { return conferneceName_; }
      set {
        conferneceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 2;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeRange" field.</summary>
    public const int TimeRangeFieldNumber = 3;
    private string timeRange_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private string sort_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipateType" field.</summary>
    public const int ParticipateTypeFieldNumber = 6;
    private string participateType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipateType {
      get { return participateType_; }
      set {
        participateType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 7;
    private string remark_ = "";
    /// <summary>
    /// 备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsInServicePack" field.</summary>
    public const int IsInServicePackFieldNumber = 8;
    private bool isInServicePack_;
    /// <summary>
    /// 是否包含在服务包内
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInServicePack {
      get { return isInServicePack_; }
      set {
        isInServicePack_ = value;
      }
    }

    /// <summary>Field number for the "IsChecked" field.</summary>
    public const int IsCheckedFieldNumber = 9;
    private bool isChecked_;
    /// <summary>
    /// 是否勾选
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChecked {
      get { return isChecked_; }
      set {
        isChecked_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private string startTime_ = "";
    /// <summary>
    ///开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityVMList" field.</summary>
    public const int ActivityVMListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.Report_ActivityVM> _repeated_activityVMList_codec
        = pb::FieldCodec.ForMessage(90, global::GrpcConferenceContractServiceNew.Report_ActivityVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ActivityVM> activityVMList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ActivityVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ActivityVM> ActivityVMList {
      get { return activityVMList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report_ConferenceVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report_ConferenceVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferneceName != other.ConferneceName) return false;
      if (Date != other.Date) return false;
      if (TimeRange != other.TimeRange) return false;
      if (Address != other.Address) return false;
      if (Sort != other.Sort) return false;
      if (ParticipateType != other.ParticipateType) return false;
      if (Remark != other.Remark) return false;
      if (IsInServicePack != other.IsInServicePack) return false;
      if (IsChecked != other.IsChecked) return false;
      if (StartTime != other.StartTime) return false;
      if(!activityVMList_.Equals(other.activityVMList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferneceName.Length != 0) hash ^= ConferneceName.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (TimeRange.Length != 0) hash ^= TimeRange.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (ParticipateType.Length != 0) hash ^= ParticipateType.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (IsInServicePack != false) hash ^= IsInServicePack.GetHashCode();
      if (IsChecked != false) hash ^= IsChecked.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      hash ^= activityVMList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferneceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferneceName);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Date);
      }
      if (TimeRange.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TimeRange);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sort);
      }
      if (ParticipateType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipateType);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Remark);
      }
      if (IsInServicePack != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsInServicePack);
      }
      if (IsChecked != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsChecked);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StartTime);
      }
      activityVMList_.WriteTo(output, _repeated_activityVMList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferneceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferneceName);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (TimeRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeRange);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (ParticipateType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipateType);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (IsInServicePack != false) {
        size += 1 + 1;
      }
      if (IsChecked != false) {
        size += 1 + 1;
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      size += activityVMList_.CalculateSize(_repeated_activityVMList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report_ConferenceVM other) {
      if (other == null) {
        return;
      }
      if (other.ConferneceName.Length != 0) {
        ConferneceName = other.ConferneceName;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.TimeRange.Length != 0) {
        TimeRange = other.TimeRange;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.ParticipateType.Length != 0) {
        ParticipateType = other.ParticipateType;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.IsInServicePack != false) {
        IsInServicePack = other.IsInServicePack;
      }
      if (other.IsChecked != false) {
        IsChecked = other.IsChecked;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      activityVMList_.Add(other.activityVMList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferneceName = input.ReadString();
            break;
          }
          case 18: {
            Date = input.ReadString();
            break;
          }
          case 26: {
            TimeRange = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            Sort = input.ReadString();
            break;
          }
          case 50: {
            ParticipateType = input.ReadString();
            break;
          }
          case 58: {
            Remark = input.ReadString();
            break;
          }
          case 64: {
            IsInServicePack = input.ReadBool();
            break;
          }
          case 72: {
            IsChecked = input.ReadBool();
            break;
          }
          case 82: {
            StartTime = input.ReadString();
            break;
          }
          case 90: {
            activityVMList_.AddEntriesFrom(input, _repeated_activityVMList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Report_ActivityVM : pb::IMessage<Report_ActivityVM> {
    private static readonly pb::MessageParser<Report_ActivityVM> _parser = new pb::MessageParser<Report_ActivityVM>(() => new Report_ActivityVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report_ActivityVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ActivityVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ActivityVM(Report_ActivityVM other) : this() {
      activityName_ = other.activityName_;
      startTime_ = other.startTime_;
      timeLength_ = other.timeLength_;
      timeRange_ = other.timeRange_;
      sort_ = other.sort_;
      talkVMList_ = other.talkVMList_.Clone();
      participantVMList_ = other.participantVMList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ActivityVM Clone() {
      return new Report_ActivityVM(this);
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 1;
    private string activityName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 3;
    private int timeLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = value;
      }
    }

    /// <summary>Field number for the "TimeRange" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private string timeRange_ = "";
    /// <summary>
    /// 活动时间范围  09:00-09:05
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "TalkVMList" field.</summary>
    public const int TalkVMListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.Report_TalkVM> _repeated_talkVMList_codec
        = pb::FieldCodec.ForMessage(50, global::GrpcConferenceContractServiceNew.Report_TalkVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_TalkVM> talkVMList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_TalkVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_TalkVM> TalkVMList {
      get { return talkVMList_; }
    }

    /// <summary>Field number for the "ParticipantVMList" field.</summary>
    public const int ParticipantVMListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> _repeated_participantVMList_codec
        = pb::FieldCodec.ForMessage(58, global::GrpcConferenceContractServiceNew.Report_ParticipantVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> participantVMList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> ParticipantVMList {
      get { return participantVMList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report_ActivityVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report_ActivityVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityName != other.ActivityName) return false;
      if (StartTime != other.StartTime) return false;
      if (TimeLength != other.TimeLength) return false;
      if (TimeRange != other.TimeRange) return false;
      if (Sort != other.Sort) return false;
      if(!talkVMList_.Equals(other.talkVMList_)) return false;
      if(!participantVMList_.Equals(other.participantVMList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (TimeLength != 0) hash ^= TimeLength.GetHashCode();
      if (TimeRange.Length != 0) hash ^= TimeRange.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      hash ^= talkVMList_.GetHashCode();
      hash ^= participantVMList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityName);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartTime);
      }
      if (TimeLength != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeLength);
      }
      if (TimeRange.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeRange);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      talkVMList_.WriteTo(output, _repeated_talkVMList_codec);
      participantVMList_.WriteTo(output, _repeated_participantVMList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (TimeLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeLength);
      }
      if (TimeRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeRange);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      size += talkVMList_.CalculateSize(_repeated_talkVMList_codec);
      size += participantVMList_.CalculateSize(_repeated_participantVMList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report_ActivityVM other) {
      if (other == null) {
        return;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.TimeLength != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.TimeRange.Length != 0) {
        TimeRange = other.TimeRange;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      talkVMList_.Add(other.talkVMList_);
      participantVMList_.Add(other.participantVMList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityName = input.ReadString();
            break;
          }
          case 18: {
            StartTime = input.ReadString();
            break;
          }
          case 24: {
            TimeLength = input.ReadInt32();
            break;
          }
          case 34: {
            TimeRange = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            talkVMList_.AddEntriesFrom(input, _repeated_talkVMList_codec);
            break;
          }
          case 58: {
            participantVMList_.AddEntriesFrom(input, _repeated_participantVMList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Report_ParticipantVM : pb::IMessage<Report_ParticipantVM> {
    private static readonly pb::MessageParser<Report_ParticipantVM> _parser = new pb::MessageParser<Report_ParticipantVM>(() => new Report_ParticipantVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report_ParticipantVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ParticipantVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ParticipantVM(Report_ParticipantVM other) : this() {
      participantType_ = other.participantType_;
      participantName_ = other.participantName_;
      participantJob_ = other.participantJob_;
      participantTitle_ = other.participantTitle_;
      participantCompany_ = other.participantCompany_;
      participantCountry_ = other.participantCountry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_ParticipantVM Clone() {
      return new Report_ParticipantVM(this);
    }

    /// <summary>Field number for the "ParticipantType" field.</summary>
    public const int ParticipantTypeFieldNumber = 1;
    private string participantType_ = "";
    /// <summary>
    /// 身份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantType {
      get { return participantType_; }
      set {
        participantType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantName" field.</summary>
    public const int ParticipantNameFieldNumber = 2;
    private string participantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantName {
      get { return participantName_; }
      set {
        participantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantJob" field.</summary>
    public const int ParticipantJobFieldNumber = 3;
    private string participantJob_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantJob {
      get { return participantJob_; }
      set {
        participantJob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantTitle" field.</summary>
    public const int ParticipantTitleFieldNumber = 4;
    private string participantTitle_ = "";
    /// <summary>
    /// 称谓
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantTitle {
      get { return participantTitle_; }
      set {
        participantTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantCompany" field.</summary>
    public const int ParticipantCompanyFieldNumber = 5;
    private string participantCompany_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantCompany {
      get { return participantCompany_; }
      set {
        participantCompany_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantCountry" field.</summary>
    public const int ParticipantCountryFieldNumber = 6;
    private string participantCountry_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParticipantCountry {
      get { return participantCountry_; }
      set {
        participantCountry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report_ParticipantVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report_ParticipantVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParticipantType != other.ParticipantType) return false;
      if (ParticipantName != other.ParticipantName) return false;
      if (ParticipantJob != other.ParticipantJob) return false;
      if (ParticipantTitle != other.ParticipantTitle) return false;
      if (ParticipantCompany != other.ParticipantCompany) return false;
      if (ParticipantCountry != other.ParticipantCountry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParticipantType.Length != 0) hash ^= ParticipantType.GetHashCode();
      if (ParticipantName.Length != 0) hash ^= ParticipantName.GetHashCode();
      if (ParticipantJob.Length != 0) hash ^= ParticipantJob.GetHashCode();
      if (ParticipantTitle.Length != 0) hash ^= ParticipantTitle.GetHashCode();
      if (ParticipantCompany.Length != 0) hash ^= ParticipantCompany.GetHashCode();
      if (ParticipantCountry.Length != 0) hash ^= ParticipantCountry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParticipantType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ParticipantType);
      }
      if (ParticipantName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParticipantName);
      }
      if (ParticipantJob.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ParticipantJob);
      }
      if (ParticipantTitle.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ParticipantTitle);
      }
      if (ParticipantCompany.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ParticipantCompany);
      }
      if (ParticipantCountry.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParticipantCountry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParticipantType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantType);
      }
      if (ParticipantName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantName);
      }
      if (ParticipantJob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantJob);
      }
      if (ParticipantTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantTitle);
      }
      if (ParticipantCompany.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantCompany);
      }
      if (ParticipantCountry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParticipantCountry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report_ParticipantVM other) {
      if (other == null) {
        return;
      }
      if (other.ParticipantType.Length != 0) {
        ParticipantType = other.ParticipantType;
      }
      if (other.ParticipantName.Length != 0) {
        ParticipantName = other.ParticipantName;
      }
      if (other.ParticipantJob.Length != 0) {
        ParticipantJob = other.ParticipantJob;
      }
      if (other.ParticipantTitle.Length != 0) {
        ParticipantTitle = other.ParticipantTitle;
      }
      if (other.ParticipantCompany.Length != 0) {
        ParticipantCompany = other.ParticipantCompany;
      }
      if (other.ParticipantCountry.Length != 0) {
        ParticipantCountry = other.ParticipantCountry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ParticipantType = input.ReadString();
            break;
          }
          case 18: {
            ParticipantName = input.ReadString();
            break;
          }
          case 26: {
            ParticipantJob = input.ReadString();
            break;
          }
          case 34: {
            ParticipantTitle = input.ReadString();
            break;
          }
          case 42: {
            ParticipantCompany = input.ReadString();
            break;
          }
          case 50: {
            ParticipantCountry = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Report_TalkVM : pb::IMessage<Report_TalkVM> {
    private static readonly pb::MessageParser<Report_TalkVM> _parser = new pb::MessageParser<Report_TalkVM>(() => new Report_TalkVM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Report_TalkVM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractServiceNew.GrpcConferenceContractServiceNewReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_TalkVM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_TalkVM(Report_TalkVM other) : this() {
      timeRange_ = other.timeRange_;
      talkName_ = other.talkName_;
      topicName_ = other.topicName_;
      sort_ = other.sort_;
      timeLength_ = other.timeLength_;
      startTime_ = other.startTime_;
      participantVMList_ = other.participantVMList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Report_TalkVM Clone() {
      return new Report_TalkVM(this);
    }

    /// <summary>Field number for the "TimeRange" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private string timeRange_ = "";
    /// <summary>
    /// 活动时间范围  09:00-09:05
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TalkName" field.</summary>
    public const int TalkNameFieldNumber = 2;
    private string talkName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TalkName {
      get { return talkName_; }
      set {
        talkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TopicName" field.</summary>
    public const int TopicNameFieldNumber = 3;
    private string topicName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TopicName {
      get { return topicName_; }
      set {
        topicName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 4;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "TimeLength" field.</summary>
    public const int TimeLengthFieldNumber = 5;
    private int timeLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeLength {
      get { return timeLength_; }
      set {
        timeLength_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParticipantVMList" field.</summary>
    public const int ParticipantVMListFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> _repeated_participantVMList_codec
        = pb::FieldCodec.ForMessage(58, global::GrpcConferenceContractServiceNew.Report_ParticipantVM.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> participantVMList_ = new pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractServiceNew.Report_ParticipantVM> ParticipantVMList {
      get { return participantVMList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Report_TalkVM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Report_TalkVM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeRange != other.TimeRange) return false;
      if (TalkName != other.TalkName) return false;
      if (TopicName != other.TopicName) return false;
      if (Sort != other.Sort) return false;
      if (TimeLength != other.TimeLength) return false;
      if (StartTime != other.StartTime) return false;
      if(!participantVMList_.Equals(other.participantVMList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeRange.Length != 0) hash ^= TimeRange.GetHashCode();
      if (TalkName.Length != 0) hash ^= TalkName.GetHashCode();
      if (TopicName.Length != 0) hash ^= TopicName.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (TimeLength != 0) hash ^= TimeLength.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      hash ^= participantVMList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeRange.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TimeRange);
      }
      if (TalkName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TalkName);
      }
      if (TopicName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TopicName);
      }
      if (Sort != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sort);
      }
      if (TimeLength != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TimeLength);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StartTime);
      }
      participantVMList_.WriteTo(output, _repeated_participantVMList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeRange);
      }
      if (TalkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TalkName);
      }
      if (TopicName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TopicName);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (TimeLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeLength);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      size += participantVMList_.CalculateSize(_repeated_participantVMList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Report_TalkVM other) {
      if (other == null) {
        return;
      }
      if (other.TimeRange.Length != 0) {
        TimeRange = other.TimeRange;
      }
      if (other.TalkName.Length != 0) {
        TalkName = other.TalkName;
      }
      if (other.TopicName.Length != 0) {
        TopicName = other.TopicName;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.TimeLength != 0) {
        TimeLength = other.TimeLength;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      participantVMList_.Add(other.participantVMList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimeRange = input.ReadString();
            break;
          }
          case 18: {
            TalkName = input.ReadString();
            break;
          }
          case 26: {
            TopicName = input.ReadString();
            break;
          }
          case 32: {
            Sort = input.ReadInt32();
            break;
          }
          case 40: {
            TimeLength = input.ReadInt32();
            break;
          }
          case 50: {
            StartTime = input.ReadString();
            break;
          }
          case 58: {
            participantVMList_.AddEntriesFrom(input, _repeated_participantVMList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
