syntax = "proto3";
//会议合同服务
package GrpcConferenceContractServiceNew;
//version_20201112
// tag<gRPC>
// host<conferencecontractserver>
// port<40001> 
service ConferenceContractServiceToGrpc{

  //============ConferenceContract==============

  //获取某表内所有数据包含分页（带些查询条件SearchStruct内查询字段为comContractNumber，comNameTranslation,owerid,companyId,conferenceId,ccIsdelete,isDiscount，year,exTypeCode(区分snec或者esh等合同，传空字符串取全部)）
  rpc GetConferenceContractList (PaginationRequestSearch) returns (ConferenceContractList) {}
  //获取付费的一级合同表内所有数据包含分页（带些查询条件SearchStruct内查询字段为comContractNumber，comNameTranslation,owerid,ccIsdelete,isDiscount，year,conferenceId,contractStatusCode）
  rpc GetConferenceContractListByIsGive (PaginationRequestSearch) returns (ConferenceContractList) {}
  //获取付费的一级合同表内所有数据包含所有ContractStatusCode的分页数据（带些查询条件SearchStruct内查询字段为comContractNumber，comNameTranslation,owerid,ccIsdelete,isDiscount，year,conferenceId）
  rpc GetConferenceContractListByIsGiveWithAllContractStatusCode (PaginationRequestSearch) returns (ConferenceContractList) {}
  //根据CompanyId获取列表
  rpc GetConferenceContractByCompanyIdList (IdRequest) returns (ConferenceContractList) {}
  //根据SearchStruct内CompanyId，year字段获取列表
  rpc GetConferenceContractByCompanyIdAndYearList (SearchStruct) returns (ConferenceContractList) {}
  //根据主键id获取单个对象
  rpc GetConferenceContractById (IdRequest) returns (ConferenceContractStruct) {}
  //创建ConferenceContract单个对象
  rpc CreateConferenceContractInfo (ConferenceContractStruct) returns (ModifyReplyForCreateOther) {}
  //修改ConferenceContract单个对象
  rpc UpdateConferenceContractInfo (ConferenceContractStruct) returns (ModifyReply) {}

  //修改ConferenceContract内业务员字段，传ConferenceContractStruct内ConferenceContractId，Owerid，Ower字段
  rpc ModifyConferenceContractByOwer (ConferenceContractStruct) returns (ModifyReply) {}

  //修改ConferenceContract内PaymentStatusCode字段值，传ConferenceContractStruct内ConferenceContractId字段
  rpc ModifyConferenceContractPaymentStatusCode (ConferenceContractStruct) returns (ModifyReply) {}

  //修改ConferenceContract内IsSendEmail字段值
  rpc ModifyConferenceContractIsSendEmail (ConferenceContractCidList) returns (ModifyReply) {}

  //修改ConferenceContract内ModifyPermission字段值,根据SearchStruct内conferenceContractId,modifyPermission,userName(修改操作人)字段
  rpc ModifyModifyPermissionById (SearchStruct) returns (ModifyReply) {}

  //删除ConferenceContract单个对象
  rpc DeleteConferenceContractById (IdRequest) returns (ModifyReply) {}
  //删除ConferenceContract多个对象
  rpc DeleteConferenceContractByList (ConferenceContractCidList) returns (ModifyReply) {}
  //删除ConferenceContract多个一级合同的同时，删除每个ConferenceContractId下面所属的二级和三级下面的所有合同
  rpc DeleteConCAndCCAndPCByConIdList (ConferenceContractCidList) returns (ModifyReply) {}

  //============CompanyContract==============

  //获取某表内所有数据包含分页
  //（带查询条件SearchStruct内查询字段为comContractNumber,comNameTranslation,companyServicePackId,contractTypeId,conferenceId,ccIsdelete,isOwer(为false拿全部数据，为true时请指定owerid),owerid,isDiscount,IsContractTypeWithECode,cTypeCode,IsCheckIn,IsVerify,IsFillPC,companyId,comPrice,contractStatusCode,isGive,year）
  rpc GetCompanyContractList (PaginationRequestSearch) returns (CompanyContractList) {}
  //根据ConferenceContractId获取列表
  rpc GetCompanyContractByConferenceContractIdList (IdRequest) returns (CompanyContractList) {}
  //根据CompanyId获取列表
  rpc GetCompanyContractByCompanyIdList (IdRequest) returns (CompanyContractList) {}
  //根据主键id获取单个对象
  rpc GetCompanyContractById (IdRequest) returns (CompanyContractStruct) {}
  //创建CompanyContract单个对象
  rpc CreateCompanyContractInfo (CompanyContractStruct) returns (ModifyReplyForCreateOther) {}
  //修改CompanyContract单个对象
  rpc UpdateCompanyContractInfo (CompanyContractStruct) returns (ModifyReply) {}

  //根据ContractId修改CompanyContract内MaxContractNumber字段值
  rpc ModifyMaxContractNumber (CompanyContractStruct) returns (ModifyReply) {}

  //修改CompanyContract表内Owerid，Ower，MaxContractNumber字段，同时又修改PersonContract表内Owerid，Ower字段接口
  rpc ModifyCCPCOwer (ModifyCCPCOwerInfoStruct) returns (ModifyReply) {}

  //删除CompanyContract单个对象
  rpc DeleteCompanyContractById (IdRequest) returns (ModifyReply) {}
  //删除CompanyContract单个对象
  rpc RemoveCompanyContractIfPersonContractEmpty (IdRequest) returns (ModifyReplyForCreateOther) {}
  //删除CompanyContract多个对象
  rpc DeleteCompanyContractByList (CompanyContractCidList) returns (ModifyReply) {}
  //删除CompanyContract多个二级合同的同时，删除每个ContractId下面所属的三级下面的所有合同
  rpc DeleteCCAndPCByCidList (CompanyContractCidList) returns (ModifyReply) {}

  //============PersonContract==============

  //获取某表内所有数据包含分页（带查询条件）
  //（带查询条件SearchStruct内查询字段为perContractNumber,comNameTranslation,memTranslation,companyServicePackId,owerid,cTypeCode,conferenceId,pcIsdelete,companyId,year,memberPK,contractCode,exTypeCode(区分snec或者esh等合同，传空字符串取全部),isVerifyGive为true时配合isGive，为false获取全部）
  rpc GetPersonContractList (PaginationRequestSearch) returns (PersonContractList) {}
  //根据ContractId获取PersonContract表内所有个人合同的列表包含分页
  rpc GetPersonContractByContractIdList (PaginationRequestSearch) returns (PersonContractList) {}

  //（带查询条件SearchStruct内查询字段为perContractNumber,memTranslation,companyServicePackId,owerid,cTypeCode,conferenceId,pcIsdelete，isNowYear,year,enterpriseType）
  rpc GetPersonContractByNewList (PaginationRequestSearch) returns (PersonContractList) {}

  //根据MemberPK,exTypeCode(区分snec或者esh等合同，传空字符串取全部)获取PersonContract表内所有个人合同的列表包含分页
  rpc GetPersonContractByMemberPKList (PaginationRequestSearch) returns (PersonContractList) {}

  //根据MemberPK(必传),companyServicePackId,year,contractCode(区分储能或光伏的合同)获取PersonContract表内所有个人合同的列表
  rpc GetPersonContractByMemberPKListWithNoPagination (SearchStruct) returns (PersonContractList) {}

  //根据主键id获取单个对象
  rpc GetPersonContractById (IdRequest) returns (PersonContractStruct) {}

  //根据SearchStruct内perContractNumber获取PersonContractStruct对象
  rpc GetPersonContractByPersonContractNumber (SearchStruct) returns (PersonContractStruct) {}

  //创建PersonContract单个对象
  rpc CreatePersonContractInfo (PersonContractStruct) returns (ModifyReplyForCreateOther) {}
  //修改PersonContract单个对象
  rpc UpdatePersonContractInfo (PersonContractStruct) returns (ModifyReply) {}

  //修改PersonContract报道状态
  rpc ModifyPersonContractByIsCheckIn (ModifyRequest) returns (ModifyReply) {}

  //根据多个PersonContractId批量修改PersonContract报道状态
  rpc ModifyPersonContractIsCheckInByIdList (CheckInRequest) returns (ModifyReply) {}

  //修改PersonContract内IsSendEmail字段值
  rpc ModifyPersonContractIsSendEmail (PersonContractPidList) returns (ModifyReply) {}

  //根据PerContractNumber修改PersonContract内IsFianceRecord字段值
  rpc ModifyPersonContractIsFianceRecord (PersonContractPCNoRequest) returns (ModifyReply) {}

  //根据SearchStruct内owerid，isPrint修改PersonContract内IsPrint字段值
  rpc ModifyPersonContractIsPrintByOwerid (SearchStruct) returns (ModifyReply) {}
  //根据多个id批量修改PersonContract内IsPrint字段值
  rpc ModifyPersonContractIsPrintByids (IdsRequest) returns (ModifyReply) {}

  //删除PersonContract单个对象
  rpc DeletePersonContractById (IdRequest) returns (ModifyReply) {}
  //删除PersonContract多个对象
  rpc DeletePersonContractByList (PersonContractPidList) returns (ModifyReply) {}
  //删除PersonContract对象，同时判断二级合同MaxContractNumber为-1时，把二级合同同时一起删除
  rpc DeletePersonContractByIdForWeb (IdRequest) returns (ModifyReply) {}

  //============CompanyServicePack==============

  //获取CompanyServicePack字典
  rpc GetCompanyServicePackDic (Empty) returns (CompanyServicePackList) {}
  //根据SearchStruct内year获取CompanyServicePack字典
  rpc GetCompanyServicePackDicByYear (SearchStruct) returns (CompanyServicePackList) {}
  //获取IsShownOnFront为true的CompanyServicePackList,SearchStruct内year和conferenceId字段
  rpc GetCompanyServicePackListByIsShownOnFront (SearchStruct) returns (CompanyServicePackList) {}
  //获取某表内所有数据包含分页（带查询条件SearchStruct内查询字段为Translation,conferenceId,conferenceName,contractTypeId,IsDelete,year）
  rpc GetCompanyServicePackList (PaginationRequestSearch) returns (CompanyServicePackList) {}
  //根据ContractTypeId获取CompanyServicePackList
  rpc GetCompanyServicePackListByContractTypeId (IdRequest) returns (CompanyServicePackList) {}
  //获取某表内午餐和晚宴的套餐列表（带查询条件SearchStruct内查询字段为cTypeCode,conferenceId,year）
  rpc GetCompanyServicePackListForLunchOrDinner (SearchStruct) returns (CompanyServicePackList) {}
  //根据主键id获取单个对象
  rpc GetCompanyServicePackById (IdRequest) returns (CompanyServicePackVMStruct) {}
  //创建CompanyServicePack单个对象
  rpc CreateCompanyServicePackInfo (CompanyServicePackVMStruct) returns (ModifyReply) {}
  //修改CompanyServicePack单个对象
  rpc UpdateCompanyServicePackInfo (CompanyServicePackVMStruct) returns (ModifyReply) {}
  //删除CompanyServicePack单个对象
  rpc DeleteCompanyServicePackById (IdRequest) returns (ModifyReply) {}

  //根据SearchStruct内perContractNumber字段获取CompanyServicePack和ServicePackList
  rpc GetCompanyServicePackVMByPersonContractNumber (SearchStruct) returns (CompanyServicePackVMStruct) {}

  //============ExtraService==============

  //获取某表内所有数据包含分页（带查询条件SearchStruct内查询字段为extraContractNumber,memTranslation,IsDelete）
  rpc GetExtraServiceList (PaginationRequestSearch) returns (ExtraServiceList) {}
  //根据主键id获取单个对象
  rpc GetExtraServiceById (IdRequest) returns (ExtraServiceVMStruct) {}
  //创建ExtraService单个对象
  rpc CreateExtraServiceInfo (ExtraServiceVMStruct) returns (ModifyReply) {}
  //修改ExtraService单个对象
  rpc UpdateExtraServiceInfo (ExtraServiceVMStruct) returns (ModifyReply) {}
  //删除ExtraService单个对象
  rpc DeleteExtraServiceById (IdRequest) returns (ModifyReply) {}

  //============ServicePack==============

  //获取所有数据列表
  rpc GetServicePackListAll (Empty) returns (ServicePackList) {}
  //根据ConferenceId获取ServicePackList
  rpc GetServicePackByConferenceIdList (IdRequest) returns (ServicePackList) {}
  //获取某表内所有数据包含分页（带查询条件SearchStruct内查询字段为Translation,conferenceId,conferenceName,IsDelete,year）
  rpc GetServicePackList (PaginationRequestSearch) returns (ServicePackList) {}
  //根据主键id获取单个对象
  rpc GetServicePackById (IdRequest) returns (ServicePackVMStruct) {}
  //创建ServicePack单个对象
  rpc CreateServicePackInfo (ServicePackVMStruct) returns (ModifyReply) {}
  //修改CompanyServicePack单个对象
  rpc UpdateServicePackInfo (ServicePackVMStruct) returns (ModifyReply) {}
  //删除CompanyServicePack单个对象
  rpc DeleteServicePackById (IdRequest) returns (ModifyReply) {}
  //判断ServicePackActivityMap表是否有引用Activity表内数据，如果引用就不能删除
  rpc IsCanDeleteAcitvity (IdRequest) returns (ResultReply) {}

  //============ServicePackActivityMap==============
  //根据SearchStruct内sessionConferenceId字段,判断是否存在sessionConferenceId的数据
  rpc IsExistSessionConferencdId (SearchStruct) returns (ResultReply) {}
  //根据SearchStruct内sessionConferenceId字段,
  //清空SessionConferenceID，SessionConferenceName，SessionIDs（如多个的话根据sessionConferenceId值对应值清掉）
  rpc RemoveSCBySessionConferencdId (SearchStruct) returns (ModifyReply) {}

  //============ContractType==============

  //获取ContractType字典项
  rpc GetContractTypeDic (Empty) returns (ContractTypeList) {}
  //获取某表内所有数据包含分页
  rpc GetContractTypeList (PaginationRequest) returns (ContractTypeList) {}
  //根据主键id获取单个对象
  rpc GetContractTypeById (IdRequest) returns (ContractTypeStruct) {}
  //创建ContractType单个对象
  rpc CreateContractTypeInfo (ContractTypeStruct) returns (ModifyReply) {}
  //修改ContractType单个对象
  rpc UpdateContractTypeInfo (ContractTypeStruct) returns (ModifyReply) {}
  //删除ContractType单个对象
  rpc DeleteContractTypeById (IdRequest) returns (ModifyReply) {}

  //============CCNumberConfig==============

  //获取CCNumberConfig字典项
  rpc GetCCNumberConfigDic (Empty) returns (CCNumberConfigList) {}
  //获取某表内所有数据包含分页
  rpc GetCCNumberConfigList (PaginationRequest) returns (CCNumberConfigList) {}
  //根据主键id获取单个对象
  rpc GetCCNumberConfigById (IdRequest) returns (CCNumberConfigStruct) {}
  //创建CCNumberConfig单个对象
  rpc CreateCCNumberConfigInfo (CCNumberConfigStruct) returns (ModifyReply) {}
  //修改CCNumberConfig单个对象
  rpc UpdateCCNumberConfigInfo (CCNumberConfigStruct) returns (ModifyReply) {}
  //删除CCNumberConfig单个对象
  rpc DeleteCCNumberConfigById (IdRequest) returns (ModifyReply) {}

  //============DelegateServicePackDiscount==============

  //获取某表内所有数据包含分页(SearchStruct内查询字段为comContractNumber,comNameTranslation,ccIsdelete,conferenceId,year)
  rpc GetDSPDList (PaginationRequestSearch) returns (DelegateServicePackDiscountList) {}
  //根据主键id获取单个对象
  rpc GetDSPDById (IdRequest) returns (DelegateServicePackDiscountListStruct) {}
  //创建DelegateServicePackDiscount单个对象
  rpc CreateDSPDInfo (DelegateServicePackDiscountStruct) returns (ModifyReply) {}
  //修改DelegateServicePackDiscount单个对象
  rpc UpdateDSPDInfo (DelegateServicePackDiscountStruct) returns (ModifyReply) {}
  //删除DelegateServicePackDiscount单个对象
  rpc DeleteDSPDById (IdRequest) returns (ModifyReply) {}

  //============DelegateServicePackDiscountForConferenceContract==============

  //获取某表内所有数据包含分页(SearchStruct内查询字段为comContractNumber,comNameTranslation,ccIsdelete)
  rpc GetDSPDFCCList (PaginationRequestSearch) returns (DelegateServicePackDiscountForConferenceContractList) {}
  //根据主键id获取单个对象
  rpc GetDSPDFCCById (IdRequest) returns (DelegateServicePackDiscountForConferenceContractListStruct) {}
  //创建DelegateServicePackDiscountForConferenceContract单个对象
  rpc CreateDSPDFCCInfo (DelegateServicePackDiscountForConferenceContractStruct) returns (ModifyReply) {}
  //修改DelegateServicePackDiscountForConferenceContract单个对象
  rpc UpdateDSPDFCCInfo (DelegateServicePackDiscountForConferenceContractStruct) returns (ModifyReply) {}
  //删除DelegateServicePackDiscountForConferenceContract单个对象
  rpc DeleteDSPDFCCById (IdRequest) returns (ModifyReply) {}

  //============ContractStatusDic==============

  //获取ContractStatusDic字典项
  rpc GetContractStatusDic (Empty) returns (ContractStatusDicForDicList) {}
  //获取某表内所有数据包含分页
  rpc GetContractStatusDicList (PaginationRequest) returns (ContractStatusDicList) {}
  //根据主键id获取单个对象
  rpc GetContractStatusDicById (IdRequest) returns (ContractStatusDicStruct) {}
  //创建ContractStatusDic单个对象
  rpc CreateContractStatusDicInfo (ContractStatusDicStruct) returns (ModifyReply) {}
  //修改ContractStatusDic单个对象
  rpc UpdateContractStatusDicInfo (ContractStatusDicStruct) returns (ModifyReply) {}
  //删除ContractStatusDic单个对象
  rpc DeleteContractStatusDicById (IdRequest) returns (ModifyReply) {}

  //============RemarkDic==============

  //获取RemarkDic字典项
  rpc GetRemarkDic (Empty) returns (RemarkDicForDicList) {}
  //获取某表内所有数据包含分页
  rpc GetRemarkDicList (PaginationRequest) returns (RemarkDicList) {}
  //根据主键id获取单个对象
  rpc GetRemarkDicById (IdRequest) returns (RemarkDicStruct) {}
  //创建RemarkDic单个对象
  rpc CreateRemarkDicInfo (RemarkDicStruct) returns (ModifyReply) {}
  //修改RemarkDic单个对象
  rpc UpdateRemarkDicInfo (RemarkDicStruct) returns (ModifyReply) {}
  //删除RemarkDic单个对象
  rpc DeleteRemarkDicById (IdRequest) returns (ModifyReply) {}

  //============PersonContractActivityMap==============

  //根据SearchStruct内memberPK和year字段获取PersonContractActivityMap列表
  rpc GetPersonContractActivityMapByMemberPKList (SearchStruct) returns (PersonContractActivityMapList) {}

  //根据SearchStruct内activityId和year字段获取PersonContractActivityMap列表
  rpc GetPersonContractActivityMapByActivityIdList (SearchStruct) returns (PersonContractActivityMapList) {}

  //根据SearchStruct内perContractNumber和year字段获取PersonContractActivityMap列表(根据个人合同号获取PersonContractActivityMap列表)
  rpc GetPersonContractActivityMapByPersonContractNumberList (SearchStruct) returns (PersonContractActivityMapList) {}

  //创建PersonContractActivityMap多个对象
  rpc CreatePersonContractActivityMapInfo (PersonContractActivityMapList) returns (ModifyReply) {}

  //修改PersonContractActivityMap多个对象
  rpc UpdatePersonContractActivityMapInfo (PersonContractActivityMapListToUpdate) returns (ModifyReply) {}

  //============ApplyConference==============

  //根据SearchStruct内sessionConferenceId获取ApplyConferenceList（带分页和查询条件）
  rpc GetApplyConferenceBySessionConferenceIdListPagination (PaginationRequestSearch) returns (ApplyConferenceList) {}

  //根据SearchStruct内memberPK,year获取ApplyConferenceList（带分页和查询条件）
  rpc GetApplyConferenceByMemberPkAndYear (SearchStruct) returns (ApplyConferenceList) {}

  //根据SearchStruct内sessionConferenceId,tagtypeCode,year,owerid获取ApplyConferenceList（带分页和查询条件）
  rpc GetApplyConferenceBySessionConferenceIdAndTagTypeCodeList (PaginationRequestSearch) returns (ApplyConferenceList) {}

  //根据SearchStruct内id(PersonContractId),year获取ApplyConferenceList
  rpc GetApplyConferenceByPerContractIdList (SearchStruct) returns (ApplyConferenceList) {}
  //根据CompanyId获取ApplyConferenceList
  rpc GetApplyConferenceByCompanyIdList (IdRequest) returns (ApplyConferenceList) {}
  //根据SessionConferenceId获取ApplyConferenceList
  rpc GetApplyConferenceBySessionConferenceIdList (IdRequest) returns (ApplyConferenceList) {}
  //新增或修改ApplyConference多个对象
  rpc CreateOrUpdateApplyConferenceInfo (ApplyConferenceListToCreateOrUpdate) returns (ModifyReply) {}

  //============InviteLetter==============

  //根据主键id获取单个对象
  rpc GetInviteLetterById (IdRequest) returns (InviteLetterStruct) {}
  //创建InviteLetter单个对象
  rpc CreateInviteLetterInfo (InviteLetterStruct) returns (ModifyReplyForCreateOther) {}

  //============TagType==============

  //获取TagType字典项
  rpc GetTagTypeDic (Empty) returns (TagTypeForDicList) {}
  //根据code获取YearConfig
  rpc GetTagTypeByCode (CodeRequest) returns (TagTypeStruct) {}
  //创建TagType单个对象
  rpc CreateTagTypeInfo (TagTypeStruct) returns (ModifyReply) {}
  //修改TagType单个对象
  rpc UpdateTagTypeInfo (TagTypeStruct) returns (ModifyReply) {}
  //删除TagType单个对象
  rpc DeleteTagTypeById (IdRequest) returns (ModifyReply) {}

  //============YearConfig==============

  //获取YearConfig字典项
  rpc GetYearConfigDic (Empty) returns (YearConfigForDicList) {}
  //根据SearchStruct内isUse字段获取YearConfig字典项
  rpc GetYearConfigByIsUse (SearchStruct) returns (YearConfigForDicList) {}
  //创建YearConfig单个对象
  rpc CreateYearConfigInfo (YearConfigStruct) returns (ModifyReply) {}
  //修改YearConfig单个对象
  rpc UpdateYearConfigInfo (YearConfigStruct) returns (ModifyReply) {}

  //============ConferenceOnsite==============

  //获取ConferenceOnsite列表，搜索条件为SearchStruct内contractNumber，companyName，companyServicePackId，userName,year
  rpc GetConferenceOnsiteList (PaginationRequestSearch) returns (ConferenceOnsiteList) {}
  //根据主键id获取单个对象
  rpc GetConferenceOnsiteById (IdIntRequest) returns (ConferenceOnsiteStruct) {}
  //创建ConferenceOnsite单个对象
  rpc CreateConferenceOnsiteInfo (ConferenceOnsiteStruct) returns (ModifyReplyForConferenceOnsite) {}
  //修改ConferenceOnsite单个对象
  rpc UpdateConferenceOnsiteInfo (ConferenceOnsiteStruct) returns (ModifyReply) {}
  //删除ConferenceOnsite单个对象
  rpc DeleteConferenceOnsiteById (IdIntRequest) returns (ModifyReply) {}

  //============InviteCode==============

  //获取某表内所有数据包含分页，搜索条件为SearchStruct内inviteCodeNumber,webSite，isNotFullUseInviteCode(是否未完全使用的邀请码（即已使用数量<数量）)，isFullUseInviteCode(是否完全使用的邀请码（即已使用数量=数量））)，companyServicePackId,year
  rpc GetInviteCodeList (PaginationRequestSearch) returns (InviteCodeList) {}
  //根据主键id获取单个对象
  rpc GetInviteCodeById (IdRequest) returns (InviteCodeCSPVMStruct) {}
  //根据SearchStruct内InviteCodeNumber获取单个对象
  rpc GetInviteCodeByInviteCodeNumber (SearchStruct) returns (InviteCodeCSPVMStruct) {}
  //创建InviteCode单个对象
  rpc CreateInviteCodeInfo (InviteCodeStruct) returns (ModifyReply) {}
  //修改InviteCode单个对象
  rpc UpdateInviteCodeInfo (InviteCodeStruct) returns (ModifyReply) {}
  //删除InviteCode单个对象
  rpc DeleteInviteCodeById (IdRequest) returns (ModifyReply) {}

  //============InviteCodeRecord==============

  //获取某表内所有数据包含分页，搜索条件为SearchStruct内perContractNumber，memberPK,memTranslation，inviteCodeId
  rpc GetInviteCodeRecordList (PaginationRequestSearch) returns (InviteCodeRecordList) {}
  //根据主键id获取单个对象
  rpc GetInviteCodeRecordById (IdRequest) returns (InviteCodeRecordStruct) {}
  //创建InviteCodeRecord单个对象
  rpc CreateInviteCodeRecordInfo (InviteCodeRecordStruct) returns (ModifyReply) {}
  //修改InviteCodeRecord单个对象
  rpc UpdateInviteCodeRecordInfo (InviteCodeRecordStruct) returns (ModifyReply) {}
  //删除InviteCodeRecord单个对象
  rpc DeleteInviteCodeRecordById (IdRequest) returns (ModifyReply) {}

  //============其他接口==============

  //复制CompanyServicePack表和ServicePack表数据,
  //传入SearchStruct内id(前一年的ConferenceId值，根据该值区分不同的会议套餐),year,conferenceId(新一年的会议id),conferenceName(新一年的会议名字，CompanyServicePack内ConferenceName字段string),Translation(ServicePack内ConferenceName字段Json格式)字段值
  rpc CopyPackInfoByYear (SearchStruct) returns (ModifyReply) {}
  //复制CompanyServicePack表和ServicePack表数据和CompanyServicePackMap表数据（关于储能），
  //传入SearchStruct内year,conferenceId,conferenceName(CompanyServicePack内ConferenceName字段string),Translation(ServicePack内ConferenceName字段Json格式)字段值
  //rpc CopyPackInfoByYearForESH (SearchStruct) returns (ModifyReply) {}
  //把复制后的CompanyServicePack表和ServicePack表新数据，通过此接口在关联起来
  rpc CreateCompanyServicePackMap (CompanyServicePackMapList) returns (ModifyReply) {}

  //根据SearchStruct内isGive，year字段获取ContractStatisticsList
  rpc GetContractStatisticsList (SearchStruct) returns (ContractStatisticsList) {}
  //根据SearchStruct内companyId，year字段,如果这个公司year年的所有二级合同中MaxContractNumber为正数的二级合同底下三级合同数量和最大数保持一致的，返回true，否则返回false
  rpc IsMaxContractNumberEqualsPCCountByCompanyPKAndYear (SearchStruct) returns (BoolReply) {}
  //根据SearchStruct内sessionConferenceId(必传，多个用","分隔)，perContractNumber，memTranslation，owerid，comNameTranslation，companyServicePackId,IsCheckIn,year字段获取参会晚宴数据
  rpc GetPersonContractListForLunch (PaginationRequestSearch) returns (PersonContractAndSessionConferenceIdList) {}
  //根据SearchStruct内sessionConferenceId,tagtypeCode,year获取PersonContractList（带分页）
  rpc GetPersonContractListAndApplyConference (PaginationRequestSearch) returns (PersonContractList) {}
  //导出个人合同表数据（IsPrint为false）
  //（带查询条件SearchStruct内查询字段为perContractNumber,comNameTranslation,memTranslation,companyServicePackId,owerid,cTypeCode,conferenceId,pcIsdelete,companyId,year,memberPK,contractCode,exTypeCode(区分snec或者esh等合同，传空字符串取全部)）
  rpc ExportPersonContractList (SearchStruct) returns (PersonContractList) {}
  //PersonContractActivityMap数据重整使用（不对外）
  //rpc CreatePersonContractActivityMapImport (Empty) returns (ModifyReplyForCreateOther) {}
}

message Empty {
}

message IdRequest {
  string id = 1;
}

message IdIntRequest {
  int32 id = 1;
}

message IdsRequest {
  string ids = 1;
}

message CodeRequest {
  string code = 1;
}

message PaginationRequest {
  int32 id = 1;
  int32 offset = 2;
  int32 limit = 3;
}

message PaginationRequestSearch {
  int32 id = 1;
  int32 offset = 2;
  int32 limit = 3;
  SearchStruct search = 4;
}

message SearchStruct{
  //公司名称
  string comNameTranslation = 1;
  //公司合同号
  string comContractNumber = 2;
  string contractTypeId = 3;
  string conferenceId = 4;
  bool ccIsdelete = 5;
  string Translation = 6;
  string perContractNumber = 7;
  string memTranslation = 8;
  bool pcIsdelete = 9;
  string contractId = 10;
  bool isDiscount = 11;
  bool isCheckIn = 12;
  bool isVerify = 13;
  bool isDelete = 14;
  string extraContractNumber = 15;
  string memberPK = 16;
  string activityId = 17;
  string year = 18;
  bool isFillPC = 19;	
  bool isConfirm = 20;
  //业务员id
  string owerid = 21; 
  string cTypeCode = 22;
  string companyServicePackId = 23;
  bool isContractTypeWithECode = 24;	
  string sessionConferenceId = 25;
  string companyId = 26;
  string comPrice = 27;
  string contractStatusCode = 28;
  bool isGive = 29;
  bool isUse = 30;
  string orderings = 31;
  string tagtypeCode = 32;
  bool isNowYear = 33;
  string contractCode = 34;
  bool isOwer = 35;
  string conferenceName = 36;
  string conferenceContractId = 37;
  string modifyPermission = 38;
  string enterpriseType = 39;
  string contractNumber = 40;
  string companyName = 41;
  string exTypeCode = 42;
  string userName = 43;
  string webSite = 44;
  bool isFullUseInviteCode = 45;
  bool isNotFullUseInviteCode = 46;
  string inviteCodeNumber = 47;
  string inviteCodeId = 48;
  bool isPrint = 49;
  bool isVerifyGive = 50;
  string perContractId = 51;
  string id = 52;
}


message ConferenceContractCidList {
  //ConferenceContractId的列表
  repeated string Cidlistdata = 1;
}

message PersonContractPidList {
  //PersonContractId的列表
  repeated string Pidlistdata = 1;
}

message PersonContractPCNoRequest {
  //PersonContractNumber的列表对象
  repeated PersonContractPCNoStruct listdata = 1;
}

message PersonContractPCNoStruct {
  //PersonContractNumber的列表
  string PerContractNumber = 1;
  //是否有财务记录
  bool Comfirmed = 2; 
}

message CompanyContractCidList {
  //CompanyContractId的列表
  repeated string Cidlistdata = 1;
}

message ConferenceContractList {
  repeated ConferenceContractStruct listdata = 1;
  int32 total = 2;
}

message CompanyContractList {
  repeated CompanyContractStruct listdata = 1;
  int32 total = 2;
}

message PersonContractList {
  repeated PersonContractStruct listdata = 1;
  int32 total = 2;
}

message CompanyServicePackList {
  repeated CompanyServicePackStruct listdata = 1;
  int32 total = 2;
}

message ExtraServiceList {
  repeated ExtraServiceStruct listdata = 1;
  int32 total = 2;
}

message ServicePackList {
  repeated ServicePackStruct listdata = 1;
  int32 total = 2;
}

message CCNumberConfigList {
  repeated CCNumberConfigStruct listdata = 1;
  int32 total = 2;
}

message ContractTypeList {
  repeated ContractTypeStruct listdata = 1;
  int32 total = 2;
}

message DelegateServicePackDiscountList {
  repeated DelegateServicePackDiscountListStruct listdata = 1;
  int32 total = 2;
}

message DelegateServicePackDiscountForConferenceContractList {
  repeated DelegateServicePackDiscountForConferenceContractListStruct listdata = 1;
  int32 total = 2;
}

message ConferenceOnsiteList {
  repeated ConferenceOnsiteStruct listdata = 1;
  int32 total = 2;
}

message InviteCodeList {
  repeated InviteCodeCSPVMStruct listdata = 1;
  int32 total = 2;
}

message InviteCodeRecordList {
  repeated InviteCodeRecordStruct listdata = 1;
  int32 total = 2;
}


message PersonContractAndSessionConferenceIdList {
  repeated PersonContractAndSessionConferenceIdsStruct listdata = 1;
  int32 total = 2;
  int32 allTotal = 3;
}

message PersonContractActivityMapList {
  repeated PersonContractActivityMapStruct listdata = 1;
}

message CompanyServicePackMapList {
  repeated CompanyServicePackMapVMStruct listdata = 1;
}

message ContractStatisticsList {
  repeated ContractStatisticsStruct listdata = 1;
}


message PersonContractActivityMapListToUpdate {
  //MemberPK
  string MemberPK = 1;
  //PersonContractActivityMap列表，如果没有可以为空
  repeated PersonContractActivityMapStruct listdata = 2;
}


message ConferenceContractStruct {
  //主键
  string ConferenceContractId = 1;
  //公司id
  string CompanyId = 2;
  //公司中英文名字
  ComNameTranslationStruct ComNameTranslation = 3;
  //合同号
  string ContractNumber = 4;
  //CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）
  string ContractCode = 5;
  //是否删除
  bool IsDelete = 6;
  //业务员id
  string Owerid = 7; 
  //业务员姓名
  string Ower = 8; 
  string CreatedOn = 9;
  string CreatedBy = 10;
  string ModefieldOn = 11;
  string ModefieldBy = 12;
  //二级合同列表
  repeated CompanyContractStruct Clistdata = 13;
  //合同年份
  string ContractYear = 14;
  //一级合同折扣列表
  repeated DelegateServicePackDiscountForConferenceContractStruct dlistdata = 15;
  //ConferenceId
  string ConferenceId = 16;
  string AlternativeContractNumber = 17;
  //合同状态Code
  string ContractStatusCode = 18;
  //支付状态Code
  string PaymentStatusCode = 19;
  //是否发送Email
  bool IsSendEmail = 20;
  //是否修改
  bool IsModify = 21;
  //修改许可
  string ModifyPermission = 22;
}

message CompanyContractStruct {
  //主键
  string ContractId = 1;
  //CompanyServicePackId
  string CompanyServicePackId = 2;
  //CompanyId
  string CompanyId = 3;
  //string  ComNameTranslation = 4;
  //公司中英文名
  ComNameTranslationStruct ComNameTranslation = 4;
  //二级合同号
  string ComContractNumber = 5;
  //国家
  string Country = 6;
  //string AddressTranslation = 7;
  //地址中英文
  AddressTranslationStruct AddressTranslation = 7;
  //最大合同数
  string MaxContractNumber = 8;
  //是否删除
  bool CCIsdelete = 9;
  //0代表内资;1代表外资
  int32 EnterpriseType = 10; 
  //是否审核
  bool IsVerify = 11;
  //业务员id
  string Owerid = 12; 
  //业务员姓名
  string Ower = 13; 
  string CreatedOn = 14;
  string CreatedBy = 15;
  string ModefieldOn = 16;
  string ModefieldBy = 17;
  //套餐对象
  CompanyServicePackStruct CompanyServicePack = 18;
  //二级折扣合同列表
  repeated DelegateServicePackDiscountStruct dlistdata = 19;
  //CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）C中资 E外资 S后台合同 W前台合同
  string ContractCode = 20;
  //ConferenceId
  string ConferenceId = 21;
  //会议名称
  string ConferenceName = 22;
  //是否报道
  bool IsCheckIn = 23;
  //PPTUrl
  string PPTUrl = 24;
  //合同状态Code
  string ContractStatusCode = 25;
  //ConferenceContractId
  string ConferenceContractId = 26;
  //个人合同列表
  repeated PersonContractStruct plistdata = 27;
  //二级合同价格
  string ComPrice = 28;
}

message PersonContractStruct {
  //主键
  string PersonContractId = 1;
  //ContractId
  string ContractId = 2;
  //个人合同号
  string PerContractNumber = 3;
  //MemberPK
  string MemberPK = 4;
  //会员姓名
  MemTranslationStruct MemTranslation = 5;
  //是否删除
  bool PCIsdelete = 6;
  string CreatedOn = 7;
  string CreatedBy = 8;
  string ModefieldOn = 9;
  string ModefieldBy = 10;
  //业务员id
  string Owerid = 11; 
  //业务员姓名
  string Ower = 12; 
  //ConferenceContractId
  string ConferenceContractId = 13;
  //ContractType合同大类
  string CTypeCode = 14;
  //二级合同对象
  CompanyContractStruct CompanyContract = 15;
  //是否报道
  bool IsCheckIn = 16;
  //是否发送Email
  bool IsSendEmail = 17;
  //是否修改
  bool IsModify = 18;
  //ConferenceId
  string ConferenceId = 19;
  //是否有财务记录
  bool IsFianceRecord = 20;
  //是否是邀请码创建合同
  bool IsInviteCode = 21;
  //InviteCodeId邀请码Id
  string InviteCodeId = 22;
  //是否提交摘要
  bool IsCommitAbstract = 23;
  //是否打印
  bool IsPrint = 24;
  //已付金额
  string PaidAmount = 25;
}

message CompanyServicePackStruct {
  //主键
  string CompanyServicePackId = 1;
  //ContractTypeId
  string ContractTypeId = 2;
  //排序
  int32 Sort = 3;
  //套餐名称
  TranslationStruct Translation = 4;
  //人民币
  string PriceRMB = 5;
  //美金
  string PriceUSD = 6;
  //是否在前端显示
  bool IsShownOnFront = 7;
  string CreatedOn = 8;
  string CreatedBy = 9;
  string ModefieldOn = 10;
  string ModefieldBy = 11;
  //备注
  TranslationStruct RemarkTranslation = 12;
  //ConferenceId
  string ConferenceId = 13;
  //会议名称
  string ConferenceName = 14;
  //是否是演讲人
  bool IsSpeaker = 15;
  //合同大类Code
  string CTypeCode = 16;
  //是否赠送
  bool IsGive = 17;
  //年份
  string Year = 18;
  //说明Code
  string RemarkCode = 19;
}

message CompanyServicePackVMStruct {
  //公司套餐对象
  CompanyServicePackStruct CompanyServicePack = 1;
  //子套餐列表
  repeated ServicePackStruct servicepack_listdata = 2;
}

message ExtraServiceVMStruct {
  //额外服务对象
  ExtraServiceStruct ExtraService = 1;
  //子套餐列表
  repeated ServicePackStruct servicepack_listdata = 2;
}

message ServicePackVMStruct {
  //ServicePack对象
  ServicePackStruct ServicePack = 1;
  //Activity列表
  repeated ActivityStruct activity_listdata = 2;
}

message ExtraServiceStruct {
  //主键
  string ExtraServiceId = 1;
  //额外服务合同的合同号
  string ExtraContractNumber = 2;
  //MemberPK
  string MemberPK = 3;
  //会员中英文名json格式
  MemTranslationStruct MemTranslation = 4;
  //业务员id
  string Owerid = 5; 
  //业务员姓名
  string Ower = 6; 
  string CreatedOn = 7;
  string CreatedBy = 8;
  string ModefieldOn = 9;
  string ModefieldBy = 10;
}

message ServicePackStruct {
  //主键
  string ServicePackId = 1;
  //主键
  TranslationStruct Translation = 2;
  //主键
  string PriceRMB = 3;
  //主键
  string PriceUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
  //ConferenceId
  string ConferenceId = 9;
  //ConferenceName
  string ConferenceName = 10;
  //SessionConferenceId
  string SessionConferenceId = 11;
  //SessionConferenceName
  string SessionConferenceName = 12;
  //SessionDate
  string SessionDate = 13;
  //SessionStartTime
  string SessionStartTime = 14;
  //ThirdSessionConferenceId
  string ThirdSessionConferenceId = 15;
  //ThirdSessionConferenceName
  string ThirdSessionConferenceName = 16;
  //地址
  string SessionAddress = 17;
  //年份
  string Year = 18;
}

message ActivityStruct {
  string ActivityId = 1;
  TranslationStruct ActivityName = 2;
  string SessionConferenceID = 3;
  TranslationStruct SessionConferenceName = 4;
  int32 Sort = 5;
  string SessionIDs = 6;
}

message CCNumberConfigStruct {
  //主键
  string Id = 1;
  //前缀
  string Prefix = 2;
  //年份
  string Year = 3;
  //合同规则英文简称
  string CNano = 4;
  //合同计数
  int32 Count = 5;
  //合同规则使用状态
  int32 Status = 6;
  //是否删除
  bool IsDelete = 7;
  string ConferenceId = 8;
  string ConferenceName = 9;
}

message ContractTypeStruct {
  //主键
  string ContractTypeId = 1;
  //排序
  int32 Sort = 2;
  //合同类别名称
  TranslationStruct Translation = 3;
  //合同类别Code
  string CTypeCode = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
  //是否是演讲人
  bool IsSpeaker = 9;
  //是否赠送
  bool IsGive = 10;
}

message DelegateServicePackDiscountListStruct {
  //主键
  string DiscountId = 1;
  //CompanyContract对象
  CompanyContractStruct CompanyContract = 2;
  //人民币
  string PriceAfterDiscountRMB = 3;
  //美金
  string PriceAfterDiscountUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
  string Year = 9;
}

message DelegateServicePackDiscountForConferenceContractListStruct {
  //主键
  string DiscountId = 1;
  //ConferenceContract对象
  ConferenceContractStruct ConferenceContract = 2;
  //人民币
  string PriceAfterDiscountRMB = 3;
  //美金
  string PriceAfterDiscountUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
}

message DelegateServicePackDiscountForConferenceContractStruct {
  //主键
  string DiscountId = 1;
  //ConferenceContractId
  string ConferenceContractId = 2;
  //人民币
  string PriceAfterDiscountRMB = 3;
  //美金
  string PriceAfterDiscountUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
}


message DelegateServicePackDiscountStruct {
  //主键
  string DiscountId = 1;
  //ContractId
  string ContractId = 2;
  //人民币
  string PriceAfterDiscountRMB = 3;
  //美金
  string PriceAfterDiscountUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
  string Year = 9;
}

message TranslationStruct{
	string CN = 1;
	string EN = 2;
	string JP = 3;
}

message ComNameTranslationStruct{
	string CompanyCN = 1;
	string CompanyEN = 2;
}

message AddressTranslationStruct{
	string AddressCN = 1;
	string AddressEN = 2;
}

message MemTranslationStruct{
	string MemberCN = 1;
	string MemberEN = 2;
}

message ModifyRequest {
  //主键
  string Id = 1;
  //是否报道
  bool IsCheckIn = 2;
}

message ModifyReply {
  //是否成功
  bool success = 1;
  //成功的条数
  int32 modified_count = 2;
  //返回的消息
  string msg = 3;
}

message ModifyReplyForConferenceOnsite {
  //是否成功
  bool success = 1;
  //成功的条数
  int32 modified_count = 2;
  //返回的消息
  string msg = 3;
  //ConferenceOnsite对象
  ConferenceOnsiteStruct ConferenceOnsite = 4;
}

message ResultReply {
  bool result = 1;
}

message ContractStatusDicForDicList{
  repeated ContractStatusDicStruct listdata = 1;
}

message RemarkDicForDicList{
  repeated RemarkDicStruct listdata = 1;
}


message TagTypeForDicList{
  repeated TagTypeStruct listdata = 1;
}

message YearConfigForDicList{
  repeated YearConfigStruct listdata = 1;
}


message ContractStatusDicList {
  repeated ContractStatusDicStruct listdata = 1;
  int32 total = 2;
}

message RemarkDicList {
  repeated RemarkDicStruct listdata = 1;
  int32 total = 2;
}

message ContractStatusDicStruct {
  //主键
  string Id = 1;
  //状态名称
  string StatusName = 2;
  //状态Code
  string StatusCode = 3;
  string CreatedOn = 4;
  string CreatedBy = 5;
  string ModefieldOn = 6;
  string ModefieldBy = 7;
}

message RemarkDicStruct {
  //主键
  string Id = 1;
  //说明内容中文
  string ContentCn = 2;
  //说明内容英文
  string ContentEn = 3;
  //说明内容日文
  string ContentJp = 4;
  //说明内容Code
  string ContentCode = 5;
}


message ModifyReplyForCreateOther {
  bool success = 1;
  int32 modified_count = 2;
  string msg = 3;
  string ext1 = 4;
  string ext2 = 5;
}

message PersonContractActivityMapStruct {
  //主键
  string MapId = 1;
  //MemberPK
  string MemberPK = 2;
  //ActivityId
  string ActivityId = 3;
  //ActivityName活动名称
  string ActivityName = 4;
  //年份
  string Year = 5;
  //是否确认
  bool IsConfirm = 6;
  //是否选中
  bool IsCheck = 7;
  //PersonContractId
  string PersonContractId = 8;
  //SessionConferenceId
  string SessionConferenceId = 9;
  //SessionConferenceName
  string SessionConferenceName = 10;
}

message CompanyServicePackMapStruct {
  string Id = 1;
  string CompanyServicePackId = 2;
  string ServicePackId = 3;
}

message CompanyServicePackMapVMStruct {
  string MapId = 1;
  string CompanyServicePackId = 2;
  string ServicePackId = 3;
  string ConferenceId = 4;
  string ConferenceName = 5;
}


message ApplyConferenceList {
  repeated ApplyConferenceStruct listdata = 1;
  int32 total = 2;
}

message ApplyConferenceStruct {
  //主键
  string Id = 1;
  string PersonContractId = 2;
  string MemberPK = 3;
  string SessionConferenceId = 4;
  //是否确认
  bool IsConfirm = 5;
  string CompanyId = 6;
  //多个标签Code，用“，”分隔
  string TagTypeCodes = 7;
  //备注
  string RemarkTranslation = 8;
  //年份
  string Year = 9;
  //SessionConferenceId列表
  repeated string SessionConferenceIds = 10;
  //IsParticularConf
  bool IsParticularConf = 11;
  //业务员id
  string Owerid = 12;
}

message ConferenceOnsiteStruct {
  //主键
  int32 Id = 1;
  //现场付款生成的合同号
  string ContractNumber = 2;
  //公司名称
  string CompanyName = 3;
  //货币类型
  string Currency = 4;
  //付款方式
  string PayType = 5;
  //入账单位
  string Credited = 6;
  //付款日期
  string AddDate = 7;
  //价格
  string Cost = 8;
  //备注
  string Remark = 9; 
  //合同年份
  string ContractYear = 10;
  //参会套餐id
  string CompanyServicePackId = 11;
  string CreatedOn = 12;
  string CreatedBy = 13;
  string ModefieldOn = 14;
  string ModefieldBy = 15;
  //姓名
  string UserName = 16;
  //参会套餐类型
  string CompanyServicePackName = 17;
}

message PersonContractAndSessionConferenceIdsStruct{
  //CompanyContract对象
  CompanyContractStruct CompanyContract = 1;
  //PersonContract对象
  PersonContractStruct PersonContract = 2;
  //SessionConferenceId列表
  repeated string SessionConferenceIds = 3;
  //参会类型名
  string CompanyServicePackName = 4;
}


message ApplyConferenceListToCreateOrUpdate {
  string PersonContractId = 1;
  repeated ApplyConferenceStruct listdata = 2;
}

message InviteLetterStruct {
  //主键
  string Id = 1;
  //公司
  string Company = 2;
  //展馆号
  string EHall = 3;
  //展位号
  string ENo = 4;
  //公司
  string Profile = 5;
  //活动
  string EAcitvity = 6;
  //语言
  string Language = 7;
  string CreatedOn = 8;
}

message InviteCodeStruct {
  //主键
  string Id = 1;
  //邀请码
  string InviteCodeNumber = 2;
  //公司套餐id
  string CompanyServicePackId = 3;
  //数量
  int32 Count = 4;
  //年份
  string Year = 5;
  //网站
  string WebSite = 6;
  string CreatedOn = 7;
  string CreatedBy = 8;
  string ModefieldOn = 9;
  string ModefieldBy = 10;
}

message InviteCodeCSPVMStruct {
  //邀请码对象
  InviteCodeStruct InviteCode = 1;
  //公司套餐对象
  CompanyServicePackStruct CompanyServicePack = 2;
  //已记录使用数量
  string InviteRecordCount = 3;
}


message InviteCodeRecordStruct {
  //主键
  string Id = 1;
  //邀请码Id
  string InviteCodeId = 2;
  //会员pk
  string MemberPK = 3;
  //会员名 存json格式{ "MemberCN": "zzz", "MemberEN": "zzz" }
  string MemberName = 4;
  //使用日期
  string UseDate = 5;
  //个人合同id
  string PersonContractId = 6;
  //个人合同号
  string PersonContractNumber = 7;
  //是否删除
  bool IsDelete = 8;

}


message TagTypeStruct {
  //主键
  string Id = 1;
  //标签名称
  string NameTranslation = 2;
  //标签Code
  string Code = 3;
}

message YearConfigStruct {
  //主键
  string Id = 1;
  //年份
  string Year = 2;
  //是否是当前使用
  bool IsUse = 3;
  //年月日（格式为：2020-08-27）
  string Date = 4;
}

message CheckInRequest {
  //personContractId列表
  repeated string Ids = 1;
  //是否报到
  bool IsCheckIn = 2;
}


message ContractStatisticsStruct {
  string CompanyServicePackId = 1;
  string CompanyServicePackName = 2;
  //个人合同号数量
  string PersonCount = 3;
  //最大合同号数量
  string MaxContractNumberSum = 4;
}

message ModifyCCPCOwerInfoStruct {
  //ContractId二级合同id
  string ContractId = 1;
  //业务员id
  string Owerid = 2;
  //业务员
  string Ower = 3;
  //最大合同数
  int32 MaxContractNumber = 4;
}

message BoolReply {
  bool result = 1;
}



 //================V2.0 Begin===================

service ConferenceContractServiceNew{

 //勾选套餐接口 参数：conferenceId，上级分类Id（ContractTypeId）,Year,IsGive(是否赠送)
 rpc newGetServicePack(newGetServicePackRequest) returns(newGetServicePackResponse){}

//付费合同和赠送合同添加二级合同（套餐）接口。
//参数：1.公司信息（先根据公司名称判断是否有公司一级合同，若没有，则先创建一级合同，在创建二级合同.若已经存在一级合同，则只创建二级合同）
//		2.套餐信息
//		3.业务员
//		4.子合同数
//		5.合同状态
//注：付款状态、合同状态需要及时更新
//返回：是否插入成功
rpc  newAddCompanyContract(newServicePackStruct) returns(modifyResponseNew){}


//付费合同添加二级合同（套餐）折扣 接口。
//参数：1.公司信息（先根据公司名称判断是否有公司一级合同，若没有，则先创建一级合同，在创建二级合同.若已经存在一级合同，则只创建二级合同）
//		2.套餐信息
//		3.业务员
//		4.子合同数
//		5.合同状态,
//		6.现价
//返回：是否插入成功
rpc newAddCompanyContractDiscount(newServicePackStructDiscount) returns(modifyResponseNew){}

//当已经存在该二级合同时，合并二级合同（将原合同的最大子合同数目在原基础上增加新的子合同数）
rpc newMergeCompanyContract(newMergeCompanyContractRequest) returns(modifyResponse){}

rpc newMergeCompanyContractDiscount(newMergeCompanyContractRequest) returns (modifyResponse){}


//添加个人合同:不确定是否存在一级和二级合同，直接创建三级合同时用
rpc newAddPersonContract(newAddPersonContractRequest) returns(modifyResponse){}

//在已经有二级合同的前提下添加个人合同
rpc newAddPersonContractUnderCompanyContract(newAddPersonContractUnderCompanyContractRequest) returns (modifyResponse){}

//根据年份筛选出采用的会议配置项
rpc newGetConferenceInfo(newGetConferenceInfoRequest) returns (newGetConferenceInfoResponse){}

//根据公司Id、会议Id和年份得到对应的主业务员和副业务员
rpc newGetOwnerByConfIdAndComIdAndYear(newGetOwnerByConfIdAndComIdAndYearRequest) returns(newGetOwnerByConfIdAndComIdAndYearResponse){}

//获取一级合同
rpc newGetConferenceContractList(newGetConferenceContractListRequest) returns (newGetConferenceContractListResponse){}


//获取二级合同列表（付费、赠送）
//参数：1.请求页码
//		2.每页条数
//		3.查询条件
rpc newGetCompanyContractList(newGetCompanyContractListRequest) returns (newGetCompanyContractListResponse){}



//获取不包含折扣合同的二级合同:true--获取不包含折扣合同的二级合同 false--所有的二级付费合同
rpc newGetCompanyContratcListByIsHaveDiscount(newBoolRequest) returns (newGetCompanyContractListResponse){}

//获取未填满参会人员的二级合同(付费、赠送):true--获取没有填满参会人员的二级合同 false--所有的二级付费合同
rpc newGetCompanyContractListByIsNotFullPerson(newBoolRequest) returns (newGetCompanyContractListResponse){}

//获取二级折扣合同
rpc newGetCompanyContractListDiscount(newGetCompanyContractListDiscountRequest) returns (newGetCompanyContractListDiscountResponse){}

//一级合同根据合同Id修改业务员和副业务员
rpc newModifyOwnerByConferenceContractId(newModifyOwnerByConferenceContractIdRequest) returns (modifyResponse){}

//获取三级合同列表（个人合同）
//参数：1.请求页码
//		2.每页条数
//		3.查询条件
rpc newGetPersonContractList(newGetPersonContractListRequest) returns (newGetPersonContractListResponse){}

//获取我的演讲人列表：若提交了摘要，则姓名、公司、手机号、职务、邮箱取得是摘要中的信息，若没有提交摘要，则调取的是个人合同对应的会员的信息
rpc newGetMySpeakersList(newGetMySpeakersListRequest) returns (newGetMySpeakersListResponse){}


//新写的
//根据二级合同的邀请码注册
rpc newCreatePersonContractByCompanyContractInviteCode(newCreatePersonContractByCompanyContractInviteCodeRequest) returns (modifyResponse){}

//根据邀请码注册
rpc newCreatePersonContractByInviteCode(newCreatePersonContractByInviteCodeRequest) returns (modifyResponse){}

//--------议题使用接口Begin------

//根据二级合同号获取该二级合同下的三级合同列表
rpc newGetPersonContractListByComContratcId(newGetPersonContractListByComContratcIdRequest) returns (newGetPersonContractListResponse){}

//根据AbstractDraft中的个人合同号（三级合同号）得到AbstractParticipantID,
//根据AbstractParticipantID去查出AbstractParticipant中对应的信息（第一条）
//然后更新Participant表中对应的信息
rpc newModifyParticipantByAbstractParticipantPerContractNumber(PerContractNumberRequest) returns (modifyResponse){}

//根据Year、ConferenceId、MemberPK得到对应的参会类型是否为演讲类：true--演讲类 false--非演讲类 以及合同信息
rpc newGetComapnyServicePackType(newGetComapnyServicePackTypeRequest) returns (newGetComapnyServicePackTypeResponse){}
//--------议题使用接口End------

//---------以上为完成好的接口------------
rpc newGetPersonReportNotice(newGetReportNoticeRequest) returns (newGetReportNoticResponse){}


//获取二级合同
rpc newGetCompanyContractList1(newGetServicePackListRequest) returns (newGetServicePackListResponse){}


// //当公司、套餐、业务员、合同状态、套餐价格、年份都一致时，更新子合同数（原来的子合同数+新加的子合同数）注：点击确定按钮之前先查询是否有和该套餐一致的合同
// rpc new_ModifyServicePack(new_ServicePackStruct) returns(modifyResponse){}

//根据公司名称获取公司信息 参数：公司名 返回：公司信息
rpc newGetCompanyInfoByCompanyName(newCompanyNameRequest) returns (CompanyInfoResponse){}


//获取付费合同和赠送合同的列表（二级合同）
//参数：1.请求页码
//		2.每页条数
//		3.查询条件
rpc newGetServicePackList(newGetServicePackListRequest) returns(newGetServicePackListResponse){}



//根据合同号公司报道通知书
rpc newGetCompanyNoticeOfReportByContractNumber(newGetCompanyNoticeOfReportByContractNumberRequest) returns (newGetCompanyNoticeOfReportByContractNumberResponse){}

//根据个人合同号得到个人报道通知书
rpc newGetPersonNoticeOfReportByContractNumber(newGetPersonNoticeOfReportByContractNumberRequest) returns(newGetPersonNoticeOfReportByContractNumberResponse){}

//根据个人合同获取行程一览表
rpc newGetScheduleList(newGetScheduleListRequest) returns (newGetScheduleListResponse){}

//添加行程一览表
rpc newAddSchedule(newAddScheduleRequest) returns(modifyResponse){}

}


message modifyResponse{
  bool isSuccess=1;
  string msg=2;
}

//付费合同和赠送合同添加二级合同时需要传的参数
message newServicePackStruct{
  //二级合同信息
  string ContractId=1;
  string ConferenceContractId=2;
  string CompanyServicePackId=3;
  string ConferenceId=4;
  string CompanyId=5;
  string ComNameTranslation=6;
  string ComContractNumber=7;
  string Country=8;
  string AddressTranslation=9;
  string ComPrice=10;
  int32 MaxContractNumber=11;
  int32 MaxContractNumberSatUse=12;
  bool CCIsdelete=13;
  int32 EnterpriseType=14;
  bool IsVerify=15;
  string Owerid=16;
  string Ower=17;
  string ContractCode=18;
  bool IsCheckIn=19;
  string PPTUrl=20;
  string ContractStatusCode=21;
  string ConferenceName=22;
  string OtherOwnerId=23;
  string OtherOwner=24;
  string CreatedOn=25;
  string CreatedBy=26;
  string ModifiedOn=27;
  string ModifiedBy=28;
  string Year=29;
  //套餐包Code
  string CompanyServicePackCode=30;
}

//添加付费合同的折扣信息时需要传入的参数
message newServicePackStructDiscount{
  newServicePackStruct model=1;
  float Discount=2;
  string PriceAfterDiscountRMB=3;
  string PriceAfterDiscountUSD=4;
}


message newPersonContractStruct{
  string PersonContractId=1;
  //二级合同的Id，同时也是二级合同的邀请码
  string ContractId=2;
  string ConferenceId=3;
  string MemberPK=4;
  string MemTranslation=5;
  bool PCIsdelete=6;
  string CTypeCode=7;
  bool  IsCheckIn=8; 
  bool  IsSendEmail=9;
  bool  IsModify=10;
  bool  IsFianceRecord=11;
  string InviteCodeId=12;
  bool  IsInviteCode=13;
  bool  IsCommitAbstract=14;
  bool  IsPrint=15;
  string Owerid=16;
  string Ower=17;
  string CreatedOn=18;
  string CreatedBy=19;
  string ModifiedOn=20;
  string ModefieldBy=21;
  string CompanyServicePackId=22;
  string ConferenceContractId=23;
  string PerPrice=24;
  string PaidAmount=25;
  string OtherOwnerId=26;
  string OtherOwner=27;
  string Year=28;
}

//添加个人合同
message newAddPersonContractRequest{
  newPersonContractStruct person=1;
  newServicePackStruct companyContractModel=2;
}


message newAddPersonContractUnderCompanyContractRequest{
 newPersonContractStruct person=1;

 string Year=2;
 //二级合同的合同号
 string CompanyContractNumber=3;

}


message newCreatePersonContractByCompanyContractInviteCodeRequest{
 newPersonContractStruct person=1;
 string CompanyId=2;
}
message newCreatePersonContractByInviteCodeRequest{
 newPersonContractStruct person=1;
 string InviteCode=2;
 //值分别为：SNEC、ESH
 string WebSite=3;
  newServicePackStruct companyContractModel=4;
}
message CompanyNameRequest{
  //公司名
  string name=1;
}

//公司信息
message CompanyInfoResponse{
  //公司中文名
  string compnyName=1;
  //公司英文名
  string companyNameEn=2;
  //公司日文名
  string companyNameJp=3;
  //邮箱
  string Email=4;
  //公司Id
  string companyId=5;
}

//付费合同列表页码的搜索与请求条件
message newGetServicePackListRequest{
  message newGetServicePackListSearch{
    //年份
    string year=1;
    //会议Id
    string conferenceId=2;
    //套餐Id
    string servicePackId=3;
    //公司名
    string companyName=4;
    //合同号
    string contractNumber=5;
    //业务员
    string owner=6;
    //是否为无折扣合同
    bool isDiscount=7;
    //参会人员是否达到上限
    bool isMaxCount=8;
  }
  //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetServicePackListSearch search=3;
}

//得到付费合同和赠送合同列表
message newGetServicePackListStruct{
   //合同号
   string contractNumber=1;
   //公司中文名
   string companyNameCn=2;
   //公司英文名
   string companyNameEn=3;
   //内资还是外资
   string enterpriseType=4;
   //参会类型
   string servicePack=5;
   //应付费
   string pay=6;
   //子合同数
   string contractCount=7;
   //已填子合同数
   int32 filledContractCount=8;
   //业务员
   string owner=9;
   //邀请码
   string inviteCode=10;
   //合同状态
   string contractStatus=11;
   //创建人
   string createdBy=12;
   //创建时间
   string createdOn=13;
   //修改人
   string modifiyBy=14;
   //修改时间
   string modifyOn=15;
}

//获取付费合同和赠送合同的列表
message newGetServicePackListResponse{
   repeated newGetServicePackListStruct listdata=1;
   int32 total=2;
}

//获取公司合同（二级合同）时传入的参数
message newGetCompanyContractListRequest{
  message  newGetCompanyContractListSearch{
    //年份
    string Year=1;
    //会议Id
    string ConferenceId=2;
    //公司名
    string CompanyName=3;
    //合同号
    string ContractNumber=4;
    //业务员
    string OwnerId=5;
	//套餐Id
	string CompanyServicePackId=6;
	//排序
	string Orderings=7;
	//是否为赠送合同：true：赠送合同 false：付费合同
	bool IsGive=8;
  }
  //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetCompanyContractListSearch search=3;
}


message newGetMySpeakersListRequest{
 message newGetMySpeakersListSearch{
   //年份
    string Year=1;
    //会议Id
    string ConferenceId=2;
    //公司名：个人合同中的公司名
    string CompanyName=3;
    //合同号
    string ContractNumber=4;
	//姓名：个人合同中的姓名
	string Name=5;
    //业务员
    string OwnerId=6;
	//排序
	string Orderings=7;
 }
 //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetMySpeakersListSearch search=3;
}
message newGetMySpeakersListStruct{
  //合同号
  string ContractNumber=1;
  //姓名（合同）
  string PerContractName=2;
  //参会类型
  string PerParticipantTypeTranslation=3;
  //姓名
  string Name=4;
  //公司
  string CompanyTranslation=5;
  //职务
  string Position=6;
  //手机
  string Mobile=7;
  //邮箱
  string Email=8;
  //业务员
  string Owner=9;
  //业务员Id
  string OwnerId=10;
  //副业务员
  string OtherOwner=11;
  //副业务员Id
  string OtherOwnerId=12;
  //是否已添加：true---已添加  false--未添加
  bool IsAdd=13;
 //创建人
  string CreatedBy=14;
  //创建时间
  string CreatedOn=15;
  //修改人
  string ModifiyBy=16;
  //修改时间
  string ModifyOn=17;
  string MemberPK=18;
  int32 EnterpriseType=19;
  string ConferenceId=20;
}

message newGetMySpeakersListResponse{
repeated newGetMySpeakersListStruct listdata=1;
int32 total=2;
}

message newBoolRequest{
message  newGetCompanyContractListSearch{
	bool Check=1;
    string Year=2;
	//排序
	string Orderings=3;
	//是否为赠送 true:是 false：否
	bool IsGive=4;
	string OwnerId=5;
  }
    //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetCompanyContractListSearch search=3;
}




message newGetCompanyContractListStruct{
 //合同号
  string ContractNumber=1;
  //公司名
  string CompanyNameTranslation=2;
  //内资还是外资
  string EnterpriseType=3;
  //应付费
  string Pay=4;
  //参会类型（套餐名）
  string ComServicePackTranslation=5;
  //参会年份
  string Year=6;
  //子合同数
  int32 MaxContractNumber=7;
  //业务员
  string Owner=8;
  //已填子合同数
  string FilledContractCount=9;
  //合同状态
  string ContractStatus=10;
   //创建人
  string CreatedBy=11;
  //创建时间
  string CreatedOn=12;
  //修改人
  string ModifiyBy=13;
  //修改时间
  string ModifyOn=14;
  bool IsGive=15;
   //业务员Id
  string OwnerId=16;
   //副业务员
  string OtherOwner=17;
   //副业务员Id
  string OtherOwnerId=18;
  //套餐价格
  string ComPrice=19;
  //公司Id
  string ComapnyId=20;
  //套餐原价
  string OriginPrice=21;
  //合同状态名称
  string ContractStateName=22;
  //折扣情况
  string DiscountId=23;
  string ContractId=24;
  string PriceAfterDiscountUSD=25;
  string PriceAfterDiscountRMB=26;

}


message newGetCompanyContractListDiscountRequest{
 message newGetCompanyContractListDiscountSearch{
 string ConferenceId=1;
 string CompanyTranslation=2;
 string Year=3;
 string ContractNumber=4;
 } 
  //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetCompanyContractListDiscountSearch search=3; 
}

message newGetCompanyContractListDiscountStruct{
 string ContractNumber=1;
 string CompanyTranslation=2;
 //套餐价格
 string Price=3;
 string PriceDiscount=4;

}
 
message newGetCompanyContractListDiscountResponse{
repeated newGetCompanyContractListDiscountStruct listdata=1;
 int32 total=2;
}




//得到公司合同列表（二级合同）
message newGetCompanyContractListResponse{
  repeated newGetCompanyContractListStruct listdata=1;
  int32 total=2;
}


//获取个人合同（三级合同）时传入的参数
message newGetPersonContractListRequest{
  message  newGetPersonContractListSearch{
    //年份
    string Year=1;
    //会议Id
    string ConferenceId=2;
    //套餐Id
    string ServicePackId=3;
    //公司名
    string CompanyName=4;
    //合同号
    string ContractNumber=5;
    //业务员
    string OwnerId=6;
    //姓名
    string Name=7;
    //邮箱
    string Email=8;
	//排序规则：属性前面带-号表示反序排序，exp:"name,-createtime"
	string Orderings=9; 
	//是否为赠送 0---筛选非赠送的个人合同 1----筛选赠送的个人合同  2---查询全部的个人合同
	int32 isGive=10;
    }
   // 请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetPersonContractListSearch search=3;
}


message newGetPersonContractListByComContratcIdRequest{
 message  newGetPersonContractListSearch{
    //二级合同Id
    string ComContractId=1;
    }
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetPersonContractListSearch search=3;
}

message PerContractNumberRequest{
 //个人合同号
 string PerContractNumber=1;
}
message newGetComapnyServicePackTypeRequest{
 string Year=1;
 //会议Id
 string ConferenceId=2;
 string MemberPK=3;
}
message newGetComapnyServicePackTypeResponse{
//true：演讲类型 false：非演讲类
 bool IsSpeaker=1;
 string Name=2;
 string ContractNumer=3;
 string ComServicePackName=4;
}


//个人参会报道通知书传参
message newGetReportNoticeRequest{
 //合同号
 string PerContractNumber=1;
 //年份
 string Year=2;
 //会议Id
 string ConferenceId=3;
 string MemberPK=4;
}

message NewTalkAndParticipateStruct{
 //Talk时间段
 string TalkTimeRange=1;
 //Talk名字
 string TalkTranslation=2;
 //议题名称
 string CFTopicName=3;
 //会员在这场Talk中的身份
 string ParticipantTypeTranslation=4;
 //姓名
 string ParticipantNameTranslation=5;
 //称谓
 string AppellationTranslation=6;
 //职称
 string JobTranslation=7;
 //公司
 string CompanyTranslation=8;
 //国家
 string CountryTranslation=9;
 string Sort=10;
}


message NewActivityAndParticipateStruct{
 //活动名称
 string ActivityTranslation=1;
 //活动时间段
 string ActivityTimeRange=2;
 int32 Sort=3;
 //会员在这场活动中的身份
 string ParticipantTypeTranslation=4;
 //姓名
 string ParticipantNameTranslation=5;
 //称谓
 string AppellationTranslation=6;
 //职称
 string JobTranslation=7;
 //公司
 string CompanyTranslation=8;
 //国家
 string CountryTranslation=9;
 repeated NewTalkAndParticipateStruct talkAndParticipateList=10;

}

message NewCalendarStruct{
 string SessionConferenceId=1;
 string SessionConferenceName=2;
 //是否确认
 bool IsConfirm=3;
 //标签Code（多个标签Code，用“，”分隔）
 string TagTypeCodes=4;
  //标签名称（多个标签，用“，”分隔）
 string TagTypeName=5;
 //备注
 string RemarkTranslation=6;
 //是否是会务额外勾选的
 bool IsParticularConf=7;
 string Date=8;
 string Time=9;
 string Address=10;
   //是否包含在套餐内（true-标黄底  false--白底）
  bool isInsidePackage=12;
  //是否勾选（true--打勾日程 false--未打钩）
  bool isChecked =13;
  repeated NewActivityAndParticipateStruct activityAndParticipateList=14;
}


message NewPersonContractInfoStruct {
   //主键
   string PersonContractId = 1;
   //个人合同号
   string PerContractNumber = 3;
   //MemberPK
   string MemberPK = 4;
   //会员姓名
   string MemTranslation = 5;
   //邮箱
   string MemEmail=6;
   //公司名
   string CompanyNameTranslation=7;
   //参会类型
   string ComServicePackTranslation=8;
   //费用
   string perPrice=9;
 }

 //业务员信息
 message OwnerInfo{
  string Name=1;
  string Tel=2;
  string Email=3;
  string Address=4;
 }

//个人参会报道通知书返回信息
message newGetReportNoticResponse{
 
  //合同信息
  NewPersonContractInfoStruct person=1;
 //日程信息
  repeated Report_ConferenceVM calendar=2;
  OwnerInfo owner=3; 
}

message newGetPersonContractListStruct{
//合同号
  string ContractNumber=1;
  //姓名
  string MemNameTranslation=2;
  //公司名
  string CompanyNameTranslation=3;
  //职务
  string Position=4;
  //邮箱
  string Email=5;
  //手机
  string Mobile=6;
  //参会类型
  string ComServicePackTranslation=7;
  //应付费
  string Pay=8;
  //已付费
  string Paid=9;
  //业务员
  string Owner=10;
  //是否发送邮件
  bool IsSendEmail=11;
  //是否打印
  bool IsPrint=12;
  //创建人
  string CreatedBy=13;
  //创建时间
  string CreatedOn=14;
  //修改人
  string ModifiyBy=15;
  //修改时间
  string ModifyOn=16;
  string MemberPK=17;
}

//获取个人合同信息（三级）
message newGetPersonContractListResponse{
  repeated newGetPersonContractListStruct listdata=1;
  int32 total=2;
}

message newModifyOwnerByConferenceContractIdRequest{
 string ConferenceContractId=1;
 string OwnerId=2;
 string Owner=3;
 string OtherOwnerId=4;
 string OtherOwner=5;
 string ModifiedBy=6;
}

//获取行程一览表传入的参数
message newGetScheduleListRequest{
  //合同号
  string personContractNumber=1;
}
message newGetScheduleListResponse{
  //个人合同id
  string personContractId=1;
  //个人合同号
  string personContractNumber=2;
  //参会类型
  string servicePack=3;
  //姓名
  string name=4;
  //称谓
  string title=5;
  //职位
  string positin=6;
  //手机
  string mobile=7;
  //邮箱
  string email=8;
  //公司名
  string companyName=9;
  //参加活动名称
  string activityName=10;
  //参加活动的地点
  string activityVune=11;
  //参加活动的时间
  string activityTime=12;
  //业务员
  string owner=13;
  //业务员邮箱
  string ownerEmail=14;
  //业务员手机
  string ownerMobile=15;
  //业务员地址
  string ownerAddress=16;
  //创建时间
  string crteatedOn=17;
  //创建人
  string createdBy=18;
  //修改时间
  string modifyOn=19;
  //修改人
  string modifyBy=20;
}
message newAddScheduleRequest{
  //个人合同id
  string personContractId=1;
  //个人合同号
  string personContractNumber=2;
  //参会类型
  string servicePack=3;
  //姓名
  string name=4;
  //称谓
  string title=5;
  //职位
  string positin=6;
  //手机
  string mobile=7;
  //邮箱
  string email=8;
  //公司名
  string companyName=9;
  //参加活动名称
  string activityName=10;
  //参加活动的地点
  string activityVune=11;
  //参加活动的时间
  string activityTime=12;
  //业务员
  string owner=13;
  //业务员邮箱
  string ownerEmail=14;
  //业务员手机
  string ownerMobile=15;
  //业务员地址
  string ownerAddress=16;
  //创建时间
  string crteatedOn=17;
  //创建人
  string createdBy=18;
  //修改时间
  string modifyOn=19;
  //修改人
  string modifyBy=20;
}

message newGetCompanyNoticeOfReportByContractNumberRequest{
	string contractNumber=1;
	string year=2;
}


message NewConferenceStruct{
	//会议主键id
	string ConferenceID = 1;
	//父级id
	string ParentID = 2;
	//会议名称
	Translation Translation = 3;
	//会议地点id
	string CFAddressPK = 4;
	//会议时间段
	string StartDate = 5;    
	//开始时间
	string StartDateTime = 6;   
	//年份
	string Year = 7;
	//排序
	string Sort = 8;
	//英文缩写
	string Abbreviation = 9;
	//会议简介  格式{"CN":"123","EN":"123"}
	string ConferenceIntroduce = 10;
	//创建时间
	string CreatedOn = 11;
	//创建人
	string CreatedBy = 12;
	//修改时间
	string ModifiedOn = 13;
	//修改人
	string ModifiedBy = 14;
	//层级
	int32 Level = 15;
	//时间段
	string TimeRange = 16;
	//是否前台显示
	bool ShowOnFront = 17;
	//会议室对象
	NewCFAddressStruct CFAddress = 18;
	//作为会议申请的筛选
	bool ApplySearch = 19;
}

message NewCFAddressStruct{
	//会议地点主键id
	string CFAddressPK = 1;
	//会议地点
	Translation Translation = 2;
	//邮编
	string PostCode = 3;
	//国家
	string Country = 4; 
	//创建时间
	string CreatedOn = 5;
	//创建人
	string CreatedBy = 6;
	//修改时间
	string ModifiedOn = 7;
	//修改人
	string ModifiedBy = 8;
}

message NewApplyConferenceStruct {
  //主键
  string Id = 1;
  string PersonContractId = 2;
  string MemberPK = 3;
  string SessionConferenceId = 4;
  //是否确认
  bool IsConfirm = 5;
  string CompanyId = 6;
  //多个标签Code，用“，”分隔
  string TagTypeCodes = 7;
  //备注
  string RemarkTranslation = 8;
  //年份
  string Year = 9;
  //SessionConferenceId列表
  repeated string SessionConferenceIds = 10;
  //IsParticularConf
  bool IsParticularConf = 11;
  //业务员id
  string Owerid = 12;
}

message NewCompanyContractStruct {
  //主键
  string ContractId = 1;
  //CompanyServicePackId
  string CompanyServicePackId = 2;
  //CompanyId
  string CompanyId = 3;
  //string  ComNameTranslation = 4;
  //公司中英文名
  ComNameTranslationStruct ComNameTranslation = 4;
  //二级合同号
  string ComContractNumber = 5;
  //国家
  string Country = 6;
  //string AddressTranslation = 7;
  //地址中英文
  AddressTranslationStruct AddressTranslation = 7;
  //最大合同数
  string MaxContractNumber = 8;
  //是否删除
  bool CCIsdelete = 9;
  //0代表内资;1代表外资
  int32 EnterpriseType = 10; 
  //是否审核
  bool IsVerify = 11;
  //业务员id
  string Owerid = 12; 
  //业务员姓名
  string Ower = 13; 
  string CreatedOn = 14;
  string CreatedBy = 15;
  string ModefieldOn = 16;
  string ModefieldBy = 17;
  //套餐对象
  NewCompanyServicePackStruct CompanyServicePack = 18;
  //二级折扣合同列表
  repeated DelegateServicePackDiscountStruct dlistdata = 19;
  //CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）C中资 E外资 S后台合同 W前台合同
  string ContractCode = 20;
  //ConferenceId
  string ConferenceId = 21;
  //会议名称
  string ConferenceName = 22;
  //是否报道
  bool IsCheckIn = 23;
  //PPTUrl
  string PPTUrl = 24;
  //合同状态Code
  string ContractStatusCode = 25;
  //ConferenceContractId
  string ConferenceContractId = 26;
  //个人合同列表
  repeated NewPersonContractStruct plistdata = 27;
  //二级合同价格
  string ComPrice = 28;
}

message NewCompanyServicePackStruct {
  //主键
  string CompanyServicePackId = 1;
  //ContractTypeId
  string ContractTypeId = 2;
  //排序
  int32 Sort = 3;
  //套餐名称
  TranslationStruct Translation = 4;
  //人民币
  string PriceRMB = 5;
  //美金
  string PriceUSD = 6;
  //是否在前端显示
  bool IsShownOnFront = 7;
  string CreatedOn = 8;
  string CreatedBy = 9;
  string ModefieldOn = 10;
  string ModefieldBy = 11;
  //备注
  TranslationStruct RemarkTranslation = 12;
  //ConferenceId
  string ConferenceId = 13;
  //会议名称
  string ConferenceName = 14;
  //是否是演讲人
  bool IsSpeaker = 15;
  //合同大类Code
  string CTypeCode = 16;
  //是否赠送
  bool IsGive = 17;
  //年份
  string Year = 18;
  //说明Code
  string RemarkCode = 19;
}

message NewServicePackStruct {
  //主键
  string ServicePackId = 1;
  //主键
  TranslationStruct Translation = 2;
  //主键
  string PriceRMB = 3;
  //主键
  string PriceUSD = 4;
  string CreatedOn = 5;
  string CreatedBy = 6;
  string ModefieldOn = 7;
  string ModefieldBy = 8;
  //ConferenceId
  string ConferenceId = 9;
  //ConferenceName
  string ConferenceName = 10;
  //SessionConferenceId
  string SessionConferenceId = 11;
  //SessionConferenceName
  string SessionConferenceName = 12;
  //SessionDate
  string SessionDate = 13;
  //SessionStartTime
  string SessionStartTime = 14;
  //ThirdSessionConferenceId
  string ThirdSessionConferenceId = 15;
  //ThirdSessionConferenceName
  string ThirdSessionConferenceName = 16;
  //地址
  string SessionAddress = 17;
  //年份
  string Year = 18;
  string companyServicePackCode=19;
}
message NewActivityStruct {
  string ActivityId = 1;
  TranslationStruct ActivityName = 2;
  string SessionConferenceID = 3;
  TranslationStruct SessionConferenceName = 4;
  int32 Sort = 5;
  string SessionIDs = 6;
}

message NewCompanyStruct {
  string CompanyPK = 1;
  string CompanyTypePK = 2;
  string IndustryTypePK = 3;
  string MemberPK = 4;
  string ComNameCn = 5;
  string ComNameEn = 6;
  string ComAreaDetail = 7;
  string ComContactEmail = 8;
  string ComPostCode = 9;
  string ComFax = 10;
  string ComTel = 11;
  string ComWebSite = 12;
  string ComClient = 13;
  string ComNature = 14;
  string ComLang = 15;
  string ComRemark = 16;
  bool ComIsDelete = 17;
  bool ComIsVerify = 18;
  bool ComIsWebSite = 19;
  string ComAddress = 20;
  string CreatedOn = 21;
  string CreatedBy = 22;
  string ModefieldOn = 23;
  string ModefieldBy = 24;
}

message NewMemberStruct {
  string MemberPK = 1;
  string SourcePK = 2;
  string MemNameCn = 3;
  string MemNameEn = 4;
  string MemEmail = 5;
  string MemPassword = 6;
  string MemType = 7;
  string MemGender = 8;
  string MemDepartment = 9;
  string MemTitle = 10;
  string MemPosition = 11;
  string MemProTitle = 12;
  string MemQQ = 13;
  string MemFax = 14;
  string MemMSN = 15;
  string MemMobile = 16;
  string MemTel = 17;
  string MemPostCode = 18;
  string MemLastLoginTime = 19;
  string MemAddress = 20;
  string MemAddressDetail = 21;
  bool MemIsDelete = 22;
  bool MemIsActivation = 23;
  string CreatedOn = 24;
  string CreatedBy = 25;
  string ModefieldOn = 26;
  string ModefieldBy = 27;
  string CompanyPK = 28;
  string MemCountryNameCn = 29;
  string MemCountryNameEn = 30;
  string MemCompany = 31;
  string AssistantName = 32;
  string AssistantPosition = 33;
  string AssistantMobile = 34;
  string AssistantEmail = 35;
}

message NewParticipantStruct{
	//嘉宾id
	string ParticipantID = 1;
	//嘉宾名称
	string ParticipantNameTranslation = 2;
	//头像路劲
	string IMGSRC = 3;
	//公司名称
	string CompanyTranslation = 4;
	//职称
	string JobTranslation = 5;
	//国家
	string CountryTranslation = 6;
	//邮箱
	string Email = 7;
	//手机
	string Mobile = 8;
	//简介
	string IntroduceTranslation = 9;
	//创建时间
	string CreatedOn = 10;
	//创建人
	string CreatedBy = 11;
	//修改时间
	string ModifiedOn = 12;
	//修改人
	string ModifiedBy = 13;
	//个人合同id
	string PersonContractID = 14;
	//个人合同号
	string PerContractNumber = 15;
	//是否删除
	bool IsDelete = 16;
	//排序
	int32 Sort = 17;
	//业务员id
	string Owerid = 18;
	//业务员
	string Ower = 19;
	//称谓
	string AppellationTranslation = 20;		
	//公司id
	string CompanyId = 21;
	//是否提交ppt
	bool ConfirmPPT = 22;
	//人员id
	string MemberPK = 23;
	//受否前台显示
	int32 ShowOnFont = 24;
	//年份
	string Year = 25;
}

message NewActivityStruct1{
	//活动主键id
	string ActivityID = 1;
	//会议id
	string ConferenceID = 2;
	//活动类型id
	string ActivityTypeID = 3;
	//时长
	string TimeLength = 4;
	//排序
	int32 Sort = 5;
	//开始日期
	string StartDate = 6;
	//活动名称
	Translation Translation = 7;
	//创建时间
	string CreatedOn = 8;
	//创建人
	string CreatedBy = 9;
	//修改时间
	string ModifiedOn = 10;
	//修改人
	string ModifiedBy = 11;
	//开始时间
	string StartTime = 12;
	//结束时间
	string EndTime = 13;
}



message NewTalkStruct{
	//板块id
	string TalkID = 1;
	//活动id
	string ActivityID = 2;
	//板块类型id
	string TalkTypeID = 3;
	//议题id
	string CFTopicPK =4; 
	//板块名称
	Translation Translation = 6;
	//创建时间
	string CreatedOn = 7;
	//创建人
	string CreatedBy = 8;
	//修改时间
	string ModifiedOn = 9;
	//修改人
	string ModifiedBy = 10;
	//开始日期
	string StartDate = 11;
	//时长
	string TimeLength = 12;
	//排序
	int32 Sort = 13;
	//开始时间
	string StartTime = 14;
	//结束时间
	string EndTime = 15;
	//议题名称
	string CFTopicName = 16;
}

message NewParticipantInfoStruct{
	//嘉宾名称
	string ParticipantNameTranslation = 1;
	//公司名称
	string CompanyTranslation = 2;
	//职称
	string JobTranslation = 3;
	//国家
	string CountryTranslation = 4;
	//称谓
	string AppellationTranslation = 5;
	//嘉宾类型
	string ParticipantTypeTranslation = 6;
	//嘉宾id
	string ParticipantID = 7;
	//嘉宾类型id
	string ParticipantTypeID = 8;
	//邮箱
	string EMail = 9;
	//手机
	string Mobile = 10;
}

message modifyResponseNew{
  bool isSuccess=1;
  string msg=2;
  int32 total=3;
  string companyContractId=4;
}

message newGetCompanyNoticeOfReportByContractNumberResponse{
	//会议集合
	repeated NewConferenceStruct ConferenceStructListdata = 1;

	//会议地点集合
	repeated NewCFAddressStruct CFAddressStructListdata = 2;

	repeated NewApplyConferenceStruct ApplyConferenceStructListdata = 3;

	repeated NewCompanyContractStruct CompanyContractStructListdata = 4;

	//公司套餐对象
	repeated NewCompanyServicePackStruct CompanyServicePackStructListdata = 5;

	//子套餐列表
	repeated NewServicePackStruct servicepack_listdata = 6;

	//ServicePack对象
	//repeated NewServicePackStruct ServicePackListdata = 7;

	//Activity列表
	repeated NewActivityStruct1 activity_listdata = 7;

	repeated NewCompanyStruct CompanyStructListdata = 8;

	repeated NewMemberStruct MemberStructListdata = 9;

	repeated NewParticipantStruct ParticipantStructListdata=10;
			 
	repeated NewActivityStruct ActivityStructList=11;
			 
	repeated NewParticipantInfoStruct ParticipantInfoStructList=12;
			 
	repeated NewTalkStruct TalkStructList=13;
}


message newGetPersonNoticeOfReportByContractNumberRequest{
 //个人合同号
 string personContractNumber=1;
}

message newGetPersonNoticeOfReportByContractNumberResponse{
 //合同号
 string contractNumber=1;
 //姓名
 string name=2;
 //公司名
 string companyName=3;
 //参会类型
 string servicePack=4;
 //费用
 float fee=5;
 //总金额
 float total=6;
 //活动名称
 string activityName=7;
 //活动地点
 string activityVune=8;
 //活动时间
 string activityTime=9;
 //业务员
 string owner=10;
 //业务员电话
 string ownerMobile=11;
 //业务员邮箱
 string ownerEmail=12;
 //业务员地址
 string ownerAddress=13;
  //创建人
  string createdBy=14;
  //创建时间
  string createdOn=15;
  //修改人
  string modifiyBy=16;
  //修改时间
  string modifyOn=17;
}

//需要完善
message newCompanyNameRequest{
  string name=1;
}

message Translation{
	string CN = 1;
	string EN = 2;
	string JP = 3;
}

message NewPersonContractStruct {
  //主键
  string PersonContractId = 1;
  //ContractId
  string ContractId = 2;
  //个人合同号
  string PerContractNumber = 3;
  //MemberPK
  string MemberPK = 4;
  //会员姓名
  MemTranslationStruct MemTranslation = 5;
  //是否删除
  bool PCIsdelete = 6;
  string CreatedOn = 7;
  string CreatedBy = 8;
  string ModefieldOn = 9;
  string ModefieldBy = 10;
  //业务员id
  string Owerid = 11; 
  //业务员姓名
  string Ower = 12; 
  //ConferenceContractId
  string ConferenceContractId = 13;
  //ContractType合同大类
  string CTypeCode = 14;
  //二级合同对象
  NewCompanyContractStruct CompanyContract = 15;
  //是否报道
  bool IsCheckIn = 16;
  //是否发送Email
  bool IsSendEmail = 17;
  //是否修改
  bool IsModify = 18;
  //ConferenceId
  string ConferenceId = 19;
  //是否有财务记录
  bool IsFianceRecord = 20;
  //是否是邀请码创建合同
  bool IsInviteCode = 21;
  //InviteCodeId邀请码Id
  string InviteCodeId = 22;
  //是否提交摘要
  bool IsCommitAbstract = 23;
  //是否打印
  bool IsPrint = 24;
  //已付金额
  string PaidAmount = 25;
}

//勾选套餐时要传的参数
message newGetServicePackRequest{
 string ConferenceId=1;
 string ContractTypeId=2;
 string Year=3;
 string IsGive=4;
}
//勾选套餐时返回的对象
message newGetServicePackStruct{
  string CompanyServicePackId=1;  
  string Code=2;
  string Translation=3;
  string PriceRMB=4;
  string PriceUSD=5;
  string PriceJP=6;
  bool IsGive=7;
  string Year=8;
  string ContractTypeId=9;
  string CTypeCode=10;
  int32 Sort=11;
  string ConferenceId=12;
  string ConferenceName=13;
  bool IsShownOnFront=14;
  string RemarkTranslation=15;
  string RemarkCode=16;
  bool IsSpeaker=17;
  bool IsDelete=18;
  string CreatedOn=19;
  string CreatedBy=20;
  string ModefieldOn=21;
  string ModefieldBy=22;
}
message newGetServicePackResponse{
  repeated newGetServicePackStruct listdata=1;
}

message newMergeCompanyContractRequest{
 //二级合同号
 string companyContractId=1;
 //子合同数
 int32 MaxContractNumber=2;
}


//获取一级合同列表页码的搜索与请求条件
message newGetConferenceContractListRequest{
  message newGetConferenceContractListSearch{
    //年份
    string year=1;
    //会议Id
    string conferenceId=2;
    //公司名
    string companyName=3;
    //合同号
    string contractNumber=4;
    //业务员
    string ownerId=5;
	//排序规则：属性前面带-号表示反序排序，exp:"name,-createtime"
	string orderings=6;
  }
 
  //请求页码
  int32 page=1;
  //每页数据条数
  int32 pageSize=2;
  //查询条件
  newGetConferenceContractListSearch search=3;
  
}

message newGetConferenceContractStruct{
 //一级合同Id
 string ConferenceContractId=1;
 //会议Id
 string ConferenceId=2;
 //公司id
 string CompanyId=3;
 //公司名
 string ComNameTranslation=4;
 //合同号
 string ContractNumber=5;
 //年份
 string ContractYear=6;
 //合同编号最后二位Code CF2019SNEC0010CW（CW/CS,EW/ES）
 string ContractCode=7;
 //合同状态Code
 string ContractStatusCode=8;
 //付款状态:未付款---N 部分付款(0<x<0.5)---P 付一半款(0.5<x<1)---H 全款---F
 string PaymentStatusCode=9;
 //修改许可
 string ModifyPermission=10;
 bool IsDelete=11;
 bool IsSendEmail=12;
 bool IsModify=13;
 string Owerid=14;
 string Ower=15;
 string CreatedOn=16;
 string CreatedBy=17;
 string ModifiedOn=18;
 string ModifiedBy=19;	
 string OtherOwner=20;
 string OtherOwnerId=21;
 //总应付费
 string TotalPrice=22;
 //已付费
 string TotalPaid=23;
 //是否手动操作付款状态
 bool IsOpPayStatudCode=24;
 //内外资：0--内资 1--外资
 int32 EnterpriseType=25;
 string ContractStatusName=26;
}

message newGetConferenceContractListResponse{
 repeated newGetConferenceContractStruct listdata=1;
 int32 total=2;
}


message newGetConferenceInfoRequest{
 string year=1;
}

message newGetConferenceInfoStruct{
 string ConferenceId=1;
 //会议名称
 string ConferenceName=2;
 //前缀
 string Prefix=3;
 string Year=4;
 //合同类型代码
 string CNano=5;
 int32 Count=6;
 //采用状态 0---未采用  1---采用
 int32 Status=7;
 bool IsDelete=8;
 //大会简称
 string Abbreviation=9;
}
message newGetConferenceInfoResponse{
repeated  newGetConferenceInfoStruct listdata=1;
}



message newGetOwnerByConfIdAndComIdAndYearRequest{
 string CompanyId=1;
 string ConferenceID=2;
 string Year=3;
}


message newGetOwnerByConfIdAndComIdAndYearStruct{
 string OwnerId=1;
 string Owner=2;
 string OtherOwnerId=3;
 string OtherOwner=4;

}
message newGetOwnerByConfIdAndComIdAndYearResponse{
repeated newGetOwnerByConfIdAndComIdAndYearStruct listdata=1;
}

message InServicePackConferenceVM{
  string ConferenceId=1;
}

message Report_ConferenceVM{
  string ConferneceName=1;
  string Date=2;
  string TimeRange=3;
  string Address=4;
  string Sort=5;
  string ParticipateType=6;
  // 备注
  string Remark =7;
  // 是否包含在服务包内
  bool IsInServicePack =8;
  // 是否勾选
  bool IsChecked =9;
  //开始时间
  string StartTime=10;
  repeated Report_ActivityVM  ActivityVMList=11;
}


message Report_ActivityVM{
 string ActivityName=1;
 string StartTime =2;
 int32 TimeLength =3;
 // 活动时间范围  09:00-09:05
 string TimeRange=4;
 int32 Sort =5;
 repeated Report_TalkVM TalkVMList=6;
 repeated Report_ParticipantVM ParticipantVMList = 7;
}


message Report_ParticipantVM{
  // 身份
  string ParticipantType =1;
  string ParticipantName=2;
  string ParticipantJob =3;
  // 称谓
  string ParticipantTitle =4;
  string ParticipantCompany =5;
  string ParticipantCountry =6;
}								   

message Report_TalkVM{
  // 活动时间范围  09:00-09:05
  string TimeRange =1;
  string TalkName =2;
  string TopicName =3;
  int32 Sort  =4;
  int32 TimeLength =5;
  string StartTime =6;
  repeated Report_ParticipantVM ParticipantVMList = 7;
}



//=================v2.0 End==============






