// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GrpcConferenceContractService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcConferenceContractService {

  /// <summary>Holder for reflection information generated from GrpcConferenceContractService.proto</summary>
  public static partial class GrpcConferenceContractServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for GrpcConferenceContractService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrpcConferenceContractServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNHcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5wcm90bxIdR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UiBwoFRW1wdHkiFwoJSWRSZXF1ZXN0",
            "EgoKAmlkGAEgASgJIhoKDElkSW50UmVxdWVzdBIKCgJpZBgBIAEoBSIZCgpJ",
            "ZHNSZXF1ZXN0EgsKA2lkcxgBIAEoCSIbCgtDb2RlUmVxdWVzdBIMCgRjb2Rl",
            "GAEgASgJIj4KEVBhZ2luYXRpb25SZXF1ZXN0EgoKAmlkGAEgASgFEg4KBm9m",
            "ZnNldBgCIAEoBRINCgVsaW1pdBgDIAEoBSKBAQoXUGFnaW5hdGlvblJlcXVl",
            "c3RTZWFyY2gSCgoCaWQYASABKAUSDgoGb2Zmc2V0GAIgASgFEg0KBWxpbWl0",
            "GAMgASgFEjsKBnNlYXJjaBgEIAEoCzIrLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlLlNlYXJjaFN0cnVjdCL7CAoMU2VhcmNoU3RydWN0EhoKEmNv",
            "bU5hbWVUcmFuc2xhdGlvbhgBIAEoCRIZChFjb21Db250cmFjdE51bWJlchgC",
            "IAEoCRIWCg5jb250cmFjdFR5cGVJZBgDIAEoCRIUCgxjb25mZXJlbmNlSWQY",
            "BCABKAkSEgoKY2NJc2RlbGV0ZRgFIAEoCBITCgtUcmFuc2xhdGlvbhgGIAEo",
            "CRIZChFwZXJDb250cmFjdE51bWJlchgHIAEoCRIWCg5tZW1UcmFuc2xhdGlv",
            "bhgIIAEoCRISCgpwY0lzZGVsZXRlGAkgASgIEhIKCmNvbnRyYWN0SWQYCiAB",
            "KAkSEgoKaXNEaXNjb3VudBgLIAEoCBIRCglpc0NoZWNrSW4YDCABKAgSEAoI",
            "aXNWZXJpZnkYDSABKAgSEAoIaXNEZWxldGUYDiABKAgSGwoTZXh0cmFDb250",
            "cmFjdE51bWJlchgPIAEoCRIQCghtZW1iZXJQSxgQIAEoCRISCgphY3Rpdml0",
            "eUlkGBEgASgJEgwKBHllYXIYEiABKAkSEAoIaXNGaWxsUEMYEyABKAgSEQoJ",
            "aXNDb25maXJtGBQgASgIEg4KBm93ZXJpZBgVIAEoCRIRCgljVHlwZUNvZGUY",
            "FiABKAkSHAoUY29tcGFueVNlcnZpY2VQYWNrSWQYFyABKAkSHwoXaXNDb250",
            "cmFjdFR5cGVXaXRoRUNvZGUYGCABKAgSGwoTc2Vzc2lvbkNvbmZlcmVuY2VJ",
            "ZBgZIAEoCRIRCgljb21wYW55SWQYGiABKAkSEAoIY29tUHJpY2UYGyABKAkS",
            "GgoSY29udHJhY3RTdGF0dXNDb2RlGBwgASgJEg4KBmlzR2l2ZRgdIAEoCBIN",
            "CgVpc1VzZRgeIAEoCBIRCglvcmRlcmluZ3MYHyABKAkSEwoLdGFndHlwZUNv",
            "ZGUYICABKAkSEQoJaXNOb3dZZWFyGCEgASgIEhQKDGNvbnRyYWN0Q29kZRgi",
            "IAEoCRIOCgZpc093ZXIYIyABKAgSFgoOY29uZmVyZW5jZU5hbWUYJCABKAkS",
            "HAoUY29uZmVyZW5jZUNvbnRyYWN0SWQYJSABKAkSGAoQbW9kaWZ5UGVybWlz",
            "c2lvbhgmIAEoCRIWCg5lbnRlcnByaXNlVHlwZRgnIAEoCRIWCg5jb250cmFj",
            "dE51bWJlchgoIAEoCRITCgtjb21wYW55TmFtZRgpIAEoCRISCgpleFR5cGVD",
            "b2RlGCogASgJEhAKCHVzZXJOYW1lGCsgASgJEg8KB3dlYlNpdGUYLCABKAkS",
            "GwoTaXNGdWxsVXNlSW52aXRlQ29kZRgtIAEoCBIeChZpc05vdEZ1bGxVc2VJ",
            "bnZpdGVDb2RlGC4gASgIEhgKEGludml0ZUNvZGVOdW1iZXIYLyABKAkSFAoM",
            "aW52aXRlQ29kZUlkGDAgASgJEg8KB2lzUHJpbnQYMSABKAgSFAoMaXNWZXJp",
            "ZnlHaXZlGDIgASgIEhUKDXBlckNvbnRyYWN0SWQYMyABKAkSCgoCaWQYNCAB",
            "KAkiMAoZQ29uZmVyZW5jZUNvbnRyYWN0Q2lkTGlzdBITCgtDaWRsaXN0ZGF0",
            "YRgBIAMoCSIsChVQZXJzb25Db250cmFjdFBpZExpc3QSEwoLUGlkbGlzdGRh",
            "dGEYASADKAkiZgoZUGVyc29uQ29udHJhY3RQQ05vUmVxdWVzdBJJCghsaXN0",
            "ZGF0YRgBIAMoCzI3LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBl",
            "cnNvbkNvbnRyYWN0UENOb1N0cnVjdCJIChhQZXJzb25Db250cmFjdFBDTm9T",
            "dHJ1Y3QSGQoRUGVyQ29udHJhY3ROdW1iZXIYASABKAkSEQoJQ29tZmlybWVk",
            "GAIgASgIIi0KFkNvbXBhbnlDb250cmFjdENpZExpc3QSEwoLQ2lkbGlzdGRh",
            "dGEYASADKAkicgoWQ29uZmVyZW5jZUNvbnRyYWN0TGlzdBJJCghsaXN0ZGF0",
            "YRgBIAMoCzI3LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbmZl",
            "cmVuY2VDb250cmFjdFN0cnVjdBINCgV0b3RhbBgCIAEoBSJsChNDb21wYW55",
            "Q29udHJhY3RMaXN0EkYKCGxpc3RkYXRhGAEgAygLMjQuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuQ29tcGFueUNvbnRyYWN0U3RydWN0Eg0KBXRv",
            "dGFsGAIgASgFImoKElBlcnNvbkNvbnRyYWN0TGlzdBJFCghsaXN0ZGF0YRgB",
            "IAMoCzIzLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNv",
            "bnRyYWN0U3RydWN0Eg0KBXRvdGFsGAIgASgFInIKFkNvbXBhbnlTZXJ2aWNl",
            "UGFja0xpc3QSSQoIbGlzdGRhdGEYASADKAsyNy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tTdHJ1Y3QSDQoFdG90",
            "YWwYAiABKAUiZgoQRXh0cmFTZXJ2aWNlTGlzdBJDCghsaXN0ZGF0YRgBIAMo",
            "CzIxLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkV4dHJhU2Vydmlj",
            "ZVN0cnVjdBINCgV0b3RhbBgCIAEoBSJkCg9TZXJ2aWNlUGFja0xpc3QSQgoI",
            "bGlzdGRhdGEYASADKAsyMC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5TZXJ2aWNlUGFja1N0cnVjdBINCgV0b3RhbBgCIAEoBSJqChJDQ051bWJl",
            "ckNvbmZpZ0xpc3QSRQoIbGlzdGRhdGEYASADKAsyMy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5DQ051bWJlckNvbmZpZ1N0cnVjdBINCgV0b3Rh",
            "bBgCIAEoBSJmChBDb250cmFjdFR5cGVMaXN0EkMKCGxpc3RkYXRhGAEgAygL",
            "MjEuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29udHJhY3RUeXBl",
            "U3RydWN0Eg0KBXRvdGFsGAIgASgFIogBCh9EZWxlZ2F0ZVNlcnZpY2VQYWNr",
            "RGlzY291bnRMaXN0ElYKCGxpc3RkYXRhGAEgAygLMkQuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50",
            "TGlzdFN0cnVjdBINCgV0b3RhbBgCIAEoBSKyAQo0RGVsZWdhdGVTZXJ2aWNl",
            "UGFja0Rpc2NvdW50Rm9yQ29uZmVyZW5jZUNvbnRyYWN0TGlzdBJrCghsaXN0",
            "ZGF0YRgBIAMoCzJZLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkRl",
            "bGVnYXRlU2VydmljZVBhY2tEaXNjb3VudEZvckNvbmZlcmVuY2VDb250cmFj",
            "dExpc3RTdHJ1Y3QSDQoFdG90YWwYAiABKAUibgoUQ29uZmVyZW5jZU9uc2l0",
            "ZUxpc3QSRwoIbGlzdGRhdGEYASADKAsyNS5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZS5Db25mZXJlbmNlT25zaXRlU3RydWN0Eg0KBXRvdGFsGAIg",
            "ASgFImcKDkludml0ZUNvZGVMaXN0EkYKCGxpc3RkYXRhGAEgAygLMjQuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSW52aXRlQ29kZUNTUFZNU3Ry",
            "dWN0Eg0KBXRvdGFsGAIgASgFIm4KFEludml0ZUNvZGVSZWNvcmRMaXN0EkcK",
            "CGxpc3RkYXRhGAEgAygLMjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuSW52aXRlQ29kZVJlY29yZFN0cnVjdBINCgV0b3RhbBgCIAEoBSKpAQoo",
            "UGVyc29uQ29udHJhY3RBbmRTZXNzaW9uQ29uZmVyZW5jZUlkTGlzdBJcCghs",
            "aXN0ZGF0YRgBIAMoCzJKLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "LlBlcnNvbkNvbnRyYWN0QW5kU2Vzc2lvbkNvbmZlcmVuY2VJZHNTdHJ1Y3QS",
            "DQoFdG90YWwYAiABKAUSEAoIYWxsVG90YWwYAyABKAUicQodUGVyc29uQ29u",
            "dHJhY3RBY3Rpdml0eU1hcExpc3QSUAoIbGlzdGRhdGEYASADKAsyPi5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250cmFjdEFjdGl2",
            "aXR5TWFwU3RydWN0ImsKGUNvbXBhbnlTZXJ2aWNlUGFja01hcExpc3QSTgoI",
            "bGlzdGRhdGEYASADKAsyPC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5Db21wYW55U2VydmljZVBhY2tNYXBWTVN0cnVjdCJjChZDb250cmFjdFN0",
            "YXRpc3RpY3NMaXN0EkkKCGxpc3RkYXRhGAEgAygLMjcuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuQ29udHJhY3RTdGF0aXN0aWNzU3RydWN0IosB",
            "CiVQZXJzb25Db250cmFjdEFjdGl2aXR5TWFwTGlzdFRvVXBkYXRlEhAKCE1l",
            "bWJlclBLGAEgASgJElAKCGxpc3RkYXRhGAIgAygLMj4uR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuUGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcFN0",
            "cnVjdCLIBQoYQ29uZmVyZW5jZUNvbnRyYWN0U3RydWN0EhwKFENvbmZlcmVu",
            "Y2VDb250cmFjdElkGAEgASgJEhEKCUNvbXBhbnlJZBgCIAEoCRJTChJDb21O",
            "YW1lVHJhbnNsYXRpb24YAyABKAsyNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5Db21OYW1lVHJhbnNsYXRpb25TdHJ1Y3QSFgoOQ29udHJhY3RO",
            "dW1iZXIYBCABKAkSFAoMQ29udHJhY3RDb2RlGAUgASgJEhAKCElzRGVsZXRl",
            "GAYgASgIEg4KBk93ZXJpZBgHIAEoCRIMCgRPd2VyGAggASgJEhEKCUNyZWF0",
            "ZWRPbhgJIAEoCRIRCglDcmVhdGVkQnkYCiABKAkSEwoLTW9kZWZpZWxkT24Y",
            "CyABKAkSEwoLTW9kZWZpZWxkQnkYDCABKAkSRwoJQ2xpc3RkYXRhGA0gAygL",
            "MjQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29tcGFueUNvbnRy",
            "YWN0U3RydWN0EhQKDENvbnRyYWN0WWVhchgOIAEoCRJoCglkbGlzdGRhdGEY",
            "DyADKAsyVS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5EZWxlZ2F0",
            "ZVNlcnZpY2VQYWNrRGlzY291bnRGb3JDb25mZXJlbmNlQ29udHJhY3RTdHJ1",
            "Y3QSFAoMQ29uZmVyZW5jZUlkGBAgASgJEiEKGUFsdGVybmF0aXZlQ29udHJh",
            "Y3ROdW1iZXIYESABKAkSGgoSQ29udHJhY3RTdGF0dXNDb2RlGBIgASgJEhkK",
            "EVBheW1lbnRTdGF0dXNDb2RlGBMgASgJEhMKC0lzU2VuZEVtYWlsGBQgASgI",
            "EhAKCElzTW9kaWZ5GBUgASgIEhgKEE1vZGlmeVBlcm1pc3Npb24YFiABKAki",
            "ngcKFUNvbXBhbnlDb250cmFjdFN0cnVjdBISCgpDb250cmFjdElkGAEgASgJ",
            "EhwKFENvbXBhbnlTZXJ2aWNlUGFja0lkGAIgASgJEhEKCUNvbXBhbnlJZBgD",
            "IAEoCRJTChJDb21OYW1lVHJhbnNsYXRpb24YBCABKAsyNy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db21OYW1lVHJhbnNsYXRpb25TdHJ1Y3QS",
            "GQoRQ29tQ29udHJhY3ROdW1iZXIYBSABKAkSDwoHQ291bnRyeRgGIAEoCRJT",
            "ChJBZGRyZXNzVHJhbnNsYXRpb24YByABKAsyNy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5BZGRyZXNzVHJhbnNsYXRpb25TdHJ1Y3QSGQoRTWF4",
            "Q29udHJhY3ROdW1iZXIYCCABKAkSEgoKQ0NJc2RlbGV0ZRgJIAEoCBIWCg5F",
            "bnRlcnByaXNlVHlwZRgKIAEoBRIQCghJc1ZlcmlmeRgLIAEoCBIOCgZPd2Vy",
            "aWQYDCABKAkSDAoET3dlchgNIAEoCRIRCglDcmVhdGVkT24YDiABKAkSEQoJ",
            "Q3JlYXRlZEJ5GA8gASgJEhMKC01vZGVmaWVsZE9uGBAgASgJEhMKC01vZGVm",
            "aWVsZEJ5GBEgASgJElMKEkNvbXBhbnlTZXJ2aWNlUGFjaxgSIAEoCzI3Lkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbXBhbnlTZXJ2aWNlUGFj",
            "a1N0cnVjdBJTCglkbGlzdGRhdGEYEyADKAsyQC5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5EZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRTdHJ1",
            "Y3QSFAoMQ29udHJhY3RDb2RlGBQgASgJEhQKDENvbmZlcmVuY2VJZBgVIAEo",
            "CRIWCg5Db25mZXJlbmNlTmFtZRgWIAEoCRIRCglJc0NoZWNrSW4YFyABKAgS",
            "DgoGUFBUVXJsGBggASgJEhoKEkNvbnRyYWN0U3RhdHVzQ29kZRgZIAEoCRIc",
            "ChRDb25mZXJlbmNlQ29udHJhY3RJZBgaIAEoCRJGCglwbGlzdGRhdGEYGyAD",
            "KAsyMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250",
            "cmFjdFN0cnVjdBIQCghDb21QcmljZRgcIAEoCSKTBQoUUGVyc29uQ29udHJh",
            "Y3RTdHJ1Y3QSGAoQUGVyc29uQ29udHJhY3RJZBgBIAEoCRISCgpDb250cmFj",
            "dElkGAIgASgJEhkKEVBlckNvbnRyYWN0TnVtYmVyGAMgASgJEhAKCE1lbWJl",
            "clBLGAQgASgJEksKDk1lbVRyYW5zbGF0aW9uGAUgASgLMjMuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuTWVtVHJhbnNsYXRpb25TdHJ1Y3QSEgoK",
            "UENJc2RlbGV0ZRgGIAEoCBIRCglDcmVhdGVkT24YByABKAkSEQoJQ3JlYXRl",
            "ZEJ5GAggASgJEhMKC01vZGVmaWVsZE9uGAkgASgJEhMKC01vZGVmaWVsZEJ5",
            "GAogASgJEg4KBk93ZXJpZBgLIAEoCRIMCgRPd2VyGAwgASgJEhwKFENvbmZl",
            "cmVuY2VDb250cmFjdElkGA0gASgJEhEKCUNUeXBlQ29kZRgOIAEoCRJNCg9D",
            "b21wYW55Q29udHJhY3QYDyABKAsyNC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5Db21wYW55Q29udHJhY3RTdHJ1Y3QSEQoJSXNDaGVja0luGBAg",
            "ASgIEhMKC0lzU2VuZEVtYWlsGBEgASgIEhAKCElzTW9kaWZ5GBIgASgIEhQK",
            "DENvbmZlcmVuY2VJZBgTIAEoCRIWCg5Jc0ZpYW5jZVJlY29yZBgUIAEoCBIU",
            "CgxJc0ludml0ZUNvZGUYFSABKAgSFAoMSW52aXRlQ29kZUlkGBYgASgJEhgK",
            "EElzQ29tbWl0QWJzdHJhY3QYFyABKAgSDwoHSXNQcmludBgYIAEoCBISCgpQ",
            "YWlkQW1vdW50GBkgASgJIoQEChhDb21wYW55U2VydmljZVBhY2tTdHJ1Y3QS",
            "HAoUQ29tcGFueVNlcnZpY2VQYWNrSWQYASABKAkSFgoOQ29udHJhY3RUeXBl",
            "SWQYAiABKAkSDAoEU29ydBgDIAEoBRJFCgtUcmFuc2xhdGlvbhgEIAEoCzIw",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlRyYW5zbGF0aW9uU3Ry",
            "dWN0EhAKCFByaWNlUk1CGAUgASgJEhAKCFByaWNlVVNEGAYgASgJEhYKDklz",
            "U2hvd25PbkZyb250GAcgASgIEhEKCUNyZWF0ZWRPbhgIIAEoCRIRCglDcmVh",
            "dGVkQnkYCSABKAkSEwoLTW9kZWZpZWxkT24YCiABKAkSEwoLTW9kZWZpZWxk",
            "QnkYCyABKAkSSwoRUmVtYXJrVHJhbnNsYXRpb24YDCABKAsyMC5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5UcmFuc2xhdGlvblN0cnVjdBIUCgxD",
            "b25mZXJlbmNlSWQYDSABKAkSFgoOQ29uZmVyZW5jZU5hbWUYDiABKAkSEQoJ",
            "SXNTcGVha2VyGA8gASgIEhEKCUNUeXBlQ29kZRgQIAEoCRIOCgZJc0dpdmUY",
            "ESABKAgSDAoEWWVhchgSIAEoCRISCgpSZW1hcmtDb2RlGBMgASgJIsEBChpD",
            "b21wYW55U2VydmljZVBhY2tWTVN0cnVjdBJTChJDb21wYW55U2VydmljZVBh",
            "Y2sYASABKAsyNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db21w",
            "YW55U2VydmljZVBhY2tTdHJ1Y3QSTgoUc2VydmljZXBhY2tfbGlzdGRhdGEY",
            "AiADKAsyMC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZXJ2aWNl",
            "UGFja1N0cnVjdCKvAQoURXh0cmFTZXJ2aWNlVk1TdHJ1Y3QSRwoMRXh0cmFT",
            "ZXJ2aWNlGAEgASgLMjEuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "RXh0cmFTZXJ2aWNlU3RydWN0Ek4KFHNlcnZpY2VwYWNrX2xpc3RkYXRhGAIg",
            "AygLMjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuU2VydmljZVBh",
            "Y2tTdHJ1Y3QipgEKE1NlcnZpY2VQYWNrVk1TdHJ1Y3QSRQoLU2VydmljZVBh",
            "Y2sYASABKAsyMC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZXJ2",
            "aWNlUGFja1N0cnVjdBJIChFhY3Rpdml0eV9saXN0ZGF0YRgCIAMoCzItLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkFjdGl2aXR5U3RydWN0IpYC",
            "ChJFeHRyYVNlcnZpY2VTdHJ1Y3QSFgoORXh0cmFTZXJ2aWNlSWQYASABKAkS",
            "GwoTRXh0cmFDb250cmFjdE51bWJlchgCIAEoCRIQCghNZW1iZXJQSxgDIAEo",
            "CRJLCg5NZW1UcmFuc2xhdGlvbhgEIAEoCzIzLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLk1lbVRyYW5zbGF0aW9uU3RydWN0Eg4KBk93ZXJpZBgF",
            "IAEoCRIMCgRPd2VyGAYgASgJEhEKCUNyZWF0ZWRPbhgHIAEoCRIRCglDcmVh",
            "dGVkQnkYCCABKAkSEwoLTW9kZWZpZWxkT24YCSABKAkSEwoLTW9kZWZpZWxk",
            "QnkYCiABKAki6gMKEVNlcnZpY2VQYWNrU3RydWN0EhUKDVNlcnZpY2VQYWNr",
            "SWQYASABKAkSRQoLVHJhbnNsYXRpb24YAiABKAsyMC5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5UcmFuc2xhdGlvblN0cnVjdBIQCghQcmljZVJN",
            "QhgDIAEoCRIQCghQcmljZVVTRBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkS",
            "EQoJQ3JlYXRlZEJ5GAYgASgJEhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01v",
            "ZGVmaWVsZEJ5GAggASgJEhQKDENvbmZlcmVuY2VJZBgJIAEoCRIWCg5Db25m",
            "ZXJlbmNlTmFtZRgKIAEoCRIbChNTZXNzaW9uQ29uZmVyZW5jZUlkGAsgASgJ",
            "Eh0KFVNlc3Npb25Db25mZXJlbmNlTmFtZRgMIAEoCRITCgtTZXNzaW9uRGF0",
            "ZRgNIAEoCRIYChBTZXNzaW9uU3RhcnRUaW1lGA4gASgJEiAKGFRoaXJkU2Vz",
            "c2lvbkNvbmZlcmVuY2VJZBgPIAEoCRIiChpUaGlyZFNlc3Npb25Db25mZXJl",
            "bmNlTmFtZRgQIAEoCRIWCg5TZXNzaW9uQWRkcmVzcxgRIAEoCRIMCgRZZWFy",
            "GBIgASgJIvwBCg5BY3Rpdml0eVN0cnVjdBISCgpBY3Rpdml0eUlkGAEgASgJ",
            "EkYKDEFjdGl2aXR5TmFtZRgCIAEoCzIwLkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlLlRyYW5zbGF0aW9uU3RydWN0EhsKE1Nlc3Npb25Db25mZXJl",
            "bmNlSUQYAyABKAkSTwoVU2Vzc2lvbkNvbmZlcmVuY2VOYW1lGAQgASgLMjAu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuVHJhbnNsYXRpb25TdHJ1",
            "Y3QSDAoEU29ydBgFIAEoBRISCgpTZXNzaW9uSURzGAYgASgJIq4BChRDQ051",
            "bWJlckNvbmZpZ1N0cnVjdBIKCgJJZBgBIAEoCRIOCgZQcmVmaXgYAiABKAkS",
            "DAoEWWVhchgDIAEoCRINCgVDTmFubxgEIAEoCRINCgVDb3VudBgFIAEoBRIO",
            "CgZTdGF0dXMYBiABKAUSEAoISXNEZWxldGUYByABKAgSFAoMQ29uZmVyZW5j",
            "ZUlkGAggASgJEhYKDkNvbmZlcmVuY2VOYW1lGAkgASgJIocCChJDb250cmFj",
            "dFR5cGVTdHJ1Y3QSFgoOQ29udHJhY3RUeXBlSWQYASABKAkSDAoEU29ydBgC",
            "IAEoBRJFCgtUcmFuc2xhdGlvbhgDIAEoCzIwLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLlRyYW5zbGF0aW9uU3RydWN0EhEKCUNUeXBlQ29kZRgE",
            "IAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhMK",
            "C01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEhEKCUlz",
            "U3BlYWtlchgJIAEoCBIOCgZJc0dpdmUYCiABKAgipgIKJURlbGVnYXRlU2Vy",
            "dmljZVBhY2tEaXNjb3VudExpc3RTdHJ1Y3QSEgoKRGlzY291bnRJZBgBIAEo",
            "CRJNCg9Db21wYW55Q29udHJhY3QYAiABKAsyNC5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5Db21wYW55Q29udHJhY3RTdHJ1Y3QSHQoVUHJpY2VB",
            "ZnRlckRpc2NvdW50Uk1CGAMgASgJEh0KFVByaWNlQWZ0ZXJEaXNjb3VudFVT",
            "RBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJ",
            "EhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEgwK",
            "BFllYXIYCSABKAkiswIKOkRlbGVnYXRlU2VydmljZVBhY2tEaXNjb3VudEZv",
            "ckNvbmZlcmVuY2VDb250cmFjdExpc3RTdHJ1Y3QSEgoKRGlzY291bnRJZBgB",
            "IAEoCRJTChJDb25mZXJlbmNlQ29udHJhY3QYAiABKAsyNy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlQ29udHJhY3RTdHJ1Y3QS",
            "HQoVUHJpY2VBZnRlckRpc2NvdW50Uk1CGAMgASgJEh0KFVByaWNlQWZ0ZXJE",
            "aXNjb3VudFVTRBgEIAEoCRIRCglDcmVhdGVkT24YBSABKAkSEQoJQ3JlYXRl",
            "ZEJ5GAYgASgJEhMKC01vZGVmaWVsZE9uGAcgASgJEhMKC01vZGVmaWVsZEJ5",
            "GAggASgJIvgBCjZEZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRGb3JDb25m",
            "ZXJlbmNlQ29udHJhY3RTdHJ1Y3QSEgoKRGlzY291bnRJZBgBIAEoCRIcChRD",
            "b25mZXJlbmNlQ29udHJhY3RJZBgCIAEoCRIdChVQcmljZUFmdGVyRGlzY291",
            "bnRSTUIYAyABKAkSHQoVUHJpY2VBZnRlckRpc2NvdW50VVNEGAQgASgJEhEK",
            "CUNyZWF0ZWRPbhgFIAEoCRIRCglDcmVhdGVkQnkYBiABKAkSEwoLTW9kZWZp",
            "ZWxkT24YByABKAkSEwoLTW9kZWZpZWxkQnkYCCABKAki5wEKIURlbGVnYXRl",
            "U2VydmljZVBhY2tEaXNjb3VudFN0cnVjdBISCgpEaXNjb3VudElkGAEgASgJ",
            "EhIKCkNvbnRyYWN0SWQYAiABKAkSHQoVUHJpY2VBZnRlckRpc2NvdW50Uk1C",
            "GAMgASgJEh0KFVByaWNlQWZ0ZXJEaXNjb3VudFVTRBgEIAEoCRIRCglDcmVh",
            "dGVkT24YBSABKAkSEQoJQ3JlYXRlZEJ5GAYgASgJEhMKC01vZGVmaWVsZE9u",
            "GAcgASgJEhMKC01vZGVmaWVsZEJ5GAggASgJEgwKBFllYXIYCSABKAkiNwoR",
            "VHJhbnNsYXRpb25TdHJ1Y3QSCgoCQ04YASABKAkSCgoCRU4YAiABKAkSCgoC",
            "SlAYAyABKAkiQAoYQ29tTmFtZVRyYW5zbGF0aW9uU3RydWN0EhEKCUNvbXBh",
            "bnlDThgBIAEoCRIRCglDb21wYW55RU4YAiABKAkiQAoYQWRkcmVzc1RyYW5z",
            "bGF0aW9uU3RydWN0EhEKCUFkZHJlc3NDThgBIAEoCRIRCglBZGRyZXNzRU4Y",
            "AiABKAkiOgoUTWVtVHJhbnNsYXRpb25TdHJ1Y3QSEAoITWVtYmVyQ04YASAB",
            "KAkSEAoITWVtYmVyRU4YAiABKAkiLgoNTW9kaWZ5UmVxdWVzdBIKCgJJZBgB",
            "IAEoCRIRCglJc0NoZWNrSW4YAiABKAgiQwoLTW9kaWZ5UmVwbHkSDwoHc3Vj",
            "Y2VzcxgBIAEoCBIWCg5tb2RpZmllZF9jb3VudBgCIAEoBRILCgNtc2cYAyAB",
            "KAkipwEKHk1vZGlmeVJlcGx5Rm9yQ29uZmVyZW5jZU9uc2l0ZRIPCgdzdWNj",
            "ZXNzGAEgASgIEhYKDm1vZGlmaWVkX2NvdW50GAIgASgFEgsKA21zZxgDIAEo",
            "CRJPChBDb25mZXJlbmNlT25zaXRlGAQgASgLMjUuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuQ29uZmVyZW5jZU9uc2l0ZVN0cnVjdCIdCgtSZXN1",
            "bHRSZXBseRIOCgZyZXN1bHQYASABKAgiZwobQ29udHJhY3RTdGF0dXNEaWNG",
            "b3JEaWNMaXN0EkgKCGxpc3RkYXRhGAEgAygLMjYuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuQ29udHJhY3RTdGF0dXNEaWNTdHJ1Y3QiVwoTUmVt",
            "YXJrRGljRm9yRGljTGlzdBJACghsaXN0ZGF0YRgBIAMoCzIuLkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlJlbWFya0RpY1N0cnVjdCJTChFUYWdU",
            "eXBlRm9yRGljTGlzdBI+CghsaXN0ZGF0YRgBIAMoCzIsLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLlRhZ1R5cGVTdHJ1Y3QiWQoUWWVhckNvbmZp",
            "Z0ZvckRpY0xpc3QSQQoIbGlzdGRhdGEYASADKAsyLy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5ZZWFyQ29uZmlnU3RydWN0InAKFUNvbnRyYWN0",
            "U3RhdHVzRGljTGlzdBJICghsaXN0ZGF0YRgBIAMoCzI2LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLkNvbnRyYWN0U3RhdHVzRGljU3RydWN0Eg0K",
            "BXRvdGFsGAIgASgFImAKDVJlbWFya0RpY0xpc3QSQAoIbGlzdGRhdGEYASAD",
            "KAsyLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5SZW1hcmtEaWNT",
            "dHJ1Y3QSDQoFdG90YWwYAiABKAUinQEKF0NvbnRyYWN0U3RhdHVzRGljU3Ry",
            "dWN0EgoKAklkGAEgASgJEhIKClN0YXR1c05hbWUYAiABKAkSEgoKU3RhdHVz",
            "Q29kZRgDIAEoCRIRCglDcmVhdGVkT24YBCABKAkSEQoJQ3JlYXRlZEJ5GAUg",
            "ASgJEhMKC01vZGVmaWVsZE9uGAYgASgJEhMKC01vZGVmaWVsZEJ5GAcgASgJ",
            "ImsKD1JlbWFya0RpY1N0cnVjdBIKCgJJZBgBIAEoCRIRCglDb250ZW50Q24Y",
            "AiABKAkSEQoJQ29udGVudEVuGAMgASgJEhEKCUNvbnRlbnRKcBgEIAEoCRIT",
            "CgtDb250ZW50Q29kZRgFIAEoCSJtChlNb2RpZnlSZXBseUZvckNyZWF0ZU90",
            "aGVyEg8KB3N1Y2Nlc3MYASABKAgSFgoObW9kaWZpZWRfY291bnQYAiABKAUS",
            "CwoDbXNnGAMgASgJEgwKBGV4dDEYBCABKAkSDAoEZXh0MhgFIAEoCSL0AQof",
            "UGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcFN0cnVjdBINCgVNYXBJZBgBIAEo",
            "CRIQCghNZW1iZXJQSxgCIAEoCRISCgpBY3Rpdml0eUlkGAMgASgJEhQKDEFj",
            "dGl2aXR5TmFtZRgEIAEoCRIMCgRZZWFyGAUgASgJEhEKCUlzQ29uZmlybRgG",
            "IAEoCBIPCgdJc0NoZWNrGAcgASgIEhgKEFBlcnNvbkNvbnRyYWN0SWQYCCAB",
            "KAkSGwoTU2Vzc2lvbkNvbmZlcmVuY2VJZBgJIAEoCRIdChVTZXNzaW9uQ29u",
            "ZmVyZW5jZU5hbWUYCiABKAkiXgobQ29tcGFueVNlcnZpY2VQYWNrTWFwU3Ry",
            "dWN0EgoKAklkGAEgASgJEhwKFENvbXBhbnlTZXJ2aWNlUGFja0lkGAIgASgJ",
            "EhUKDVNlcnZpY2VQYWNrSWQYAyABKAkikQEKHUNvbXBhbnlTZXJ2aWNlUGFj",
            "a01hcFZNU3RydWN0Eg0KBU1hcElkGAEgASgJEhwKFENvbXBhbnlTZXJ2aWNl",
            "UGFja0lkGAIgASgJEhUKDVNlcnZpY2VQYWNrSWQYAyABKAkSFAoMQ29uZmVy",
            "ZW5jZUlkGAQgASgJEhYKDkNvbmZlcmVuY2VOYW1lGAUgASgJImwKE0FwcGx5",
            "Q29uZmVyZW5jZUxpc3QSRgoIbGlzdGRhdGEYASADKAsyNC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5BcHBseUNvbmZlcmVuY2VTdHJ1Y3QSDQoF",
            "dG90YWwYAiABKAUimQIKFUFwcGx5Q29uZmVyZW5jZVN0cnVjdBIKCgJJZBgB",
            "IAEoCRIYChBQZXJzb25Db250cmFjdElkGAIgASgJEhAKCE1lbWJlclBLGAMg",
            "ASgJEhsKE1Nlc3Npb25Db25mZXJlbmNlSWQYBCABKAkSEQoJSXNDb25maXJt",
            "GAUgASgIEhEKCUNvbXBhbnlJZBgGIAEoCRIUCgxUYWdUeXBlQ29kZXMYByAB",
            "KAkSGQoRUmVtYXJrVHJhbnNsYXRpb24YCCABKAkSDAoEWWVhchgJIAEoCRIc",
            "ChRTZXNzaW9uQ29uZmVyZW5jZUlkcxgKIAMoCRIYChBJc1BhcnRpY3VsYXJD",
            "b25mGAsgASgIEg4KBk93ZXJpZBgMIAEoCSLrAgoWQ29uZmVyZW5jZU9uc2l0",
            "ZVN0cnVjdBIKCgJJZBgBIAEoBRIWCg5Db250cmFjdE51bWJlchgCIAEoCRIT",
            "CgtDb21wYW55TmFtZRgDIAEoCRIQCghDdXJyZW5jeRgEIAEoCRIPCgdQYXlU",
            "eXBlGAUgASgJEhAKCENyZWRpdGVkGAYgASgJEg8KB0FkZERhdGUYByABKAkS",
            "DAoEQ29zdBgIIAEoCRIOCgZSZW1hcmsYCSABKAkSFAoMQ29udHJhY3RZZWFy",
            "GAogASgJEhwKFENvbXBhbnlTZXJ2aWNlUGFja0lkGAsgASgJEhEKCUNyZWF0",
            "ZWRPbhgMIAEoCRIRCglDcmVhdGVkQnkYDSABKAkSEwoLTW9kZWZpZWxkT24Y",
            "DiABKAkSEwoLTW9kZWZpZWxkQnkYDyABKAkSEAoIVXNlck5hbWUYECABKAkS",
            "HgoWQ29tcGFueVNlcnZpY2VQYWNrTmFtZRgRIAEoCSKHAgorUGVyc29uQ29u",
            "dHJhY3RBbmRTZXNzaW9uQ29uZmVyZW5jZUlkc1N0cnVjdBJNCg9Db21wYW55",
            "Q29udHJhY3QYASABKAsyNC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5Db21wYW55Q29udHJhY3RTdHJ1Y3QSSwoOUGVyc29uQ29udHJhY3QYAiAB",
            "KAsyMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250",
            "cmFjdFN0cnVjdBIcChRTZXNzaW9uQ29uZmVyZW5jZUlkcxgDIAMoCRIeChZD",
            "b21wYW55U2VydmljZVBhY2tOYW1lGAQgASgJIocBCiNBcHBseUNvbmZlcmVu",
            "Y2VMaXN0VG9DcmVhdGVPclVwZGF0ZRIYChBQZXJzb25Db250cmFjdElkGAEg",
            "ASgJEkYKCGxpc3RkYXRhGAIgAygLMjQuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuQXBwbHlDb25mZXJlbmNlU3RydWN0IpYBChJJbnZpdGVMZXR0",
            "ZXJTdHJ1Y3QSCgoCSWQYASABKAkSDwoHQ29tcGFueRgCIAEoCRINCgVFSGFs",
            "bBgDIAEoCRILCgNFTm8YBCABKAkSDwoHUHJvZmlsZRgFIAEoCRIRCglFQWNp",
            "dHZpdHkYBiABKAkSEAoITGFuZ3VhZ2UYByABKAkSEQoJQ3JlYXRlZE9uGAgg",
            "ASgJItQBChBJbnZpdGVDb2RlU3RydWN0EgoKAklkGAEgASgJEhgKEEludml0",
            "ZUNvZGVOdW1iZXIYAiABKAkSHAoUQ29tcGFueVNlcnZpY2VQYWNrSWQYAyAB",
            "KAkSDQoFQ291bnQYBCABKAUSDAoEWWVhchgFIAEoCRIPCgdXZWJTaXRlGAYg",
            "ASgJEhEKCUNyZWF0ZWRPbhgHIAEoCRIRCglDcmVhdGVkQnkYCCABKAkSEwoL",
            "TW9kZWZpZWxkT24YCSABKAkSEwoLTW9kZWZpZWxkQnkYCiABKAkizAEKFUlu",
            "dml0ZUNvZGVDU1BWTVN0cnVjdBJDCgpJbnZpdGVDb2RlGAEgASgLMi8uR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSW52aXRlQ29kZVN0cnVjdBJT",
            "ChJDb21wYW55U2VydmljZVBhY2sYAiABKAsyNy5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tTdHJ1Y3QSGQoRSW52",
            "aXRlUmVjb3JkQ291bnQYAyABKAkiuwEKFkludml0ZUNvZGVSZWNvcmRTdHJ1",
            "Y3QSCgoCSWQYASABKAkSFAoMSW52aXRlQ29kZUlkGAIgASgJEhAKCE1lbWJl",
            "clBLGAMgASgJEhIKCk1lbWJlck5hbWUYBCABKAkSDwoHVXNlRGF0ZRgFIAEo",
            "CRIYChBQZXJzb25Db250cmFjdElkGAYgASgJEhwKFFBlcnNvbkNvbnRyYWN0",
            "TnVtYmVyGAcgASgJEhAKCElzRGVsZXRlGAggASgIIkIKDVRhZ1R5cGVTdHJ1",
            "Y3QSCgoCSWQYASABKAkSFwoPTmFtZVRyYW5zbGF0aW9uGAIgASgJEgwKBENv",
            "ZGUYAyABKAkiSQoQWWVhckNvbmZpZ1N0cnVjdBIKCgJJZBgBIAEoCRIMCgRZ",
            "ZWFyGAIgASgJEg0KBUlzVXNlGAMgASgIEgwKBERhdGUYBCABKAkiMAoOQ2hl",
            "Y2tJblJlcXVlc3QSCwoDSWRzGAEgAygJEhEKCUlzQ2hlY2tJbhgCIAEoCCKL",
            "AQoYQ29udHJhY3RTdGF0aXN0aWNzU3RydWN0EhwKFENvbXBhbnlTZXJ2aWNl",
            "UGFja0lkGAEgASgJEh4KFkNvbXBhbnlTZXJ2aWNlUGFja05hbWUYAiABKAkS",
            "EwoLUGVyc29uQ291bnQYAyABKAkSHAoUTWF4Q29udHJhY3ROdW1iZXJTdW0Y",
            "BCABKAkiZwoYTW9kaWZ5Q0NQQ093ZXJJbmZvU3RydWN0EhIKCkNvbnRyYWN0",
            "SWQYASABKAkSDgoGT3dlcmlkGAIgASgJEgwKBE93ZXIYAyABKAkSGQoRTWF4",
            "Q29udHJhY3ROdW1iZXIYBCABKAUiGwoJQm9vbFJlcGx5Eg4KBnJlc3VsdBgB",
            "IAEoCDLYmwEKH0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2VUb0dycGMSjAEK",
            "GUdldENvbmZlcmVuY2VDb250cmFjdExpc3QSNi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBo1LkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbmZlcmVuY2VDb250cmFjdExp",
            "c3QiABKUAQohR2V0Q29uZmVyZW5jZUNvbnRyYWN0TGlzdEJ5SXNHaXZlEjYu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVl",
            "c3RTZWFyY2gaNS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25m",
            "ZXJlbmNlQ29udHJhY3RMaXN0IgASrQEKOkdldENvbmZlcmVuY2VDb250cmFj",
            "dExpc3RCeUlzR2l2ZVdpdGhBbGxDb250cmFjdFN0YXR1c0NvZGUSNi5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdFNl",
            "YXJjaBo1LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbmZlcmVu",
            "Y2VDb250cmFjdExpc3QiABKJAQokR2V0Q29uZmVyZW5jZUNvbnRyYWN0QnlD",
            "b21wYW55SWRMaXN0EiguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "SWRSZXF1ZXN0GjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29u",
            "ZmVyZW5jZUNvbnRyYWN0TGlzdCIAEpMBCitHZXRDb25mZXJlbmNlQ29udHJh",
            "Y3RCeUNvbXBhbnlJZEFuZFllYXJMaXN0EisuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuU2VhcmNoU3RydWN0GjUuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuQ29uZmVyZW5jZUNvbnRyYWN0TGlzdCIAEoABChlHZXRD",
            "b25mZXJlbmNlQ29udHJhY3RCeUlkEiguR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuSWRSZXF1ZXN0GjcuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuQ29uZmVyZW5jZUNvbnRyYWN0U3RydWN0IgASkwEKHENyZWF0ZUNv",
            "bmZlcmVuY2VDb250cmFjdEluZm8SNy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5Db25mZXJlbmNlQ29udHJhY3RTdHJ1Y3QaOC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseUZvckNyZWF0ZU90aGVy",
            "IgAShQEKHFVwZGF0ZUNvbmZlcmVuY2VDb250cmFjdEluZm8SNy5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlQ29udHJhY3RTdHJ1",
            "Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBs",
            "eSIAEocBCh5Nb2RpZnlDb25mZXJlbmNlQ29udHJhY3RCeU93ZXISNy5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlQ29udHJhY3RT",
            "dHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlS",
            "ZXBseSIAEpIBCilNb2RpZnlDb25mZXJlbmNlQ29udHJhY3RQYXltZW50U3Rh",
            "dHVzQ29kZRI3LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbmZl",
            "cmVuY2VDb250cmFjdFN0cnVjdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLk1vZGlmeVJlcGx5IgASjQEKI01vZGlmeUNvbmZlcmVuY2VDb250",
            "cmFjdElzU2VuZEVtYWlsEjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuQ29uZmVyZW5jZUNvbnRyYWN0Q2lkTGlzdBoqLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASdwoaTW9kaWZ5TW9kaWZ5",
            "UGVybWlzc2lvbkJ5SWQSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5TZWFyY2hTdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5Nb2RpZnlSZXBseSIAEnYKHERlbGV0ZUNvbmZlcmVuY2VDb250cmFjdEJ5",
            "SWQSKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JZFJlcXVlc3Qa",
            "Ki5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIA",
            "EogBCh5EZWxldGVDb25mZXJlbmNlQ29udHJhY3RCeUxpc3QSOC5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlQ29udHJhY3RDaWRM",
            "aXN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVw",
            "bHkiABKJAQofRGVsZXRlQ29uQ0FuZENDQW5kUENCeUNvbklkTGlzdBI4Lkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbmZlcmVuY2VDb250cmFj",
            "dENpZExpc3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2Rp",
            "ZnlSZXBseSIAEoYBChZHZXRDb21wYW55Q29udHJhY3RMaXN0EjYuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RTZWFy",
            "Y2gaMi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db21wYW55Q29u",
            "dHJhY3RMaXN0IgASjgEKLEdldENvbXBhbnlDb250cmFjdEJ5Q29uZmVyZW5j",
            "ZUNvbnRyYWN0SWRMaXN0EiguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuSWRSZXF1ZXN0GjIuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "Q29tcGFueUNvbnRyYWN0TGlzdCIAEoMBCiFHZXRDb21wYW55Q29udHJhY3RC",
            "eUNvbXBhbnlJZExpc3QSKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5JZFJlcXVlc3QaMi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5D",
            "b21wYW55Q29udHJhY3RMaXN0IgASegoWR2V0Q29tcGFueUNvbnRyYWN0QnlJ",
            "ZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBo0",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbXBhbnlDb250cmFj",
            "dFN0cnVjdCIAEo0BChlDcmVhdGVDb21wYW55Q29udHJhY3RJbmZvEjQuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29tcGFueUNvbnRyYWN0U3Ry",
            "dWN0GjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVw",
            "bHlGb3JDcmVhdGVPdGhlciIAEn8KGVVwZGF0ZUNvbXBhbnlDb250cmFjdElu",
            "Zm8SNC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db21wYW55Q29u",
            "dHJhY3RTdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5N",
            "b2RpZnlSZXBseSIAEn0KF01vZGlmeU1heENvbnRyYWN0TnVtYmVyEjQuR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29tcGFueUNvbnRyYWN0U3Ry",
            "dWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVw",
            "bHkiABJ3Cg5Nb2RpZnlDQ1BDT3dlchI3LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlLk1vZGlmeUNDUENPd2VySW5mb1N0cnVjdBoqLkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgAScwoZRGVsZXRl",
            "Q29tcGFueUNvbnRyYWN0QnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLklkUmVxdWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlLk1vZGlmeVJlcGx5IgASkgEKKlJlbW92ZUNvbXBhbnlDb250cmFjdElm",
            "UGVyc29uQ29udHJhY3RFbXB0eRIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLklkUmVxdWVzdBo4LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlLk1vZGlmeVJlcGx5Rm9yQ3JlYXRlT3RoZXIiABKCAQobRGVsZXRlQ29t",
            "cGFueUNvbnRyYWN0QnlMaXN0EjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuQ29tcGFueUNvbnRyYWN0Q2lkTGlzdBoqLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASfQoWRGVsZXRlQ0NBbmRQ",
            "Q0J5Q2lkTGlzdBI1LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNv",
            "bXBhbnlDb250cmFjdENpZExpc3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5Nb2RpZnlSZXBseSIAEoQBChVHZXRQZXJzb25Db250cmFjdExp",
            "c3QSNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QYWdpbmF0aW9u",
            "UmVxdWVzdFNlYXJjaBoxLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "LlBlcnNvbkNvbnRyYWN0TGlzdCIAEpABCiFHZXRQZXJzb25Db250cmFjdEJ5",
            "Q29udHJhY3RJZExpc3QSNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBoxLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLlBlcnNvbkNvbnRyYWN0TGlzdCIAEokBChpHZXRQZXJz",
            "b25Db250cmFjdEJ5TmV3TGlzdBI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGjEuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuUGVyc29uQ29udHJhY3RMaXN0IgASjgEKH0dl",
            "dFBlcnNvbkNvbnRyYWN0QnlNZW1iZXJQS0xpc3QSNi5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBoxLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNvbnRyYWN0TGlz",
            "dCIAEpMBCi9HZXRQZXJzb25Db250cmFjdEJ5TWVtYmVyUEtMaXN0V2l0aE5v",
            "UGFnaW5hdGlvbhIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNl",
            "YXJjaFN0cnVjdBoxLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBl",
            "cnNvbkNvbnRyYWN0TGlzdCIAEngKFUdldFBlcnNvbkNvbnRyYWN0QnlJZBIo",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBozLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNvbnRyYWN0U3Ry",
            "dWN0IgASjQEKJ0dldFBlcnNvbkNvbnRyYWN0QnlQZXJzb25Db250cmFjdE51",
            "bWJlchIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNlYXJjaFN0",
            "cnVjdBozLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNv",
            "bnRyYWN0U3RydWN0IgASiwEKGENyZWF0ZVBlcnNvbkNvbnRyYWN0SW5mbxIz",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNvbnRyYWN0",
            "U3RydWN0GjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5",
            "UmVwbHlGb3JDcmVhdGVPdGhlciIAEn0KGFVwZGF0ZVBlcnNvbkNvbnRyYWN0",
            "SW5mbxIzLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNvbkNv",
            "bnRyYWN0U3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "TW9kaWZ5UmVwbHkiABJ9Ch9Nb2RpZnlQZXJzb25Db250cmFjdEJ5SXNDaGVj",
            "a0luEiwuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVx",
            "dWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJl",
            "cGx5IgAShAEKJU1vZGlmeVBlcnNvbkNvbnRyYWN0SXNDaGVja0luQnlJZExp",
            "c3QSLS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5DaGVja0luUmVx",
            "dWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJl",
            "cGx5IgAShQEKH01vZGlmeVBlcnNvbkNvbnRyYWN0SXNTZW5kRW1haWwSNC5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250cmFjdFBp",
            "ZExpc3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlS",
            "ZXBseSIAEowBCiJNb2RpZnlQZXJzb25Db250cmFjdElzRmlhbmNlUmVjb3Jk",
            "EjguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUGVyc29uQ29udHJh",
            "Y3RQQ05vUmVxdWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "Lk1vZGlmeVJlcGx5IgASgAEKI01vZGlmeVBlcnNvbkNvbnRyYWN0SXNQcmlu",
            "dEJ5T3dlcmlkEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuU2Vh",
            "cmNoU3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9k",
            "aWZ5UmVwbHkiABJ7CiBNb2RpZnlQZXJzb25Db250cmFjdElzUHJpbnRCeWlk",
            "cxIpLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkc1JlcXVlc3Qa",
            "Ki5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIA",
            "EnIKGERlbGV0ZVBlcnNvbkNvbnRyYWN0QnlJZBIoLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBoqLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASgAEKGkRlbGV0ZVBlcnNvbkNv",
            "bnRyYWN0QnlMaXN0EjQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "UGVyc29uQ29udHJhY3RQaWRMaXN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJ4Ch5EZWxldGVQZXJzb25Db250cmFj",
            "dEJ5SWRGb3JXZWISKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5J",
            "ZFJlcXVlc3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2Rp",
            "ZnlSZXBseSIAEnkKGEdldENvbXBhbnlTZXJ2aWNlUGFja0RpYxIkLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkVtcHR5GjUuR3JwY0NvbmZlcmVu",
            "Y2VDb250cmFjdFNlcnZpY2UuQ29tcGFueVNlcnZpY2VQYWNrTGlzdCIAEoYB",
            "Ch5HZXRDb21wYW55U2VydmljZVBhY2tEaWNCeVllYXISKy5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3QaNS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tMaXN0IgAS",
            "kQEKKUdldENvbXBhbnlTZXJ2aWNlUGFja0xpc3RCeUlzU2hvd25PbkZyb250",
            "EisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuU2VhcmNoU3RydWN0",
            "GjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29tcGFueVNlcnZp",
            "Y2VQYWNrTGlzdCIAEowBChlHZXRDb21wYW55U2VydmljZVBhY2tMaXN0EjYu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVl",
            "c3RTZWFyY2gaNS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db21w",
            "YW55U2VydmljZVBhY2tMaXN0IgASjgEKKUdldENvbXBhbnlTZXJ2aWNlUGFj",
            "a0xpc3RCeUNvbnRyYWN0VHlwZUlkEiguR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuSWRSZXF1ZXN0GjUuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuQ29tcGFueVNlcnZpY2VQYWNrTGlzdCIAEpEBCilHZXRDb21wYW55",
            "U2VydmljZVBhY2tMaXN0Rm9yTHVuY2hPckRpbm5lchIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLlNlYXJjaFN0cnVjdBo1LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLkNvbXBhbnlTZXJ2aWNlUGFja0xpc3QiABKC",
            "AQoZR2V0Q29tcGFueVNlcnZpY2VQYWNrQnlJZBIoLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBo5LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLkNvbXBhbnlTZXJ2aWNlUGFja1ZNU3RydWN0IgAShwEK",
            "HENyZWF0ZUNvbXBhbnlTZXJ2aWNlUGFja0luZm8SOS5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tWTVN0cnVjdBoq",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgAS",
            "hwEKHFVwZGF0ZUNvbXBhbnlTZXJ2aWNlUGFja0luZm8SOS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tWTVN0cnVj",
            "dBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5",
            "IgASdgocRGVsZXRlQ29tcGFueVNlcnZpY2VQYWNrQnlJZBIoLkdycGNDb25m",
            "ZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBoqLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASmQEKLUdldENvbXBh",
            "bnlTZXJ2aWNlUGFja1ZNQnlQZXJzb25Db250cmFjdE51bWJlchIrLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNlYXJjaFN0cnVjdBo5LkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbXBhbnlTZXJ2aWNlUGFja1ZN",
            "U3RydWN0IgASgAEKE0dldEV4dHJhU2VydmljZUxpc3QSNi5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBov",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkV4dHJhU2VydmljZUxp",
            "c3QiABJ2ChNHZXRFeHRyYVNlcnZpY2VCeUlkEiguR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GjMuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuRXh0cmFTZXJ2aWNlVk1TdHJ1Y3QiABJ7ChZDcmVhdGVF",
            "eHRyYVNlcnZpY2VJbmZvEjMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuRXh0cmFTZXJ2aWNlVk1TdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEnsKFlVwZGF0ZUV4dHJhU2Vydmlj",
            "ZUluZm8SMy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5FeHRyYVNl",
            "cnZpY2VWTVN0cnVjdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "Lk1vZGlmeVJlcGx5IgAScAoWRGVsZXRlRXh0cmFTZXJ2aWNlQnlJZBIoLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBoqLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASbwoVR2V0",
            "U2VydmljZVBhY2tMaXN0QWxsEiQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuRW1wdHkaLi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5T",
            "ZXJ2aWNlUGFja0xpc3QiABJ+CiBHZXRTZXJ2aWNlUGFja0J5Q29uZmVyZW5j",
            "ZUlkTGlzdBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVx",
            "dWVzdBouLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNlcnZpY2VQ",
            "YWNrTGlzdCIAEn4KEkdldFNlcnZpY2VQYWNrTGlzdBI2LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLlBhZ2luYXRpb25SZXF1ZXN0U2VhcmNoGi4u",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuU2VydmljZVBhY2tMaXN0",
            "IgASdAoSR2V0U2VydmljZVBhY2tCeUlkEiguR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GjIuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuU2VydmljZVBhY2tWTVN0cnVjdCIAEnkKFUNyZWF0ZVNlcnZp",
            "Y2VQYWNrSW5mbxIyLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNl",
            "cnZpY2VQYWNrVk1TdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZS5Nb2RpZnlSZXBseSIAEnkKFVVwZGF0ZVNlcnZpY2VQYWNrSW5mbxIy",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNlcnZpY2VQYWNrVk1T",
            "dHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlS",
            "ZXBseSIAEm8KFURlbGV0ZVNlcnZpY2VQYWNrQnlJZBIoLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBoqLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASbQoTSXNDYW5EZWxldGVB",
            "Y2l0dml0eRIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVx",
            "dWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlJlc3VsdFJl",
            "cGx5IgASdwoaSXNFeGlzdFNlc3Npb25Db25mZXJlbmNkSWQSKy5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3QaKi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5SZXN1bHRSZXBseSIAEnoKHVJlbW92",
            "ZVNDQnlTZXNzaW9uQ29uZmVyZW5jZElkEisuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuU2VhcmNoU3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJtChJHZXRDb250cmFjdFR5cGVE",
            "aWMSJC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5FbXB0eRovLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNvbnRyYWN0VHlwZUxpc3Qi",
            "ABJ6ChNHZXRDb250cmFjdFR5cGVMaXN0EjAuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3QaLy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5Db250cmFjdFR5cGVMaXN0IgASdAoTR2V0Q29u",
            "dHJhY3RUeXBlQnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "LklkUmVxdWVzdBoxLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNv",
            "bnRyYWN0VHlwZVN0cnVjdCIAEnkKFkNyZWF0ZUNvbnRyYWN0VHlwZUluZm8S",
            "MS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db250cmFjdFR5cGVT",
            "dHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlS",
            "ZXBseSIAEnkKFlVwZGF0ZUNvbnRyYWN0VHlwZUluZm8SMS5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db250cmFjdFR5cGVTdHJ1Y3QaKi5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEnAKFkRl",
            "bGV0ZUNvbnRyYWN0VHlwZUJ5SWQSKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5JZFJlcXVlc3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZS5Nb2RpZnlSZXBseSIAEnEKFEdldENDTnVtYmVyQ29uZmlnRGljEiQu",
            "R3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRW1wdHkaMS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5DQ051bWJlckNvbmZpZ0xpc3QiABJ+",
            "ChVHZXRDQ051bWJlckNvbmZpZ0xpc3QSMC5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdBoxLkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLkNDTnVtYmVyQ29uZmlnTGlzdCIAEngKFUdldEND",
            "TnVtYmVyQ29uZmlnQnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlLklkUmVxdWVzdBozLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "LkNDTnVtYmVyQ29uZmlnU3RydWN0IgASfQoYQ3JlYXRlQ0NOdW1iZXJDb25m",
            "aWdJbmZvEjMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ0NOdW1i",
            "ZXJDb25maWdTdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5Nb2RpZnlSZXBseSIAEn0KGFVwZGF0ZUNDTnVtYmVyQ29uZmlnSW5mbxIz",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkNDTnVtYmVyQ29uZmln",
            "U3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5",
            "UmVwbHkiABJyChhEZWxldGVDQ051bWJlckNvbmZpZ0J5SWQSKC5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JZFJlcXVlc3QaKi5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEocBCgtHZXREU1BE",
            "TGlzdBI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBhZ2luYXRp",
            "b25SZXF1ZXN0U2VhcmNoGj4uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuRGVsZWdhdGVTZXJ2aWNlUGFja0Rpc2NvdW50TGlzdCIAEn8KC0dldERT",
            "UERCeUlkEiguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSWRSZXF1",
            "ZXN0GkQuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRGVsZWdhdGVT",
            "ZXJ2aWNlUGFja0Rpc2NvdW50TGlzdFN0cnVjdCIAEoABCg5DcmVhdGVEU1BE",
            "SW5mbxJALkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkRlbGVnYXRl",
            "U2VydmljZVBhY2tEaXNjb3VudFN0cnVjdBoqLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASgAEKDlVwZGF0ZURTUERJbmZv",
            "EkAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRGVsZWdhdGVTZXJ2",
            "aWNlUGFja0Rpc2NvdW50U3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJoCg5EZWxldGVEU1BEQnlJZBIoLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVxdWVzdBoqLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASnwEKDkdl",
            "dERTUERGQ0NMaXN0EjYuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "UGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaUy5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZS5EZWxlZ2F0ZVNlcnZpY2VQYWNrRGlzY291bnRGb3JDb25m",
            "ZXJlbmNlQ29udHJhY3RMaXN0IgASlwEKDkdldERTUERGQ0NCeUlkEiguR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GlkuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRGVsZWdhdGVTZXJ2aWNlUGFja0Rp",
            "c2NvdW50Rm9yQ29uZmVyZW5jZUNvbnRyYWN0TGlzdFN0cnVjdCIAEpgBChFD",
            "cmVhdGVEU1BERkNDSW5mbxJVLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlLkRlbGVnYXRlU2VydmljZVBhY2tEaXNjb3VudEZvckNvbmZlcmVuY2VD",
            "b250cmFjdFN0cnVjdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNl",
            "Lk1vZGlmeVJlcGx5IgASmAEKEVVwZGF0ZURTUERGQ0NJbmZvElUuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRGVsZWdhdGVTZXJ2aWNlUGFja0Rp",
            "c2NvdW50Rm9yQ29uZmVyZW5jZUNvbnRyYWN0U3RydWN0GiouR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJrChFEZWxldGVE",
            "U1BERkNDQnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklk",
            "UmVxdWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlm",
            "eVJlcGx5IgASegoUR2V0Q29udHJhY3RTdGF0dXNEaWMSJC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5FbXB0eRo6LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLkNvbnRyYWN0U3RhdHVzRGljRm9yRGljTGlzdCIAEoQB",
            "ChhHZXRDb250cmFjdFN0YXR1c0RpY0xpc3QSMC5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVzdBo0LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLkNvbnRyYWN0U3RhdHVzRGljTGlzdCIAEn4K",
            "GEdldENvbnRyYWN0U3RhdHVzRGljQnlJZBIoLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLklkUmVxdWVzdBo2LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlLkNvbnRyYWN0U3RhdHVzRGljU3RydWN0IgASgwEKG0NyZWF0",
            "ZUNvbnRyYWN0U3RhdHVzRGljSW5mbxI2LkdycGNDb25mZXJlbmNlQ29udHJh",
            "Y3RTZXJ2aWNlLkNvbnRyYWN0U3RhdHVzRGljU3RydWN0GiouR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABKDAQobVXBkYXRl",
            "Q29udHJhY3RTdGF0dXNEaWNJbmZvEjYuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuQ29udHJhY3RTdGF0dXNEaWNTdHJ1Y3QaKi5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEnUKG0RlbGV0ZUNv",
            "bnRyYWN0U3RhdHVzRGljQnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLklkUmVxdWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2",
            "aWNlLk1vZGlmeVJlcGx5IgASagoMR2V0UmVtYXJrRGljEiQuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuRW1wdHkaMi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5SZW1hcmtEaWNGb3JEaWNMaXN0IgASdAoQR2V0UmVt",
            "YXJrRGljTGlzdBIwLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBh",
            "Z2luYXRpb25SZXF1ZXN0GiwuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuUmVtYXJrRGljTGlzdCIAEm4KEEdldFJlbWFya0RpY0J5SWQSKC5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JZFJlcXVlc3QaLi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5SZW1hcmtEaWNTdHJ1Y3QiABJzChND",
            "cmVhdGVSZW1hcmtEaWNJbmZvEi4uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuUmVtYXJrRGljU3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJzChNVcGRhdGVSZW1hcmtEaWNJbmZv",
            "Ei4uR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUmVtYXJrRGljU3Ry",
            "dWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVw",
            "bHkiABJtChNEZWxldGVSZW1hcmtEaWNCeUlkEiguR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GiouR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABKZAQoqR2V0UGVyc29uQ29udHJh",
            "Y3RBY3Rpdml0eU1hcEJ5TWVtYmVyUEtMaXN0EisuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuU2VhcmNoU3RydWN0GjwuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuUGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcExpc3Qi",
            "ABKbAQosR2V0UGVyc29uQ29udHJhY3RBY3Rpdml0eU1hcEJ5QWN0aXZpdHlJ",
            "ZExpc3QSKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hT",
            "dHJ1Y3QaPC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25D",
            "b250cmFjdEFjdGl2aXR5TWFwTGlzdCIAEqUBCjZHZXRQZXJzb25Db250cmFj",
            "dEFjdGl2aXR5TWFwQnlQZXJzb25Db250cmFjdE51bWJlckxpc3QSKy5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3QaPC5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250cmFjdEFjdGl2",
            "aXR5TWFwTGlzdCIAEpEBCiNDcmVhdGVQZXJzb25Db250cmFjdEFjdGl2aXR5",
            "TWFwSW5mbxI8LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNv",
            "bkNvbnRyYWN0QWN0aXZpdHlNYXBMaXN0GiouR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABKZAQojVXBkYXRlUGVyc29uQ29u",
            "dHJhY3RBY3Rpdml0eU1hcEluZm8SRC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0",
            "U2VydmljZS5QZXJzb25Db250cmFjdEFjdGl2aXR5TWFwTGlzdFRvVXBkYXRl",
            "GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHki",
            "ABKlAQo1R2V0QXBwbHlDb25mZXJlbmNlQnlTZXNzaW9uQ29uZmVyZW5jZUlk",
            "TGlzdFBhZ2luYXRpb24SNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBoyLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLkFwcGx5Q29uZmVyZW5jZUxpc3QiABKIAQojR2V0QXBw",
            "bHlDb25mZXJlbmNlQnlNZW1iZXJQa0FuZFllYXISKy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3QaMi5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5BcHBseUNvbmZlcmVuY2VMaXN0IgASqQEKOUdl",
            "dEFwcGx5Q29uZmVyZW5jZUJ5U2Vzc2lvbkNvbmZlcmVuY2VJZEFuZFRhZ1R5",
            "cGVDb2RlTGlzdBI2LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBh",
            "Z2luYXRpb25SZXF1ZXN0U2VhcmNoGjIuR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuQXBwbHlDb25mZXJlbmNlTGlzdCIAEooBCiVHZXRBcHBseUNv",
            "bmZlcmVuY2VCeVBlckNvbnRyYWN0SWRMaXN0EisuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuU2VhcmNoU3RydWN0GjIuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuQXBwbHlDb25mZXJlbmNlTGlzdCIAEoMBCiFHZXRB",
            "cHBseUNvbmZlcmVuY2VCeUNvbXBhbnlJZExpc3QSKC5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5JZFJlcXVlc3QaMi5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5BcHBseUNvbmZlcmVuY2VMaXN0IgASjQEKK0dldEFw",
            "cGx5Q29uZmVyZW5jZUJ5U2Vzc2lvbkNvbmZlcmVuY2VJZExpc3QSKC5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JZFJlcXVlc3QaMi5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5BcHBseUNvbmZlcmVuY2VMaXN0IgAS",
            "lQEKIUNyZWF0ZU9yVXBkYXRlQXBwbHlDb25mZXJlbmNlSW5mbxJCLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkFwcGx5Q29uZmVyZW5jZUxpc3RU",
            "b0NyZWF0ZU9yVXBkYXRlGiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuTW9kaWZ5UmVwbHkiABJ0ChNHZXRJbnZpdGVMZXR0ZXJCeUlkEiguR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GjEuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSW52aXRlTGV0dGVyU3RydWN0IgAS",
            "hwEKFkNyZWF0ZUludml0ZUxldHRlckluZm8SMS5HcnBjQ29uZmVyZW5jZUNv",
            "bnRyYWN0U2VydmljZS5JbnZpdGVMZXR0ZXJTdHJ1Y3QaOC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseUZvckNyZWF0ZU90aGVy",
            "IgASaQoNR2V0VGFnVHlwZURpYxIkLkdycGNDb25mZXJlbmNlQ29udHJhY3RT",
            "ZXJ2aWNlLkVtcHR5GjAuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2Uu",
            "VGFnVHlwZUZvckRpY0xpc3QiABJuChBHZXRUYWdUeXBlQnlDb2RlEiouR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuQ29kZVJlcXVlc3QaLC5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5UYWdUeXBlU3RydWN0IgASbwoR",
            "Q3JlYXRlVGFnVHlwZUluZm8SLC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vy",
            "dmljZS5UYWdUeXBlU3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuTW9kaWZ5UmVwbHkiABJvChFVcGRhdGVUYWdUeXBlSW5mbxIsLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlRhZ1R5cGVTdHJ1Y3QaKi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEmsK",
            "EURlbGV0ZVRhZ1R5cGVCeUlkEiguR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuSWRSZXF1ZXN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZp",
            "Y2UuTW9kaWZ5UmVwbHkiABJvChBHZXRZZWFyQ29uZmlnRGljEiQuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuRW1wdHkaMy5HcnBjQ29uZmVyZW5j",
            "ZUNvbnRyYWN0U2VydmljZS5ZZWFyQ29uZmlnRm9yRGljTGlzdCIAEnoKFEdl",
            "dFllYXJDb25maWdCeUlzVXNlEisuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuU2VhcmNoU3RydWN0GjMuR3JwY0NvbmZlcmVuY2VDb250cmFjdFNl",
            "cnZpY2UuWWVhckNvbmZpZ0ZvckRpY0xpc3QiABJ1ChRDcmVhdGVZZWFyQ29u",
            "ZmlnSW5mbxIvLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlllYXJD",
            "b25maWdTdHJ1Y3QaKi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5N",
            "b2RpZnlSZXBseSIAEnUKFFVwZGF0ZVllYXJDb25maWdJbmZvEi8uR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuWWVhckNvbmZpZ1N0cnVjdBoqLkdy",
            "cGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASiAEK",
            "F0dldENvbmZlcmVuY2VPbnNpdGVMaXN0EjYuR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2gaMy5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlT25zaXRlTGlzdCIA",
            "En8KF0dldENvbmZlcmVuY2VPbnNpdGVCeUlkEisuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuSWRJbnRSZXF1ZXN0GjUuR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuQ29uZmVyZW5jZU9uc2l0ZVN0cnVjdCIAEpQBChpD",
            "cmVhdGVDb25mZXJlbmNlT25zaXRlSW5mbxI1LkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLkNvbmZlcmVuY2VPbnNpdGVTdHJ1Y3QaPS5HcnBjQ29u",
            "ZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseUZvckNvbmZlcmVu",
            "Y2VPbnNpdGUiABKBAQoaVXBkYXRlQ29uZmVyZW5jZU9uc2l0ZUluZm8SNS5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Db25mZXJlbmNlT25zaXRl",
            "U3RydWN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5",
            "UmVwbHkiABJ3ChpEZWxldGVDb25mZXJlbmNlT25zaXRlQnlJZBIrLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkSW50UmVxdWVzdBoqLkdycGND",
            "b25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgASfAoRR2V0",
            "SW52aXRlQ29kZUxpc3QSNi5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2Vydmlj",
            "ZS5QYWdpbmF0aW9uUmVxdWVzdFNlYXJjaBotLkdycGNDb25mZXJlbmNlQ29u",
            "dHJhY3RTZXJ2aWNlLkludml0ZUNvZGVMaXN0IgASdQoRR2V0SW52aXRlQ29k",
            "ZUJ5SWQSKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JZFJlcXVl",
            "c3QaNC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JbnZpdGVDb2Rl",
            "Q1NQVk1TdHJ1Y3QiABKGAQofR2V0SW52aXRlQ29kZUJ5SW52aXRlQ29kZU51",
            "bWJlchIrLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlNlYXJjaFN0",
            "cnVjdBo0LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLkludml0ZUNv",
            "ZGVDU1BWTVN0cnVjdCIAEnUKFENyZWF0ZUludml0ZUNvZGVJbmZvEi8uR3Jw",
            "Y0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSW52aXRlQ29kZVN0cnVjdBoq",
            "LkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJlcGx5IgAS",
            "dQoUVXBkYXRlSW52aXRlQ29kZUluZm8SLy5HcnBjQ29uZmVyZW5jZUNvbnRy",
            "YWN0U2VydmljZS5JbnZpdGVDb2RlU3RydWN0GiouR3JwY0NvbmZlcmVuY2VD",
            "b250cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJuChREZWxldGVJbnZpdGVD",
            "b2RlQnlJZBIoLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLklkUmVx",
            "dWVzdBoqLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLk1vZGlmeVJl",
            "cGx5IgASiAEKF0dldEludml0ZUNvZGVSZWNvcmRMaXN0EjYuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RTZWFyY2ga",
            "My5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5JbnZpdGVDb2RlUmVj",
            "b3JkTGlzdCIAEnwKF0dldEludml0ZUNvZGVSZWNvcmRCeUlkEiguR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GjUuR3JwY0NvbmZl",
            "cmVuY2VDb250cmFjdFNlcnZpY2UuSW52aXRlQ29kZVJlY29yZFN0cnVjdCIA",
            "EoEBChpDcmVhdGVJbnZpdGVDb2RlUmVjb3JkSW5mbxI1LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLkludml0ZUNvZGVSZWNvcmRTdHJ1Y3QaKi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEoEB",
            "ChpVcGRhdGVJbnZpdGVDb2RlUmVjb3JkSW5mbxI1LkdycGNDb25mZXJlbmNl",
            "Q29udHJhY3RTZXJ2aWNlLkludml0ZUNvZGVSZWNvcmRTdHJ1Y3QaKi5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIAEnQKGkRl",
            "bGV0ZUludml0ZUNvZGVSZWNvcmRCeUlkEiguR3JwY0NvbmZlcmVuY2VDb250",
            "cmFjdFNlcnZpY2UuSWRSZXF1ZXN0GiouR3JwY0NvbmZlcmVuY2VDb250cmFj",
            "dFNlcnZpY2UuTW9kaWZ5UmVwbHkiABJvChJDb3B5UGFja0luZm9CeVllYXIS",
            "Ky5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3Qa",
            "Ki5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Nb2RpZnlSZXBseSIA",
            "EoUBChtDcmVhdGVDb21wYW55U2VydmljZVBhY2tNYXASOC5HcnBjQ29uZmVy",
            "ZW5jZUNvbnRyYWN0U2VydmljZS5Db21wYW55U2VydmljZVBhY2tNYXBMaXN0",
            "GiouR3JwY0NvbmZlcmVuY2VDb250cmFjdFNlcnZpY2UuTW9kaWZ5UmVwbHki",
            "ABKBAQoZR2V0Q29udHJhY3RTdGF0aXN0aWNzTGlzdBIrLkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLlNlYXJjaFN0cnVjdBo1LkdycGNDb25mZXJl",
            "bmNlQ29udHJhY3RTZXJ2aWNlLkNvbnRyYWN0U3RhdGlzdGljc0xpc3QiABKN",
            "AQoySXNNYXhDb250cmFjdE51bWJlckVxdWFsc1BDQ291bnRCeUNvbXBhbnlQ",
            "S0FuZFllYXISKy5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFy",
            "Y2hTdHJ1Y3QaKC5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5Cb29s",
            "UmVwbHkiABKiAQodR2V0UGVyc29uQ29udHJhY3RMaXN0Rm9yTHVuY2gSNi5H",
            "cnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QYWdpbmF0aW9uUmVxdWVz",
            "dFNlYXJjaBpHLkdycGNDb25mZXJlbmNlQ29udHJhY3RTZXJ2aWNlLlBlcnNv",
            "bkNvbnRyYWN0QW5kU2Vzc2lvbkNvbmZlcmVuY2VJZExpc3QiABKWAQonR2V0",
            "UGVyc29uQ29udHJhY3RMaXN0QW5kQXBwbHlDb25mZXJlbmNlEjYuR3JwY0Nv",
            "bmZlcmVuY2VDb250cmFjdFNlcnZpY2UuUGFnaW5hdGlvblJlcXVlc3RTZWFy",
            "Y2gaMS5HcnBjQ29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250",
            "cmFjdExpc3QiABJ8ChhFeHBvcnRQZXJzb25Db250cmFjdExpc3QSKy5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5TZWFyY2hTdHJ1Y3QaMS5HcnBj",
            "Q29uZmVyZW5jZUNvbnRyYWN0U2VydmljZS5QZXJzb25Db250cmFjdExpc3Qi",
            "AGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.Empty), global::GrpcConferenceContractService.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.IdRequest), global::GrpcConferenceContractService.IdRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.IdIntRequest), global::GrpcConferenceContractService.IdIntRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.IdsRequest), global::GrpcConferenceContractService.IdsRequest.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CodeRequest), global::GrpcConferenceContractService.CodeRequest.Parser, new[]{ "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PaginationRequest), global::GrpcConferenceContractService.PaginationRequest.Parser, new[]{ "Id", "Offset", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PaginationRequestSearch), global::GrpcConferenceContractService.PaginationRequestSearch.Parser, new[]{ "Id", "Offset", "Limit", "Search" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.SearchStruct), global::GrpcConferenceContractService.SearchStruct.Parser, new[]{ "ComNameTranslation", "ComContractNumber", "ContractTypeId", "ConferenceId", "CcIsdelete", "Translation", "PerContractNumber", "MemTranslation", "PcIsdelete", "ContractId", "IsDiscount", "IsCheckIn", "IsVerify", "IsDelete", "ExtraContractNumber", "MemberPK", "ActivityId", "Year", "IsFillPC", "IsConfirm", "Owerid", "CTypeCode", "CompanyServicePackId", "IsContractTypeWithECode", "SessionConferenceId", "CompanyId", "ComPrice", "ContractStatusCode", "IsGive", "IsUse", "Orderings", "TagtypeCode", "IsNowYear", "ContractCode", "IsOwer", "ConferenceName", "ConferenceContractId", "ModifyPermission", "EnterpriseType", "ContractNumber", "CompanyName", "ExTypeCode", "UserName", "WebSite", "IsFullUseInviteCode", "IsNotFullUseInviteCode", "InviteCodeNumber", "InviteCodeId", "IsPrint", "IsVerifyGive", "PerContractId", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ConferenceContractCidList), global::GrpcConferenceContractService.ConferenceContractCidList.Parser, new[]{ "Cidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractPidList), global::GrpcConferenceContractService.PersonContractPidList.Parser, new[]{ "Pidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractPCNoRequest), global::GrpcConferenceContractService.PersonContractPCNoRequest.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractPCNoStruct), global::GrpcConferenceContractService.PersonContractPCNoStruct.Parser, new[]{ "PerContractNumber", "Comfirmed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyContractCidList), global::GrpcConferenceContractService.CompanyContractCidList.Parser, new[]{ "Cidlistdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ConferenceContractList), global::GrpcConferenceContractService.ConferenceContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyContractList), global::GrpcConferenceContractService.CompanyContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractList), global::GrpcConferenceContractService.PersonContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackList), global::GrpcConferenceContractService.CompanyServicePackList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ExtraServiceList), global::GrpcConferenceContractService.ExtraServiceList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ServicePackList), global::GrpcConferenceContractService.ServicePackList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CCNumberConfigList), global::GrpcConferenceContractService.CCNumberConfigList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractTypeList), global::GrpcConferenceContractService.ContractTypeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountList), global::GrpcConferenceContractService.DelegateServicePackDiscountList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractList), global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ConferenceOnsiteList), global::GrpcConferenceContractService.ConferenceOnsiteList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteCodeList), global::GrpcConferenceContractService.InviteCodeList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteCodeRecordList), global::GrpcConferenceContractService.InviteCodeRecordList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdList), global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdList.Parser, new[]{ "Listdata", "Total", "AllTotal" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractActivityMapList), global::GrpcConferenceContractService.PersonContractActivityMapList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackMapList), global::GrpcConferenceContractService.CompanyServicePackMapList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractStatisticsList), global::GrpcConferenceContractService.ContractStatisticsList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractActivityMapListToUpdate), global::GrpcConferenceContractService.PersonContractActivityMapListToUpdate.Parser, new[]{ "MemberPK", "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ConferenceContractStruct), global::GrpcConferenceContractService.ConferenceContractStruct.Parser, new[]{ "ConferenceContractId", "CompanyId", "ComNameTranslation", "ContractNumber", "ContractCode", "IsDelete", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Clistdata", "ContractYear", "Dlistdata", "ConferenceId", "AlternativeContractNumber", "ContractStatusCode", "PaymentStatusCode", "IsSendEmail", "IsModify", "ModifyPermission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyContractStruct), global::GrpcConferenceContractService.CompanyContractStruct.Parser, new[]{ "ContractId", "CompanyServicePackId", "CompanyId", "ComNameTranslation", "ComContractNumber", "Country", "AddressTranslation", "MaxContractNumber", "CCIsdelete", "EnterpriseType", "IsVerify", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "CompanyServicePack", "Dlistdata", "ContractCode", "ConferenceId", "ConferenceName", "IsCheckIn", "PPTUrl", "ContractStatusCode", "ConferenceContractId", "Plistdata", "ComPrice" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractStruct), global::GrpcConferenceContractService.PersonContractStruct.Parser, new[]{ "PersonContractId", "ContractId", "PerContractNumber", "MemberPK", "MemTranslation", "PCIsdelete", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Owerid", "Ower", "ConferenceContractId", "CTypeCode", "CompanyContract", "IsCheckIn", "IsSendEmail", "IsModify", "ConferenceId", "IsFianceRecord", "IsInviteCode", "InviteCodeId", "IsCommitAbstract", "IsPrint", "PaidAmount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackStruct), global::GrpcConferenceContractService.CompanyServicePackStruct.Parser, new[]{ "CompanyServicePackId", "ContractTypeId", "Sort", "Translation", "PriceRMB", "PriceUSD", "IsShownOnFront", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "RemarkTranslation", "ConferenceId", "ConferenceName", "IsSpeaker", "CTypeCode", "IsGive", "Year", "RemarkCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackVMStruct), global::GrpcConferenceContractService.CompanyServicePackVMStruct.Parser, new[]{ "CompanyServicePack", "ServicepackListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ExtraServiceVMStruct), global::GrpcConferenceContractService.ExtraServiceVMStruct.Parser, new[]{ "ExtraService", "ServicepackListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ServicePackVMStruct), global::GrpcConferenceContractService.ServicePackVMStruct.Parser, new[]{ "ServicePack", "ActivityListdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ExtraServiceStruct), global::GrpcConferenceContractService.ExtraServiceStruct.Parser, new[]{ "ExtraServiceId", "ExtraContractNumber", "MemberPK", "MemTranslation", "Owerid", "Ower", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ServicePackStruct), global::GrpcConferenceContractService.ServicePackStruct.Parser, new[]{ "ServicePackId", "Translation", "PriceRMB", "PriceUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "ConferenceId", "ConferenceName", "SessionConferenceId", "SessionConferenceName", "SessionDate", "SessionStartTime", "ThirdSessionConferenceId", "ThirdSessionConferenceName", "SessionAddress", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ActivityStruct), global::GrpcConferenceContractService.ActivityStruct.Parser, new[]{ "ActivityId", "ActivityName", "SessionConferenceID", "SessionConferenceName", "Sort", "SessionIDs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CCNumberConfigStruct), global::GrpcConferenceContractService.CCNumberConfigStruct.Parser, new[]{ "Id", "Prefix", "Year", "CNano", "Count", "Status", "IsDelete", "ConferenceId", "ConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractTypeStruct), global::GrpcConferenceContractService.ContractTypeStruct.Parser, new[]{ "ContractTypeId", "Sort", "Translation", "CTypeCode", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "IsSpeaker", "IsGive" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct), global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct.Parser, new[]{ "DiscountId", "CompanyContract", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct), global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct.Parser, new[]{ "DiscountId", "ConferenceContract", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct), global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct.Parser, new[]{ "DiscountId", "ConferenceContractId", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.DelegateServicePackDiscountStruct), global::GrpcConferenceContractService.DelegateServicePackDiscountStruct.Parser, new[]{ "DiscountId", "ContractId", "PriceAfterDiscountRMB", "PriceAfterDiscountUSD", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "Year" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.TranslationStruct), global::GrpcConferenceContractService.TranslationStruct.Parser, new[]{ "CN", "EN", "JP" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ComNameTranslationStruct), global::GrpcConferenceContractService.ComNameTranslationStruct.Parser, new[]{ "CompanyCN", "CompanyEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.AddressTranslationStruct), global::GrpcConferenceContractService.AddressTranslationStruct.Parser, new[]{ "AddressCN", "AddressEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.MemTranslationStruct), global::GrpcConferenceContractService.MemTranslationStruct.Parser, new[]{ "MemberCN", "MemberEN" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ModifyRequest), global::GrpcConferenceContractService.ModifyRequest.Parser, new[]{ "Id", "IsCheckIn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ModifyReply), global::GrpcConferenceContractService.ModifyReply.Parser, new[]{ "Success", "ModifiedCount", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ModifyReplyForConferenceOnsite), global::GrpcConferenceContractService.ModifyReplyForConferenceOnsite.Parser, new[]{ "Success", "ModifiedCount", "Msg", "ConferenceOnsite" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ResultReply), global::GrpcConferenceContractService.ResultReply.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractStatusDicForDicList), global::GrpcConferenceContractService.ContractStatusDicForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.RemarkDicForDicList), global::GrpcConferenceContractService.RemarkDicForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.TagTypeForDicList), global::GrpcConferenceContractService.TagTypeForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.YearConfigForDicList), global::GrpcConferenceContractService.YearConfigForDicList.Parser, new[]{ "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractStatusDicList), global::GrpcConferenceContractService.ContractStatusDicList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.RemarkDicList), global::GrpcConferenceContractService.RemarkDicList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractStatusDicStruct), global::GrpcConferenceContractService.ContractStatusDicStruct.Parser, new[]{ "Id", "StatusName", "StatusCode", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.RemarkDicStruct), global::GrpcConferenceContractService.RemarkDicStruct.Parser, new[]{ "Id", "ContentCn", "ContentEn", "ContentJp", "ContentCode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ModifyReplyForCreateOther), global::GrpcConferenceContractService.ModifyReplyForCreateOther.Parser, new[]{ "Success", "ModifiedCount", "Msg", "Ext1", "Ext2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractActivityMapStruct), global::GrpcConferenceContractService.PersonContractActivityMapStruct.Parser, new[]{ "MapId", "MemberPK", "ActivityId", "ActivityName", "Year", "IsConfirm", "IsCheck", "PersonContractId", "SessionConferenceId", "SessionConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackMapStruct), global::GrpcConferenceContractService.CompanyServicePackMapStruct.Parser, new[]{ "Id", "CompanyServicePackId", "ServicePackId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CompanyServicePackMapVMStruct), global::GrpcConferenceContractService.CompanyServicePackMapVMStruct.Parser, new[]{ "MapId", "CompanyServicePackId", "ServicePackId", "ConferenceId", "ConferenceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ApplyConferenceList), global::GrpcConferenceContractService.ApplyConferenceList.Parser, new[]{ "Listdata", "Total" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ApplyConferenceStruct), global::GrpcConferenceContractService.ApplyConferenceStruct.Parser, new[]{ "Id", "PersonContractId", "MemberPK", "SessionConferenceId", "IsConfirm", "CompanyId", "TagTypeCodes", "RemarkTranslation", "Year", "SessionConferenceIds", "IsParticularConf", "Owerid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ConferenceOnsiteStruct), global::GrpcConferenceContractService.ConferenceOnsiteStruct.Parser, new[]{ "Id", "ContractNumber", "CompanyName", "Currency", "PayType", "Credited", "AddDate", "Cost", "Remark", "ContractYear", "CompanyServicePackId", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy", "UserName", "CompanyServicePackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct), global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct.Parser, new[]{ "CompanyContract", "PersonContract", "SessionConferenceIds", "CompanyServicePackName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ApplyConferenceListToCreateOrUpdate), global::GrpcConferenceContractService.ApplyConferenceListToCreateOrUpdate.Parser, new[]{ "PersonContractId", "Listdata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteLetterStruct), global::GrpcConferenceContractService.InviteLetterStruct.Parser, new[]{ "Id", "Company", "EHall", "ENo", "Profile", "EAcitvity", "Language", "CreatedOn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteCodeStruct), global::GrpcConferenceContractService.InviteCodeStruct.Parser, new[]{ "Id", "InviteCodeNumber", "CompanyServicePackId", "Count", "Year", "WebSite", "CreatedOn", "CreatedBy", "ModefieldOn", "ModefieldBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteCodeCSPVMStruct), global::GrpcConferenceContractService.InviteCodeCSPVMStruct.Parser, new[]{ "InviteCode", "CompanyServicePack", "InviteRecordCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.InviteCodeRecordStruct), global::GrpcConferenceContractService.InviteCodeRecordStruct.Parser, new[]{ "Id", "InviteCodeId", "MemberPK", "MemberName", "UseDate", "PersonContractId", "PersonContractNumber", "IsDelete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.TagTypeStruct), global::GrpcConferenceContractService.TagTypeStruct.Parser, new[]{ "Id", "NameTranslation", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.YearConfigStruct), global::GrpcConferenceContractService.YearConfigStruct.Parser, new[]{ "Id", "Year", "IsUse", "Date" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.CheckInRequest), global::GrpcConferenceContractService.CheckInRequest.Parser, new[]{ "Ids", "IsCheckIn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ContractStatisticsStruct), global::GrpcConferenceContractService.ContractStatisticsStruct.Parser, new[]{ "CompanyServicePackId", "CompanyServicePackName", "PersonCount", "MaxContractNumberSum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.ModifyCCPCOwerInfoStruct), global::GrpcConferenceContractService.ModifyCCPCOwerInfoStruct.Parser, new[]{ "ContractId", "Owerid", "Ower", "MaxContractNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcConferenceContractService.BoolReply), global::GrpcConferenceContractService.BoolReply.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IdRequest : pb::IMessage<IdRequest> {
    private static readonly pb::MessageParser<IdRequest> _parser = new pb::MessageParser<IdRequest>(() => new IdRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest(IdRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdRequest Clone() {
      return new IdRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdIntRequest : pb::IMessage<IdIntRequest> {
    private static readonly pb::MessageParser<IdIntRequest> _parser = new pb::MessageParser<IdIntRequest>(() => new IdIntRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdIntRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest(IdIntRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdIntRequest Clone() {
      return new IdIntRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdIntRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdIntRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdIntRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdsRequest : pb::IMessage<IdsRequest> {
    private static readonly pb::MessageParser<IdsRequest> _parser = new pb::MessageParser<IdsRequest>(() => new IdsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest(IdsRequest other) : this() {
      ids_ = other.ids_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdsRequest Clone() {
      return new IdsRequest(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private string ids_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ids.Length != 0) hash ^= Ids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ids.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ids.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Ids.Length != 0) {
        Ids = other.Ids;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ids = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CodeRequest : pb::IMessage<CodeRequest> {
    private static readonly pb::MessageParser<CodeRequest> _parser = new pb::MessageParser<CodeRequest>(() => new CodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest(CodeRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CodeRequest Clone() {
      return new CodeRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequest : pb::IMessage<PaginationRequest> {
    private static readonly pb::MessageParser<PaginationRequest> _parser = new pb::MessageParser<PaginationRequest>(() => new PaginationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest(PaginationRequest other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequest Clone() {
      return new PaginationRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginationRequestSearch : pb::IMessage<PaginationRequestSearch> {
    private static readonly pb::MessageParser<PaginationRequestSearch> _parser = new pb::MessageParser<PaginationRequestSearch>(() => new PaginationRequestSearch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginationRequestSearch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch(PaginationRequestSearch other) : this() {
      id_ = other.id_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      Search = other.search_ != null ? other.Search.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginationRequestSearch Clone() {
      return new PaginationRequestSearch(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::GrpcConferenceContractService.SearchStruct search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.SearchStruct Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginationRequestSearch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginationRequestSearch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Offset != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Offset);
      }
      if (Limit != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Limit);
      }
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginationRequestSearch other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.search_ != null) {
        if (search_ == null) {
          search_ = new global::GrpcConferenceContractService.SearchStruct();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Offset = input.ReadInt32();
            break;
          }
          case 24: {
            Limit = input.ReadInt32();
            break;
          }
          case 34: {
            if (search_ == null) {
              search_ = new global::GrpcConferenceContractService.SearchStruct();
            }
            input.ReadMessage(search_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchStruct : pb::IMessage<SearchStruct> {
    private static readonly pb::MessageParser<SearchStruct> _parser = new pb::MessageParser<SearchStruct>(() => new SearchStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct(SearchStruct other) : this() {
      comNameTranslation_ = other.comNameTranslation_;
      comContractNumber_ = other.comContractNumber_;
      contractTypeId_ = other.contractTypeId_;
      conferenceId_ = other.conferenceId_;
      ccIsdelete_ = other.ccIsdelete_;
      translation_ = other.translation_;
      perContractNumber_ = other.perContractNumber_;
      memTranslation_ = other.memTranslation_;
      pcIsdelete_ = other.pcIsdelete_;
      contractId_ = other.contractId_;
      isDiscount_ = other.isDiscount_;
      isCheckIn_ = other.isCheckIn_;
      isVerify_ = other.isVerify_;
      isDelete_ = other.isDelete_;
      extraContractNumber_ = other.extraContractNumber_;
      memberPK_ = other.memberPK_;
      activityId_ = other.activityId_;
      year_ = other.year_;
      isFillPC_ = other.isFillPC_;
      isConfirm_ = other.isConfirm_;
      owerid_ = other.owerid_;
      cTypeCode_ = other.cTypeCode_;
      companyServicePackId_ = other.companyServicePackId_;
      isContractTypeWithECode_ = other.isContractTypeWithECode_;
      sessionConferenceId_ = other.sessionConferenceId_;
      companyId_ = other.companyId_;
      comPrice_ = other.comPrice_;
      contractStatusCode_ = other.contractStatusCode_;
      isGive_ = other.isGive_;
      isUse_ = other.isUse_;
      orderings_ = other.orderings_;
      tagtypeCode_ = other.tagtypeCode_;
      isNowYear_ = other.isNowYear_;
      contractCode_ = other.contractCode_;
      isOwer_ = other.isOwer_;
      conferenceName_ = other.conferenceName_;
      conferenceContractId_ = other.conferenceContractId_;
      modifyPermission_ = other.modifyPermission_;
      enterpriseType_ = other.enterpriseType_;
      contractNumber_ = other.contractNumber_;
      companyName_ = other.companyName_;
      exTypeCode_ = other.exTypeCode_;
      userName_ = other.userName_;
      webSite_ = other.webSite_;
      isFullUseInviteCode_ = other.isFullUseInviteCode_;
      isNotFullUseInviteCode_ = other.isNotFullUseInviteCode_;
      inviteCodeNumber_ = other.inviteCodeNumber_;
      inviteCodeId_ = other.inviteCodeId_;
      isPrint_ = other.isPrint_;
      isVerifyGive_ = other.isVerifyGive_;
      perContractId_ = other.perContractId_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchStruct Clone() {
      return new SearchStruct(this);
    }

    /// <summary>Field number for the "comNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 1;
    private string comNameTranslation_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 2;
    private string comContractNumber_ = "";
    /// <summary>
    ///公司合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 3;
    private string contractTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 4;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ccIsdelete" field.</summary>
    public const int CcIsdeleteFieldNumber = 5;
    private bool ccIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CcIsdelete {
      get { return ccIsdelete_; }
      set {
        ccIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 6;
    private string translation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Translation {
      get { return translation_; }
      set {
        translation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "perContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 7;
    private string perContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 8;
    private string memTranslation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pcIsdelete" field.</summary>
    public const int PcIsdeleteFieldNumber = 9;
    private bool pcIsdelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PcIsdelete {
      get { return pcIsdelete_; }
      set {
        pcIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "contractId" field.</summary>
    public const int ContractIdFieldNumber = 10;
    private string contractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isDiscount" field.</summary>
    public const int IsDiscountFieldNumber = 11;
    private bool isDiscount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDiscount {
      get { return isDiscount_; }
      set {
        isDiscount_ = value;
      }
    }

    /// <summary>Field number for the "isCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 12;
    private bool isCheckIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "isVerify" field.</summary>
    public const int IsVerifyFieldNumber = 13;
    private bool isVerify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "isDelete" field.</summary>
    public const int IsDeleteFieldNumber = 14;
    private bool isDelete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "extraContractNumber" field.</summary>
    public const int ExtraContractNumberFieldNumber = 15;
    private string extraContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraContractNumber {
      get { return extraContractNumber_; }
      set {
        extraContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberPK" field.</summary>
    public const int MemberPKFieldNumber = 16;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activityId" field.</summary>
    public const int ActivityIdFieldNumber = 17;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFillPC" field.</summary>
    public const int IsFillPCFieldNumber = 19;
    private bool isFillPC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFillPC {
      get { return isFillPC_; }
      set {
        isFillPC_ = value;
      }
    }

    /// <summary>Field number for the "isConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 20;
    private bool isConfirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "owerid" field.</summary>
    public const int OweridFieldNumber = 21;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 22;
    private string cTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 23;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isContractTypeWithECode" field.</summary>
    public const int IsContractTypeWithECodeFieldNumber = 24;
    private bool isContractTypeWithECode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsContractTypeWithECode {
      get { return isContractTypeWithECode_; }
      set {
        isContractTypeWithECode_ = value;
      }
    }

    /// <summary>Field number for the "sessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 25;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyId" field.</summary>
    public const int CompanyIdFieldNumber = 26;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comPrice" field.</summary>
    public const int ComPriceFieldNumber = 27;
    private string comPrice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 28;
    private string contractStatusCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isGive" field.</summary>
    public const int IsGiveFieldNumber = 29;
    private bool isGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "isUse" field.</summary>
    public const int IsUseFieldNumber = 30;
    private bool isUse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUse {
      get { return isUse_; }
      set {
        isUse_ = value;
      }
    }

    /// <summary>Field number for the "orderings" field.</summary>
    public const int OrderingsFieldNumber = 31;
    private string orderings_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Orderings {
      get { return orderings_; }
      set {
        orderings_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tagtypeCode" field.</summary>
    public const int TagtypeCodeFieldNumber = 32;
    private string tagtypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagtypeCode {
      get { return tagtypeCode_; }
      set {
        tagtypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isNowYear" field.</summary>
    public const int IsNowYearFieldNumber = 33;
    private bool isNowYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNowYear {
      get { return isNowYear_; }
      set {
        isNowYear_ = value;
      }
    }

    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 34;
    private string contractCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOwer" field.</summary>
    public const int IsOwerFieldNumber = 35;
    private bool isOwer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOwer {
      get { return isOwer_; }
      set {
        isOwer_ = value;
      }
    }

    /// <summary>Field number for the "conferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 36;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 37;
    private string conferenceContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifyPermission" field.</summary>
    public const int ModifyPermissionFieldNumber = 38;
    private string modifyPermission_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyPermission {
      get { return modifyPermission_; }
      set {
        modifyPermission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 39;
    private string enterpriseType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 40;
    private string contractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 41;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exTypeCode" field.</summary>
    public const int ExTypeCodeFieldNumber = 42;
    private string exTypeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExTypeCode {
      get { return exTypeCode_; }
      set {
        exTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 43;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "webSite" field.</summary>
    public const int WebSiteFieldNumber = 44;
    private string webSite_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isFullUseInviteCode" field.</summary>
    public const int IsFullUseInviteCodeFieldNumber = 45;
    private bool isFullUseInviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFullUseInviteCode {
      get { return isFullUseInviteCode_; }
      set {
        isFullUseInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "isNotFullUseInviteCode" field.</summary>
    public const int IsNotFullUseInviteCodeFieldNumber = 46;
    private bool isNotFullUseInviteCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNotFullUseInviteCode {
      get { return isNotFullUseInviteCode_; }
      set {
        isNotFullUseInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "inviteCodeNumber" field.</summary>
    public const int InviteCodeNumberFieldNumber = 47;
    private string inviteCodeNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeNumber {
      get { return inviteCodeNumber_; }
      set {
        inviteCodeNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 48;
    private string inviteCodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPrint" field.</summary>
    public const int IsPrintFieldNumber = 49;
    private bool isPrint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "isVerifyGive" field.</summary>
    public const int IsVerifyGiveFieldNumber = 50;
    private bool isVerifyGive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerifyGive {
      get { return isVerifyGive_; }
      set {
        isVerifyGive_ = value;
      }
    }

    /// <summary>Field number for the "perContractId" field.</summary>
    public const int PerContractIdFieldNumber = 51;
    private string perContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractId {
      get { return perContractId_; }
      set {
        perContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 52;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComNameTranslation != other.ComNameTranslation) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (CcIsdelete != other.CcIsdelete) return false;
      if (Translation != other.Translation) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemTranslation != other.MemTranslation) return false;
      if (PcIsdelete != other.PcIsdelete) return false;
      if (ContractId != other.ContractId) return false;
      if (IsDiscount != other.IsDiscount) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsVerify != other.IsVerify) return false;
      if (IsDelete != other.IsDelete) return false;
      if (ExtraContractNumber != other.ExtraContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ActivityId != other.ActivityId) return false;
      if (Year != other.Year) return false;
      if (IsFillPC != other.IsFillPC) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (Owerid != other.Owerid) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (IsContractTypeWithECode != other.IsContractTypeWithECode) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (ComPrice != other.ComPrice) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (IsGive != other.IsGive) return false;
      if (IsUse != other.IsUse) return false;
      if (Orderings != other.Orderings) return false;
      if (TagtypeCode != other.TagtypeCode) return false;
      if (IsNowYear != other.IsNowYear) return false;
      if (ContractCode != other.ContractCode) return false;
      if (IsOwer != other.IsOwer) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (ModifyPermission != other.ModifyPermission) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyName != other.CompanyName) return false;
      if (ExTypeCode != other.ExTypeCode) return false;
      if (UserName != other.UserName) return false;
      if (WebSite != other.WebSite) return false;
      if (IsFullUseInviteCode != other.IsFullUseInviteCode) return false;
      if (IsNotFullUseInviteCode != other.IsNotFullUseInviteCode) return false;
      if (InviteCodeNumber != other.InviteCodeNumber) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsPrint != other.IsPrint) return false;
      if (IsVerifyGive != other.IsVerifyGive) return false;
      if (PerContractId != other.PerContractId) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ComNameTranslation.Length != 0) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (CcIsdelete != false) hash ^= CcIsdelete.GetHashCode();
      if (Translation.Length != 0) hash ^= Translation.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemTranslation.Length != 0) hash ^= MemTranslation.GetHashCode();
      if (PcIsdelete != false) hash ^= PcIsdelete.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (IsDiscount != false) hash ^= IsDiscount.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (ExtraContractNumber.Length != 0) hash ^= ExtraContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsFillPC != false) hash ^= IsFillPC.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (IsContractTypeWithECode != false) hash ^= IsContractTypeWithECode.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (IsUse != false) hash ^= IsUse.GetHashCode();
      if (Orderings.Length != 0) hash ^= Orderings.GetHashCode();
      if (TagtypeCode.Length != 0) hash ^= TagtypeCode.GetHashCode();
      if (IsNowYear != false) hash ^= IsNowYear.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (IsOwer != false) hash ^= IsOwer.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (ModifyPermission.Length != 0) hash ^= ModifyPermission.GetHashCode();
      if (EnterpriseType.Length != 0) hash ^= EnterpriseType.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (ExTypeCode.Length != 0) hash ^= ExTypeCode.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (IsFullUseInviteCode != false) hash ^= IsFullUseInviteCode.GetHashCode();
      if (IsNotFullUseInviteCode != false) hash ^= IsNotFullUseInviteCode.GetHashCode();
      if (InviteCodeNumber.Length != 0) hash ^= InviteCodeNumber.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (IsVerifyGive != false) hash ^= IsVerifyGive.GetHashCode();
      if (PerContractId.Length != 0) hash ^= PerContractId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ComNameTranslation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ComContractNumber);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContractTypeId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceId);
      }
      if (CcIsdelete != false) {
        output.WriteRawTag(40);
        output.WriteBool(CcIsdelete);
      }
      if (Translation.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Translation);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PerContractNumber);
      }
      if (MemTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MemTranslation);
      }
      if (PcIsdelete != false) {
        output.WriteRawTag(72);
        output.WriteBool(PcIsdelete);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContractId);
      }
      if (IsDiscount != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsDiscount);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsCheckIn);
      }
      if (IsVerify != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsVerify);
      }
      if (IsDelete != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsDelete);
      }
      if (ExtraContractNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(MemberPK);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ActivityId);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (IsFillPC != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsFillPC);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsConfirm);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Owerid);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(CTypeCode);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CompanyServicePackId);
      }
      if (IsContractTypeWithECode != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsContractTypeWithECode);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(SessionConferenceId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(CompanyId);
      }
      if (ComPrice.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(ComPrice);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ContractStatusCode);
      }
      if (IsGive != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IsGive);
      }
      if (IsUse != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsUse);
      }
      if (Orderings.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(Orderings);
      }
      if (TagtypeCode.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(TagtypeCode);
      }
      if (IsNowYear != false) {
        output.WriteRawTag(136, 2);
        output.WriteBool(IsNowYear);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(146, 2);
        output.WriteString(ContractCode);
      }
      if (IsOwer != false) {
        output.WriteRawTag(152, 2);
        output.WriteBool(IsOwer);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(ConferenceName);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(170, 2);
        output.WriteString(ConferenceContractId);
      }
      if (ModifyPermission.Length != 0) {
        output.WriteRawTag(178, 2);
        output.WriteString(ModifyPermission);
      }
      if (EnterpriseType.Length != 0) {
        output.WriteRawTag(186, 2);
        output.WriteString(EnterpriseType);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(194, 2);
        output.WriteString(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(202, 2);
        output.WriteString(CompanyName);
      }
      if (ExTypeCode.Length != 0) {
        output.WriteRawTag(210, 2);
        output.WriteString(ExTypeCode);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(218, 2);
        output.WriteString(UserName);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(WebSite);
      }
      if (IsFullUseInviteCode != false) {
        output.WriteRawTag(232, 2);
        output.WriteBool(IsFullUseInviteCode);
      }
      if (IsNotFullUseInviteCode != false) {
        output.WriteRawTag(240, 2);
        output.WriteBool(IsNotFullUseInviteCode);
      }
      if (InviteCodeNumber.Length != 0) {
        output.WriteRawTag(250, 2);
        output.WriteString(InviteCodeNumber);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(130, 3);
        output.WriteString(InviteCodeId);
      }
      if (IsPrint != false) {
        output.WriteRawTag(136, 3);
        output.WriteBool(IsPrint);
      }
      if (IsVerifyGive != false) {
        output.WriteRawTag(144, 3);
        output.WriteBool(IsVerifyGive);
      }
      if (PerContractId.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(PerContractId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(162, 3);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ComNameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (CcIsdelete != false) {
        size += 1 + 1;
      }
      if (Translation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Translation);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemTranslation);
      }
      if (PcIsdelete != false) {
        size += 1 + 1;
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (IsDiscount != false) {
        size += 1 + 1;
      }
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (ExtraContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ActivityId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsFillPC != false) {
        size += 2 + 1;
      }
      if (IsConfirm != false) {
        size += 2 + 1;
      }
      if (Owerid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (CTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (IsContractTypeWithECode != false) {
        size += 2 + 1;
      }
      if (SessionConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (CompanyId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (IsGive != false) {
        size += 2 + 1;
      }
      if (IsUse != false) {
        size += 2 + 1;
      }
      if (Orderings.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Orderings);
      }
      if (TagtypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TagtypeCode);
      }
      if (IsNowYear != false) {
        size += 2 + 1;
      }
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (IsOwer != false) {
        size += 2 + 1;
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (ModifyPermission.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyPermission);
      }
      if (EnterpriseType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EnterpriseType);
      }
      if (ContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (ExTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExTypeCode);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (WebSite.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (IsFullUseInviteCode != false) {
        size += 2 + 1;
      }
      if (IsNotFullUseInviteCode != false) {
        size += 2 + 1;
      }
      if (InviteCodeNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeNumber);
      }
      if (InviteCodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsPrint != false) {
        size += 2 + 1;
      }
      if (IsVerifyGive != false) {
        size += 2 + 1;
      }
      if (PerContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PerContractId);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchStruct other) {
      if (other == null) {
        return;
      }
      if (other.ComNameTranslation.Length != 0) {
        ComNameTranslation = other.ComNameTranslation;
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.CcIsdelete != false) {
        CcIsdelete = other.CcIsdelete;
      }
      if (other.Translation.Length != 0) {
        Translation = other.Translation;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemTranslation.Length != 0) {
        MemTranslation = other.MemTranslation;
      }
      if (other.PcIsdelete != false) {
        PcIsdelete = other.PcIsdelete;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.IsDiscount != false) {
        IsDiscount = other.IsDiscount;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.ExtraContractNumber.Length != 0) {
        ExtraContractNumber = other.ExtraContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsFillPC != false) {
        IsFillPC = other.IsFillPC;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.IsContractTypeWithECode != false) {
        IsContractTypeWithECode = other.IsContractTypeWithECode;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.IsUse != false) {
        IsUse = other.IsUse;
      }
      if (other.Orderings.Length != 0) {
        Orderings = other.Orderings;
      }
      if (other.TagtypeCode.Length != 0) {
        TagtypeCode = other.TagtypeCode;
      }
      if (other.IsNowYear != false) {
        IsNowYear = other.IsNowYear;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.IsOwer != false) {
        IsOwer = other.IsOwer;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.ModifyPermission.Length != 0) {
        ModifyPermission = other.ModifyPermission;
      }
      if (other.EnterpriseType.Length != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.ExTypeCode.Length != 0) {
        ExTypeCode = other.ExTypeCode;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.IsFullUseInviteCode != false) {
        IsFullUseInviteCode = other.IsFullUseInviteCode;
      }
      if (other.IsNotFullUseInviteCode != false) {
        IsNotFullUseInviteCode = other.IsNotFullUseInviteCode;
      }
      if (other.InviteCodeNumber.Length != 0) {
        InviteCodeNumber = other.InviteCodeNumber;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.IsVerifyGive != false) {
        IsVerifyGive = other.IsVerifyGive;
      }
      if (other.PerContractId.Length != 0) {
        PerContractId = other.PerContractId;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ComNameTranslation = input.ReadString();
            break;
          }
          case 18: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 26: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 34: {
            ConferenceId = input.ReadString();
            break;
          }
          case 40: {
            CcIsdelete = input.ReadBool();
            break;
          }
          case 50: {
            Translation = input.ReadString();
            break;
          }
          case 58: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 66: {
            MemTranslation = input.ReadString();
            break;
          }
          case 72: {
            PcIsdelete = input.ReadBool();
            break;
          }
          case 82: {
            ContractId = input.ReadString();
            break;
          }
          case 88: {
            IsDiscount = input.ReadBool();
            break;
          }
          case 96: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 104: {
            IsVerify = input.ReadBool();
            break;
          }
          case 112: {
            IsDelete = input.ReadBool();
            break;
          }
          case 122: {
            ExtraContractNumber = input.ReadString();
            break;
          }
          case 130: {
            MemberPK = input.ReadString();
            break;
          }
          case 138: {
            ActivityId = input.ReadString();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 152: {
            IsFillPC = input.ReadBool();
            break;
          }
          case 160: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 170: {
            Owerid = input.ReadString();
            break;
          }
          case 178: {
            CTypeCode = input.ReadString();
            break;
          }
          case 186: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 192: {
            IsContractTypeWithECode = input.ReadBool();
            break;
          }
          case 202: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 210: {
            CompanyId = input.ReadString();
            break;
          }
          case 218: {
            ComPrice = input.ReadString();
            break;
          }
          case 226: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 232: {
            IsGive = input.ReadBool();
            break;
          }
          case 240: {
            IsUse = input.ReadBool();
            break;
          }
          case 250: {
            Orderings = input.ReadString();
            break;
          }
          case 258: {
            TagtypeCode = input.ReadString();
            break;
          }
          case 264: {
            IsNowYear = input.ReadBool();
            break;
          }
          case 274: {
            ContractCode = input.ReadString();
            break;
          }
          case 280: {
            IsOwer = input.ReadBool();
            break;
          }
          case 290: {
            ConferenceName = input.ReadString();
            break;
          }
          case 298: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 306: {
            ModifyPermission = input.ReadString();
            break;
          }
          case 314: {
            EnterpriseType = input.ReadString();
            break;
          }
          case 322: {
            ContractNumber = input.ReadString();
            break;
          }
          case 330: {
            CompanyName = input.ReadString();
            break;
          }
          case 338: {
            ExTypeCode = input.ReadString();
            break;
          }
          case 346: {
            UserName = input.ReadString();
            break;
          }
          case 354: {
            WebSite = input.ReadString();
            break;
          }
          case 360: {
            IsFullUseInviteCode = input.ReadBool();
            break;
          }
          case 368: {
            IsNotFullUseInviteCode = input.ReadBool();
            break;
          }
          case 378: {
            InviteCodeNumber = input.ReadString();
            break;
          }
          case 386: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 392: {
            IsPrint = input.ReadBool();
            break;
          }
          case 400: {
            IsVerifyGive = input.ReadBool();
            break;
          }
          case 410: {
            PerContractId = input.ReadString();
            break;
          }
          case 418: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractCidList : pb::IMessage<ConferenceContractCidList> {
    private static readonly pb::MessageParser<ConferenceContractCidList> _parser = new pb::MessageParser<ConferenceContractCidList>(() => new ConferenceContractCidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractCidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList(ConferenceContractCidList other) : this() {
      cidlistdata_ = other.cidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractCidList Clone() {
      return new ConferenceContractCidList(this);
    }

    /// <summary>Field number for the "Cidlistdata" field.</summary>
    public const int CidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///ConferenceContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Cidlistdata {
      get { return cidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractCidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractCidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cidlistdata_.Equals(other.cidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cidlistdata_.WriteTo(output, _repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cidlistdata_.CalculateSize(_repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractCidList other) {
      if (other == null) {
        return;
      }
      cidlistdata_.Add(other.cidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cidlistdata_.AddEntriesFrom(input, _repeated_cidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPidList : pb::IMessage<PersonContractPidList> {
    private static readonly pb::MessageParser<PersonContractPidList> _parser = new pb::MessageParser<PersonContractPidList>(() => new PersonContractPidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList(PersonContractPidList other) : this() {
      pidlistdata_ = other.pidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPidList Clone() {
      return new PersonContractPidList(this);
    }

    /// <summary>Field number for the "Pidlistdata" field.</summary>
    public const int PidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_pidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> pidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///PersonContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pidlistdata {
      get { return pidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pidlistdata_.Equals(other.pidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pidlistdata_.WriteTo(output, _repeated_pidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pidlistdata_.CalculateSize(_repeated_pidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPidList other) {
      if (other == null) {
        return;
      }
      pidlistdata_.Add(other.pidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pidlistdata_.AddEntriesFrom(input, _repeated_pidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPCNoRequest : pb::IMessage<PersonContractPCNoRequest> {
    private static readonly pb::MessageParser<PersonContractPCNoRequest> _parser = new pb::MessageParser<PersonContractPCNoRequest>(() => new PersonContractPCNoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPCNoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest(PersonContractPCNoRequest other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoRequest Clone() {
      return new PersonContractPCNoRequest(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractPCNoStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.PersonContractPCNoStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractPCNoStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractPCNoStruct>();
    /// <summary>
    ///PersonContractNumber的列表对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractPCNoStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPCNoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPCNoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPCNoRequest other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractPCNoStruct : pb::IMessage<PersonContractPCNoStruct> {
    private static readonly pb::MessageParser<PersonContractPCNoStruct> _parser = new pb::MessageParser<PersonContractPCNoStruct>(() => new PersonContractPCNoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractPCNoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct(PersonContractPCNoStruct other) : this() {
      perContractNumber_ = other.perContractNumber_;
      comfirmed_ = other.comfirmed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractPCNoStruct Clone() {
      return new PersonContractPCNoStruct(this);
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 1;
    private string perContractNumber_ = "";
    /// <summary>
    ///PersonContractNumber的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Comfirmed" field.</summary>
    public const int ComfirmedFieldNumber = 2;
    private bool comfirmed_;
    /// <summary>
    ///是否有财务记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Comfirmed {
      get { return comfirmed_; }
      set {
        comfirmed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractPCNoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractPCNoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PerContractNumber != other.PerContractNumber) return false;
      if (Comfirmed != other.Comfirmed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (Comfirmed != false) hash ^= Comfirmed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PerContractNumber);
      }
      if (Comfirmed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Comfirmed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (Comfirmed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractPCNoStruct other) {
      if (other == null) {
        return;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.Comfirmed != false) {
        Comfirmed = other.Comfirmed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 16: {
            Comfirmed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractCidList : pb::IMessage<CompanyContractCidList> {
    private static readonly pb::MessageParser<CompanyContractCidList> _parser = new pb::MessageParser<CompanyContractCidList>(() => new CompanyContractCidList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractCidList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList(CompanyContractCidList other) : this() {
      cidlistdata_ = other.cidlistdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractCidList Clone() {
      return new CompanyContractCidList(this);
    }

    /// <summary>Field number for the "Cidlistdata" field.</summary>
    public const int CidlistdataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_cidlistdata_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> cidlistdata_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///CompanyContractId的列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Cidlistdata {
      get { return cidlistdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractCidList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractCidList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cidlistdata_.Equals(other.cidlistdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cidlistdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cidlistdata_.WriteTo(output, _repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cidlistdata_.CalculateSize(_repeated_cidlistdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractCidList other) {
      if (other == null) {
        return;
      }
      cidlistdata_.Add(other.cidlistdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cidlistdata_.AddEntriesFrom(input, _repeated_cidlistdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractList : pb::IMessage<ConferenceContractList> {
    private static readonly pb::MessageParser<ConferenceContractList> _parser = new pb::MessageParser<ConferenceContractList>(() => new ConferenceContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList(ConferenceContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractList Clone() {
      return new ConferenceContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ConferenceContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ConferenceContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractList : pb::IMessage<CompanyContractList> {
    private static readonly pb::MessageParser<CompanyContractList> _parser = new pb::MessageParser<CompanyContractList>(() => new CompanyContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList(CompanyContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractList Clone() {
      return new CompanyContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.CompanyContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.CompanyContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractList : pb::IMessage<PersonContractList> {
    private static readonly pb::MessageParser<PersonContractList> _parser = new pb::MessageParser<PersonContractList>(() => new PersonContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList(PersonContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractList Clone() {
      return new PersonContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.PersonContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackList : pb::IMessage<CompanyServicePackList> {
    private static readonly pb::MessageParser<CompanyServicePackList> _parser = new pb::MessageParser<CompanyServicePackList>(() => new CompanyServicePackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList(CompanyServicePackList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackList Clone() {
      return new CompanyServicePackList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.CompanyServicePackStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.CompanyServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceList : pb::IMessage<ExtraServiceList> {
    private static readonly pb::MessageParser<ExtraServiceList> _parser = new pb::MessageParser<ExtraServiceList>(() => new ExtraServiceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList(ExtraServiceList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceList Clone() {
      return new ExtraServiceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ExtraServiceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ExtraServiceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ExtraServiceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ExtraServiceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ExtraServiceStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackList : pb::IMessage<ServicePackList> {
    private static readonly pb::MessageParser<ServicePackList> _parser = new pb::MessageParser<ServicePackList>(() => new ServicePackList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList(ServicePackList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackList Clone() {
      return new ServicePackList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ServicePackStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CCNumberConfigList : pb::IMessage<CCNumberConfigList> {
    private static readonly pb::MessageParser<CCNumberConfigList> _parser = new pb::MessageParser<CCNumberConfigList>(() => new CCNumberConfigList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CCNumberConfigList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList(CCNumberConfigList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigList Clone() {
      return new CCNumberConfigList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.CCNumberConfigStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.CCNumberConfigStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.CCNumberConfigStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.CCNumberConfigStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.CCNumberConfigStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CCNumberConfigList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CCNumberConfigList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CCNumberConfigList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractTypeList : pb::IMessage<ContractTypeList> {
    private static readonly pb::MessageParser<ContractTypeList> _parser = new pb::MessageParser<ContractTypeList>(() => new ContractTypeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTypeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList(ContractTypeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeList Clone() {
      return new ContractTypeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ContractTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ContractTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ContractTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ContractTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ContractTypeStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTypeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTypeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTypeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountList : pb::IMessage<DelegateServicePackDiscountList> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountList> _parser = new pb::MessageParser<DelegateServicePackDiscountList>(() => new DelegateServicePackDiscountList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList(DelegateServicePackDiscountList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountList Clone() {
      return new DelegateServicePackDiscountList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractList : pb::IMessage<DelegateServicePackDiscountForConferenceContractList> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractList> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractList>(() => new DelegateServicePackDiscountForConferenceContractList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList(DelegateServicePackDiscountForConferenceContractList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractList Clone() {
      return new DelegateServicePackDiscountForConferenceContractList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractListStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceOnsiteList : pb::IMessage<ConferenceOnsiteList> {
    private static readonly pb::MessageParser<ConferenceOnsiteList> _parser = new pb::MessageParser<ConferenceOnsiteList>(() => new ConferenceOnsiteList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceOnsiteList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList(ConferenceOnsiteList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteList Clone() {
      return new ConferenceOnsiteList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ConferenceOnsiteStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ConferenceOnsiteStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceOnsiteStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceOnsiteStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ConferenceOnsiteStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceOnsiteList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceOnsiteList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceOnsiteList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeList : pb::IMessage<InviteCodeList> {
    private static readonly pb::MessageParser<InviteCodeList> _parser = new pb::MessageParser<InviteCodeList>(() => new InviteCodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList(InviteCodeList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeList Clone() {
      return new InviteCodeList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.InviteCodeCSPVMStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.InviteCodeCSPVMStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeCSPVMStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeCSPVMStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeCSPVMStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeRecordList : pb::IMessage<InviteCodeRecordList> {
    private static readonly pb::MessageParser<InviteCodeRecordList> _parser = new pb::MessageParser<InviteCodeRecordList>(() => new InviteCodeRecordList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeRecordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList(InviteCodeRecordList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordList Clone() {
      return new InviteCodeRecordList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.InviteCodeRecordStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.InviteCodeRecordStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeRecordStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeRecordStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.InviteCodeRecordStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeRecordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeRecordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeRecordList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractAndSessionConferenceIdList : pb::IMessage<PersonContractAndSessionConferenceIdList> {
    private static readonly pb::MessageParser<PersonContractAndSessionConferenceIdList> _parser = new pb::MessageParser<PersonContractAndSessionConferenceIdList>(() => new PersonContractAndSessionConferenceIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractAndSessionConferenceIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList(PersonContractAndSessionConferenceIdList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      allTotal_ = other.allTotal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdList Clone() {
      return new PersonContractAndSessionConferenceIdList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractAndSessionConferenceIdsStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "allTotal" field.</summary>
    public const int AllTotalFieldNumber = 3;
    private int allTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AllTotal {
      get { return allTotal_; }
      set {
        allTotal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractAndSessionConferenceIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractAndSessionConferenceIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      if (AllTotal != other.AllTotal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (AllTotal != 0) hash ^= AllTotal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (AllTotal != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AllTotal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (AllTotal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AllTotal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractAndSessionConferenceIdList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.AllTotal != 0) {
        AllTotal = other.AllTotal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 24: {
            AllTotal = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapList : pb::IMessage<PersonContractActivityMapList> {
    private static readonly pb::MessageParser<PersonContractActivityMapList> _parser = new pb::MessageParser<PersonContractActivityMapList>(() => new PersonContractActivityMapList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList(PersonContractActivityMapList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapList Clone() {
      return new PersonContractActivityMapList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractActivityMapStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.PersonContractActivityMapStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapList : pb::IMessage<CompanyServicePackMapList> {
    private static readonly pb::MessageParser<CompanyServicePackMapList> _parser = new pb::MessageParser<CompanyServicePackMapList>(() => new CompanyServicePackMapList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList(CompanyServicePackMapList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapList Clone() {
      return new CompanyServicePackMapList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.CompanyServicePackMapVMStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.CompanyServicePackMapVMStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackMapVMStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackMapVMStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.CompanyServicePackMapVMStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatisticsList : pb::IMessage<ContractStatisticsList> {
    private static readonly pb::MessageParser<ContractStatisticsList> _parser = new pb::MessageParser<ContractStatisticsList>(() => new ContractStatisticsList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatisticsList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList(ContractStatisticsList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsList Clone() {
      return new ContractStatisticsList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ContractStatisticsStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ContractStatisticsStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatisticsStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatisticsStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatisticsStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatisticsList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatisticsList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatisticsList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapListToUpdate : pb::IMessage<PersonContractActivityMapListToUpdate> {
    private static readonly pb::MessageParser<PersonContractActivityMapListToUpdate> _parser = new pb::MessageParser<PersonContractActivityMapListToUpdate>(() => new PersonContractActivityMapListToUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapListToUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate(PersonContractActivityMapListToUpdate other) : this() {
      memberPK_ = other.memberPK_;
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapListToUpdate Clone() {
      return new PersonContractActivityMapListToUpdate(this);
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 1;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractActivityMapStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractService.PersonContractActivityMapStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct>();
    /// <summary>
    ///PersonContractActivityMap列表，如果没有可以为空
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractActivityMapStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapListToUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapListToUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberPK != other.MemberPK) return false;
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberPK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberPK);
      }
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapListToUpdate other) {
      if (other == null) {
        return;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberPK = input.ReadString();
            break;
          }
          case 18: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceContractStruct : pb::IMessage<ConferenceContractStruct> {
    private static readonly pb::MessageParser<ConferenceContractStruct> _parser = new pb::MessageParser<ConferenceContractStruct>(() => new ConferenceContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct(ConferenceContractStruct other) : this() {
      conferenceContractId_ = other.conferenceContractId_;
      companyId_ = other.companyId_;
      ComNameTranslation = other.comNameTranslation_ != null ? other.ComNameTranslation.Clone() : null;
      contractNumber_ = other.contractNumber_;
      contractCode_ = other.contractCode_;
      isDelete_ = other.isDelete_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      clistdata_ = other.clistdata_.Clone();
      contractYear_ = other.contractYear_;
      dlistdata_ = other.dlistdata_.Clone();
      conferenceId_ = other.conferenceId_;
      alternativeContractNumber_ = other.alternativeContractNumber_;
      contractStatusCode_ = other.contractStatusCode_;
      paymentStatusCode_ = other.paymentStatusCode_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      modifyPermission_ = other.modifyPermission_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceContractStruct Clone() {
      return new ConferenceContractStruct(this);
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 1;
    private string conferenceContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 2;
    private string companyId_ = "";
    /// <summary>
    ///公司id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 3;
    private global::GrpcConferenceContractService.ComNameTranslationStruct comNameTranslation_;
    /// <summary>
    ///公司中英文名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ComNameTranslationStruct ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 4;
    private string contractNumber_ = "";
    /// <summary>
    ///合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 5;
    private string contractCode_ = "";
    /// <summary>
    ///CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 6;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 7;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 8;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 9;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 10;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 11;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 12;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Clistdata" field.</summary>
    public const int ClistdataFieldNumber = 13;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.CompanyContractStruct> _repeated_clistdata_codec
        = pb::FieldCodec.ForMessage(106, global::GrpcConferenceContractService.CompanyContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct> clistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct>();
    /// <summary>
    ///二级合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.CompanyContractStruct> Clistdata {
      get { return clistdata_; }
    }

    /// <summary>Field number for the "ContractYear" field.</summary>
    public const int ContractYearFieldNumber = 14;
    private string contractYear_ = "";
    /// <summary>
    ///合同年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractYear {
      get { return contractYear_; }
      set {
        contractYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dlistdata" field.</summary>
    public const int DlistdataFieldNumber = 15;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct> _repeated_dlistdata_codec
        = pb::FieldCodec.ForMessage(122, global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct> dlistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct>();
    /// <summary>
    ///一级合同折扣列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountForConferenceContractStruct> Dlistdata {
      get { return dlistdata_; }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 16;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AlternativeContractNumber" field.</summary>
    public const int AlternativeContractNumberFieldNumber = 17;
    private string alternativeContractNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlternativeContractNumber {
      get { return alternativeContractNumber_; }
      set {
        alternativeContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 18;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PaymentStatusCode" field.</summary>
    public const int PaymentStatusCodeFieldNumber = 19;
    private string paymentStatusCode_ = "";
    /// <summary>
    ///支付状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentStatusCode {
      get { return paymentStatusCode_; }
      set {
        paymentStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 20;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送Email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 21;
    private bool isModify_;
    /// <summary>
    ///是否修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "ModifyPermission" field.</summary>
    public const int ModifyPermissionFieldNumber = 22;
    private string modifyPermission_ = "";
    /// <summary>
    ///修改许可
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifyPermission {
      get { return modifyPermission_; }
      set {
        modifyPermission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (!object.Equals(ComNameTranslation, other.ComNameTranslation)) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (ContractCode != other.ContractCode) return false;
      if (IsDelete != other.IsDelete) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if(!clistdata_.Equals(other.clistdata_)) return false;
      if (ContractYear != other.ContractYear) return false;
      if(!dlistdata_.Equals(other.dlistdata_)) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (AlternativeContractNumber != other.AlternativeContractNumber) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (PaymentStatusCode != other.PaymentStatusCode) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (ModifyPermission != other.ModifyPermission) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (comNameTranslation_ != null) hash ^= ComNameTranslation.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      hash ^= clistdata_.GetHashCode();
      if (ContractYear.Length != 0) hash ^= ContractYear.GetHashCode();
      hash ^= dlistdata_.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (AlternativeContractNumber.Length != 0) hash ^= AlternativeContractNumber.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (PaymentStatusCode.Length != 0) hash ^= PaymentStatusCode.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (ModifyPermission.Length != 0) hash ^= ModifyPermission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConferenceContractId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyId);
      }
      if (comNameTranslation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContractNumber);
      }
      if (ContractCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContractCode);
      }
      if (IsDelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsDelete);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModefieldBy);
      }
      clistdata_.WriteTo(output, _repeated_clistdata_codec);
      if (ContractYear.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ContractYear);
      }
      dlistdata_.WriteTo(output, _repeated_dlistdata_codec);
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ConferenceId);
      }
      if (AlternativeContractNumber.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AlternativeContractNumber);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(PaymentStatusCode);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsModify);
      }
      if (ModifyPermission.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ModifyPermission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (comNameTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComNameTranslation);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (ContractCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      size += clistdata_.CalculateSize(_repeated_clistdata_codec);
      if (ContractYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractYear);
      }
      size += dlistdata_.CalculateSize(_repeated_dlistdata_codec);
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (AlternativeContractNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AlternativeContractNumber);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (PaymentStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaymentStatusCode);
      }
      if (IsSendEmail != false) {
        size += 2 + 1;
      }
      if (IsModify != false) {
        size += 2 + 1;
      }
      if (ModifyPermission.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifyPermission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.comNameTranslation_ != null) {
        if (comNameTranslation_ == null) {
          comNameTranslation_ = new global::GrpcConferenceContractService.ComNameTranslationStruct();
        }
        ComNameTranslation.MergeFrom(other.ComNameTranslation);
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      clistdata_.Add(other.clistdata_);
      if (other.ContractYear.Length != 0) {
        ContractYear = other.ContractYear;
      }
      dlistdata_.Add(other.dlistdata_);
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.AlternativeContractNumber.Length != 0) {
        AlternativeContractNumber = other.AlternativeContractNumber;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.PaymentStatusCode.Length != 0) {
        PaymentStatusCode = other.PaymentStatusCode;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.ModifyPermission.Length != 0) {
        ModifyPermission = other.ModifyPermission;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 18: {
            CompanyId = input.ReadString();
            break;
          }
          case 26: {
            if (comNameTranslation_ == null) {
              comNameTranslation_ = new global::GrpcConferenceContractService.ComNameTranslationStruct();
            }
            input.ReadMessage(comNameTranslation_);
            break;
          }
          case 34: {
            ContractNumber = input.ReadString();
            break;
          }
          case 42: {
            ContractCode = input.ReadString();
            break;
          }
          case 48: {
            IsDelete = input.ReadBool();
            break;
          }
          case 58: {
            Owerid = input.ReadString();
            break;
          }
          case 66: {
            Ower = input.ReadString();
            break;
          }
          case 74: {
            CreatedOn = input.ReadString();
            break;
          }
          case 82: {
            CreatedBy = input.ReadString();
            break;
          }
          case 90: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 98: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 106: {
            clistdata_.AddEntriesFrom(input, _repeated_clistdata_codec);
            break;
          }
          case 114: {
            ContractYear = input.ReadString();
            break;
          }
          case 122: {
            dlistdata_.AddEntriesFrom(input, _repeated_dlistdata_codec);
            break;
          }
          case 130: {
            ConferenceId = input.ReadString();
            break;
          }
          case 138: {
            AlternativeContractNumber = input.ReadString();
            break;
          }
          case 146: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 154: {
            PaymentStatusCode = input.ReadString();
            break;
          }
          case 160: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 168: {
            IsModify = input.ReadBool();
            break;
          }
          case 178: {
            ModifyPermission = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyContractStruct : pb::IMessage<CompanyContractStruct> {
    private static readonly pb::MessageParser<CompanyContractStruct> _parser = new pb::MessageParser<CompanyContractStruct>(() => new CompanyContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct(CompanyContractStruct other) : this() {
      contractId_ = other.contractId_;
      companyServicePackId_ = other.companyServicePackId_;
      companyId_ = other.companyId_;
      ComNameTranslation = other.comNameTranslation_ != null ? other.ComNameTranslation.Clone() : null;
      comContractNumber_ = other.comContractNumber_;
      country_ = other.country_;
      AddressTranslation = other.addressTranslation_ != null ? other.AddressTranslation.Clone() : null;
      maxContractNumber_ = other.maxContractNumber_;
      cCIsdelete_ = other.cCIsdelete_;
      enterpriseType_ = other.enterpriseType_;
      isVerify_ = other.isVerify_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      dlistdata_ = other.dlistdata_.Clone();
      contractCode_ = other.contractCode_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isCheckIn_ = other.isCheckIn_;
      pPTUrl_ = other.pPTUrl_;
      contractStatusCode_ = other.contractStatusCode_;
      conferenceContractId_ = other.conferenceContractId_;
      plistdata_ = other.plistdata_.Clone();
      comPrice_ = other.comPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyContractStruct Clone() {
      return new CompanyContractStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    /// <summary>
    ///CompanyServicePackId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 3;
    private string companyId_ = "";
    /// <summary>
    ///CompanyId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComNameTranslation" field.</summary>
    public const int ComNameTranslationFieldNumber = 4;
    private global::GrpcConferenceContractService.ComNameTranslationStruct comNameTranslation_;
    /// <summary>
    ///string  ComNameTranslation = 4;
    ///公司中英文名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ComNameTranslationStruct ComNameTranslation {
      get { return comNameTranslation_; }
      set {
        comNameTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ComContractNumber" field.</summary>
    public const int ComContractNumberFieldNumber = 5;
    private string comContractNumber_ = "";
    /// <summary>
    ///二级合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComContractNumber {
      get { return comContractNumber_; }
      set {
        comContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    /// <summary>
    ///国家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressTranslation" field.</summary>
    public const int AddressTranslationFieldNumber = 7;
    private global::GrpcConferenceContractService.AddressTranslationStruct addressTranslation_;
    /// <summary>
    ///string AddressTranslation = 7;
    ///地址中英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.AddressTranslationStruct AddressTranslation {
      get { return addressTranslation_; }
      set {
        addressTranslation_ = value;
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 8;
    private string maxContractNumber_ = "";
    /// <summary>
    ///最大合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CCIsdelete" field.</summary>
    public const int CCIsdeleteFieldNumber = 9;
    private bool cCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CCIsdelete {
      get { return cCIsdelete_; }
      set {
        cCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "EnterpriseType" field.</summary>
    public const int EnterpriseTypeFieldNumber = 10;
    private int enterpriseType_;
    /// <summary>
    ///0代表内资;1代表外资
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnterpriseType {
      get { return enterpriseType_; }
      set {
        enterpriseType_ = value;
      }
    }

    /// <summary>Field number for the "IsVerify" field.</summary>
    public const int IsVerifyFieldNumber = 11;
    private bool isVerify_;
    /// <summary>
    ///是否审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsVerify {
      get { return isVerify_; }
      set {
        isVerify_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 13;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 14;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 15;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 16;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 17;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 18;
    private global::GrpcConferenceContractService.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "dlistdata" field.</summary>
    public const int DlistdataFieldNumber = 19;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.DelegateServicePackDiscountStruct> _repeated_dlistdata_codec
        = pb::FieldCodec.ForMessage(154, global::GrpcConferenceContractService.DelegateServicePackDiscountStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountStruct> dlistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountStruct>();
    /// <summary>
    ///二级折扣合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.DelegateServicePackDiscountStruct> Dlistdata {
      get { return dlistdata_; }
    }

    /// <summary>Field number for the "ContractCode" field.</summary>
    public const int ContractCodeFieldNumber = 20;
    private string contractCode_ = "";
    /// <summary>
    ///CF2019SNEC0010CW合同编号最后二位Code（CW/CS,EW/ES）C中资 E外资 S后台合同 W前台合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 21;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 22;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 23;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "PPTUrl" field.</summary>
    public const int PPTUrlFieldNumber = 24;
    private string pPTUrl_ = "";
    /// <summary>
    ///PPTUrl
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PPTUrl {
      get { return pPTUrl_; }
      set {
        pPTUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractStatusCode" field.</summary>
    public const int ContractStatusCodeFieldNumber = 25;
    private string contractStatusCode_ = "";
    /// <summary>
    ///合同状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusCode {
      get { return contractStatusCode_; }
      set {
        contractStatusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 26;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plistdata" field.</summary>
    public const int PlistdataFieldNumber = 27;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.PersonContractStruct> _repeated_plistdata_codec
        = pb::FieldCodec.ForMessage(218, global::GrpcConferenceContractService.PersonContractStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct> plistdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct>();
    /// <summary>
    ///个人合同列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.PersonContractStruct> Plistdata {
      get { return plistdata_; }
    }

    /// <summary>Field number for the "ComPrice" field.</summary>
    public const int ComPriceFieldNumber = 28;
    private string comPrice_ = "";
    /// <summary>
    ///二级合同价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComPrice {
      get { return comPrice_; }
      set {
        comPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CompanyId != other.CompanyId) return false;
      if (!object.Equals(ComNameTranslation, other.ComNameTranslation)) return false;
      if (ComContractNumber != other.ComContractNumber) return false;
      if (Country != other.Country) return false;
      if (!object.Equals(AddressTranslation, other.AddressTranslation)) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      if (CCIsdelete != other.CCIsdelete) return false;
      if (EnterpriseType != other.EnterpriseType) return false;
      if (IsVerify != other.IsVerify) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if(!dlistdata_.Equals(other.dlistdata_)) return false;
      if (ContractCode != other.ContractCode) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (PPTUrl != other.PPTUrl) return false;
      if (ContractStatusCode != other.ContractStatusCode) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if(!plistdata_.Equals(other.plistdata_)) return false;
      if (ComPrice != other.ComPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (comNameTranslation_ != null) hash ^= ComNameTranslation.GetHashCode();
      if (ComContractNumber.Length != 0) hash ^= ComContractNumber.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (addressTranslation_ != null) hash ^= AddressTranslation.GetHashCode();
      if (MaxContractNumber.Length != 0) hash ^= MaxContractNumber.GetHashCode();
      if (CCIsdelete != false) hash ^= CCIsdelete.GetHashCode();
      if (EnterpriseType != 0) hash ^= EnterpriseType.GetHashCode();
      if (IsVerify != false) hash ^= IsVerify.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      hash ^= dlistdata_.GetHashCode();
      if (ContractCode.Length != 0) hash ^= ContractCode.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (PPTUrl.Length != 0) hash ^= PPTUrl.GetHashCode();
      if (ContractStatusCode.Length != 0) hash ^= ContractStatusCode.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      hash ^= plistdata_.GetHashCode();
      if (ComPrice.Length != 0) hash ^= ComPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyId);
      }
      if (comNameTranslation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ComContractNumber);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (addressTranslation_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        output.WriteRawTag(72);
        output.WriteBool(CCIsdelete);
      }
      if (EnterpriseType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EnterpriseType);
      }
      if (IsVerify != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsVerify);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CompanyServicePack);
      }
      dlistdata_.WriteTo(output, _repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(ConferenceName);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCheckIn);
      }
      if (PPTUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(ConferenceContractId);
      }
      plistdata_.WriteTo(output, _repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ComPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (comNameTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComNameTranslation);
      }
      if (ComContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComContractNumber);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (addressTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddressTranslation);
      }
      if (MaxContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxContractNumber);
      }
      if (CCIsdelete != false) {
        size += 1 + 1;
      }
      if (EnterpriseType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnterpriseType);
      }
      if (IsVerify != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (companyServicePack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      size += dlistdata_.CalculateSize(_repeated_dlistdata_codec);
      if (ContractCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractCode);
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (PPTUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PPTUrl);
      }
      if (ContractStatusCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ContractStatusCode);
      }
      if (ConferenceContractId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      size += plistdata_.CalculateSize(_repeated_plistdata_codec);
      if (ComPrice.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ComPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.comNameTranslation_ != null) {
        if (comNameTranslation_ == null) {
          comNameTranslation_ = new global::GrpcConferenceContractService.ComNameTranslationStruct();
        }
        ComNameTranslation.MergeFrom(other.ComNameTranslation);
      }
      if (other.ComContractNumber.Length != 0) {
        ComContractNumber = other.ComContractNumber;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.addressTranslation_ != null) {
        if (addressTranslation_ == null) {
          addressTranslation_ = new global::GrpcConferenceContractService.AddressTranslationStruct();
        }
        AddressTranslation.MergeFrom(other.AddressTranslation);
      }
      if (other.MaxContractNumber.Length != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      if (other.CCIsdelete != false) {
        CCIsdelete = other.CCIsdelete;
      }
      if (other.EnterpriseType != 0) {
        EnterpriseType = other.EnterpriseType;
      }
      if (other.IsVerify != false) {
        IsVerify = other.IsVerify;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      dlistdata_.Add(other.dlistdata_);
      if (other.ContractCode.Length != 0) {
        ContractCode = other.ContractCode;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.PPTUrl.Length != 0) {
        PPTUrl = other.PPTUrl;
      }
      if (other.ContractStatusCode.Length != 0) {
        ContractStatusCode = other.ContractStatusCode;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      plistdata_.Add(other.plistdata_);
      if (other.ComPrice.Length != 0) {
        ComPrice = other.ComPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            CompanyId = input.ReadString();
            break;
          }
          case 34: {
            if (comNameTranslation_ == null) {
              comNameTranslation_ = new global::GrpcConferenceContractService.ComNameTranslationStruct();
            }
            input.ReadMessage(comNameTranslation_);
            break;
          }
          case 42: {
            ComContractNumber = input.ReadString();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            if (addressTranslation_ == null) {
              addressTranslation_ = new global::GrpcConferenceContractService.AddressTranslationStruct();
            }
            input.ReadMessage(addressTranslation_);
            break;
          }
          case 66: {
            MaxContractNumber = input.ReadString();
            break;
          }
          case 72: {
            CCIsdelete = input.ReadBool();
            break;
          }
          case 80: {
            EnterpriseType = input.ReadInt32();
            break;
          }
          case 88: {
            IsVerify = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
          case 106: {
            Ower = input.ReadString();
            break;
          }
          case 114: {
            CreatedOn = input.ReadString();
            break;
          }
          case 122: {
            CreatedBy = input.ReadString();
            break;
          }
          case 130: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 138: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 146: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 154: {
            dlistdata_.AddEntriesFrom(input, _repeated_dlistdata_codec);
            break;
          }
          case 162: {
            ContractCode = input.ReadString();
            break;
          }
          case 170: {
            ConferenceId = input.ReadString();
            break;
          }
          case 178: {
            ConferenceName = input.ReadString();
            break;
          }
          case 184: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 194: {
            PPTUrl = input.ReadString();
            break;
          }
          case 202: {
            ContractStatusCode = input.ReadString();
            break;
          }
          case 210: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 218: {
            plistdata_.AddEntriesFrom(input, _repeated_plistdata_codec);
            break;
          }
          case 226: {
            ComPrice = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractStruct : pb::IMessage<PersonContractStruct> {
    private static readonly pb::MessageParser<PersonContractStruct> _parser = new pb::MessageParser<PersonContractStruct>(() => new PersonContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct(PersonContractStruct other) : this() {
      personContractId_ = other.personContractId_;
      contractId_ = other.contractId_;
      perContractNumber_ = other.perContractNumber_;
      memberPK_ = other.memberPK_;
      MemTranslation = other.memTranslation_ != null ? other.MemTranslation.Clone() : null;
      pCIsdelete_ = other.pCIsdelete_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      conferenceContractId_ = other.conferenceContractId_;
      cTypeCode_ = other.cTypeCode_;
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      isCheckIn_ = other.isCheckIn_;
      isSendEmail_ = other.isSendEmail_;
      isModify_ = other.isModify_;
      conferenceId_ = other.conferenceId_;
      isFianceRecord_ = other.isFianceRecord_;
      isInviteCode_ = other.isInviteCode_;
      inviteCodeId_ = other.inviteCodeId_;
      isCommitAbstract_ = other.isCommitAbstract_;
      isPrint_ = other.isPrint_;
      paidAmount_ = other.paidAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractStruct Clone() {
      return new PersonContractStruct(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///ContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PerContractNumber" field.</summary>
    public const int PerContractNumberFieldNumber = 3;
    private string perContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PerContractNumber {
      get { return perContractNumber_; }
      set {
        perContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 4;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 5;
    private global::GrpcConferenceContractService.MemTranslationStruct memTranslation_;
    /// <summary>
    ///会员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.MemTranslationStruct MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = value;
      }
    }

    /// <summary>Field number for the "PCIsdelete" field.</summary>
    public const int PCIsdeleteFieldNumber = 6;
    private bool pCIsdelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PCIsdelete {
      get { return pCIsdelete_; }
      set {
        pCIsdelete_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 11;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 12;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 13;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 14;
    private string cTypeCode_ = "";
    /// <summary>
    ///ContractType合同大类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 15;
    private global::GrpcConferenceContractService.CompanyContractStruct companyContract_;
    /// <summary>
    ///二级合同对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 16;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    /// <summary>Field number for the "IsSendEmail" field.</summary>
    public const int IsSendEmailFieldNumber = 17;
    private bool isSendEmail_;
    /// <summary>
    ///是否发送Email
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendEmail {
      get { return isSendEmail_; }
      set {
        isSendEmail_ = value;
      }
    }

    /// <summary>Field number for the "IsModify" field.</summary>
    public const int IsModifyFieldNumber = 18;
    private bool isModify_;
    /// <summary>
    ///是否修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsModify {
      get { return isModify_; }
      set {
        isModify_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 19;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsFianceRecord" field.</summary>
    public const int IsFianceRecordFieldNumber = 20;
    private bool isFianceRecord_;
    /// <summary>
    ///是否有财务记录
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFianceRecord {
      get { return isFianceRecord_; }
      set {
        isFianceRecord_ = value;
      }
    }

    /// <summary>Field number for the "IsInviteCode" field.</summary>
    public const int IsInviteCodeFieldNumber = 21;
    private bool isInviteCode_;
    /// <summary>
    ///是否是邀请码创建合同
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInviteCode {
      get { return isInviteCode_; }
      set {
        isInviteCode_ = value;
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 22;
    private string inviteCodeId_ = "";
    /// <summary>
    ///InviteCodeId邀请码Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCommitAbstract" field.</summary>
    public const int IsCommitAbstractFieldNumber = 23;
    private bool isCommitAbstract_;
    /// <summary>
    ///是否提交摘要
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCommitAbstract {
      get { return isCommitAbstract_; }
      set {
        isCommitAbstract_ = value;
      }
    }

    /// <summary>Field number for the "IsPrint" field.</summary>
    public const int IsPrintFieldNumber = 24;
    private bool isPrint_;
    /// <summary>
    ///是否打印
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrint {
      get { return isPrint_; }
      set {
        isPrint_ = value;
      }
    }

    /// <summary>Field number for the "PaidAmount" field.</summary>
    public const int PaidAmountFieldNumber = 25;
    private string paidAmount_ = "";
    /// <summary>
    ///已付金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaidAmount {
      get { return paidAmount_; }
      set {
        paidAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if (ContractId != other.ContractId) return false;
      if (PerContractNumber != other.PerContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (!object.Equals(MemTranslation, other.MemTranslation)) return false;
      if (PCIsdelete != other.PCIsdelete) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      if (IsSendEmail != other.IsSendEmail) return false;
      if (IsModify != other.IsModify) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (IsFianceRecord != other.IsFianceRecord) return false;
      if (IsInviteCode != other.IsInviteCode) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (IsCommitAbstract != other.IsCommitAbstract) return false;
      if (IsPrint != other.IsPrint) return false;
      if (PaidAmount != other.PaidAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PerContractNumber.Length != 0) hash ^= PerContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (memTranslation_ != null) hash ^= MemTranslation.GetHashCode();
      if (PCIsdelete != false) hash ^= PCIsdelete.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (IsSendEmail != false) hash ^= IsSendEmail.GetHashCode();
      if (IsModify != false) hash ^= IsModify.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (IsFianceRecord != false) hash ^= IsFianceRecord.GetHashCode();
      if (IsInviteCode != false) hash ^= IsInviteCode.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (IsCommitAbstract != false) hash ^= IsCommitAbstract.GetHashCode();
      if (IsPrint != false) hash ^= IsPrint.GetHashCode();
      if (PaidAmount.Length != 0) hash ^= PaidAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberPK);
      }
      if (memTranslation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MemTranslation);
      }
      if (PCIsdelete != false) {
        output.WriteRawTag(48);
        output.WriteBool(PCIsdelete);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(CTypeCode);
      }
      if (companyContract_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(CompanyContract);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsCheckIn);
      }
      if (IsSendEmail != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsSendEmail);
      }
      if (IsModify != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(IsModify);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(ConferenceId);
      }
      if (IsFianceRecord != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsFianceRecord);
      }
      if (IsInviteCode != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(IsInviteCode);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(IsCommitAbstract);
      }
      if (IsPrint != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(IsPrint);
      }
      if (PaidAmount.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PaidAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PerContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PerContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (memTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemTranslation);
      }
      if (PCIsdelete != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (IsCheckIn != false) {
        size += 2 + 1;
      }
      if (IsSendEmail != false) {
        size += 2 + 1;
      }
      if (IsModify != false) {
        size += 2 + 1;
      }
      if (ConferenceId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (IsFianceRecord != false) {
        size += 2 + 1;
      }
      if (IsInviteCode != false) {
        size += 2 + 1;
      }
      if (InviteCodeId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (IsCommitAbstract != false) {
        size += 2 + 1;
      }
      if (IsPrint != false) {
        size += 2 + 1;
      }
      if (PaidAmount.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PaidAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PerContractNumber.Length != 0) {
        PerContractNumber = other.PerContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.memTranslation_ != null) {
        if (memTranslation_ == null) {
          memTranslation_ = new global::GrpcConferenceContractService.MemTranslationStruct();
        }
        MemTranslation.MergeFrom(other.MemTranslation);
      }
      if (other.PCIsdelete != false) {
        PCIsdelete = other.PCIsdelete;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      if (other.IsSendEmail != false) {
        IsSendEmail = other.IsSendEmail;
      }
      if (other.IsModify != false) {
        IsModify = other.IsModify;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.IsFianceRecord != false) {
        IsFianceRecord = other.IsFianceRecord;
      }
      if (other.IsInviteCode != false) {
        IsInviteCode = other.IsInviteCode;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.IsCommitAbstract != false) {
        IsCommitAbstract = other.IsCommitAbstract;
      }
      if (other.IsPrint != false) {
        IsPrint = other.IsPrint;
      }
      if (other.PaidAmount.Length != 0) {
        PaidAmount = other.PaidAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            PerContractNumber = input.ReadString();
            break;
          }
          case 34: {
            MemberPK = input.ReadString();
            break;
          }
          case 42: {
            if (memTranslation_ == null) {
              memTranslation_ = new global::GrpcConferenceContractService.MemTranslationStruct();
            }
            input.ReadMessage(memTranslation_);
            break;
          }
          case 48: {
            PCIsdelete = input.ReadBool();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 90: {
            Owerid = input.ReadString();
            break;
          }
          case 98: {
            Ower = input.ReadString();
            break;
          }
          case 106: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 114: {
            CTypeCode = input.ReadString();
            break;
          }
          case 122: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 128: {
            IsCheckIn = input.ReadBool();
            break;
          }
          case 136: {
            IsSendEmail = input.ReadBool();
            break;
          }
          case 144: {
            IsModify = input.ReadBool();
            break;
          }
          case 154: {
            ConferenceId = input.ReadString();
            break;
          }
          case 160: {
            IsFianceRecord = input.ReadBool();
            break;
          }
          case 168: {
            IsInviteCode = input.ReadBool();
            break;
          }
          case 178: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 184: {
            IsCommitAbstract = input.ReadBool();
            break;
          }
          case 192: {
            IsPrint = input.ReadBool();
            break;
          }
          case 202: {
            PaidAmount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackStruct : pb::IMessage<CompanyServicePackStruct> {
    private static readonly pb::MessageParser<CompanyServicePackStruct> _parser = new pb::MessageParser<CompanyServicePackStruct>(() => new CompanyServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct(CompanyServicePackStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      contractTypeId_ = other.contractTypeId_;
      sort_ = other.sort_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      isShownOnFront_ = other.isShownOnFront_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      RemarkTranslation = other.remarkTranslation_ != null ? other.RemarkTranslation.Clone() : null;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      isSpeaker_ = other.isSpeaker_;
      cTypeCode_ = other.cTypeCode_;
      isGive_ = other.isGive_;
      year_ = other.year_;
      remarkCode_ = other.remarkCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackStruct Clone() {
      return new CompanyServicePackStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 2;
    private string contractTypeId_ = "";
    /// <summary>
    ///ContractTypeId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 3;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 4;
    private global::GrpcConferenceContractService.TranslationStruct translation_;
    /// <summary>
    ///套餐名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 5;
    private string priceRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 6;
    private string priceUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsShownOnFront" field.</summary>
    public const int IsShownOnFrontFieldNumber = 7;
    private bool isShownOnFront_;
    /// <summary>
    ///是否在前端显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShownOnFront {
      get { return isShownOnFront_; }
      set {
        isShownOnFront_ = value;
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 10;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 11;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 12;
    private global::GrpcConferenceContractService.TranslationStruct remarkTranslation_;
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 13;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 14;
    private string conferenceName_ = "";
    /// <summary>
    ///会议名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 15;
    private bool isSpeaker_;
    /// <summary>
    ///是否是演讲人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 16;
    private string cTypeCode_ = "";
    /// <summary>
    ///合同大类Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 17;
    private bool isGive_;
    /// <summary>
    ///是否赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkCode" field.</summary>
    public const int RemarkCodeFieldNumber = 19;
    private string remarkCode_ = "";
    /// <summary>
    ///说明Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkCode {
      get { return remarkCode_; }
      set {
        remarkCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Sort != other.Sort) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (IsShownOnFront != other.IsShownOnFront) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (!object.Equals(RemarkTranslation, other.RemarkTranslation)) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (IsGive != other.IsGive) return false;
      if (Year != other.Year) return false;
      if (RemarkCode != other.RemarkCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (IsShownOnFront != false) hash ^= IsShownOnFront.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (remarkTranslation_ != null) hash ^= RemarkTranslation.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (RemarkCode.Length != 0) hash ^= RemarkCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractTypeId);
      }
      if (Sort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sort);
      }
      if (translation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PriceUSD);
      }
      if (IsShownOnFront != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsShownOnFront);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ConferenceName);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsSpeaker);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CTypeCode);
      }
      if (IsGive != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsGive);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (RemarkCode.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(RemarkCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (IsShownOnFront != false) {
        size += 1 + 1;
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (remarkTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemarkTranslation);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (CTypeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (IsGive != false) {
        size += 2 + 1;
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (RemarkCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RemarkCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.IsShownOnFront != false) {
        IsShownOnFront = other.IsShownOnFront;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.remarkTranslation_ != null) {
        if (remarkTranslation_ == null) {
          remarkTranslation_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        RemarkTranslation.MergeFrom(other.RemarkTranslation);
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.RemarkCode.Length != 0) {
        RemarkCode = other.RemarkCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 24: {
            Sort = input.ReadInt32();
            break;
          }
          case 34: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 42: {
            PriceRMB = input.ReadString();
            break;
          }
          case 50: {
            PriceUSD = input.ReadString();
            break;
          }
          case 56: {
            IsShownOnFront = input.ReadBool();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 90: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 98: {
            if (remarkTranslation_ == null) {
              remarkTranslation_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(remarkTranslation_);
            break;
          }
          case 106: {
            ConferenceId = input.ReadString();
            break;
          }
          case 114: {
            ConferenceName = input.ReadString();
            break;
          }
          case 120: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 130: {
            CTypeCode = input.ReadString();
            break;
          }
          case 136: {
            IsGive = input.ReadBool();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
          case 154: {
            RemarkCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackVMStruct : pb::IMessage<CompanyServicePackVMStruct> {
    private static readonly pb::MessageParser<CompanyServicePackVMStruct> _parser = new pb::MessageParser<CompanyServicePackVMStruct>(() => new CompanyServicePackVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct(CompanyServicePackVMStruct other) : this() {
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      servicepackListdata_ = other.servicepackListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackVMStruct Clone() {
      return new CompanyServicePackVMStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 1;
    private global::GrpcConferenceContractService.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///公司套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "servicepack_listdata" field.</summary>
    public const int ServicepackListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ServicePackStruct> _repeated_servicepackListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractService.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> servicepackListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct>();
    /// <summary>
    ///子套餐列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> ServicepackListdata {
      get { return servicepackListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if(!servicepackListdata_.Equals(other.servicepackListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      hash ^= servicepackListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (companyServicePack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CompanyServicePack);
      }
      servicepackListdata_.WriteTo(output, _repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (companyServicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      size += servicepackListdata_.CalculateSize(_repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      servicepackListdata_.Add(other.servicepackListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 18: {
            servicepackListdata_.AddEntriesFrom(input, _repeated_servicepackListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceVMStruct : pb::IMessage<ExtraServiceVMStruct> {
    private static readonly pb::MessageParser<ExtraServiceVMStruct> _parser = new pb::MessageParser<ExtraServiceVMStruct>(() => new ExtraServiceVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct(ExtraServiceVMStruct other) : this() {
      ExtraService = other.extraService_ != null ? other.ExtraService.Clone() : null;
      servicepackListdata_ = other.servicepackListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceVMStruct Clone() {
      return new ExtraServiceVMStruct(this);
    }

    /// <summary>Field number for the "ExtraService" field.</summary>
    public const int ExtraServiceFieldNumber = 1;
    private global::GrpcConferenceContractService.ExtraServiceStruct extraService_;
    /// <summary>
    ///额外服务对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ExtraServiceStruct ExtraService {
      get { return extraService_; }
      set {
        extraService_ = value;
      }
    }

    /// <summary>Field number for the "servicepack_listdata" field.</summary>
    public const int ServicepackListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ServicePackStruct> _repeated_servicepackListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractService.ServicePackStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> servicepackListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct>();
    /// <summary>
    ///子套餐列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ServicePackStruct> ServicepackListdata {
      get { return servicepackListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExtraService, other.ExtraService)) return false;
      if(!servicepackListdata_.Equals(other.servicepackListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (extraService_ != null) hash ^= ExtraService.GetHashCode();
      hash ^= servicepackListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (extraService_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExtraService);
      }
      servicepackListdata_.WriteTo(output, _repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (extraService_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraService);
      }
      size += servicepackListdata_.CalculateSize(_repeated_servicepackListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.extraService_ != null) {
        if (extraService_ == null) {
          extraService_ = new global::GrpcConferenceContractService.ExtraServiceStruct();
        }
        ExtraService.MergeFrom(other.ExtraService);
      }
      servicepackListdata_.Add(other.servicepackListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (extraService_ == null) {
              extraService_ = new global::GrpcConferenceContractService.ExtraServiceStruct();
            }
            input.ReadMessage(extraService_);
            break;
          }
          case 18: {
            servicepackListdata_.AddEntriesFrom(input, _repeated_servicepackListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackVMStruct : pb::IMessage<ServicePackVMStruct> {
    private static readonly pb::MessageParser<ServicePackVMStruct> _parser = new pb::MessageParser<ServicePackVMStruct>(() => new ServicePackVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct(ServicePackVMStruct other) : this() {
      ServicePack = other.servicePack_ != null ? other.ServicePack.Clone() : null;
      activityListdata_ = other.activityListdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackVMStruct Clone() {
      return new ServicePackVMStruct(this);
    }

    /// <summary>Field number for the "ServicePack" field.</summary>
    public const int ServicePackFieldNumber = 1;
    private global::GrpcConferenceContractService.ServicePackStruct servicePack_;
    /// <summary>
    ///ServicePack对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ServicePackStruct ServicePack {
      get { return servicePack_; }
      set {
        servicePack_ = value;
      }
    }

    /// <summary>Field number for the "activity_listdata" field.</summary>
    public const int ActivityListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ActivityStruct> _repeated_activityListdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractService.ActivityStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ActivityStruct> activityListdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ActivityStruct>();
    /// <summary>
    ///Activity列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ActivityStruct> ActivityListdata {
      get { return activityListdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ServicePack, other.ServicePack)) return false;
      if(!activityListdata_.Equals(other.activityListdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (servicePack_ != null) hash ^= ServicePack.GetHashCode();
      hash ^= activityListdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (servicePack_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ServicePack);
      }
      activityListdata_.WriteTo(output, _repeated_activityListdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (servicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServicePack);
      }
      size += activityListdata_.CalculateSize(_repeated_activityListdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.servicePack_ != null) {
        if (servicePack_ == null) {
          servicePack_ = new global::GrpcConferenceContractService.ServicePackStruct();
        }
        ServicePack.MergeFrom(other.ServicePack);
      }
      activityListdata_.Add(other.activityListdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (servicePack_ == null) {
              servicePack_ = new global::GrpcConferenceContractService.ServicePackStruct();
            }
            input.ReadMessage(servicePack_);
            break;
          }
          case 18: {
            activityListdata_.AddEntriesFrom(input, _repeated_activityListdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtraServiceStruct : pb::IMessage<ExtraServiceStruct> {
    private static readonly pb::MessageParser<ExtraServiceStruct> _parser = new pb::MessageParser<ExtraServiceStruct>(() => new ExtraServiceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtraServiceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct(ExtraServiceStruct other) : this() {
      extraServiceId_ = other.extraServiceId_;
      extraContractNumber_ = other.extraContractNumber_;
      memberPK_ = other.memberPK_;
      MemTranslation = other.memTranslation_ != null ? other.MemTranslation.Clone() : null;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtraServiceStruct Clone() {
      return new ExtraServiceStruct(this);
    }

    /// <summary>Field number for the "ExtraServiceId" field.</summary>
    public const int ExtraServiceIdFieldNumber = 1;
    private string extraServiceId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraServiceId {
      get { return extraServiceId_; }
      set {
        extraServiceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExtraContractNumber" field.</summary>
    public const int ExtraContractNumberFieldNumber = 2;
    private string extraContractNumber_ = "";
    /// <summary>
    ///额外服务合同的合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraContractNumber {
      get { return extraContractNumber_; }
      set {
        extraContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemTranslation" field.</summary>
    public const int MemTranslationFieldNumber = 4;
    private global::GrpcConferenceContractService.MemTranslationStruct memTranslation_;
    /// <summary>
    ///会员中英文名json格式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.MemTranslationStruct MemTranslation {
      get { return memTranslation_; }
      set {
        memTranslation_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 5;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 6;
    private string ower_ = "";
    /// <summary>
    ///业务员姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtraServiceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtraServiceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExtraServiceId != other.ExtraServiceId) return false;
      if (ExtraContractNumber != other.ExtraContractNumber) return false;
      if (MemberPK != other.MemberPK) return false;
      if (!object.Equals(MemTranslation, other.MemTranslation)) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExtraServiceId.Length != 0) hash ^= ExtraServiceId.GetHashCode();
      if (ExtraContractNumber.Length != 0) hash ^= ExtraContractNumber.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (memTranslation_ != null) hash ^= MemTranslation.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExtraServiceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ExtraServiceId);
      }
      if (ExtraContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (memTranslation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MemTranslation);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ower);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExtraServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraServiceId);
      }
      if (ExtraContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraContractNumber);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (memTranslation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemTranslation);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtraServiceStruct other) {
      if (other == null) {
        return;
      }
      if (other.ExtraServiceId.Length != 0) {
        ExtraServiceId = other.ExtraServiceId;
      }
      if (other.ExtraContractNumber.Length != 0) {
        ExtraContractNumber = other.ExtraContractNumber;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.memTranslation_ != null) {
        if (memTranslation_ == null) {
          memTranslation_ = new global::GrpcConferenceContractService.MemTranslationStruct();
        }
        MemTranslation.MergeFrom(other.MemTranslation);
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExtraServiceId = input.ReadString();
            break;
          }
          case 18: {
            ExtraContractNumber = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            if (memTranslation_ == null) {
              memTranslation_ = new global::GrpcConferenceContractService.MemTranslationStruct();
            }
            input.ReadMessage(memTranslation_);
            break;
          }
          case 42: {
            Owerid = input.ReadString();
            break;
          }
          case 50: {
            Ower = input.ReadString();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServicePackStruct : pb::IMessage<ServicePackStruct> {
    private static readonly pb::MessageParser<ServicePackStruct> _parser = new pb::MessageParser<ServicePackStruct>(() => new ServicePackStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePackStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct(ServicePackStruct other) : this() {
      servicePackId_ = other.servicePackId_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      priceRMB_ = other.priceRMB_;
      priceUSD_ = other.priceUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      sessionDate_ = other.sessionDate_;
      sessionStartTime_ = other.sessionStartTime_;
      thirdSessionConferenceId_ = other.thirdSessionConferenceId_;
      thirdSessionConferenceName_ = other.thirdSessionConferenceName_;
      sessionAddress_ = other.sessionAddress_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePackStruct Clone() {
      return new ServicePackStruct(this);
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 1;
    private string servicePackId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 2;
    private global::GrpcConferenceContractService.TranslationStruct translation_;
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "PriceRMB" field.</summary>
    public const int PriceRMBFieldNumber = 3;
    private string priceRMB_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceRMB {
      get { return priceRMB_; }
      set {
        priceRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceUSD" field.</summary>
    public const int PriceUSDFieldNumber = 4;
    private string priceUSD_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceUSD {
      get { return priceUSD_; }
      set {
        priceUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 9;
    private string conferenceId_ = "";
    /// <summary>
    ///ConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 10;
    private string conferenceName_ = "";
    /// <summary>
    ///ConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 11;
    private string sessionConferenceId_ = "";
    /// <summary>
    ///SessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 12;
    private string sessionConferenceName_ = "";
    /// <summary>
    ///SessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionDate" field.</summary>
    public const int SessionDateFieldNumber = 13;
    private string sessionDate_ = "";
    /// <summary>
    ///SessionDate
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionDate {
      get { return sessionDate_; }
      set {
        sessionDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionStartTime" field.</summary>
    public const int SessionStartTimeFieldNumber = 14;
    private string sessionStartTime_ = "";
    /// <summary>
    ///SessionStartTime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionStartTime {
      get { return sessionStartTime_; }
      set {
        sessionStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceId" field.</summary>
    public const int ThirdSessionConferenceIdFieldNumber = 15;
    private string thirdSessionConferenceId_ = "";
    /// <summary>
    ///ThirdSessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceId {
      get { return thirdSessionConferenceId_; }
      set {
        thirdSessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ThirdSessionConferenceName" field.</summary>
    public const int ThirdSessionConferenceNameFieldNumber = 16;
    private string thirdSessionConferenceName_ = "";
    /// <summary>
    ///ThirdSessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThirdSessionConferenceName {
      get { return thirdSessionConferenceName_; }
      set {
        thirdSessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionAddress" field.</summary>
    public const int SessionAddressFieldNumber = 17;
    private string sessionAddress_ = "";
    /// <summary>
    ///地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionAddress {
      get { return sessionAddress_; }
      set {
        sessionAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 18;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePackStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePackStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServicePackId != other.ServicePackId) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (PriceRMB != other.PriceRMB) return false;
      if (PriceUSD != other.PriceUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      if (SessionDate != other.SessionDate) return false;
      if (SessionStartTime != other.SessionStartTime) return false;
      if (ThirdSessionConferenceId != other.ThirdSessionConferenceId) return false;
      if (ThirdSessionConferenceName != other.ThirdSessionConferenceName) return false;
      if (SessionAddress != other.SessionAddress) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (PriceRMB.Length != 0) hash ^= PriceRMB.GetHashCode();
      if (PriceUSD.Length != 0) hash ^= PriceUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (SessionDate.Length != 0) hash ^= SessionDate.GetHashCode();
      if (SessionStartTime.Length != 0) hash ^= SessionStartTime.GetHashCode();
      if (ThirdSessionConferenceId.Length != 0) hash ^= ThirdSessionConferenceId.GetHashCode();
      if (ThirdSessionConferenceName.Length != 0) hash ^= ThirdSessionConferenceName.GetHashCode();
      if (SessionAddress.Length != 0) hash ^= SessionAddress.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServicePackId);
      }
      if (translation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Translation);
      }
      if (PriceRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(SessionAddress);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (PriceRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceRMB);
      }
      if (PriceUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (SessionDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionDate);
      }
      if (SessionStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionStartTime);
      }
      if (ThirdSessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceId);
      }
      if (ThirdSessionConferenceName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ThirdSessionConferenceName);
      }
      if (SessionAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SessionAddress);
      }
      if (Year.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePackStruct other) {
      if (other == null) {
        return;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.PriceRMB.Length != 0) {
        PriceRMB = other.PriceRMB;
      }
      if (other.PriceUSD.Length != 0) {
        PriceUSD = other.PriceUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      if (other.SessionDate.Length != 0) {
        SessionDate = other.SessionDate;
      }
      if (other.SessionStartTime.Length != 0) {
        SessionStartTime = other.SessionStartTime;
      }
      if (other.ThirdSessionConferenceId.Length != 0) {
        ThirdSessionConferenceId = other.ThirdSessionConferenceId;
      }
      if (other.ThirdSessionConferenceName.Length != 0) {
        ThirdSessionConferenceName = other.ThirdSessionConferenceName;
      }
      if (other.SessionAddress.Length != 0) {
        SessionAddress = other.SessionAddress;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServicePackId = input.ReadString();
            break;
          }
          case 18: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 26: {
            PriceRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            ConferenceId = input.ReadString();
            break;
          }
          case 82: {
            ConferenceName = input.ReadString();
            break;
          }
          case 90: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 98: {
            SessionConferenceName = input.ReadString();
            break;
          }
          case 106: {
            SessionDate = input.ReadString();
            break;
          }
          case 114: {
            SessionStartTime = input.ReadString();
            break;
          }
          case 122: {
            ThirdSessionConferenceId = input.ReadString();
            break;
          }
          case 130: {
            ThirdSessionConferenceName = input.ReadString();
            break;
          }
          case 138: {
            SessionAddress = input.ReadString();
            break;
          }
          case 146: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityStruct : pb::IMessage<ActivityStruct> {
    private static readonly pb::MessageParser<ActivityStruct> _parser = new pb::MessageParser<ActivityStruct>(() => new ActivityStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct(ActivityStruct other) : this() {
      activityId_ = other.activityId_;
      ActivityName = other.activityName_ != null ? other.ActivityName.Clone() : null;
      sessionConferenceID_ = other.sessionConferenceID_;
      SessionConferenceName = other.sessionConferenceName_ != null ? other.SessionConferenceName.Clone() : null;
      sort_ = other.sort_;
      sessionIDs_ = other.sessionIDs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityStruct Clone() {
      return new ActivityStruct(this);
    }

    /// <summary>Field number for the "ActivityId" field.</summary>
    public const int ActivityIdFieldNumber = 1;
    private string activityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 2;
    private global::GrpcConferenceContractService.TranslationStruct activityName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct ActivityName {
      get { return activityName_; }
      set {
        activityName_ = value;
      }
    }

    /// <summary>Field number for the "SessionConferenceID" field.</summary>
    public const int SessionConferenceIDFieldNumber = 3;
    private string sessionConferenceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceID {
      get { return sessionConferenceID_; }
      set {
        sessionConferenceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 4;
    private global::GrpcConferenceContractService.TranslationStruct sessionConferenceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = value;
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "SessionIDs" field.</summary>
    public const int SessionIDsFieldNumber = 6;
    private string sessionIDs_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionIDs {
      get { return sessionIDs_; }
      set {
        sessionIDs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityId != other.ActivityId) return false;
      if (!object.Equals(ActivityName, other.ActivityName)) return false;
      if (SessionConferenceID != other.SessionConferenceID) return false;
      if (!object.Equals(SessionConferenceName, other.SessionConferenceName)) return false;
      if (Sort != other.Sort) return false;
      if (SessionIDs != other.SessionIDs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (activityName_ != null) hash ^= ActivityName.GetHashCode();
      if (SessionConferenceID.Length != 0) hash ^= SessionConferenceID.GetHashCode();
      if (sessionConferenceName_ != null) hash ^= SessionConferenceName.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (SessionIDs.Length != 0) hash ^= SessionIDs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActivityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityId);
      }
      if (activityName_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SessionConferenceName);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (SessionIDs.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SessionIDs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (activityName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityName);
      }
      if (SessionConferenceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceID);
      }
      if (sessionConferenceName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionConferenceName);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (SessionIDs.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionIDs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityStruct other) {
      if (other == null) {
        return;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.activityName_ != null) {
        if (activityName_ == null) {
          activityName_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        ActivityName.MergeFrom(other.ActivityName);
      }
      if (other.SessionConferenceID.Length != 0) {
        SessionConferenceID = other.SessionConferenceID;
      }
      if (other.sessionConferenceName_ != null) {
        if (sessionConferenceName_ == null) {
          sessionConferenceName_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        SessionConferenceName.MergeFrom(other.SessionConferenceName);
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.SessionIDs.Length != 0) {
        SessionIDs = other.SessionIDs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityId = input.ReadString();
            break;
          }
          case 18: {
            if (activityName_ == null) {
              activityName_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(activityName_);
            break;
          }
          case 26: {
            SessionConferenceID = input.ReadString();
            break;
          }
          case 34: {
            if (sessionConferenceName_ == null) {
              sessionConferenceName_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(sessionConferenceName_);
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            SessionIDs = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CCNumberConfigStruct : pb::IMessage<CCNumberConfigStruct> {
    private static readonly pb::MessageParser<CCNumberConfigStruct> _parser = new pb::MessageParser<CCNumberConfigStruct>(() => new CCNumberConfigStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CCNumberConfigStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct(CCNumberConfigStruct other) : this() {
      id_ = other.id_;
      prefix_ = other.prefix_;
      year_ = other.year_;
      cNano_ = other.cNano_;
      count_ = other.count_;
      status_ = other.status_;
      isDelete_ = other.isDelete_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CCNumberConfigStruct Clone() {
      return new CCNumberConfigStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Prefix" field.</summary>
    public const int PrefixFieldNumber = 2;
    private string prefix_ = "";
    /// <summary>
    ///前缀
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prefix {
      get { return prefix_; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 3;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CNano" field.</summary>
    public const int CNanoFieldNumber = 4;
    private string cNano_ = "";
    /// <summary>
    ///合同规则英文简称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CNano {
      get { return cNano_; }
      set {
        cNano_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 5;
    private int count_;
    /// <summary>
    ///合同计数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 6;
    private int status_;
    /// <summary>
    ///合同规则使用状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 7;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 8;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 9;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CCNumberConfigStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CCNumberConfigStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Prefix != other.Prefix) return false;
      if (Year != other.Year) return false;
      if (CNano != other.CNano) return false;
      if (Count != other.Count) return false;
      if (Status != other.Status) return false;
      if (IsDelete != other.IsDelete) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (CNano.Length != 0) hash ^= CNano.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Prefix.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Prefix);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Year);
      }
      if (CNano.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CNano);
      }
      if (Count != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Count);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (IsDelete != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsDelete);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Prefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (CNano.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CNano);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CCNumberConfigStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Prefix.Length != 0) {
        Prefix = other.Prefix;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.CNano.Length != 0) {
        CNano = other.CNano;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Prefix = input.ReadString();
            break;
          }
          case 26: {
            Year = input.ReadString();
            break;
          }
          case 34: {
            CNano = input.ReadString();
            break;
          }
          case 40: {
            Count = input.ReadInt32();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 56: {
            IsDelete = input.ReadBool();
            break;
          }
          case 66: {
            ConferenceId = input.ReadString();
            break;
          }
          case 74: {
            ConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractTypeStruct : pb::IMessage<ContractTypeStruct> {
    private static readonly pb::MessageParser<ContractTypeStruct> _parser = new pb::MessageParser<ContractTypeStruct>(() => new ContractTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct(ContractTypeStruct other) : this() {
      contractTypeId_ = other.contractTypeId_;
      sort_ = other.sort_;
      Translation = other.translation_ != null ? other.Translation.Clone() : null;
      cTypeCode_ = other.cTypeCode_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      isSpeaker_ = other.isSpeaker_;
      isGive_ = other.isGive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTypeStruct Clone() {
      return new ContractTypeStruct(this);
    }

    /// <summary>Field number for the "ContractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 1;
    private string contractTypeId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sort" field.</summary>
    public const int SortFieldNumber = 2;
    private int sort_;
    /// <summary>
    ///排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "Translation" field.</summary>
    public const int TranslationFieldNumber = 3;
    private global::GrpcConferenceContractService.TranslationStruct translation_;
    /// <summary>
    ///合同类别名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.TranslationStruct Translation {
      get { return translation_; }
      set {
        translation_ = value;
      }
    }

    /// <summary>Field number for the "CTypeCode" field.</summary>
    public const int CTypeCodeFieldNumber = 4;
    private string cTypeCode_ = "";
    /// <summary>
    ///合同类别Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CTypeCode {
      get { return cTypeCode_; }
      set {
        cTypeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsSpeaker" field.</summary>
    public const int IsSpeakerFieldNumber = 9;
    private bool isSpeaker_;
    /// <summary>
    ///是否是演讲人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpeaker {
      get { return isSpeaker_; }
      set {
        isSpeaker_ = value;
      }
    }

    /// <summary>Field number for the "IsGive" field.</summary>
    public const int IsGiveFieldNumber = 10;
    private bool isGive_;
    /// <summary>
    ///是否赠送
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGive {
      get { return isGive_; }
      set {
        isGive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractTypeId != other.ContractTypeId) return false;
      if (Sort != other.Sort) return false;
      if (!object.Equals(Translation, other.Translation)) return false;
      if (CTypeCode != other.CTypeCode) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (IsSpeaker != other.IsSpeaker) return false;
      if (IsGive != other.IsGive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractTypeId.Length != 0) hash ^= ContractTypeId.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (translation_ != null) hash ^= Translation.GetHashCode();
      if (CTypeCode.Length != 0) hash ^= CTypeCode.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (IsSpeaker != false) hash ^= IsSpeaker.GetHashCode();
      if (IsGive != false) hash ^= IsGive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractTypeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractTypeId);
      }
      if (Sort != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sort);
      }
      if (translation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Translation);
      }
      if (CTypeCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CTypeCode);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (IsSpeaker != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsSpeaker);
      }
      if (IsGive != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsGive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractTypeId);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (translation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Translation);
      }
      if (CTypeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CTypeCode);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (IsSpeaker != false) {
        size += 1 + 1;
      }
      if (IsGive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractTypeId.Length != 0) {
        ContractTypeId = other.ContractTypeId;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.translation_ != null) {
        if (translation_ == null) {
          translation_ = new global::GrpcConferenceContractService.TranslationStruct();
        }
        Translation.MergeFrom(other.Translation);
      }
      if (other.CTypeCode.Length != 0) {
        CTypeCode = other.CTypeCode;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.IsSpeaker != false) {
        IsSpeaker = other.IsSpeaker;
      }
      if (other.IsGive != false) {
        IsGive = other.IsGive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractTypeId = input.ReadString();
            break;
          }
          case 16: {
            Sort = input.ReadInt32();
            break;
          }
          case 26: {
            if (translation_ == null) {
              translation_ = new global::GrpcConferenceContractService.TranslationStruct();
            }
            input.ReadMessage(translation_);
            break;
          }
          case 34: {
            CTypeCode = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 72: {
            IsSpeaker = input.ReadBool();
            break;
          }
          case 80: {
            IsGive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountListStruct : pb::IMessage<DelegateServicePackDiscountListStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountListStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountListStruct>(() => new DelegateServicePackDiscountListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct(DelegateServicePackDiscountListStruct other) : this() {
      discountId_ = other.discountId_;
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountListStruct Clone() {
      return new DelegateServicePackDiscountListStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 2;
    private global::GrpcConferenceContractService.CompanyContractStruct companyContract_;
    /// <summary>
    ///CompanyContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (companyContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompanyContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountListStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractListStruct : pb::IMessage<DelegateServicePackDiscountForConferenceContractListStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct>(() => new DelegateServicePackDiscountForConferenceContractListStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractListStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct(DelegateServicePackDiscountForConferenceContractListStruct other) : this() {
      discountId_ = other.discountId_;
      ConferenceContract = other.conferenceContract_ != null ? other.ConferenceContract.Clone() : null;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractListStruct Clone() {
      return new DelegateServicePackDiscountForConferenceContractListStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContract" field.</summary>
    public const int ConferenceContractFieldNumber = 2;
    private global::GrpcConferenceContractService.ConferenceContractStruct conferenceContract_;
    /// <summary>
    ///ConferenceContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ConferenceContractStruct ConferenceContract {
      get { return conferenceContract_; }
      set {
        conferenceContract_ = value;
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractListStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractListStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (!object.Equals(ConferenceContract, other.ConferenceContract)) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (conferenceContract_ != null) hash ^= ConferenceContract.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (conferenceContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConferenceContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (conferenceContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConferenceContract);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractListStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.conferenceContract_ != null) {
        if (conferenceContract_ == null) {
          conferenceContract_ = new global::GrpcConferenceContractService.ConferenceContractStruct();
        }
        ConferenceContract.MergeFrom(other.ConferenceContract);
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            if (conferenceContract_ == null) {
              conferenceContract_ = new global::GrpcConferenceContractService.ConferenceContractStruct();
            }
            input.ReadMessage(conferenceContract_);
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountForConferenceContractStruct : pb::IMessage<DelegateServicePackDiscountForConferenceContractStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct>(() => new DelegateServicePackDiscountForConferenceContractStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountForConferenceContractStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct(DelegateServicePackDiscountForConferenceContractStruct other) : this() {
      discountId_ = other.discountId_;
      conferenceContractId_ = other.conferenceContractId_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountForConferenceContractStruct Clone() {
      return new DelegateServicePackDiscountForConferenceContractStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceContractId" field.</summary>
    public const int ConferenceContractIdFieldNumber = 2;
    private string conferenceContractId_ = "";
    /// <summary>
    ///ConferenceContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceContractId {
      get { return conferenceContractId_; }
      set {
        conferenceContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountForConferenceContractStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountForConferenceContractStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (ConferenceContractId != other.ConferenceContractId) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (ConferenceContractId.Length != 0) hash ^= ConferenceContractId.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (ConferenceContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConferenceContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (ConferenceContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountForConferenceContractStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.ConferenceContractId.Length != 0) {
        ConferenceContractId = other.ConferenceContractId;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            ConferenceContractId = input.ReadString();
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegateServicePackDiscountStruct : pb::IMessage<DelegateServicePackDiscountStruct> {
    private static readonly pb::MessageParser<DelegateServicePackDiscountStruct> _parser = new pb::MessageParser<DelegateServicePackDiscountStruct>(() => new DelegateServicePackDiscountStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegateServicePackDiscountStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct(DelegateServicePackDiscountStruct other) : this() {
      discountId_ = other.discountId_;
      contractId_ = other.contractId_;
      priceAfterDiscountRMB_ = other.priceAfterDiscountRMB_;
      priceAfterDiscountUSD_ = other.priceAfterDiscountUSD_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      year_ = other.year_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegateServicePackDiscountStruct Clone() {
      return new DelegateServicePackDiscountStruct(this);
    }

    /// <summary>Field number for the "DiscountId" field.</summary>
    public const int DiscountIdFieldNumber = 1;
    private string discountId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiscountId {
      get { return discountId_; }
      set {
        discountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 2;
    private string contractId_ = "";
    /// <summary>
    ///ContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountRMB" field.</summary>
    public const int PriceAfterDiscountRMBFieldNumber = 3;
    private string priceAfterDiscountRMB_ = "";
    /// <summary>
    ///人民币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountRMB {
      get { return priceAfterDiscountRMB_; }
      set {
        priceAfterDiscountRMB_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PriceAfterDiscountUSD" field.</summary>
    public const int PriceAfterDiscountUSDFieldNumber = 4;
    private string priceAfterDiscountUSD_ = "";
    /// <summary>
    ///美金
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriceAfterDiscountUSD {
      get { return priceAfterDiscountUSD_; }
      set {
        priceAfterDiscountUSD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 5;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 6;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 7;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 8;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegateServicePackDiscountStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegateServicePackDiscountStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DiscountId != other.DiscountId) return false;
      if (ContractId != other.ContractId) return false;
      if (PriceAfterDiscountRMB != other.PriceAfterDiscountRMB) return false;
      if (PriceAfterDiscountUSD != other.PriceAfterDiscountUSD) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (Year != other.Year) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DiscountId.Length != 0) hash ^= DiscountId.GetHashCode();
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (PriceAfterDiscountRMB.Length != 0) hash ^= PriceAfterDiscountRMB.GetHashCode();
      if (PriceAfterDiscountUSD.Length != 0) hash ^= PriceAfterDiscountUSD.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DiscountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DiscountId);
      }
      if (ContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ModefieldBy);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DiscountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscountId);
      }
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (PriceAfterDiscountRMB.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountRMB);
      }
      if (PriceAfterDiscountUSD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriceAfterDiscountUSD);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegateServicePackDiscountStruct other) {
      if (other == null) {
        return;
      }
      if (other.DiscountId.Length != 0) {
        DiscountId = other.DiscountId;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.PriceAfterDiscountRMB.Length != 0) {
        PriceAfterDiscountRMB = other.PriceAfterDiscountRMB;
      }
      if (other.PriceAfterDiscountUSD.Length != 0) {
        PriceAfterDiscountUSD = other.PriceAfterDiscountUSD;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DiscountId = input.ReadString();
            break;
          }
          case 18: {
            ContractId = input.ReadString();
            break;
          }
          case 26: {
            PriceAfterDiscountRMB = input.ReadString();
            break;
          }
          case 34: {
            PriceAfterDiscountUSD = input.ReadString();
            break;
          }
          case 42: {
            CreatedOn = input.ReadString();
            break;
          }
          case 50: {
            CreatedBy = input.ReadString();
            break;
          }
          case 58: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 66: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TranslationStruct : pb::IMessage<TranslationStruct> {
    private static readonly pb::MessageParser<TranslationStruct> _parser = new pb::MessageParser<TranslationStruct>(() => new TranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct(TranslationStruct other) : this() {
      cN_ = other.cN_;
      eN_ = other.eN_;
      jP_ = other.jP_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TranslationStruct Clone() {
      return new TranslationStruct(this);
    }

    /// <summary>Field number for the "CN" field.</summary>
    public const int CNFieldNumber = 1;
    private string cN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CN {
      get { return cN_; }
      set {
        cN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EN" field.</summary>
    public const int ENFieldNumber = 2;
    private string eN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EN {
      get { return eN_; }
      set {
        eN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "JP" field.</summary>
    public const int JPFieldNumber = 3;
    private string jP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JP {
      get { return jP_; }
      set {
        jP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CN != other.CN) return false;
      if (EN != other.EN) return false;
      if (JP != other.JP) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CN.Length != 0) hash ^= CN.GetHashCode();
      if (EN.Length != 0) hash ^= EN.GetHashCode();
      if (JP.Length != 0) hash ^= JP.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CN);
      }
      if (EN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EN);
      }
      if (JP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JP);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CN);
      }
      if (EN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EN);
      }
      if (JP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JP);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.CN.Length != 0) {
        CN = other.CN;
      }
      if (other.EN.Length != 0) {
        EN = other.EN;
      }
      if (other.JP.Length != 0) {
        JP = other.JP;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CN = input.ReadString();
            break;
          }
          case 18: {
            EN = input.ReadString();
            break;
          }
          case 26: {
            JP = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComNameTranslationStruct : pb::IMessage<ComNameTranslationStruct> {
    private static readonly pb::MessageParser<ComNameTranslationStruct> _parser = new pb::MessageParser<ComNameTranslationStruct>(() => new ComNameTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComNameTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct(ComNameTranslationStruct other) : this() {
      companyCN_ = other.companyCN_;
      companyEN_ = other.companyEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComNameTranslationStruct Clone() {
      return new ComNameTranslationStruct(this);
    }

    /// <summary>Field number for the "CompanyCN" field.</summary>
    public const int CompanyCNFieldNumber = 1;
    private string companyCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyCN {
      get { return companyCN_; }
      set {
        companyCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyEN" field.</summary>
    public const int CompanyENFieldNumber = 2;
    private string companyEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyEN {
      get { return companyEN_; }
      set {
        companyEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComNameTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComNameTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyCN != other.CompanyCN) return false;
      if (CompanyEN != other.CompanyEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyCN.Length != 0) hash ^= CompanyCN.GetHashCode();
      if (CompanyEN.Length != 0) hash ^= CompanyEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyCN);
      }
      if (CompanyEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyCN);
      }
      if (CompanyEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComNameTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyCN.Length != 0) {
        CompanyCN = other.CompanyCN;
      }
      if (other.CompanyEN.Length != 0) {
        CompanyEN = other.CompanyEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyCN = input.ReadString();
            break;
          }
          case 18: {
            CompanyEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressTranslationStruct : pb::IMessage<AddressTranslationStruct> {
    private static readonly pb::MessageParser<AddressTranslationStruct> _parser = new pb::MessageParser<AddressTranslationStruct>(() => new AddressTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct(AddressTranslationStruct other) : this() {
      addressCN_ = other.addressCN_;
      addressEN_ = other.addressEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressTranslationStruct Clone() {
      return new AddressTranslationStruct(this);
    }

    /// <summary>Field number for the "AddressCN" field.</summary>
    public const int AddressCNFieldNumber = 1;
    private string addressCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressCN {
      get { return addressCN_; }
      set {
        addressCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressEN" field.</summary>
    public const int AddressENFieldNumber = 2;
    private string addressEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressEN {
      get { return addressEN_; }
      set {
        addressEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddressCN != other.AddressCN) return false;
      if (AddressEN != other.AddressEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AddressCN.Length != 0) hash ^= AddressCN.GetHashCode();
      if (AddressEN.Length != 0) hash ^= AddressEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AddressCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AddressCN);
      }
      if (AddressEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AddressEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AddressCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressCN);
      }
      if (AddressEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.AddressCN.Length != 0) {
        AddressCN = other.AddressCN;
      }
      if (other.AddressEN.Length != 0) {
        AddressEN = other.AddressEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AddressCN = input.ReadString();
            break;
          }
          case 18: {
            AddressEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MemTranslationStruct : pb::IMessage<MemTranslationStruct> {
    private static readonly pb::MessageParser<MemTranslationStruct> _parser = new pb::MessageParser<MemTranslationStruct>(() => new MemTranslationStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MemTranslationStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct(MemTranslationStruct other) : this() {
      memberCN_ = other.memberCN_;
      memberEN_ = other.memberEN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemTranslationStruct Clone() {
      return new MemTranslationStruct(this);
    }

    /// <summary>Field number for the "MemberCN" field.</summary>
    public const int MemberCNFieldNumber = 1;
    private string memberCN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberCN {
      get { return memberCN_; }
      set {
        memberCN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberEN" field.</summary>
    public const int MemberENFieldNumber = 2;
    private string memberEN_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberEN {
      get { return memberEN_; }
      set {
        memberEN_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MemTranslationStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MemTranslationStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberCN != other.MemberCN) return false;
      if (MemberEN != other.MemberEN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberCN.Length != 0) hash ^= MemberCN.GetHashCode();
      if (MemberEN.Length != 0) hash ^= MemberEN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberCN.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MemberCN);
      }
      if (MemberEN.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberEN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberCN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberCN);
      }
      if (MemberEN.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberEN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MemTranslationStruct other) {
      if (other == null) {
        return;
      }
      if (other.MemberCN.Length != 0) {
        MemberCN = other.MemberCN;
      }
      if (other.MemberEN.Length != 0) {
        MemberEN = other.MemberEN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MemberCN = input.ReadString();
            break;
          }
          case 18: {
            MemberEN = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyRequest : pb::IMessage<ModifyRequest> {
    private static readonly pb::MessageParser<ModifyRequest> _parser = new pb::MessageParser<ModifyRequest>(() => new ModifyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest(ModifyRequest other) : this() {
      id_ = other.id_;
      isCheckIn_ = other.isCheckIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyRequest Clone() {
      return new ModifyRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 2;
    private bool isCheckIn_;
    /// <summary>
    ///是否报道
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IsCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            IsCheckIn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReply : pb::IMessage<ModifyReply> {
    private static readonly pb::MessageParser<ModifyReply> _parser = new pb::MessageParser<ModifyReply>(() => new ModifyReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply(ModifyReply other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReply Clone() {
      return new ModifyReply(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///是否成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    /// <summary>
    ///成功的条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    /// <summary>
    ///返回的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReply other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForConferenceOnsite : pb::IMessage<ModifyReplyForConferenceOnsite> {
    private static readonly pb::MessageParser<ModifyReplyForConferenceOnsite> _parser = new pb::MessageParser<ModifyReplyForConferenceOnsite>(() => new ModifyReplyForConferenceOnsite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForConferenceOnsite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite(ModifyReplyForConferenceOnsite other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ConferenceOnsite = other.conferenceOnsite_ != null ? other.ConferenceOnsite.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForConferenceOnsite Clone() {
      return new ModifyReplyForConferenceOnsite(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    /// <summary>
    ///是否成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    /// <summary>
    ///成功的条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    /// <summary>
    ///返回的消息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceOnsite" field.</summary>
    public const int ConferenceOnsiteFieldNumber = 4;
    private global::GrpcConferenceContractService.ConferenceOnsiteStruct conferenceOnsite_;
    /// <summary>
    ///ConferenceOnsite对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.ConferenceOnsiteStruct ConferenceOnsite {
      get { return conferenceOnsite_; }
      set {
        conferenceOnsite_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForConferenceOnsite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForConferenceOnsite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (!object.Equals(ConferenceOnsite, other.ConferenceOnsite)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (conferenceOnsite_ != null) hash ^= ConferenceOnsite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (conferenceOnsite_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ConferenceOnsite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (conferenceOnsite_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConferenceOnsite);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForConferenceOnsite other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.conferenceOnsite_ != null) {
        if (conferenceOnsite_ == null) {
          conferenceOnsite_ = new global::GrpcConferenceContractService.ConferenceOnsiteStruct();
        }
        ConferenceOnsite.MergeFrom(other.ConferenceOnsite);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            if (conferenceOnsite_ == null) {
              conferenceOnsite_ = new global::GrpcConferenceContractService.ConferenceOnsiteStruct();
            }
            input.ReadMessage(conferenceOnsite_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResultReply : pb::IMessage<ResultReply> {
    private static readonly pb::MessageParser<ResultReply> _parser = new pb::MessageParser<ResultReply>(() => new ResultReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply(ResultReply other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultReply Clone() {
      return new ResultReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicForDicList : pb::IMessage<ContractStatusDicForDicList> {
    private static readonly pb::MessageParser<ContractStatusDicForDicList> _parser = new pb::MessageParser<ContractStatusDicForDicList>(() => new ContractStatusDicForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList(ContractStatusDicForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicForDicList Clone() {
      return new ContractStatusDicForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ContractStatusDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ContractStatusDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicForDicList : pb::IMessage<RemarkDicForDicList> {
    private static readonly pb::MessageParser<RemarkDicForDicList> _parser = new pb::MessageParser<RemarkDicForDicList>(() => new RemarkDicForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList(RemarkDicForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicForDicList Clone() {
      return new RemarkDicForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.RemarkDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.RemarkDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagTypeForDicList : pb::IMessage<TagTypeForDicList> {
    private static readonly pb::MessageParser<TagTypeForDicList> _parser = new pb::MessageParser<TagTypeForDicList>(() => new TagTypeForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagTypeForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList(TagTypeForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeForDicList Clone() {
      return new TagTypeForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.TagTypeStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.TagTypeStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.TagTypeStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.TagTypeStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.TagTypeStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagTypeForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagTypeForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagTypeForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearConfigForDicList : pb::IMessage<YearConfigForDicList> {
    private static readonly pb::MessageParser<YearConfigForDicList> _parser = new pb::MessageParser<YearConfigForDicList>(() => new YearConfigForDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearConfigForDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList(YearConfigForDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigForDicList Clone() {
      return new YearConfigForDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.YearConfigStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.YearConfigStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.YearConfigStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.YearConfigStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.YearConfigStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearConfigForDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearConfigForDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearConfigForDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicList : pb::IMessage<ContractStatusDicList> {
    private static readonly pb::MessageParser<ContractStatusDicList> _parser = new pb::MessageParser<ContractStatusDicList>(() => new ContractStatusDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList(ContractStatusDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicList Clone() {
      return new ContractStatusDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ContractStatusDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ContractStatusDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ContractStatusDicStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicList : pb::IMessage<RemarkDicList> {
    private static readonly pb::MessageParser<RemarkDicList> _parser = new pb::MessageParser<RemarkDicList>(() => new RemarkDicList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList(RemarkDicList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicList Clone() {
      return new RemarkDicList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.RemarkDicStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.RemarkDicStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.RemarkDicStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusDicStruct : pb::IMessage<ContractStatusDicStruct> {
    private static readonly pb::MessageParser<ContractStatusDicStruct> _parser = new pb::MessageParser<ContractStatusDicStruct>(() => new ContractStatusDicStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusDicStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct(ContractStatusDicStruct other) : this() {
      id_ = other.id_;
      statusName_ = other.statusName_;
      statusCode_ = other.statusCode_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusDicStruct Clone() {
      return new ContractStatusDicStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusName" field.</summary>
    public const int StatusNameFieldNumber = 2;
    private string statusName_ = "";
    /// <summary>
    ///状态名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusName {
      get { return statusName_; }
      set {
        statusName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StatusCode" field.</summary>
    public const int StatusCodeFieldNumber = 3;
    private string statusCode_ = "";
    /// <summary>
    ///状态Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 4;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 6;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 7;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusDicStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusDicStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StatusName != other.StatusName) return false;
      if (StatusCode != other.StatusCode) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StatusName.Length != 0) hash ^= StatusName.GetHashCode();
      if (StatusCode.Length != 0) hash ^= StatusCode.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (StatusName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StatusName);
      }
      if (StatusCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StatusCode);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (StatusName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusName);
      }
      if (StatusCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusCode);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusDicStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StatusName.Length != 0) {
        StatusName = other.StatusName;
      }
      if (other.StatusCode.Length != 0) {
        StatusCode = other.StatusCode;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            StatusName = input.ReadString();
            break;
          }
          case 26: {
            StatusCode = input.ReadString();
            break;
          }
          case 34: {
            CreatedOn = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 58: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemarkDicStruct : pb::IMessage<RemarkDicStruct> {
    private static readonly pb::MessageParser<RemarkDicStruct> _parser = new pb::MessageParser<RemarkDicStruct>(() => new RemarkDicStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemarkDicStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct(RemarkDicStruct other) : this() {
      id_ = other.id_;
      contentCn_ = other.contentCn_;
      contentEn_ = other.contentEn_;
      contentJp_ = other.contentJp_;
      contentCode_ = other.contentCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemarkDicStruct Clone() {
      return new RemarkDicStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentCn" field.</summary>
    public const int ContentCnFieldNumber = 2;
    private string contentCn_ = "";
    /// <summary>
    ///说明内容中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentCn {
      get { return contentCn_; }
      set {
        contentCn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentEn" field.</summary>
    public const int ContentEnFieldNumber = 3;
    private string contentEn_ = "";
    /// <summary>
    ///说明内容英文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentEn {
      get { return contentEn_; }
      set {
        contentEn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentJp" field.</summary>
    public const int ContentJpFieldNumber = 4;
    private string contentJp_ = "";
    /// <summary>
    ///说明内容日文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentJp {
      get { return contentJp_; }
      set {
        contentJp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContentCode" field.</summary>
    public const int ContentCodeFieldNumber = 5;
    private string contentCode_ = "";
    /// <summary>
    ///说明内容Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContentCode {
      get { return contentCode_; }
      set {
        contentCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemarkDicStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemarkDicStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContentCn != other.ContentCn) return false;
      if (ContentEn != other.ContentEn) return false;
      if (ContentJp != other.ContentJp) return false;
      if (ContentCode != other.ContentCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ContentCn.Length != 0) hash ^= ContentCn.GetHashCode();
      if (ContentEn.Length != 0) hash ^= ContentEn.GetHashCode();
      if (ContentJp.Length != 0) hash ^= ContentJp.GetHashCode();
      if (ContentCode.Length != 0) hash ^= ContentCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ContentCn.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContentCn);
      }
      if (ContentEn.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContentEn);
      }
      if (ContentJp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContentJp);
      }
      if (ContentCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContentCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ContentCn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentCn);
      }
      if (ContentEn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentEn);
      }
      if (ContentJp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentJp);
      }
      if (ContentCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContentCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemarkDicStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ContentCn.Length != 0) {
        ContentCn = other.ContentCn;
      }
      if (other.ContentEn.Length != 0) {
        ContentEn = other.ContentEn;
      }
      if (other.ContentJp.Length != 0) {
        ContentJp = other.ContentJp;
      }
      if (other.ContentCode.Length != 0) {
        ContentCode = other.ContentCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ContentCn = input.ReadString();
            break;
          }
          case 26: {
            ContentEn = input.ReadString();
            break;
          }
          case 34: {
            ContentJp = input.ReadString();
            break;
          }
          case 42: {
            ContentCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyReplyForCreateOther : pb::IMessage<ModifyReplyForCreateOther> {
    private static readonly pb::MessageParser<ModifyReplyForCreateOther> _parser = new pb::MessageParser<ModifyReplyForCreateOther>(() => new ModifyReplyForCreateOther());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyReplyForCreateOther> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther(ModifyReplyForCreateOther other) : this() {
      success_ = other.success_;
      modifiedCount_ = other.modifiedCount_;
      msg_ = other.msg_;
      ext1_ = other.ext1_;
      ext2_ = other.ext2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyReplyForCreateOther Clone() {
      return new ModifyReplyForCreateOther(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "modified_count" field.</summary>
    public const int ModifiedCountFieldNumber = 2;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 3;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext1" field.</summary>
    public const int Ext1FieldNumber = 4;
    private string ext1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext1 {
      get { return ext1_; }
      set {
        ext1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ext2" field.</summary>
    public const int Ext2FieldNumber = 5;
    private string ext2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ext2 {
      get { return ext2_; }
      set {
        ext2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyReplyForCreateOther);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyReplyForCreateOther other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (Msg != other.Msg) return false;
      if (Ext1 != other.Ext1) return false;
      if (Ext2 != other.Ext2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (Ext1.Length != 0) hash ^= Ext1.GetHashCode();
      if (Ext2.Length != 0) hash ^= Ext2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ModifiedCount);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Msg);
      }
      if (Ext1.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ext1);
      }
      if (Ext2.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ext2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (Ext1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext1);
      }
      if (Ext2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ext2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyReplyForCreateOther other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.Ext1.Length != 0) {
        Ext1 = other.Ext1;
      }
      if (other.Ext2.Length != 0) {
        Ext2 = other.Ext2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 26: {
            Msg = input.ReadString();
            break;
          }
          case 34: {
            Ext1 = input.ReadString();
            break;
          }
          case 42: {
            Ext2 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractActivityMapStruct : pb::IMessage<PersonContractActivityMapStruct> {
    private static readonly pb::MessageParser<PersonContractActivityMapStruct> _parser = new pb::MessageParser<PersonContractActivityMapStruct>(() => new PersonContractActivityMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractActivityMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct(PersonContractActivityMapStruct other) : this() {
      mapId_ = other.mapId_;
      memberPK_ = other.memberPK_;
      activityId_ = other.activityId_;
      activityName_ = other.activityName_;
      year_ = other.year_;
      isConfirm_ = other.isConfirm_;
      isCheck_ = other.isCheck_;
      personContractId_ = other.personContractId_;
      sessionConferenceId_ = other.sessionConferenceId_;
      sessionConferenceName_ = other.sessionConferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractActivityMapStruct Clone() {
      return new PersonContractActivityMapStruct(this);
    }

    /// <summary>Field number for the "MapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 2;
    private string memberPK_ = "";
    /// <summary>
    ///MemberPK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityId" field.</summary>
    public const int ActivityIdFieldNumber = 3;
    private string activityId_ = "";
    /// <summary>
    ///ActivityId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityId {
      get { return activityId_; }
      set {
        activityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ActivityName" field.</summary>
    public const int ActivityNameFieldNumber = 4;
    private string activityName_ = "";
    /// <summary>
    ///ActivityName活动名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ActivityName {
      get { return activityName_; }
      set {
        activityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 5;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 6;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "IsCheck" field.</summary>
    public const int IsCheckFieldNumber = 7;
    private bool isCheck_;
    /// <summary>
    ///是否选中
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheck {
      get { return isCheck_; }
      set {
        isCheck_ = value;
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 8;
    private string personContractId_ = "";
    /// <summary>
    ///PersonContractId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 9;
    private string sessionConferenceId_ = "";
    /// <summary>
    ///SessionConferenceId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceName" field.</summary>
    public const int SessionConferenceNameFieldNumber = 10;
    private string sessionConferenceName_ = "";
    /// <summary>
    ///SessionConferenceName
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceName {
      get { return sessionConferenceName_; }
      set {
        sessionConferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractActivityMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractActivityMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (ActivityId != other.ActivityId) return false;
      if (ActivityName != other.ActivityName) return false;
      if (Year != other.Year) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (IsCheck != other.IsCheck) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (SessionConferenceName != other.SessionConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (ActivityId.Length != 0) hash ^= ActivityId.GetHashCode();
      if (ActivityName.Length != 0) hash ^= ActivityName.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (IsCheck != false) hash ^= IsCheck.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (SessionConferenceName.Length != 0) hash ^= SessionConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MemberPK);
      }
      if (ActivityId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityId);
      }
      if (ActivityName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ActivityName);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Year);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsConfirm);
      }
      if (IsCheck != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCheck);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PersonContractId);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SessionConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (ActivityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityId);
      }
      if (ActivityName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityName);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (IsCheck != false) {
        size += 1 + 1;
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (SessionConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractActivityMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.ActivityId.Length != 0) {
        ActivityId = other.ActivityId;
      }
      if (other.ActivityName.Length != 0) {
        ActivityName = other.ActivityName;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.IsCheck != false) {
        IsCheck = other.IsCheck;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.SessionConferenceName.Length != 0) {
        SessionConferenceName = other.SessionConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            MemberPK = input.ReadString();
            break;
          }
          case 26: {
            ActivityId = input.ReadString();
            break;
          }
          case 34: {
            ActivityName = input.ReadString();
            break;
          }
          case 42: {
            Year = input.ReadString();
            break;
          }
          case 48: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 56: {
            IsCheck = input.ReadBool();
            break;
          }
          case 66: {
            PersonContractId = input.ReadString();
            break;
          }
          case 74: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 82: {
            SessionConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapStruct : pb::IMessage<CompanyServicePackMapStruct> {
    private static readonly pb::MessageParser<CompanyServicePackMapStruct> _parser = new pb::MessageParser<CompanyServicePackMapStruct>(() => new CompanyServicePackMapStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct(CompanyServicePackMapStruct other) : this() {
      id_ = other.id_;
      companyServicePackId_ = other.companyServicePackId_;
      servicePackId_ = other.servicePackId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapStruct Clone() {
      return new CompanyServicePackMapStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 3;
    private string servicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ServicePackId != other.ServicePackId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            ServicePackId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CompanyServicePackMapVMStruct : pb::IMessage<CompanyServicePackMapVMStruct> {
    private static readonly pb::MessageParser<CompanyServicePackMapVMStruct> _parser = new pb::MessageParser<CompanyServicePackMapVMStruct>(() => new CompanyServicePackMapVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompanyServicePackMapVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct(CompanyServicePackMapVMStruct other) : this() {
      mapId_ = other.mapId_;
      companyServicePackId_ = other.companyServicePackId_;
      servicePackId_ = other.servicePackId_;
      conferenceId_ = other.conferenceId_;
      conferenceName_ = other.conferenceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompanyServicePackMapVMStruct Clone() {
      return new CompanyServicePackMapVMStruct(this);
    }

    /// <summary>Field number for the "MapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 2;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServicePackId" field.</summary>
    public const int ServicePackIdFieldNumber = 3;
    private string servicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackId {
      get { return servicePackId_; }
      set {
        servicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceId" field.</summary>
    public const int ConferenceIdFieldNumber = 4;
    private string conferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceId {
      get { return conferenceId_; }
      set {
        conferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConferenceName" field.</summary>
    public const int ConferenceNameFieldNumber = 5;
    private string conferenceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConferenceName {
      get { return conferenceName_; }
      set {
        conferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompanyServicePackMapVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompanyServicePackMapVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (ServicePackId != other.ServicePackId) return false;
      if (ConferenceId != other.ConferenceId) return false;
      if (ConferenceName != other.ConferenceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (ServicePackId.Length != 0) hash ^= ServicePackId.GetHashCode();
      if (ConferenceId.Length != 0) hash ^= ConferenceId.GetHashCode();
      if (ConferenceName.Length != 0) hash ^= ConferenceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePackId);
      }
      if (ConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ConferenceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (ServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePackId);
      }
      if (ConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceId);
      }
      if (ConferenceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConferenceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompanyServicePackMapVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.ServicePackId.Length != 0) {
        ServicePackId = other.ServicePackId;
      }
      if (other.ConferenceId.Length != 0) {
        ConferenceId = other.ConferenceId;
      }
      if (other.ConferenceName.Length != 0) {
        ConferenceName = other.ConferenceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 26: {
            ServicePackId = input.ReadString();
            break;
          }
          case 34: {
            ConferenceId = input.ReadString();
            break;
          }
          case 42: {
            ConferenceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceList : pb::IMessage<ApplyConferenceList> {
    private static readonly pb::MessageParser<ApplyConferenceList> _parser = new pb::MessageParser<ApplyConferenceList>(() => new ApplyConferenceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList(ApplyConferenceList other) : this() {
      listdata_ = other.listdata_.Clone();
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceList Clone() {
      return new ApplyConferenceList(this);
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ApplyConferenceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcConferenceContractService.ApplyConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct> Listdata {
      get { return listdata_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listdata_.Equals(other.listdata_)) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listdata_.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceList other) {
      if (other == null) {
        return;
      }
      listdata_.Add(other.listdata_);
      if (other.Total != 0) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceStruct : pb::IMessage<ApplyConferenceStruct> {
    private static readonly pb::MessageParser<ApplyConferenceStruct> _parser = new pb::MessageParser<ApplyConferenceStruct>(() => new ApplyConferenceStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct(ApplyConferenceStruct other) : this() {
      id_ = other.id_;
      personContractId_ = other.personContractId_;
      memberPK_ = other.memberPK_;
      sessionConferenceId_ = other.sessionConferenceId_;
      isConfirm_ = other.isConfirm_;
      companyId_ = other.companyId_;
      tagTypeCodes_ = other.tagTypeCodes_;
      remarkTranslation_ = other.remarkTranslation_;
      year_ = other.year_;
      sessionConferenceIds_ = other.sessionConferenceIds_.Clone();
      isParticularConf_ = other.isParticularConf_;
      owerid_ = other.owerid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceStruct Clone() {
      return new ApplyConferenceStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 2;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceId" field.</summary>
    public const int SessionConferenceIdFieldNumber = 4;
    private string sessionConferenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionConferenceId {
      get { return sessionConferenceId_; }
      set {
        sessionConferenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsConfirm" field.</summary>
    public const int IsConfirmFieldNumber = 5;
    private bool isConfirm_;
    /// <summary>
    ///是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsConfirm {
      get { return isConfirm_; }
      set {
        isConfirm_ = value;
      }
    }

    /// <summary>Field number for the "CompanyId" field.</summary>
    public const int CompanyIdFieldNumber = 6;
    private string companyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyId {
      get { return companyId_; }
      set {
        companyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TagTypeCodes" field.</summary>
    public const int TagTypeCodesFieldNumber = 7;
    private string tagTypeCodes_ = "";
    /// <summary>
    ///多个标签Code，用“，”分隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagTypeCodes {
      get { return tagTypeCodes_; }
      set {
        tagTypeCodes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RemarkTranslation" field.</summary>
    public const int RemarkTranslationFieldNumber = 8;
    private string remarkTranslation_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RemarkTranslation {
      get { return remarkTranslation_; }
      set {
        remarkTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 9;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionConferenceIds" field.</summary>
    public const int SessionConferenceIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_sessionConferenceIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> sessionConferenceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///SessionConferenceId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SessionConferenceIds {
      get { return sessionConferenceIds_; }
    }

    /// <summary>Field number for the "IsParticularConf" field.</summary>
    public const int IsParticularConfFieldNumber = 11;
    private bool isParticularConf_;
    /// <summary>
    ///IsParticularConf
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsParticularConf {
      get { return isParticularConf_; }
      set {
        isParticularConf_ = value;
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 12;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (SessionConferenceId != other.SessionConferenceId) return false;
      if (IsConfirm != other.IsConfirm) return false;
      if (CompanyId != other.CompanyId) return false;
      if (TagTypeCodes != other.TagTypeCodes) return false;
      if (RemarkTranslation != other.RemarkTranslation) return false;
      if (Year != other.Year) return false;
      if(!sessionConferenceIds_.Equals(other.sessionConferenceIds_)) return false;
      if (IsParticularConf != other.IsParticularConf) return false;
      if (Owerid != other.Owerid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (SessionConferenceId.Length != 0) hash ^= SessionConferenceId.GetHashCode();
      if (IsConfirm != false) hash ^= IsConfirm.GetHashCode();
      if (CompanyId.Length != 0) hash ^= CompanyId.GetHashCode();
      if (TagTypeCodes.Length != 0) hash ^= TagTypeCodes.GetHashCode();
      if (RemarkTranslation.Length != 0) hash ^= RemarkTranslation.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      hash ^= sessionConferenceIds_.GetHashCode();
      if (IsParticularConf != false) hash ^= IsParticularConf.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SessionConferenceId);
      }
      if (IsConfirm != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsConfirm);
      }
      if (CompanyId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RemarkTranslation);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Year);
      }
      sessionConferenceIds_.WriteTo(output, _repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsParticularConf);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Owerid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (SessionConferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionConferenceId);
      }
      if (IsConfirm != false) {
        size += 1 + 1;
      }
      if (CompanyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyId);
      }
      if (TagTypeCodes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagTypeCodes);
      }
      if (RemarkTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemarkTranslation);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      size += sessionConferenceIds_.CalculateSize(_repeated_sessionConferenceIds_codec);
      if (IsParticularConf != false) {
        size += 1 + 1;
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.SessionConferenceId.Length != 0) {
        SessionConferenceId = other.SessionConferenceId;
      }
      if (other.IsConfirm != false) {
        IsConfirm = other.IsConfirm;
      }
      if (other.CompanyId.Length != 0) {
        CompanyId = other.CompanyId;
      }
      if (other.TagTypeCodes.Length != 0) {
        TagTypeCodes = other.TagTypeCodes;
      }
      if (other.RemarkTranslation.Length != 0) {
        RemarkTranslation = other.RemarkTranslation;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      sessionConferenceIds_.Add(other.sessionConferenceIds_);
      if (other.IsParticularConf != false) {
        IsParticularConf = other.IsParticularConf;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            PersonContractId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            SessionConferenceId = input.ReadString();
            break;
          }
          case 40: {
            IsConfirm = input.ReadBool();
            break;
          }
          case 50: {
            CompanyId = input.ReadString();
            break;
          }
          case 58: {
            TagTypeCodes = input.ReadString();
            break;
          }
          case 66: {
            RemarkTranslation = input.ReadString();
            break;
          }
          case 74: {
            Year = input.ReadString();
            break;
          }
          case 82: {
            sessionConferenceIds_.AddEntriesFrom(input, _repeated_sessionConferenceIds_codec);
            break;
          }
          case 88: {
            IsParticularConf = input.ReadBool();
            break;
          }
          case 98: {
            Owerid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConferenceOnsiteStruct : pb::IMessage<ConferenceOnsiteStruct> {
    private static readonly pb::MessageParser<ConferenceOnsiteStruct> _parser = new pb::MessageParser<ConferenceOnsiteStruct>(() => new ConferenceOnsiteStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConferenceOnsiteStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct(ConferenceOnsiteStruct other) : this() {
      id_ = other.id_;
      contractNumber_ = other.contractNumber_;
      companyName_ = other.companyName_;
      currency_ = other.currency_;
      payType_ = other.payType_;
      credited_ = other.credited_;
      addDate_ = other.addDate_;
      cost_ = other.cost_;
      remark_ = other.remark_;
      contractYear_ = other.contractYear_;
      companyServicePackId_ = other.companyServicePackId_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      userName_ = other.userName_;
      companyServicePackName_ = other.companyServicePackName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConferenceOnsiteStruct Clone() {
      return new ConferenceOnsiteStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ContractNumber" field.</summary>
    public const int ContractNumberFieldNumber = 2;
    private string contractNumber_ = "";
    /// <summary>
    ///现场付款生成的合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNumber {
      get { return contractNumber_; }
      set {
        contractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyName" field.</summary>
    public const int CompanyNameFieldNumber = 3;
    private string companyName_ = "";
    /// <summary>
    ///公司名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 4;
    private string currency_ = "";
    /// <summary>
    ///货币类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PayType" field.</summary>
    public const int PayTypeFieldNumber = 5;
    private string payType_ = "";
    /// <summary>
    ///付款方式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayType {
      get { return payType_; }
      set {
        payType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Credited" field.</summary>
    public const int CreditedFieldNumber = 6;
    private string credited_ = "";
    /// <summary>
    ///入账单位
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Credited {
      get { return credited_; }
      set {
        credited_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddDate" field.</summary>
    public const int AddDateFieldNumber = 7;
    private string addDate_ = "";
    /// <summary>
    ///付款日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddDate {
      get { return addDate_; }
      set {
        addDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cost" field.</summary>
    public const int CostFieldNumber = 8;
    private string cost_ = "";
    /// <summary>
    ///价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cost {
      get { return cost_; }
      set {
        cost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Remark" field.</summary>
    public const int RemarkFieldNumber = 9;
    private string remark_ = "";
    /// <summary>
    ///备注
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ContractYear" field.</summary>
    public const int ContractYearFieldNumber = 10;
    private string contractYear_ = "";
    /// <summary>
    ///合同年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractYear {
      get { return contractYear_; }
      set {
        contractYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 11;
    private string companyServicePackId_ = "";
    /// <summary>
    ///参会套餐id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 12;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 13;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 14;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 15;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 16;
    private string userName_ = "";
    /// <summary>
    ///姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 17;
    private string companyServicePackName_ = "";
    /// <summary>
    ///参会套餐类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConferenceOnsiteStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConferenceOnsiteStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContractNumber != other.ContractNumber) return false;
      if (CompanyName != other.CompanyName) return false;
      if (Currency != other.Currency) return false;
      if (PayType != other.PayType) return false;
      if (Credited != other.Credited) return false;
      if (AddDate != other.AddDate) return false;
      if (Cost != other.Cost) return false;
      if (Remark != other.Remark) return false;
      if (ContractYear != other.ContractYear) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      if (UserName != other.UserName) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ContractNumber.Length != 0) hash ^= ContractNumber.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (PayType.Length != 0) hash ^= PayType.GetHashCode();
      if (Credited.Length != 0) hash ^= Credited.GetHashCode();
      if (AddDate.Length != 0) hash ^= AddDate.GetHashCode();
      if (Cost.Length != 0) hash ^= Cost.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (ContractYear.Length != 0) hash ^= ContractYear.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContractNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyName);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Currency);
      }
      if (PayType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PayType);
      }
      if (Credited.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Credited);
      }
      if (AddDate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AddDate);
      }
      if (Cost.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Cost);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Remark);
      }
      if (ContractYear.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ContractYear);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CompanyServicePackId);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ModefieldBy);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(UserName);
      }
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNumber);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (PayType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayType);
      }
      if (Credited.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Credited);
      }
      if (AddDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddDate);
      }
      if (Cost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cost);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (ContractYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractYear);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (UserName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (CompanyServicePackName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConferenceOnsiteStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ContractNumber.Length != 0) {
        ContractNumber = other.ContractNumber;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.PayType.Length != 0) {
        PayType = other.PayType;
      }
      if (other.Credited.Length != 0) {
        Credited = other.Credited;
      }
      if (other.AddDate.Length != 0) {
        AddDate = other.AddDate;
      }
      if (other.Cost.Length != 0) {
        Cost = other.Cost;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.ContractYear.Length != 0) {
        ContractYear = other.ContractYear;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ContractNumber = input.ReadString();
            break;
          }
          case 26: {
            CompanyName = input.ReadString();
            break;
          }
          case 34: {
            Currency = input.ReadString();
            break;
          }
          case 42: {
            PayType = input.ReadString();
            break;
          }
          case 50: {
            Credited = input.ReadString();
            break;
          }
          case 58: {
            AddDate = input.ReadString();
            break;
          }
          case 66: {
            Cost = input.ReadString();
            break;
          }
          case 74: {
            Remark = input.ReadString();
            break;
          }
          case 82: {
            ContractYear = input.ReadString();
            break;
          }
          case 90: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 98: {
            CreatedOn = input.ReadString();
            break;
          }
          case 106: {
            CreatedBy = input.ReadString();
            break;
          }
          case 114: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 122: {
            ModefieldBy = input.ReadString();
            break;
          }
          case 130: {
            UserName = input.ReadString();
            break;
          }
          case 138: {
            CompanyServicePackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PersonContractAndSessionConferenceIdsStruct : pb::IMessage<PersonContractAndSessionConferenceIdsStruct> {
    private static readonly pb::MessageParser<PersonContractAndSessionConferenceIdsStruct> _parser = new pb::MessageParser<PersonContractAndSessionConferenceIdsStruct>(() => new PersonContractAndSessionConferenceIdsStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PersonContractAndSessionConferenceIdsStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct(PersonContractAndSessionConferenceIdsStruct other) : this() {
      CompanyContract = other.companyContract_ != null ? other.CompanyContract.Clone() : null;
      PersonContract = other.personContract_ != null ? other.PersonContract.Clone() : null;
      sessionConferenceIds_ = other.sessionConferenceIds_.Clone();
      companyServicePackName_ = other.companyServicePackName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PersonContractAndSessionConferenceIdsStruct Clone() {
      return new PersonContractAndSessionConferenceIdsStruct(this);
    }

    /// <summary>Field number for the "CompanyContract" field.</summary>
    public const int CompanyContractFieldNumber = 1;
    private global::GrpcConferenceContractService.CompanyContractStruct companyContract_;
    /// <summary>
    ///CompanyContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyContractStruct CompanyContract {
      get { return companyContract_; }
      set {
        companyContract_ = value;
      }
    }

    /// <summary>Field number for the "PersonContract" field.</summary>
    public const int PersonContractFieldNumber = 2;
    private global::GrpcConferenceContractService.PersonContractStruct personContract_;
    /// <summary>
    ///PersonContract对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.PersonContractStruct PersonContract {
      get { return personContract_; }
      set {
        personContract_ = value;
      }
    }

    /// <summary>Field number for the "SessionConferenceIds" field.</summary>
    public const int SessionConferenceIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_sessionConferenceIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> sessionConferenceIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///SessionConferenceId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SessionConferenceIds {
      get { return sessionConferenceIds_; }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 4;
    private string companyServicePackName_ = "";
    /// <summary>
    ///参会类型名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PersonContractAndSessionConferenceIdsStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PersonContractAndSessionConferenceIdsStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CompanyContract, other.CompanyContract)) return false;
      if (!object.Equals(PersonContract, other.PersonContract)) return false;
      if(!sessionConferenceIds_.Equals(other.sessionConferenceIds_)) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (companyContract_ != null) hash ^= CompanyContract.GetHashCode();
      if (personContract_ != null) hash ^= PersonContract.GetHashCode();
      hash ^= sessionConferenceIds_.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (companyContract_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CompanyContract);
      }
      if (personContract_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PersonContract);
      }
      sessionConferenceIds_.WriteTo(output, _repeated_sessionConferenceIds_codec);
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (companyContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyContract);
      }
      if (personContract_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PersonContract);
      }
      size += sessionConferenceIds_.CalculateSize(_repeated_sessionConferenceIds_codec);
      if (CompanyServicePackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PersonContractAndSessionConferenceIdsStruct other) {
      if (other == null) {
        return;
      }
      if (other.companyContract_ != null) {
        if (companyContract_ == null) {
          companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
        }
        CompanyContract.MergeFrom(other.CompanyContract);
      }
      if (other.personContract_ != null) {
        if (personContract_ == null) {
          personContract_ = new global::GrpcConferenceContractService.PersonContractStruct();
        }
        PersonContract.MergeFrom(other.PersonContract);
      }
      sessionConferenceIds_.Add(other.sessionConferenceIds_);
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (companyContract_ == null) {
              companyContract_ = new global::GrpcConferenceContractService.CompanyContractStruct();
            }
            input.ReadMessage(companyContract_);
            break;
          }
          case 18: {
            if (personContract_ == null) {
              personContract_ = new global::GrpcConferenceContractService.PersonContractStruct();
            }
            input.ReadMessage(personContract_);
            break;
          }
          case 26: {
            sessionConferenceIds_.AddEntriesFrom(input, _repeated_sessionConferenceIds_codec);
            break;
          }
          case 34: {
            CompanyServicePackName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApplyConferenceListToCreateOrUpdate : pb::IMessage<ApplyConferenceListToCreateOrUpdate> {
    private static readonly pb::MessageParser<ApplyConferenceListToCreateOrUpdate> _parser = new pb::MessageParser<ApplyConferenceListToCreateOrUpdate>(() => new ApplyConferenceListToCreateOrUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyConferenceListToCreateOrUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate(ApplyConferenceListToCreateOrUpdate other) : this() {
      personContractId_ = other.personContractId_;
      listdata_ = other.listdata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyConferenceListToCreateOrUpdate Clone() {
      return new ApplyConferenceListToCreateOrUpdate(this);
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 1;
    private string personContractId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listdata" field.</summary>
    public const int ListdataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GrpcConferenceContractService.ApplyConferenceStruct> _repeated_listdata_codec
        = pb::FieldCodec.ForMessage(18, global::GrpcConferenceContractService.ApplyConferenceStruct.Parser);
    private readonly pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct> listdata_ = new pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcConferenceContractService.ApplyConferenceStruct> Listdata {
      get { return listdata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyConferenceListToCreateOrUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyConferenceListToCreateOrUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PersonContractId != other.PersonContractId) return false;
      if(!listdata_.Equals(other.listdata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      hash ^= listdata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PersonContractId);
      }
      listdata_.WriteTo(output, _repeated_listdata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      size += listdata_.CalculateSize(_repeated_listdata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyConferenceListToCreateOrUpdate other) {
      if (other == null) {
        return;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      listdata_.Add(other.listdata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PersonContractId = input.ReadString();
            break;
          }
          case 18: {
            listdata_.AddEntriesFrom(input, _repeated_listdata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteLetterStruct : pb::IMessage<InviteLetterStruct> {
    private static readonly pb::MessageParser<InviteLetterStruct> _parser = new pb::MessageParser<InviteLetterStruct>(() => new InviteLetterStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteLetterStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct(InviteLetterStruct other) : this() {
      id_ = other.id_;
      company_ = other.company_;
      eHall_ = other.eHall_;
      eNo_ = other.eNo_;
      profile_ = other.profile_;
      eAcitvity_ = other.eAcitvity_;
      language_ = other.language_;
      createdOn_ = other.createdOn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteLetterStruct Clone() {
      return new InviteLetterStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Company" field.</summary>
    public const int CompanyFieldNumber = 2;
    private string company_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EHall" field.</summary>
    public const int EHallFieldNumber = 3;
    private string eHall_ = "";
    /// <summary>
    ///展馆号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EHall {
      get { return eHall_; }
      set {
        eHall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ENo" field.</summary>
    public const int ENoFieldNumber = 4;
    private string eNo_ = "";
    /// <summary>
    ///展位号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ENo {
      get { return eNo_; }
      set {
        eNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Profile" field.</summary>
    public const int ProfileFieldNumber = 5;
    private string profile_ = "";
    /// <summary>
    ///公司
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Profile {
      get { return profile_; }
      set {
        profile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EAcitvity" field.</summary>
    public const int EAcitvityFieldNumber = 6;
    private string eAcitvity_ = "";
    /// <summary>
    ///活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EAcitvity {
      get { return eAcitvity_; }
      set {
        eAcitvity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Language" field.</summary>
    public const int LanguageFieldNumber = 7;
    private string language_ = "";
    /// <summary>
    ///语言
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 8;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteLetterStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteLetterStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Company != other.Company) return false;
      if (EHall != other.EHall) return false;
      if (ENo != other.ENo) return false;
      if (Profile != other.Profile) return false;
      if (EAcitvity != other.EAcitvity) return false;
      if (Language != other.Language) return false;
      if (CreatedOn != other.CreatedOn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (EHall.Length != 0) hash ^= EHall.GetHashCode();
      if (ENo.Length != 0) hash ^= ENo.GetHashCode();
      if (Profile.Length != 0) hash ^= Profile.GetHashCode();
      if (EAcitvity.Length != 0) hash ^= EAcitvity.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Company);
      }
      if (EHall.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EHall);
      }
      if (ENo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ENo);
      }
      if (Profile.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Profile);
      }
      if (EAcitvity.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EAcitvity);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedOn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (EHall.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EHall);
      }
      if (ENo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ENo);
      }
      if (Profile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Profile);
      }
      if (EAcitvity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EAcitvity);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteLetterStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.EHall.Length != 0) {
        EHall = other.EHall;
      }
      if (other.ENo.Length != 0) {
        ENo = other.ENo;
      }
      if (other.Profile.Length != 0) {
        Profile = other.Profile;
      }
      if (other.EAcitvity.Length != 0) {
        EAcitvity = other.EAcitvity;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Company = input.ReadString();
            break;
          }
          case 26: {
            EHall = input.ReadString();
            break;
          }
          case 34: {
            ENo = input.ReadString();
            break;
          }
          case 42: {
            Profile = input.ReadString();
            break;
          }
          case 50: {
            EAcitvity = input.ReadString();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
          case 66: {
            CreatedOn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeStruct : pb::IMessage<InviteCodeStruct> {
    private static readonly pb::MessageParser<InviteCodeStruct> _parser = new pb::MessageParser<InviteCodeStruct>(() => new InviteCodeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct(InviteCodeStruct other) : this() {
      id_ = other.id_;
      inviteCodeNumber_ = other.inviteCodeNumber_;
      companyServicePackId_ = other.companyServicePackId_;
      count_ = other.count_;
      year_ = other.year_;
      webSite_ = other.webSite_;
      createdOn_ = other.createdOn_;
      createdBy_ = other.createdBy_;
      modefieldOn_ = other.modefieldOn_;
      modefieldBy_ = other.modefieldBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeStruct Clone() {
      return new InviteCodeStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InviteCodeNumber" field.</summary>
    public const int InviteCodeNumberFieldNumber = 2;
    private string inviteCodeNumber_ = "";
    /// <summary>
    ///邀请码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeNumber {
      get { return inviteCodeNumber_; }
      set {
        inviteCodeNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 3;
    private string companyServicePackId_ = "";
    /// <summary>
    ///公司套餐id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Count" field.</summary>
    public const int CountFieldNumber = 4;
    private int count_;
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 5;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebSite" field.</summary>
    public const int WebSiteFieldNumber = 6;
    private string webSite_ = "";
    /// <summary>
    ///网站
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebSite {
      get { return webSite_; }
      set {
        webSite_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedOn" field.</summary>
    public const int CreatedOnFieldNumber = 7;
    private string createdOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedOn {
      get { return createdOn_; }
      set {
        createdOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldOn" field.</summary>
    public const int ModefieldOnFieldNumber = 9;
    private string modefieldOn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldOn {
      get { return modefieldOn_; }
      set {
        modefieldOn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModefieldBy" field.</summary>
    public const int ModefieldByFieldNumber = 10;
    private string modefieldBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModefieldBy {
      get { return modefieldBy_; }
      set {
        modefieldBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InviteCodeNumber != other.InviteCodeNumber) return false;
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (Count != other.Count) return false;
      if (Year != other.Year) return false;
      if (WebSite != other.WebSite) return false;
      if (CreatedOn != other.CreatedOn) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (ModefieldOn != other.ModefieldOn) return false;
      if (ModefieldBy != other.ModefieldBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (InviteCodeNumber.Length != 0) hash ^= InviteCodeNumber.GetHashCode();
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (WebSite.Length != 0) hash ^= WebSite.GetHashCode();
      if (CreatedOn.Length != 0) hash ^= CreatedOn.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (ModefieldOn.Length != 0) hash ^= ModefieldOn.GetHashCode();
      if (ModefieldBy.Length != 0) hash ^= ModefieldBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (InviteCodeNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteCodeNumber);
      }
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyServicePackId);
      }
      if (Count != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Count);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Year);
      }
      if (WebSite.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(WebSite);
      }
      if (CreatedOn.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModefieldBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (InviteCodeNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCodeNumber);
      }
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (WebSite.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebSite);
      }
      if (CreatedOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedOn);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (ModefieldOn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldOn);
      }
      if (ModefieldBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModefieldBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.InviteCodeNumber.Length != 0) {
        InviteCodeNumber = other.InviteCodeNumber;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.WebSite.Length != 0) {
        WebSite = other.WebSite;
      }
      if (other.CreatedOn.Length != 0) {
        CreatedOn = other.CreatedOn;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.ModefieldOn.Length != 0) {
        ModefieldOn = other.ModefieldOn;
      }
      if (other.ModefieldBy.Length != 0) {
        ModefieldBy = other.ModefieldBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            InviteCodeNumber = input.ReadString();
            break;
          }
          case 26: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 32: {
            Count = input.ReadInt32();
            break;
          }
          case 42: {
            Year = input.ReadString();
            break;
          }
          case 50: {
            WebSite = input.ReadString();
            break;
          }
          case 58: {
            CreatedOn = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            ModefieldOn = input.ReadString();
            break;
          }
          case 82: {
            ModefieldBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeCSPVMStruct : pb::IMessage<InviteCodeCSPVMStruct> {
    private static readonly pb::MessageParser<InviteCodeCSPVMStruct> _parser = new pb::MessageParser<InviteCodeCSPVMStruct>(() => new InviteCodeCSPVMStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeCSPVMStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct(InviteCodeCSPVMStruct other) : this() {
      InviteCode = other.inviteCode_ != null ? other.InviteCode.Clone() : null;
      CompanyServicePack = other.companyServicePack_ != null ? other.CompanyServicePack.Clone() : null;
      inviteRecordCount_ = other.inviteRecordCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeCSPVMStruct Clone() {
      return new InviteCodeCSPVMStruct(this);
    }

    /// <summary>Field number for the "InviteCode" field.</summary>
    public const int InviteCodeFieldNumber = 1;
    private global::GrpcConferenceContractService.InviteCodeStruct inviteCode_;
    /// <summary>
    ///邀请码对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.InviteCodeStruct InviteCode {
      get { return inviteCode_; }
      set {
        inviteCode_ = value;
      }
    }

    /// <summary>Field number for the "CompanyServicePack" field.</summary>
    public const int CompanyServicePackFieldNumber = 2;
    private global::GrpcConferenceContractService.CompanyServicePackStruct companyServicePack_;
    /// <summary>
    ///公司套餐对象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcConferenceContractService.CompanyServicePackStruct CompanyServicePack {
      get { return companyServicePack_; }
      set {
        companyServicePack_ = value;
      }
    }

    /// <summary>Field number for the "InviteRecordCount" field.</summary>
    public const int InviteRecordCountFieldNumber = 3;
    private string inviteRecordCount_ = "";
    /// <summary>
    ///已记录使用数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteRecordCount {
      get { return inviteRecordCount_; }
      set {
        inviteRecordCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeCSPVMStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeCSPVMStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InviteCode, other.InviteCode)) return false;
      if (!object.Equals(CompanyServicePack, other.CompanyServicePack)) return false;
      if (InviteRecordCount != other.InviteRecordCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inviteCode_ != null) hash ^= InviteCode.GetHashCode();
      if (companyServicePack_ != null) hash ^= CompanyServicePack.GetHashCode();
      if (InviteRecordCount.Length != 0) hash ^= InviteRecordCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (inviteCode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InviteCode);
      }
      if (companyServicePack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CompanyServicePack);
      }
      if (InviteRecordCount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InviteRecordCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inviteCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InviteCode);
      }
      if (companyServicePack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompanyServicePack);
      }
      if (InviteRecordCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteRecordCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeCSPVMStruct other) {
      if (other == null) {
        return;
      }
      if (other.inviteCode_ != null) {
        if (inviteCode_ == null) {
          inviteCode_ = new global::GrpcConferenceContractService.InviteCodeStruct();
        }
        InviteCode.MergeFrom(other.InviteCode);
      }
      if (other.companyServicePack_ != null) {
        if (companyServicePack_ == null) {
          companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
        }
        CompanyServicePack.MergeFrom(other.CompanyServicePack);
      }
      if (other.InviteRecordCount.Length != 0) {
        InviteRecordCount = other.InviteRecordCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inviteCode_ == null) {
              inviteCode_ = new global::GrpcConferenceContractService.InviteCodeStruct();
            }
            input.ReadMessage(inviteCode_);
            break;
          }
          case 18: {
            if (companyServicePack_ == null) {
              companyServicePack_ = new global::GrpcConferenceContractService.CompanyServicePackStruct();
            }
            input.ReadMessage(companyServicePack_);
            break;
          }
          case 26: {
            InviteRecordCount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteCodeRecordStruct : pb::IMessage<InviteCodeRecordStruct> {
    private static readonly pb::MessageParser<InviteCodeRecordStruct> _parser = new pb::MessageParser<InviteCodeRecordStruct>(() => new InviteCodeRecordStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteCodeRecordStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct(InviteCodeRecordStruct other) : this() {
      id_ = other.id_;
      inviteCodeId_ = other.inviteCodeId_;
      memberPK_ = other.memberPK_;
      memberName_ = other.memberName_;
      useDate_ = other.useDate_;
      personContractId_ = other.personContractId_;
      personContractNumber_ = other.personContractNumber_;
      isDelete_ = other.isDelete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteCodeRecordStruct Clone() {
      return new InviteCodeRecordStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InviteCodeId" field.</summary>
    public const int InviteCodeIdFieldNumber = 2;
    private string inviteCodeId_ = "";
    /// <summary>
    ///邀请码Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InviteCodeId {
      get { return inviteCodeId_; }
      set {
        inviteCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberPK" field.</summary>
    public const int MemberPKFieldNumber = 3;
    private string memberPK_ = "";
    /// <summary>
    ///会员pk
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberPK {
      get { return memberPK_; }
      set {
        memberPK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MemberName" field.</summary>
    public const int MemberNameFieldNumber = 4;
    private string memberName_ = "";
    /// <summary>
    ///会员名 存json格式{ "MemberCN": "zzz", "MemberEN": "zzz" }
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MemberName {
      get { return memberName_; }
      set {
        memberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseDate" field.</summary>
    public const int UseDateFieldNumber = 5;
    private string useDate_ = "";
    /// <summary>
    ///使用日期
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UseDate {
      get { return useDate_; }
      set {
        useDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractId" field.</summary>
    public const int PersonContractIdFieldNumber = 6;
    private string personContractId_ = "";
    /// <summary>
    ///个人合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractId {
      get { return personContractId_; }
      set {
        personContractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonContractNumber" field.</summary>
    public const int PersonContractNumberFieldNumber = 7;
    private string personContractNumber_ = "";
    /// <summary>
    ///个人合同号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonContractNumber {
      get { return personContractNumber_; }
      set {
        personContractNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsDelete" field.</summary>
    public const int IsDeleteFieldNumber = 8;
    private bool isDelete_;
    /// <summary>
    ///是否删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDelete {
      get { return isDelete_; }
      set {
        isDelete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteCodeRecordStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteCodeRecordStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InviteCodeId != other.InviteCodeId) return false;
      if (MemberPK != other.MemberPK) return false;
      if (MemberName != other.MemberName) return false;
      if (UseDate != other.UseDate) return false;
      if (PersonContractId != other.PersonContractId) return false;
      if (PersonContractNumber != other.PersonContractNumber) return false;
      if (IsDelete != other.IsDelete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (InviteCodeId.Length != 0) hash ^= InviteCodeId.GetHashCode();
      if (MemberPK.Length != 0) hash ^= MemberPK.GetHashCode();
      if (MemberName.Length != 0) hash ^= MemberName.GetHashCode();
      if (UseDate.Length != 0) hash ^= UseDate.GetHashCode();
      if (PersonContractId.Length != 0) hash ^= PersonContractId.GetHashCode();
      if (PersonContractNumber.Length != 0) hash ^= PersonContractNumber.GetHashCode();
      if (IsDelete != false) hash ^= IsDelete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (InviteCodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InviteCodeId);
      }
      if (MemberPK.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MemberPK);
      }
      if (MemberName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MemberName);
      }
      if (UseDate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UseDate);
      }
      if (PersonContractId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PersonContractNumber);
      }
      if (IsDelete != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsDelete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (InviteCodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviteCodeId);
      }
      if (MemberPK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberPK);
      }
      if (MemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MemberName);
      }
      if (UseDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UseDate);
      }
      if (PersonContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractId);
      }
      if (PersonContractNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonContractNumber);
      }
      if (IsDelete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteCodeRecordStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.InviteCodeId.Length != 0) {
        InviteCodeId = other.InviteCodeId;
      }
      if (other.MemberPK.Length != 0) {
        MemberPK = other.MemberPK;
      }
      if (other.MemberName.Length != 0) {
        MemberName = other.MemberName;
      }
      if (other.UseDate.Length != 0) {
        UseDate = other.UseDate;
      }
      if (other.PersonContractId.Length != 0) {
        PersonContractId = other.PersonContractId;
      }
      if (other.PersonContractNumber.Length != 0) {
        PersonContractNumber = other.PersonContractNumber;
      }
      if (other.IsDelete != false) {
        IsDelete = other.IsDelete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            InviteCodeId = input.ReadString();
            break;
          }
          case 26: {
            MemberPK = input.ReadString();
            break;
          }
          case 34: {
            MemberName = input.ReadString();
            break;
          }
          case 42: {
            UseDate = input.ReadString();
            break;
          }
          case 50: {
            PersonContractId = input.ReadString();
            break;
          }
          case 58: {
            PersonContractNumber = input.ReadString();
            break;
          }
          case 64: {
            IsDelete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TagTypeStruct : pb::IMessage<TagTypeStruct> {
    private static readonly pb::MessageParser<TagTypeStruct> _parser = new pb::MessageParser<TagTypeStruct>(() => new TagTypeStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagTypeStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct(TagTypeStruct other) : this() {
      id_ = other.id_;
      nameTranslation_ = other.nameTranslation_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagTypeStruct Clone() {
      return new TagTypeStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NameTranslation" field.</summary>
    public const int NameTranslationFieldNumber = 2;
    private string nameTranslation_ = "";
    /// <summary>
    ///标签名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NameTranslation {
      get { return nameTranslation_; }
      set {
        nameTranslation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 3;
    private string code_ = "";
    /// <summary>
    ///标签Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagTypeStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagTypeStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NameTranslation != other.NameTranslation) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (NameTranslation.Length != 0) hash ^= NameTranslation.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (NameTranslation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NameTranslation);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (NameTranslation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NameTranslation);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagTypeStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.NameTranslation.Length != 0) {
        NameTranslation = other.NameTranslation;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            NameTranslation = input.ReadString();
            break;
          }
          case 26: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class YearConfigStruct : pb::IMessage<YearConfigStruct> {
    private static readonly pb::MessageParser<YearConfigStruct> _parser = new pb::MessageParser<YearConfigStruct>(() => new YearConfigStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<YearConfigStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct(YearConfigStruct other) : this() {
      id_ = other.id_;
      year_ = other.year_;
      isUse_ = other.isUse_;
      date_ = other.date_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public YearConfigStruct Clone() {
      return new YearConfigStruct(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///主键
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Year" field.</summary>
    public const int YearFieldNumber = 2;
    private string year_ = "";
    /// <summary>
    ///年份
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Year {
      get { return year_; }
      set {
        year_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsUse" field.</summary>
    public const int IsUseFieldNumber = 3;
    private bool isUse_;
    /// <summary>
    ///是否是当前使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUse {
      get { return isUse_; }
      set {
        isUse_ = value;
      }
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 4;
    private string date_ = "";
    /// <summary>
    ///年月日（格式为：2020-08-27）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as YearConfigStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(YearConfigStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Year != other.Year) return false;
      if (IsUse != other.IsUse) return false;
      if (Date != other.Date) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Year.Length != 0) hash ^= Year.GetHashCode();
      if (IsUse != false) hash ^= IsUse.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Year.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Year);
      }
      if (IsUse != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsUse);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Year.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Year);
      }
      if (IsUse != false) {
        size += 1 + 1;
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(YearConfigStruct other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Year.Length != 0) {
        Year = other.Year;
      }
      if (other.IsUse != false) {
        IsUse = other.IsUse;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Year = input.ReadString();
            break;
          }
          case 24: {
            IsUse = input.ReadBool();
            break;
          }
          case 34: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckInRequest : pb::IMessage<CheckInRequest> {
    private static readonly pb::MessageParser<CheckInRequest> _parser = new pb::MessageParser<CheckInRequest>(() => new CheckInRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckInRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest(CheckInRequest other) : this() {
      ids_ = other.ids_.Clone();
      isCheckIn_ = other.isCheckIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckInRequest Clone() {
      return new CheckInRequest(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///personContractId列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "IsCheckIn" field.</summary>
    public const int IsCheckInFieldNumber = 2;
    private bool isCheckIn_;
    /// <summary>
    ///是否报到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCheckIn {
      get { return isCheckIn_; }
      set {
        isCheckIn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckInRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckInRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if (IsCheckIn != other.IsCheckIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (IsCheckIn != false) hash ^= IsCheckIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (IsCheckIn != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCheckIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (IsCheckIn != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckInRequest other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      if (other.IsCheckIn != false) {
        IsCheckIn = other.IsCheckIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 16: {
            IsCheckIn = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatisticsStruct : pb::IMessage<ContractStatisticsStruct> {
    private static readonly pb::MessageParser<ContractStatisticsStruct> _parser = new pb::MessageParser<ContractStatisticsStruct>(() => new ContractStatisticsStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatisticsStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct(ContractStatisticsStruct other) : this() {
      companyServicePackId_ = other.companyServicePackId_;
      companyServicePackName_ = other.companyServicePackName_;
      personCount_ = other.personCount_;
      maxContractNumberSum_ = other.maxContractNumberSum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatisticsStruct Clone() {
      return new ContractStatisticsStruct(this);
    }

    /// <summary>Field number for the "CompanyServicePackId" field.</summary>
    public const int CompanyServicePackIdFieldNumber = 1;
    private string companyServicePackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackId {
      get { return companyServicePackId_; }
      set {
        companyServicePackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompanyServicePackName" field.</summary>
    public const int CompanyServicePackNameFieldNumber = 2;
    private string companyServicePackName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyServicePackName {
      get { return companyServicePackName_; }
      set {
        companyServicePackName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PersonCount" field.</summary>
    public const int PersonCountFieldNumber = 3;
    private string personCount_ = "";
    /// <summary>
    ///个人合同号数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonCount {
      get { return personCount_; }
      set {
        personCount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumberSum" field.</summary>
    public const int MaxContractNumberSumFieldNumber = 4;
    private string maxContractNumberSum_ = "";
    /// <summary>
    ///最大合同号数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaxContractNumberSum {
      get { return maxContractNumberSum_; }
      set {
        maxContractNumberSum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatisticsStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatisticsStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanyServicePackId != other.CompanyServicePackId) return false;
      if (CompanyServicePackName != other.CompanyServicePackName) return false;
      if (PersonCount != other.PersonCount) return false;
      if (MaxContractNumberSum != other.MaxContractNumberSum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanyServicePackId.Length != 0) hash ^= CompanyServicePackId.GetHashCode();
      if (CompanyServicePackName.Length != 0) hash ^= CompanyServicePackName.GetHashCode();
      if (PersonCount.Length != 0) hash ^= PersonCount.GetHashCode();
      if (MaxContractNumberSum.Length != 0) hash ^= MaxContractNumberSum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CompanyServicePackId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanyServicePackId);
      }
      if (CompanyServicePackName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CompanyServicePackName);
      }
      if (PersonCount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PersonCount);
      }
      if (MaxContractNumberSum.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MaxContractNumberSum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanyServicePackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackId);
      }
      if (CompanyServicePackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyServicePackName);
      }
      if (PersonCount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonCount);
      }
      if (MaxContractNumberSum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaxContractNumberSum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatisticsStruct other) {
      if (other == null) {
        return;
      }
      if (other.CompanyServicePackId.Length != 0) {
        CompanyServicePackId = other.CompanyServicePackId;
      }
      if (other.CompanyServicePackName.Length != 0) {
        CompanyServicePackName = other.CompanyServicePackName;
      }
      if (other.PersonCount.Length != 0) {
        PersonCount = other.PersonCount;
      }
      if (other.MaxContractNumberSum.Length != 0) {
        MaxContractNumberSum = other.MaxContractNumberSum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanyServicePackId = input.ReadString();
            break;
          }
          case 18: {
            CompanyServicePackName = input.ReadString();
            break;
          }
          case 26: {
            PersonCount = input.ReadString();
            break;
          }
          case 34: {
            MaxContractNumberSum = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ModifyCCPCOwerInfoStruct : pb::IMessage<ModifyCCPCOwerInfoStruct> {
    private static readonly pb::MessageParser<ModifyCCPCOwerInfoStruct> _parser = new pb::MessageParser<ModifyCCPCOwerInfoStruct>(() => new ModifyCCPCOwerInfoStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyCCPCOwerInfoStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct(ModifyCCPCOwerInfoStruct other) : this() {
      contractId_ = other.contractId_;
      owerid_ = other.owerid_;
      ower_ = other.ower_;
      maxContractNumber_ = other.maxContractNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyCCPCOwerInfoStruct Clone() {
      return new ModifyCCPCOwerInfoStruct(this);
    }

    /// <summary>Field number for the "ContractId" field.</summary>
    public const int ContractIdFieldNumber = 1;
    private string contractId_ = "";
    /// <summary>
    ///ContractId二级合同id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owerid" field.</summary>
    public const int OweridFieldNumber = 2;
    private string owerid_ = "";
    /// <summary>
    ///业务员id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owerid {
      get { return owerid_; }
      set {
        owerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ower" field.</summary>
    public const int OwerFieldNumber = 3;
    private string ower_ = "";
    /// <summary>
    ///业务员
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ower {
      get { return ower_; }
      set {
        ower_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxContractNumber" field.</summary>
    public const int MaxContractNumberFieldNumber = 4;
    private int maxContractNumber_;
    /// <summary>
    ///最大合同数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxContractNumber {
      get { return maxContractNumber_; }
      set {
        maxContractNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyCCPCOwerInfoStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyCCPCOwerInfoStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractId != other.ContractId) return false;
      if (Owerid != other.Owerid) return false;
      if (Ower != other.Ower) return false;
      if (MaxContractNumber != other.MaxContractNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractId.Length != 0) hash ^= ContractId.GetHashCode();
      if (Owerid.Length != 0) hash ^= Owerid.GetHashCode();
      if (Ower.Length != 0) hash ^= Ower.GetHashCode();
      if (MaxContractNumber != 0) hash ^= MaxContractNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractId);
      }
      if (Owerid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Owerid);
      }
      if (Ower.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ower);
      }
      if (MaxContractNumber != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxContractNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractId);
      }
      if (Owerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owerid);
      }
      if (Ower.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ower);
      }
      if (MaxContractNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxContractNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyCCPCOwerInfoStruct other) {
      if (other == null) {
        return;
      }
      if (other.ContractId.Length != 0) {
        ContractId = other.ContractId;
      }
      if (other.Owerid.Length != 0) {
        Owerid = other.Owerid;
      }
      if (other.Ower.Length != 0) {
        Ower = other.Ower;
      }
      if (other.MaxContractNumber != 0) {
        MaxContractNumber = other.MaxContractNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractId = input.ReadString();
            break;
          }
          case 18: {
            Owerid = input.ReadString();
            break;
          }
          case 26: {
            Ower = input.ReadString();
            break;
          }
          case 32: {
            MaxContractNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BoolReply : pb::IMessage<BoolReply> {
    private static readonly pb::MessageParser<BoolReply> _parser = new pb::MessageParser<BoolReply>(() => new BoolReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoolReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcConferenceContractService.GrpcConferenceContractServiceReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply(BoolReply other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoolReply Clone() {
      return new BoolReply(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoolReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoolReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoolReply other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
